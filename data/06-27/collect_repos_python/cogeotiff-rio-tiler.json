{
    "repository": "cogeotiff/rio-tiler",
    "stars": 416,
    "language": "python",
    "size": 42777,
    "clone_url": "https://github.com/cogeotiff/rio-tiler.git",
    "timestamp": "2023-06-28T12:20:39.334666Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_cmap",
                "name": "test_get_cmaplist",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_cmapObject",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_valid_cmaps",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_update_alpha",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_remove_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_update_cmap",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_make_lut",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_apply_cmap",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_apply_discrete_cmap",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_apply_intervals_cmap",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_parse_color[#FFF-result0]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_parse_color[#FFF0-result1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_parse_color[#FF0000-result2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_parse_color[#FF000000-result3]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_parse_color[value4-result4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_parse_color[value5-result5]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cmap",
                "name": "test_parse_color_bad",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_expression",
                "name": "test_parse[b1;b2-expected0]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_expression",
                "name": "test_parse[B1;b2-expected1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_expression",
                "name": "test_parse[B1;B2-expected2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_expression",
                "name": "test_parse[where((b1==1) | (b1 > 0.5),1,0);-expected3]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_expression",
                "name": "test_parse_cast[b1;b2-expected0]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_expression",
                "name": "test_parse_cast[B1;b2-expected1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_expression",
                "name": "test_parse_cast[B1;B2-expected2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_expression",
                "name": "test_get_blocks[b1-expected0]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_expression",
                "name": "test_get_blocks[b1;-expected1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_expression",
                "name": "test_get_blocks[b1;b2-expected2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_expression",
                "name": "test_get_blocks[where((b1==1) | (b1 > 0.5),1,0);-expected3]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_expression",
                "name": "test_apply_expression",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_MultiBand",
                "name": "test_MultiBandReader",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_image",
                "name": "test_non_geo_image",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_image",
                "name": "test_with_geo_image",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_spatial_info_valid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_bounds_valid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_info_valid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_tile_valid_default",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_invalid_expression",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_tile_invalid_bounds",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_tile_with_incorrect_float_buffer",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_tile_with_int_buffer",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_tile_with_correct_float_buffer",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_point_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_area_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_preview_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_statistics",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_Reader_Options",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_cog_with_internal_gcps",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_imageData_output",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_feature_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_equality_part_feature",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_tiling_ignores_padding_if_web_friendly_internal_tiles_exist",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_tile_read_alpha",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_tile_read_mask",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_tile_read_extmask",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_dateline",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_fullEarth",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_read",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_no_overviews",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_nonearthbody",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_nonearth_custom",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_tms_tilesize_and_zoom",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_rasterio",
                "name": "test_metadata_img",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_fetch_stac",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_tile_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_part_valid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_preview_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_point_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_statistics_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_merged_statistics_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_info_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_parse_expression",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_feature_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_relative_assets",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_fetch_stac_client_options",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_img_dataset_stats",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_gdal_env_setting",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_asset_as_band",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_stac",
                "name": "test_metadata_from_stac",
                "time": 0.021,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_xarray",
                "name": "test_xarray_reader",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_xarray",
                "name": "test_xarray_reader_external_nodata",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_io_xarray",
                "name": "test_xarray_reader_internal_nodata",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_bilinear",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-int8-bilinear]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-int8-nearest]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-uint8-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-uint8-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-uint16-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-uint16-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-int16-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-int16-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-uint32-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-uint32-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-int32-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-int32-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-float32-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-float32-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-float64-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-float64-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-int64-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-int64-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-uint64-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[nodata-uint64-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-int8-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-int8-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-uint8-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-uint8-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-uint16-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-uint16-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-int16-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-int16-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-uint32-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-uint32-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-int32-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-int32-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-float32-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-float32-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-float64-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-float64-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-int64-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-int64-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-uint64-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[alpha-uint64-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-int8-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-int8-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-uint8-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-uint8-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-uint16-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-uint16-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-int16-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-int16-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-uint32-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-uint32-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-int32-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-int32-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-float32-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-float32-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-float64-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-float64-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-int64-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-int64-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-uint64-bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mask",
                "name": "test_mask_non_boundless[mask-uint64-nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_imageData_AutoRescaling",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_imageData_AutoRescalingAllTypes[uint8]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_imageData_AutoRescalingAllTypes[int8]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_imageData_AutoRescalingAllTypes[uint16]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_imageData_AutoRescalingAllTypes[int16]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_imageData_AutoRescalingAllTypes[uint32]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_imageData_AutoRescalingAllTypes[int32]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_imageData_AutoRescalingAllTypes[float32]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_imageData_AutoRescalingAllTypes[float64]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_16bit_PNG",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_merge_with_diffsize",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_apply_expression",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_dataset_statistics",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_resize",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_clip",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_point_data",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_image_apply_colormap",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_image_from_array",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_image_from_bytes",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_2d_image",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_mosaic_tiler",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_stac_mosaic_tiler",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_mosaic_tiler_Stdev",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_threads",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_mosaic_tiler_with_imageDataClass",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_mosaic_point",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_mosaic_all_methods[FirstMethod]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_mosaic_all_methods[HighestMethod]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_mosaic_all_methods[LowestMethod]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_mosaic_all_methods[MeanMethod]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_mosaic_all_methods[MedianMethod]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_mosaic_all_methods[StdevMethod]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_mosaic_methods_last[LastBandHighMethod]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_mosaic_methods_last[LastBandLowMethod]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mosaic",
                "name": "test_mosaic_feature",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_overview",
                "name": "test_simple_cog",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_overview",
                "name": "test_gcps_cog",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_profiles",
                "name": "test_gdal_profiles",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_tile_read_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_resampling_returns_different_results",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_resampling_with_diff_padding_returns_different_results",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_tile_read_invalidResampling",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_tile_read_tuple_index",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_tile_read_int_index",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_tile_read_bgr",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_tile_read_nodata",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_tile_read_nodata_and_alpha",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_tile_read_dataset_nodata",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_tile_read_not_covering_the_whole_tile",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_tile_read_validMask",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_tile_read_crs",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_tile_read_vrt_option",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_point",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_part_with_buffer",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_read",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader",
                "name": "test_part_no_VRT",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_read_resampling[nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_read_resampling[bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_read_resampling[cubic]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_read_resampling[cubic_spline]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_read_resampling[lanczos]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_read_resampling[average]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_read_resampling[mode]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_read_resampling[gauss]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_read_resampling[rms]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_warp_resampling[nearest]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_warp_resampling[bilinear]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_warp_resampling[cubic]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_warp_resampling[cubic_spline]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_warp_resampling[lanczos]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_warp_resampling[average]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_warp_resampling[mode]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_warp_resampling[sum]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_resampling",
                "name": "test_warp_resampling[rms]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_linear_rescale_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_mapzen_elevation_rgb",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_get_vrt_transform_valid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_get_vrt_transform_valid4326",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_render_valid_1band",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_render_valid_colormap",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_render_valid_colormapDict",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_render_valid_mask",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_render_valid_options",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_render_valid_1bandWebp",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_aligned_with_internaltile",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_find_non_alpha",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_has_alpha",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_has_mask",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_chunck",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_div",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_ovr_level",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_cutline",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_parse_expression",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_render_numpy",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_get_array_statistics",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_resize_array",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_render_colorinterp",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skipping non-benchmark (--benchmark-only active).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-int8-equator-full]",
                "time": 1.68,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-int8-dateline-full]",
                "time": 0.581,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-uint8-equator-full]",
                "time": 0.875,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-uint8-dateline-full]",
                "time": 1.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-uint16-equator-full]",
                "time": 0.979,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-uint16-dateline-full]",
                "time": 0.962,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-int16-equator-full]",
                "time": 1.928,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-int16-dateline-full]",
                "time": 0.676,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-uint32-equator-full]",
                "time": 0.966,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-uint32-dateline-full]",
                "time": 1.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-int32-equator-full]",
                "time": 1.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-int32-dateline-full]",
                "time": 1.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-float32-equator-full]",
                "time": 1.582,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-float32-dateline-full]",
                "time": 0.95,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-float64-equator-full]",
                "time": 1.534,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-float64-dateline-full]",
                "time": 1.161,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-int64-equator-full]",
                "time": 0.999,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-int64-dateline-full]",
                "time": 0.756,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-uint64-equator-full]",
                "time": 0.994,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[nodata-uint64-dateline-full]",
                "time": 0.993,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-int8-equator-full]",
                "time": 1.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-int8-dateline-full]",
                "time": 1.168,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-uint8-equator-full]",
                "time": 1.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-uint8-dateline-full]",
                "time": 0.84,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-uint16-equator-full]",
                "time": 1.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-uint16-dateline-full]",
                "time": 0.993,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-int16-equator-full]",
                "time": 1.375,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-int16-dateline-full]",
                "time": 1.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-uint32-equator-full]",
                "time": 0.83,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-uint32-dateline-full]",
                "time": 0.901,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-int32-equator-full]",
                "time": 1.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-int32-dateline-full]",
                "time": 0.931,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-float32-equator-full]",
                "time": 1.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-float32-dateline-full]",
                "time": 1.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-float64-equator-full]",
                "time": 0.753,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-float64-dateline-full]",
                "time": 1.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-int64-equator-full]",
                "time": 0.782,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-int64-dateline-full]",
                "time": 0.47,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-uint64-equator-full]",
                "time": 1.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[alpha-uint64-dateline-full]",
                "time": 1.777,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-int8-equator-full]",
                "time": 1.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-int8-dateline-full]",
                "time": 0.99,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-uint8-equator-full]",
                "time": 0.93,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-uint8-dateline-full]",
                "time": 0.788,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-uint16-equator-full]",
                "time": 0.989,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-uint16-dateline-full]",
                "time": 1.427,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-int16-equator-full]",
                "time": 1.142,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-int16-dateline-full]",
                "time": 0.855,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-uint32-equator-full]",
                "time": 0.866,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-uint32-dateline-full]",
                "time": 1.172,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-int32-equator-full]",
                "time": 0.981,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-int32-dateline-full]",
                "time": 0.775,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-float32-equator-full]",
                "time": 0.997,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-float32-dateline-full]",
                "time": 0.958,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-float64-equator-full]",
                "time": 1.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-float64-dateline-full]",
                "time": 1.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-int64-equator-full]",
                "time": 1.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-int64-dateline-full]",
                "time": 1.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-uint64-equator-full]",
                "time": 0.984,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[mask-uint64-dateline-full]",
                "time": 0.951,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-int8-equator-full]",
                "time": 0.969,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-int8-dateline-full]",
                "time": 0.847,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-uint8-equator-full]",
                "time": 1.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-uint8-dateline-full]",
                "time": 0.753,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-uint16-equator-full]",
                "time": 0.944,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-uint16-dateline-full]",
                "time": 1.561,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-int16-equator-full]",
                "time": 0.879,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-int16-dateline-full]",
                "time": 1.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-uint32-equator-full]",
                "time": 0.806,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-uint32-dateline-full]",
                "time": 0.891,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-int32-equator-full]",
                "time": 1.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-int32-dateline-full]",
                "time": 1.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-float32-equator-full]",
                "time": 1.128,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-float32-dateline-full]",
                "time": 1.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-float64-equator-full]",
                "time": 1.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-float64-dateline-full]",
                "time": 0.808,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-int64-equator-full]",
                "time": 1.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-int64-dateline-full]",
                "time": 1.626,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-uint64-equator-full]",
                "time": 0.841,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarks.test_benchmarks",
                "name": "test_tile[none-uint64-dateline-full]",
                "time": 1.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests] \ud83d\ude80  Start image=crawlergpt:latest\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/cogeotiff-rio-tiler] user=0 workdir=\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests] \ud83e\uddea  Matrix: map[python-version:3.8]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests] \u2b50 Run Main actions/checkout@v3\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2705  Success - Main actions/checkout@v3\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests] \u2b50 Run Main Set up Python 3.8\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/1422cf9e-3caf-482f-b034-f5d84d7d0535/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2753  ::group::Installed versions\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::isExplicit: \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::explicit? false\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::matched: 3.8.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Successfully set up CPython (3.8.11)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2753  ::endgroup::\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2705  Success - Main Set up Python 3.8\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2699  ::set-output:: python-version=3.8.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests] \u2b50 Run Main Install dependencies\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (21.2.4)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting pip\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Installing collected packages: pip\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Attempting uninstall: pip\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |     Found existing installation: pip 21.2.4\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |     Uninstalling pip-21.2.4:\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |       Successfully uninstalled pip-21.2.4\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Successfully installed pip-23.1.2\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Obtaining file:///tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/cogeotiff-rio-tiler\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Installing build dependencies: started\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Installing build dependencies: finished with status 'done'\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Checking if build backend supports build_editable: started\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Checking if build backend supports build_editable: finished with status 'done'\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Getting requirements to build editable: started\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Getting requirements to build editable: finished with status 'done'\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Preparing editable metadata (pyproject.toml): started\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting attrs (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 3.8 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting cachetools (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting color-operations (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading color_operations-0.1.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (135 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 135.1/135.1 kB 7.1 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting httpx (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading httpx-0.24.1-py3-none-any.whl (75 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 75.4/75.4 kB 1.8 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting importlib-resources>=1.1.0 (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting morecantile<5.0,>=4.0 (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading morecantile-4.2.0-py3-none-any.whl (36 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting numexpr (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading numexpr-2.8.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (381 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 381.7/381.7 kB 13.6 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting numpy (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.3/17.3 MB 31.0 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting pydantic (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading pydantic-1.10.9-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.2 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.2/3.2 MB 28.7 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting pystac>=0.5.4 (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading pystac-1.7.3-py3-none-any.whl (150 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 150.0/150.0 kB 22.8 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting rasterio>=1.3.0 (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading rasterio-1.3.7-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (21.3 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 21.3/21.3 MB 23.1 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting boto3 (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading boto3-1.26.162-py3-none-any.whl (135 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 135.9/135.9 kB 3.6 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting pytest (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 8.5 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting pytest-asyncio (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading pytest_asyncio-0.21.0-py3-none-any.whl (13 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting pytest-benchmark (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading pytest_benchmark-4.0.0-py3-none-any.whl (43 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 44.0/44.0 kB 679.5 kB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting pytest-cov (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting rioxarray (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading rioxarray-0.13.4-py3-none-any.whl (53 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 53.4/53.4 kB 3.3 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting xarray (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading xarray-2023.1.0-py3-none-any.whl (973 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 973.1/973.1 kB 12.4 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting zipp>=3.1.0 (from importlib-resources>=1.1.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting pyproj~=3.1 (from morecantile<5.0,>=4.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading pyproj-3.5.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.8 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 7.8/7.8 MB 25.0 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting python-dateutil>=2.7.0 (from pystac>=0.5.4->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 15.7 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting affine (from rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading affine-2.4.0-py3-none-any.whl (15 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting certifi (from rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 10.8 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting click>=4.0 (from rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 96.6/96.6 kB 5.8 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting cligj>=0.5 (from rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading cligj-0.7.2-py3-none-any.whl (7.1 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting snuggs>=1.4.1 (from rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading snuggs-1.4.7-py3-none-any.whl (5.4 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting click-plugins (from rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading click_plugins-1.1.1-py2.py3-none-any.whl (7.5 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (from rasterio>=1.3.0->rio-tiler==5.0.1) (56.0.0)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting botocore<1.30.0,>=1.29.162 (from boto3->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading botocore-1.29.162-py3-none-any.whl (11.0 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.0/11.0 MB 16.8 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting jmespath<2.0.0,>=0.7.1 (from boto3->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting s3transfer<0.7.0,>=0.6.0 (from boto3->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading s3transfer-0.6.1-py3-none-any.whl (79 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 79.8/79.8 kB 4.0 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting httpcore<0.18.0,>=0.15.0 (from httpx->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading httpcore-0.17.2-py3-none-any.whl (72 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 72.5/72.5 kB 5.0 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting idna (from httpx->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 553.1 kB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting sniffio (from httpx->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading sniffio-1.3.0-py3-none-any.whl (10 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting typing-extensions>=4.2.0 (from pydantic->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting iniconfig (from pytest->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting packaging (from pytest->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Using cached packaging-23.1-py3-none-any.whl (48 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting pluggy<2.0,>=0.12 (from pytest->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Using cached pluggy-1.2.0-py3-none-any.whl (17 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting tomli>=1.0.0 (from pytest->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Using cached tomli-2.0.1-py3-none-any.whl (12 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting py-cpuinfo (from pytest-benchmark->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading py_cpuinfo-9.0.0-py3-none-any.whl (22 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading coverage-7.2.7-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (229 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 229.9/229.9 kB 1.3 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting pandas>=1.3 (from xarray->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading pandas-2.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.3 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 12.3/12.3 MB 24.4 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting urllib3<1.27,>=1.25.4 (from botocore<1.30.0,>=1.29.162->boto3->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.1/143.1 kB 8.7 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting h11<0.15,>=0.13 (from httpcore<0.18.0,>=0.15.0->httpx->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading h11-0.14.0-py3-none-any.whl (58 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 58.3/58.3 kB 4.7 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting anyio<5.0,>=3.0 (from httpcore<0.18.0,>=0.15.0->httpx->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading anyio-3.7.0-py3-none-any.whl (80 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 80.9/80.9 kB 2.2 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting pytz>=2020.1 (from pandas>=1.3->xarray->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 12.4 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting tzdata>=2022.1 (from pandas>=1.3->xarray->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading tzdata-2023.3-py2.py3-none-any.whl (341 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 341.8/341.8 kB 12.7 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting six>=1.5 (from python-dateutil>=2.7.0->pystac>=0.5.4->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Collecting pyparsing>=2.1.6 (from snuggs>=1.4.1->rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 102.6/102.6 kB 5.8 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Building wheels for collected packages: rio-tiler\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Building editable for rio-tiler (pyproject.toml): started\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Building editable for rio-tiler (pyproject.toml): finished with status 'done'\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Created wheel for rio-tiler: filename=rio_tiler-5.0.1-py3-none-any.whl size=6431 sha256=e3929109eb9575a9d9f727d37c258ccb1d7cf6818616ac358789984b719e567c\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-gi4826_w/wheels/f9/ab/c9/d31e7af52a5ffe8a272bb11937b1071d457cbcd9f12bd80ba0\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Successfully built rio-tiler\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Installing collected packages: pytz, py-cpuinfo, zipp, urllib3, tzdata, typing-extensions, tomli, sniffio, six, pyparsing, pluggy, packaging, numpy, jmespath, iniconfig, idna, h11, exceptiongroup, coverage, click, certifi, cachetools, attrs, affine, snuggs, python-dateutil, pytest, pyproj, pydantic, numexpr, importlib-resources, color-operations, cligj, click-plugins, anyio, rasterio, pytest-cov, pytest-benchmark, pytest-asyncio, pystac, pandas, morecantile, httpcore, botocore, xarray, s3transfer, httpx, rioxarray, rio-tiler, boto3\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Successfully installed affine-2.4.0 anyio-3.7.0 attrs-23.1.0 boto3-1.26.162 botocore-1.29.162 cachetools-5.3.1 certifi-2023.5.7 click-8.1.3 click-plugins-1.1.1 cligj-0.7.2 color-operations-0.1.1 coverage-7.2.7 exceptiongroup-1.1.1 h11-0.14.0 httpcore-0.17.2 httpx-0.24.1 idna-3.4 importlib-resources-5.12.0 iniconfig-2.0.0 jmespath-1.0.1 morecantile-4.2.0 numexpr-2.8.4 numpy-1.24.4 packaging-23.1 pandas-2.0.2 pluggy-1.2.0 py-cpuinfo-9.0.0 pydantic-1.10.9 pyparsing-3.1.0 pyproj-3.5.0 pystac-1.7.3 pytest-7.4.0 pytest-asyncio-0.21.0 pytest-benchmark-4.0.0 pytest-cov-4.1.0 python-dateutil-2.8.2 pytz-2023.3 rasterio-1.3.7 rio-tiler-5.0.1 rioxarray-0.13.4 s3transfer-0.6.1 six-1.16.0 sniffio-1.3.0 snuggs-1.4.7 tomli-2.0.1 typing-extensions-4.6.3 tzdata-2023.3 urllib3-1.26.16 xarray-2023.1.0 zipp-3.15.0\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | [notice] A new release of pip is available: 21.1.1 -> 23.1.2\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | [notice] To update, run: pip install --upgrade pip\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2705  Success - Main Install dependencies\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests] \u2b50 Run Main Run tests\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | ============================= test session starts ==============================\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | platform linux -- Python 3.8.11, pytest-7.4.0, pluggy-1.2.0 -- /opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | cachedir: .pytest_cache\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/cogeotiff-rio-tiler\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | plugins: cov-4.1.0, benchmark-4.0.0, anyio-3.7.0, asyncio-0.21.0\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | asyncio: mode=strict\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | collecting ... collected 319 items\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_get_cmaplist PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_cmapObject PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_valid_cmaps PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_update_alpha PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_remove_value PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_update_cmap PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_make_lut PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_apply_cmap PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_apply_discrete_cmap PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_apply_intervals_cmap PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_parse_color[#FFF-result0] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_parse_color[#FFF0-result1] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_parse_color[#FF0000-result2] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_parse_color[#FF000000-result3] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_parse_color[value4-result4] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_parse_color[value5-result5] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_parse_color_bad PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_expression.py::test_parse[b1;b2-expected0] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_expression.py::test_parse[B1;b2-expected1] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_expression.py::test_parse[B1;B2-expected2] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_expression.py::test_parse[where((b1==1) | (b1 > 0.5),1,0);-expected3] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_expression.py::test_parse_cast[b1;b2-expected0] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_expression.py::test_parse_cast[B1;b2-expected1] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_expression.py::test_parse_cast[B1;B2-expected2] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_expression.py::test_get_blocks[b1-expected0] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_expression.py::test_get_blocks[b1;-expected1] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_expression.py::test_get_blocks[b1;b2-expected2] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_expression.py::test_get_blocks[where((b1==1) | (b1 > 0.5),1,0);-expected3] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_expression.py::test_apply_expression PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_MultiBand.py::test_MultiBandReader PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_image.py::test_non_geo_image PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_image.py::test_with_geo_image PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_spatial_info_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_bounds_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_info_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_tile_valid_default PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_invalid_expression PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_tile_invalid_bounds PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_tile_with_incorrect_float_buffer PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_tile_with_int_buffer PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_tile_with_correct_float_buffer PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_point_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_area_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_preview_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_statistics PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_Reader_Options PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_cog_with_internal_gcps PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_imageData_output PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_feature_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_equality_part_feature PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_tiling_ignores_padding_if_web_friendly_internal_tiles_exist PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_tile_read_alpha PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_tile_read_mask PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_tile_read_extmask PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_dateline PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_fullEarth PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_read PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_no_overviews PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_nonearthbody PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_nonearth_custom PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_tms_tilesize_and_zoom PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_rasterio.py::test_metadata_img PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_fetch_stac PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_tile_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_part_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_preview_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_point_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_statistics_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_merged_statistics_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_info_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_parse_expression PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_feature_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_relative_assets PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_fetch_stac_client_options PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_img_dataset_stats PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_gdal_env_setting PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_asset_as_band PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_stac.py::test_metadata_from_stac PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_xarray.py::test_xarray_reader PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_xarray.py::test_xarray_reader_external_nodata PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_io_xarray.py::test_xarray_reader_internal_nodata PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_bilinear PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-int8-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-int8-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-uint8-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-uint8-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-uint16-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-uint16-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-int16-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-int16-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-uint32-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-uint32-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-int32-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-int32-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-float32-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-float32-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-float64-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-float64-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-int64-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-int64-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-uint64-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[nodata-uint64-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-int8-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-int8-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-uint8-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-uint8-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-uint16-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-uint16-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-int16-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-int16-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-uint32-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-uint32-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-int32-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-int32-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-float32-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-float32-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-float64-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-float64-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-int64-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-int64-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-uint64-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[alpha-uint64-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-int8-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-int8-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-uint8-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-uint8-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-uint16-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-uint16-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-int16-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-int16-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-uint32-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-uint32-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-int32-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-int32-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-float32-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-float32-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-float64-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-float64-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-int64-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-int64-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-uint64-bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mask.py::test_mask_non_boundless[mask-uint64-nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_imageData_AutoRescaling PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_imageData_AutoRescalingAllTypes[uint8] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_imageData_AutoRescalingAllTypes[int8] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_imageData_AutoRescalingAllTypes[uint16] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_imageData_AutoRescalingAllTypes[int16] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_imageData_AutoRescalingAllTypes[uint32] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_imageData_AutoRescalingAllTypes[int32] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_imageData_AutoRescalingAllTypes[float32] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_imageData_AutoRescalingAllTypes[float64] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_16bit_PNG PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_merge_with_diffsize PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_apply_expression PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_dataset_statistics PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_resize PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_clip PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_point_data PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_image_apply_colormap PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_image_from_array PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_image_from_bytes PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_2d_image PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_tiler PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_stac_mosaic_tiler PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_tiler_Stdev PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_threads PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_tiler_with_imageDataClass PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_point PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_all_methods[FirstMethod] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_all_methods[HighestMethod] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_all_methods[LowestMethod] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_all_methods[MeanMethod] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_all_methods[MedianMethod] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_all_methods[StdevMethod] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_methods_last[LastBandHighMethod] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_methods_last[LastBandLowMethod] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_feature PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_overview.py::test_simple_cog PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_overview.py::test_gcps_cog PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_profiles.py::test_gdal_profiles PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_tile_read_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_resampling_returns_different_results PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_resampling_with_diff_padding_returns_different_results PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_tile_read_invalidResampling PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_tile_read_tuple_index PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_tile_read_int_index PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_tile_read_bgr PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_tile_read_nodata PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_tile_read_nodata_and_alpha PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_tile_read_dataset_nodata PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_tile_read_not_covering_the_whole_tile PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_tile_read_validMask PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_tile_read_crs PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_tile_read_vrt_option PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_point PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_part_with_buffer PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_read PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_reader.py::test_part_no_VRT PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_read_resampling[nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_read_resampling[bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_read_resampling[cubic] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_read_resampling[cubic_spline] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_read_resampling[lanczos] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_read_resampling[average] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_read_resampling[mode] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_read_resampling[gauss] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_read_resampling[rms] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_warp_resampling[nearest] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_warp_resampling[bilinear] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_warp_resampling[cubic] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_warp_resampling[cubic_spline] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_warp_resampling[lanczos] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_warp_resampling[average] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_warp_resampling[mode] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_warp_resampling[sum] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_resampling.py::test_warp_resampling[rms] PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_linear_rescale_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_mapzen_elevation_rgb PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_get_vrt_transform_valid PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_get_vrt_transform_valid4326 PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_render_valid_1band PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_render_valid_colormap PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_render_valid_colormapDict PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_render_valid_mask PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_render_valid_options PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_render_valid_1bandWebp PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_aligned_with_internaltile PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_find_non_alpha PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_has_alpha PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_has_mask PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_chunck PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_div PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_ovr_level PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_cutline PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_parse_expression PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_render_numpy PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_get_array_statistics PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_resize_array PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_render_colorinterp PASSED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-int8-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-int8-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-uint8-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-uint8-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-uint16-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-uint16-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-int16-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-int16-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-uint32-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-uint32-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-int32-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-int32-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-float32-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-float32-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-float64-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-float64-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-int64-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-int64-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-uint64-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[nodata-uint64-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-int8-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-int8-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-uint8-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-uint8-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-uint16-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-uint16-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-int16-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-int16-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-uint32-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-uint32-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-int32-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-int32-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-float32-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-float32-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-float64-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-float64-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-int64-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-int64-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-uint64-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[alpha-uint64-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-int8-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-int8-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-uint8-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-uint8-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-uint16-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-uint16-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-int16-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-int16-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-uint32-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-uint32-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-int32-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-int32-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-float32-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-float32-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-float64-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-float64-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-int64-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-int64-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-uint64-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[mask-uint64-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-int8-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-int8-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-uint8-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-uint8-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-uint16-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-uint16-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-int16-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-int16-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-uint32-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-uint32-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-int32-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-int32-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-float32-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-float32-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-float64-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-float64-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-int64-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-int64-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-uint64-equator-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/benchmarks/test_benchmarks.py::test_tile[none-uint64-dateline-full] SKIPPED\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | =============================== warnings summary ===============================\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_cmap.py::test_apply_discrete_cmap\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/cogeotiff-rio-tiler/tests/test_cmap.py:177: DeprecationWarning: NumPy will stop allowing conversion of out-of-bound Python integers to integer arrays.  The conversion of -100 to uint16 will fail in the future.\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   For the old behavior, usually:\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |       np.array(value).astype(dtype)`\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   will give the desired result (the cast overflows).\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |     data[0, 5:, 5:] = -100\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_16bit_PNG\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_16bit_PNG\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/rasterio/io.py:236: NotGeoreferencedWarning: Dataset has no geotransform, gcps, or rpcs. The identity matrix will be returned.\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |     return DatasetReader(mempath, driver=driver, sharing=sharing, **kwargs)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_image_from_bytes\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_image_from_bytes\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_image_from_bytes\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_models.py::test_image_from_bytes\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_render_colorinterp\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_render_colorinterp\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_render_colorinterp\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_render_colorinterp\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_utils.py::test_render_colorinterp\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/rasterio/io.py:138: NotGeoreferencedWarning: Dataset has no geotransform, gcps, or rpcs. The identity matrix will be returned.\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |     return DatasetReader(mempath, driver=driver, sharing=sharing, **kwargs)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | tests/test_mosaic.py::test_mosaic_feature\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |   /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/rasterio/features.py:366: NotGeoreferencedWarning: Dataset has no geotransform, gcps, or rpcs. The identity matrix will be returned.\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   |     _rasterize(valid_shapes, out, transform, all_touched, merge_alg)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/cogeotiff-rio-tiler/report.xml -\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | ---------- coverage: platform linux, python 3.8.11-final-0 -----------\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Name                                   Stmts   Miss Branch BrPart  Cover   Missing\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | ----------------------------------------------------------------------------------\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/__init__.py                      2      0      0      0   100%\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/cmap_data/__init__.py            0      0      0      0   100%\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/colormap.py                    102      2     62      5    95%   39, 104, 120->123, 159->162, 199->202\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/constants.py                     9      0      0      0   100%\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/errors.py                       21      0      0      0   100%\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/expression.py                   20      1      8      1    93%   75\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/io/__init__.py                   5      0      0      0   100%\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/io/base.py                     462     22    214     12    95%   59-64, 67-71, 99-103, 112, 154, 164, 179, 192, 202, 216, 229, 271, 307, 508->510, 586->588, 736->738, 873, 1012, 1038, 1090, 1139->1141, 1193->1195, 1245\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/io/rasterio.py                 252      5     80      7    96%   114, 670->673, 681->684, 687, 779, 785, 803\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/io/stac.py                     113     24     40      2    76%   26-27, 51-95, 169, 310->313\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/io/xarray.py                   150     19     42      6    87%   25-26, 30-31, 93-95, 101->128, 120-126, 132->149, 141-147, 197, 224, 301-308, 350, 376\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/logger.py                        2      0      0      0   100%\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/models.py                      299     12    114      5    95%   129, 414->exit, 418-420, 443->exit, 511-516, 557, 583-589, 725->727\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/mosaic/__init__.py               2      0      0      0   100%\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/mosaic/methods/__init__.py      11      0      0      0   100%\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/mosaic/methods/base.py          24      0     10      0   100%\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/mosaic/methods/defaults.py      98      5     40      5    93%   87, 111, 130, 147, 175\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/mosaic/reader.py                58      1     32      5    93%   68->71, 161->167, 164->167, 168, 173->176\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/profiles.py                     21      0      2      0   100%\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/reader.py                      181      2     83      4    98%   352->358, 512->517, 518, 521\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/tasks.py                        34      0     18      0   100%\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/types.py                        19      0      0      0   100%\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | rio_tiler/utils.py                       231     17     98      7    92%   84, 122, 199, 240-253, 365, 502-509, 547->550, 591-596\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | ----------------------------------------------------------------------------------\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | TOTAL                                   2116    110    843     59    94%\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | Coverage XML written to file coverage.xml\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   | ================ 239 passed, 80 skipped, 13 warnings in 46.94s =================\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2705  Success - Main Run tests\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests] \u2b50 Run Post Set up Python 3.8\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests]   \u2705  Success - Post Set up Python 3.8\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/tests] \ud83c\udfc1  Job succeeded\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark] \ud83d\ude80  Start image=crawlergpt:latest\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/cogeotiff-rio-tiler] user=0 workdir=\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2601  git clone 'https://github.com/benchmark-action/github-action-benchmark' # ref=v1\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark] \u2b50 Run Main actions/checkout@v3\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2705  Success - Main actions/checkout@v3\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark] \u2b50 Run Main Set up Python\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udc33  docker cp src=/tmp/act-cache/1422cf9e-3caf-482f-b034-f5d84d7d0535/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2753  ::group::Installed versions\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Semantic version spec of 3.11 is 3.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? false\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::evaluating 6 versions\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::match not found\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Version 3.11 was not found in the local cache\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::set auth\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::arm64===x64 && darwin===linux\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::matched 3.11.4\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Version 3.11 is available for downloading\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Download from \"https://github.com/actions/python-versions/releases/download/3.11.4-5199054971/python-3.11.4-linux-20.04-x64.tar.gz\"\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.11.4-5199054971/python-3.11.4-linux-20.04-x64.tar.gz\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Destination /tmp/11a9b74b-b78b-4f2f-945b-fbf0bf263fd7\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::set auth\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::download complete\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Extract downloaded archive\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Checking tar --version\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/0a43a323-b3ab-48ba-8dbb-bbdfd9221e07 -f /tmp/11a9b74b-b78b-4f2f-945b-fbf0bf263fd7\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Execute installation script\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Check if Python hostedtoolcache folder exist...\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Create Python 3.11.4 folder\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Copy Python binaries to hostedtoolcache folder\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Upgrading pip...\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Looking in links: /tmp/tmp394524pu\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (65.5.0)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (23.1.2)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting pip\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 27.7 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Installing collected packages: pip\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Successfully installed pip-23.1.2\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Create complete file\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? false\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: 3.11.4\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::explicit? true\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::evaluating 7 versions\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::matched: 3.11.4\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.11.4/x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Found tool in cache Python 3.11.4 x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Successfully set up CPython (3.11.4)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2753  ::endgroup::\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2705  Success - Main Set up Python\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.11.4/x64/lib\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.11.4/x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.11.4/x64/lib/pkgconfig\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2699  ::set-output:: python-version=3.11.4\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.11.4/x64/bin/python\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.11.4/x64\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.11.4/x64/bin\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark] \u2b50 Run Main Install dependencies\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (23.1.2)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Obtaining file:///tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/cogeotiff-rio-tiler\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Installing build dependencies: started\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Installing build dependencies: finished with status 'done'\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Checking if build backend supports build_editable: started\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Checking if build backend supports build_editable: finished with status 'done'\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Getting requirements to build editable: started\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Getting requirements to build editable: finished with status 'done'\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Preparing editable metadata (pyproject.toml): started\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting attrs (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 3.9 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting cachetools (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting color-operations (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading color_operations-0.1.1-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (130 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 130.9/130.9 kB 13.2 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting httpx (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading httpx-0.24.1-py3-none-any.whl (75 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 75.4/75.4 kB 3.4 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting morecantile<5.0,>=4.0 (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading morecantile-4.2.0-py3-none-any.whl (36 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting numexpr (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading numexpr-2.8.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (383 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 383.5/383.5 kB 42.4 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting numpy (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading numpy-1.25.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.6 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.6/17.6 MB 28.3 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting pydantic (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading pydantic-1.10.9-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.1 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.1/3.1 MB 21.5 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting pystac>=0.5.4 (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading pystac-1.7.3-py3-none-any.whl (150 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 150.0/150.0 kB 1.3 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting rasterio>=1.3.0 (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading rasterio-1.3.7-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (21.3 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 21.3/21.3 MB 16.8 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting boto3 (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading boto3-1.26.162-py3-none-any.whl (135 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 135.9/135.9 kB 2.2 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting pytest (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 3.0 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting pytest-asyncio (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading pytest_asyncio-0.21.0-py3-none-any.whl (13 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting pytest-benchmark (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading pytest_benchmark-4.0.0-py3-none-any.whl (43 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 44.0/44.0 kB 2.5 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting pytest-cov (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting rioxarray (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading rioxarray-0.14.1-py3-none-any.whl (53 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 53.5/53.5 kB 4.6 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting xarray (from rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading xarray-2023.6.0-py3-none-any.whl (999 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 999.1/999.1 kB 10.6 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting pyproj~=3.1 (from morecantile<5.0,>=4.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading pyproj-3.6.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (8.0 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 8.0/8.0 MB 19.7 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting python-dateutil>=2.7.0 (from pystac>=0.5.4->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 15.8 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting affine (from rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading affine-2.4.0-py3-none-any.whl (15 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting certifi (from rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 1.7 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting click>=4.0 (from rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 96.6/96.6 kB 8.0 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting cligj>=0.5 (from rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading cligj-0.7.2-py3-none-any.whl (7.1 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting snuggs>=1.4.1 (from rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading snuggs-1.4.7-py3-none-any.whl (5.4 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting click-plugins (from rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading click_plugins-1.1.1-py2.py3-none-any.whl (7.5 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (from rasterio>=1.3.0->rio-tiler==5.0.1) (65.5.0)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting botocore<1.30.0,>=1.29.162 (from boto3->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading botocore-1.29.162-py3-none-any.whl (11.0 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.0/11.0 MB 20.3 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting jmespath<2.0.0,>=0.7.1 (from boto3->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting s3transfer<0.7.0,>=0.6.0 (from boto3->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading s3transfer-0.6.1-py3-none-any.whl (79 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 79.8/79.8 kB 1.6 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting httpcore<0.18.0,>=0.15.0 (from httpx->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading httpcore-0.17.2-py3-none-any.whl (72 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 72.5/72.5 kB 1.6 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting idna (from httpx->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 7.7 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting sniffio (from httpx->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading sniffio-1.3.0-py3-none-any.whl (10 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting typing-extensions>=4.2.0 (from pydantic->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting iniconfig (from pytest->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting packaging (from pytest->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Using cached packaging-23.1-py3-none-any.whl (48 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting pluggy<2.0,>=0.12 (from pytest->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Using cached pluggy-1.2.0-py3-none-any.whl (17 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting py-cpuinfo (from pytest-benchmark->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading py_cpuinfo-9.0.0-py3-none-any.whl (22 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading coverage-7.2.7-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (232 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 232.6/232.6 kB 29.2 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting pandas>=1.4 (from xarray->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading pandas-2.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.2 MB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 12.2/12.2 MB 11.0 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting urllib3<1.27,>=1.25.4 (from botocore<1.30.0,>=1.29.162->boto3->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.1/143.1 kB 5.5 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting h11<0.15,>=0.13 (from httpcore<0.18.0,>=0.15.0->httpx->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading h11-0.14.0-py3-none-any.whl (58 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 58.3/58.3 kB 3.2 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting anyio<5.0,>=3.0 (from httpcore<0.18.0,>=0.15.0->httpx->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading anyio-3.7.0-py3-none-any.whl (80 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 80.9/80.9 kB 2.8 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting pytz>=2020.1 (from pandas>=1.4->xarray->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 4.6 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting tzdata>=2022.1 (from pandas>=1.4->xarray->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading tzdata-2023.3-py2.py3-none-any.whl (341 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 341.8/341.8 kB 11.2 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting six>=1.5 (from python-dateutil>=2.7.0->pystac>=0.5.4->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Collecting pyparsing>=2.1.6 (from snuggs>=1.4.1->rasterio>=1.3.0->rio-tiler==5.0.1)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 102.6/102.6 kB 4.8 MB/s eta 0:00:00\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Building wheels for collected packages: rio-tiler\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Building editable for rio-tiler (pyproject.toml): started\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Building editable for rio-tiler (pyproject.toml): finished with status 'done'\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Created wheel for rio-tiler: filename=rio_tiler-5.0.1-py3-none-any.whl size=6431 sha256=e3929109eb9575a9d9f727d37c258ccb1d7cf6818616ac358789984b719e567c\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-zq4r6dcn/wheels/45/49/65/8e047d8953b3f1e1e32750591f69ee396888a027870aa436b8\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Successfully built rio-tiler\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Installing collected packages: pytz, py-cpuinfo, urllib3, tzdata, typing-extensions, sniffio, six, pyparsing, pluggy, packaging, numpy, jmespath, iniconfig, idna, h11, coverage, click, certifi, cachetools, attrs, affine, snuggs, python-dateutil, pytest, pyproj, pydantic, numexpr, color-operations, cligj, click-plugins, anyio, rasterio, pytest-cov, pytest-benchmark, pytest-asyncio, pystac, pandas, morecantile, httpcore, botocore, xarray, s3transfer, httpx, rioxarray, rio-tiler, boto3\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Successfully installed affine-2.4.0 anyio-3.7.0 attrs-23.1.0 boto3-1.26.162 botocore-1.29.162 cachetools-5.3.1 certifi-2023.5.7 click-8.1.3 click-plugins-1.1.1 cligj-0.7.2 color-operations-0.1.1 coverage-7.2.7 h11-0.14.0 httpcore-0.17.2 httpx-0.24.1 idna-3.4 iniconfig-2.0.0 jmespath-1.0.1 morecantile-4.2.0 numexpr-2.8.4 numpy-1.25.0 packaging-23.1 pandas-2.0.2 pluggy-1.2.0 py-cpuinfo-9.0.0 pydantic-1.10.9 pyparsing-3.1.0 pyproj-3.6.0 pystac-1.7.3 pytest-7.4.0 pytest-asyncio-0.21.0 pytest-benchmark-4.0.0 pytest-cov-4.1.0 python-dateutil-2.8.2 pytz-2023.3 rasterio-1.3.7 rio-tiler-5.0.1 rioxarray-0.14.1 s3transfer-0.6.1 six-1.16.0 sniffio-1.3.0 snuggs-1.4.7 typing-extensions-4.6.3 tzdata-2023.3 urllib3-1.26.16 xarray-2023.6.0\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2705  Success - Main Install dependencies\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark] \u2b50 Run Main Run Benchmark\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | ============================= test session starts ==============================\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/cogeotiff-rio-tiler\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | plugins: cov-4.1.0, benchmark-4.0.0, anyio-3.7.0, asyncio-0.21.0\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | asyncio: mode=Mode.STRICT\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | collected 319 items\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_cmap.py sssssssssssssssss                                     [  5%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_expression.py ssssssssssss                                    [  9%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_io_MultiBand.py s                                             [  9%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_io_image.py ss                                                [ 10%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_io_rasterio.py ssssssssssssssssssssssssssssss                 [ 19%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_io_stac.py ssssssssssssssss                                   [ 24%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_io_xarray.py sss                                              [ 25%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_mask.py sssssssssssssssssssssssssssssssssssssssssssssssssssss [ 42%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | ssssssss                                                                 [ 44%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_models.py ssssssssssssssssssss                                [ 50%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_mosaic.py sssssssssssssss                                     [ 55%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_overview.py ss                                                [ 56%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_profiles.py s                                                 [ 56%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_reader.py ssssssssssssssssss                                  [ 62%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_resampling.py ssssssssssssssssss                              [ 67%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/test_utils.py sssssssssssssssssssssss                              [ 74%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | tests/benchmarks/test_benchmarks.py .................................... [ 86%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | ............................................                             [100%]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Wrote benchmark data in: <_io.BufferedWriter name='output.json'>\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/cogeotiff-rio-tiler/report.xml -\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | ------------------------- benchmark 'dateline - full tile ': 40 tests --------------------------\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Name (time in ms)         Min                Max               Mean             Median          \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | ------------------------------------------------------------------------------------------------\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint8-alpha            8.0808 (1.0)      24.2457 (2.28)     10.5603 (1.20)      9.9050 (1.18)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int8-alpha             8.1035 (1.00)     18.6994 (1.76)      9.7762 (1.11)      8.4166 (1.0)    \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint16-alpha           8.2706 (1.02)     10.6508 (1.0)       8.8187 (1.0)       8.7228 (1.04)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint16-mask            8.2737 (1.02)     50.5178 (4.74)     13.6602 (1.55)     13.3459 (1.59)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint8-mask             8.3264 (1.03)     14.0124 (1.32)     10.2531 (1.16)     10.1364 (1.20)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float32-mask           8.5058 (1.05)     14.3515 (1.35)      9.2253 (1.05)      8.9890 (1.07)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint32-mask            8.7092 (1.08)     25.4690 (2.39)     10.6506 (1.21)      8.9364 (1.06)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int32-mask             8.8811 (1.10)     14.3976 (1.35)     10.4678 (1.19)     10.0037 (1.19)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint32-alpha           8.9217 (1.10)     13.3008 (1.25)     10.1332 (1.15)      9.9435 (1.18)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint64-nodata          8.9229 (1.10)     12.7797 (1.20)      9.7409 (1.10)      9.3553 (1.11)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int32-alpha            9.0186 (1.12)     12.7326 (1.20)     10.0315 (1.14)      9.8810 (1.17)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float64-mask           9.2530 (1.15)     21.8644 (2.05)     11.2158 (1.27)     10.2288 (1.22)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint16-none            9.2797 (1.15)     19.7952 (1.86)     15.0091 (1.70)     17.1942 (2.04)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint64-mask            9.3631 (1.16)     13.0928 (1.23)     10.2145 (1.16)     10.0403 (1.19)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int64-mask             9.4895 (1.17)     18.5683 (1.74)     10.7623 (1.22)     10.2488 (1.22)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int64-alpha            9.4947 (1.17)     14.6754 (1.38)     10.5866 (1.20)     10.5205 (1.25)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint64-alpha           9.7473 (1.21)     30.1611 (2.83)     19.2610 (2.18)     19.6745 (2.34)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int64-nodata          10.0700 (1.25)     13.6851 (1.28)     11.3845 (1.29)     11.4008 (1.35)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int16-mask            10.4576 (1.29)     17.8228 (1.67)     14.5810 (1.65)     14.8331 (1.76)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int8-none             11.0286 (1.36)     23.0438 (2.16)     13.3712 (1.52)     11.8654 (1.41)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint8-nodata          11.3490 (1.40)     18.3722 (1.72)     12.5465 (1.42)     11.9323 (1.42)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int16-alpha           11.5942 (1.43)     23.8407 (2.24)     15.7858 (1.79)     15.9285 (1.89)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint16-nodata         11.8031 (1.46)     16.5952 (1.56)     12.7619 (1.45)     12.2863 (1.46)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float32-alpha         12.1399 (1.50)     24.5933 (2.31)     16.4483 (1.87)     16.2051 (1.93)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint8-none            12.3849 (1.53)     20.1365 (1.89)     15.8206 (1.79)     16.0155 (1.90)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int32-nodata          12.7057 (1.57)     15.2723 (1.43)     13.1463 (1.49)     12.8741 (1.53)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint32-nodata         12.7100 (1.57)     20.9597 (1.97)     13.7163 (1.56)     13.1323 (1.56)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint32-none           12.8755 (1.59)     14.6621 (1.38)     13.1885 (1.50)     13.0733 (1.55)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int8-mask             13.1367 (1.63)     18.4191 (1.73)     15.7312 (1.78)     15.8551 (1.88)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint64-none           13.4751 (1.67)     17.3891 (1.63)     14.3177 (1.62)     14.0341 (1.67)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int16-nodata          13.6531 (1.69)     21.1594 (1.99)     17.4072 (1.97)     17.7171 (2.11)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float64-none          14.6437 (1.81)     24.3452 (2.29)     18.9499 (2.15)     18.5737 (2.21)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float64-nodata        14.9602 (1.85)     32.3990 (3.04)     22.4956 (2.55)     20.3641 (2.42)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int8-nodata           15.7488 (1.95)     22.5100 (2.11)     19.0741 (2.16)     18.6810 (2.22)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float64-alpha         16.0915 (1.99)     33.0237 (3.10)     18.7162 (2.12)     18.4647 (2.19)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float32-nodata        16.1008 (1.99)     26.1957 (2.46)     21.3662 (2.42)     21.6138 (2.57)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int16-none            16.2193 (2.01)     21.6597 (2.03)     18.3695 (2.08)     18.2235 (2.17)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int64-none            16.5474 (2.05)     37.1660 (3.49)     25.8795 (2.93)     27.4486 (3.26)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float32-none          17.5381 (2.17)     20.6196 (1.94)     18.7637 (2.13)     18.8584 (2.24)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int32-none            25.0745 (3.10)     30.2289 (2.84)     26.9740 (3.06)     26.9705 (3.20)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | ------------------------------------------------------------------------------------------------\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | -------------------------- benchmark 'equator - full tile ': 40 tests --------------------------\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Name (time in ms)         Min                Max               Mean             Median          \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | ------------------------------------------------------------------------------------------------\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint16-none            9.2276 (1.0)      12.4498 (1.09)      9.5719 (1.0)       9.4688 (1.0)    \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int16-none             9.3658 (1.01)     25.9146 (2.27)     13.0988 (1.37)     12.0999 (1.28)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint16-mask            9.9641 (1.08)     13.3978 (1.17)     10.8044 (1.13)     10.5650 (1.12)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float32-mask          10.1568 (1.10)     11.4321 (1.0)      10.4271 (1.09)     10.3060 (1.09)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int8-alpha            10.3147 (1.12)     39.8562 (3.49)     11.4547 (1.20)     10.7204 (1.13)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint64-nodata         10.9620 (1.19)     14.7141 (1.29)     12.1547 (1.27)     12.2303 (1.29)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int8-none             10.9991 (1.19)     13.7010 (1.20)     11.6046 (1.21)     11.3129 (1.19)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint32-mask           11.5071 (1.25)     16.2988 (1.43)     12.6018 (1.32)     11.8481 (1.25)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float64-mask          11.6622 (1.26)     16.7245 (1.46)     12.8127 (1.34)     12.4304 (1.31)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float32-alpha         11.7627 (1.27)     31.9637 (2.80)     19.6150 (2.05)     20.5673 (2.17)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint64-mask           12.2099 (1.32)     19.0654 (1.67)     13.6735 (1.43)     13.5170 (1.43)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int16-alpha           12.8106 (1.39)     29.8597 (2.61)     17.7831 (1.86)     13.6546 (1.44)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int64-mask            12.9024 (1.40)     16.0195 (1.40)     13.9644 (1.46)     13.8148 (1.46)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint16-alpha          12.9412 (1.40)     21.0163 (1.84)     14.2198 (1.49)     13.5470 (1.43)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint32-none           12.9619 (1.40)     20.5228 (1.80)     15.8202 (1.65)     15.3022 (1.62)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint64-alpha          13.0182 (1.41)     19.2658 (1.69)     14.2832 (1.49)     13.7990 (1.46)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int32-alpha           13.3155 (1.44)     17.1005 (1.50)     14.7122 (1.54)     14.4203 (1.52)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint64-none           13.4847 (1.46)     20.0283 (1.75)     15.6889 (1.64)     14.5304 (1.53)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int32-none            13.7312 (1.49)     34.3424 (3.00)     19.1970 (2.01)     14.3068 (1.51)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float32-none          14.1083 (1.53)     26.1383 (2.29)     18.6952 (1.95)     18.9119 (2.00)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int64-alpha           14.2359 (1.54)     25.3452 (2.22)     18.1951 (1.90)     17.6496 (1.86)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint8-nodata          14.2537 (1.54)     36.5981 (3.20)     17.3616 (1.81)     16.3642 (1.73)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint16-nodata         14.9291 (1.62)     22.6271 (1.98)     16.5177 (1.73)     16.3161 (1.72)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float64-alpha         15.0504 (1.63)     28.7480 (2.51)     19.2482 (2.01)     19.5804 (2.07)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float32-nodata        15.0821 (1.63)     40.7796 (3.57)     25.0694 (2.62)     29.7910 (3.15)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int16-nodata          15.1304 (1.64)     44.1077 (3.86)     30.7820 (3.22)     32.0964 (3.39)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int64-none            15.2565 (1.65)     20.8888 (1.83)     16.4222 (1.72)     16.2418 (1.72)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint8-mask            15.2991 (1.66)     22.3073 (1.95)     18.8031 (1.96)     19.2132 (2.03)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint32-alpha          15.5584 (1.69)     31.2570 (2.73)     19.9445 (2.08)     19.3780 (2.05)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint8-alpha           16.3719 (1.77)     48.4077 (4.23)     21.6976 (2.27)     21.0553 (2.22)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int64-nodata          17.2115 (1.87)     25.9010 (2.27)     21.7992 (2.28)     22.3585 (2.36)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int8-mask             17.2821 (1.87)     26.1943 (2.29)     19.8951 (2.08)     19.2693 (2.04)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint32-nodata         18.0134 (1.95)     27.7083 (2.42)     19.5560 (2.04)     18.9936 (2.01)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int32-mask            19.1175 (2.07)     26.6471 (2.33)     22.6062 (2.36)     22.7884 (2.41)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int32-nodata          19.1886 (2.08)     27.8004 (2.43)     20.2912 (2.12)     19.7010 (2.08)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | uint8-none            19.3471 (2.10)     25.0844 (2.19)     22.5446 (2.36)     22.6874 (2.40)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int16-mask            20.4594 (2.22)     30.0445 (2.63)     22.1875 (2.32)     21.3310 (2.25)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float64-nodata        21.2184 (2.30)     47.2334 (4.13)     33.4055 (3.49)     33.8943 (3.58)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | float64-none          24.7314 (2.68)     27.7810 (2.43)     25.9499 (2.71)     25.6796 (2.71)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | int8-nodata           26.5009 (2.87)     38.6149 (3.38)     30.3557 (3.17)     29.7182 (3.14)   \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | ------------------------------------------------------------------------------------------------\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | \n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Legend:\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   Outliers: 1 Standard Deviation from Mean; 1.5 IQR (InterQuartile Range) from 1st Quartile and 3rd Quartile.\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |   OPS: Operations Per Second, computed as 1 / Mean\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | ================== 80 passed, 239 skipped in 88.18s (0:01:28) ==================\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2705  Success - Main Run Benchmark\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark] \u2b50 Run Main Store and Compare benchmark result\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udc33  docker cp src=/tmp/act-cache/1422cf9e-3caf-482f-b034-f5d84d7d0535/act/benchmark-action-github-action-benchmark@v1/ dst=/var/run/act/actions/benchmark-action-github-action-benchmark@v1/\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/benchmark-action-github-action-benchmark@v1/] user=0 workdir=\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/benchmark-action-github-action-benchmark@v1/dist/src/index.js] user= workdir=\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Config extracted from job: [object Object]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Benchmark result was extracted: [object Object]\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Executing 'git fetch' for branch 'gh-benchmarks' with token and options ''\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Executing Git: fetch https://x-access-token:***@github.com/cogeotiff/rio-tiler.git gh-benchmarks:gh-benchmarks\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | [command]/usr/bin/git -c user.name=github-action-benchmark -c user.email=github@users.noreply.github.com -c http.https://github.com/.extraheader= fetch https://x-access-token:***@github.com/cogeotiff/rio-tiler.git gh-benchmarks:gh-benchmarks\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | From https://github.com/cogeotiff/rio-tiler\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |  * [new branch]      gh-benchmarks -> gh-benchmarks\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Executing Git: switch gh-benchmarks\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | [command]/usr/bin/git -c user.name=github-action-benchmark -c user.email=github@users.noreply.github.com -c http.https://github.com/.extraheader= switch gh-benchmarks\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Switched to branch 'gh-benchmarks'\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Executing 'git pull' to branch 'gh-benchmarks' with token and options ''\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Executing Git: pull https://x-access-token:***@github.com/cogeotiff/rio-tiler.git gh-benchmarks\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | [command]/usr/bin/git -c user.name=github-action-benchmark -c user.email=github@users.noreply.github.com -c http.https://github.com/.extraheader= pull https://x-access-token:***@github.com/cogeotiff/rio-tiler.git gh-benchmarks\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | From https://github.com/cogeotiff/rio-tiler\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |  * branch            gh-benchmarks -> FETCH_HEAD\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Already up to date.\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Loaded data.js at dev/benchmarks/data.js\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Overwrote dev/benchmarks/data.js for adding new data\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Executing Git: add dev/benchmarks/data.js\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | [command]/usr/bin/git -c user.name=github-action-benchmark -c user.email=github@users.noreply.github.com -c http.https://github.com/.extraheader= add dev/benchmarks/data.js\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Skipped to create default index.html since it is already existing: dev/benchmarks/index.html\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Executing Git: commit -m add rio-tiler Benchmarks (pytest) benchmark result for 6d71e7d380cd815b8f65a1917653769d882c2aa6\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | [command]/usr/bin/git -c user.name=github-action-benchmark -c user.email=github@users.noreply.github.com -c http.https://github.com/.extraheader= commit -m add rio-tiler Benchmarks (pytest) benchmark result for 6d71e7d380cd815b8f65a1917653769d882c2aa6\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | [gh-benchmarks f1a3f47] add rio-tiler Benchmarks (pytest) benchmark result for 6d71e7d380cd815b8f65a1917653769d882c2aa6\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   |  1 file changed, 583 insertions(+), 1 deletion(-)\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Executing 'git push' to branch 'gh-benchmarks' with token and options ''\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Executing Git: push https://x-access-token:***@github.com/cogeotiff/rio-tiler.git gh-benchmarks:gh-benchmarks --no-verify\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | [command]/usr/bin/git -c user.name=github-action-benchmark -c user.email=github@users.noreply.github.com -c http.https://github.com/.extraheader= push https://x-access-token:***@github.com/cogeotiff/rio-tiler.git gh-benchmarks:gh-benchmarks --no-verify\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | remote: Permission to cogeotiff/rio-tiler.git denied to andre15silva.\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | fatal: unable to access 'https://github.com/cogeotiff/rio-tiler.git/': The requested URL returned error: 403\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::@actions/exec.exec() threw an error: Command 'git' failed with args '-c user.name=github-action-benchmark -c user.email=github@users.noreply.github.com -c http.https://github.com/.extraheader= push https://x-access-token:***@github.com/cogeotiff/rio-tiler.git gh-benchmarks:gh-benchmarks --no-verify': remote: Permission to cogeotiff/rio-tiler.git denied to andre15silva.%0Afatal: unable to access 'https://github.com/cogeotiff/rio-tiler.git/': The requested URL returned error: 403%0A: Error: The process '/usr/bin/git' failed with exit code 128\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \ud83d\udcac  ::debug::Executing Git: checkout -\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | [command]/usr/bin/git -c user.name=github-action-benchmark -c user.email=github@users.noreply.github.com -c http.https://github.com/.extraheader= checkout -\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Switched to branch 'main'\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   | Your branch is up to date with 'origin/main'.\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u2757  ::error::Command 'git' failed with args '-c user.name=github-action-benchmark -c user.email=github@users.noreply.github.com -c http.https://github.com/.extraheader= push https://x-access-token:***@github.com/cogeotiff/rio-tiler.git gh-benchmarks:gh-benchmarks --no-verify': remote: Permission to cogeotiff/rio-tiler.git denied to andre15silva.%0Afatal: unable to access 'https://github.com/cogeotiff/rio-tiler.git/': The requested URL returned error: 403%0A: Error: The process '/usr/bin/git' failed with exit code 128\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark]   \u274c  Failure - Main Store and Compare benchmark result\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark] exitcode '1': failure\n[82d175d2-9ab5-4b81-9680-c04c681fbe36/benchmark] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'benchmark' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/cogeotiff-rio-tiler/.github/workflows/ci-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 502.03503012657166
    }
}