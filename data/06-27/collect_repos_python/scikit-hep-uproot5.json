{
    "repository": "scikit-hep/uproot5",
    "stars": 190,
    "language": "python",
    "size": 3219,
    "clone_url": "https://github.com/scikit-hep/uproot5.git",
    "timestamp": "2023-06-28T15:24:01.362313Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest",
        "unknown",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "",
                "name": "tests.test_0320-start-working-on-ROOT-writing",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0322-writablefile-infrastructure",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0329-update-existing-root-files",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0341-manipulate-streamer-info",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0344-writabledirectory-can-read",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0345-bulk-copy-method",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0349-write-TObjString",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0384-move-behavior_of-and-fix-383",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0405-write-a-histogram",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0406-write-a-ttree",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0412-write-multidimensional-numpy-to-ttree",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0414-write-jagged-arrays",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0416-writing-compressed-data",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0420-pyroot-uproot-interoperability",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0422-hist-integration",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0472-tstreamerinfo-for-ttree",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0475-remember-to-update-freesegments",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0498-create-leaf-branch-in-extend",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0576-unicode-in-names",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0652_dask-for-awkward",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0700-dask-empty-arrays",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0840-support-tleafG",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0841-fix-814",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0844-fix-delete-hist-from-root",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_0876-uproot-dask-blind-steps",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_file",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_file_fail",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_memmap",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_memmap_fail",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_http",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: example.com is flaky, too",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_http_port",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: example.com is flaky, too",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_http_size",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_http_size_port",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_http_fail",
                "time": 5.184,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_no_multipart",
                "time": 0.287,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_no_multipart_fail",
                "time": 0.128,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_fallback",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_xrootd",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_xrootd_deadlock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_xrootd_fail",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "could not import 'XRootD': No module named 'XRootD'",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_xrootd_vectorread",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_xrootd_vectorread_max_element_split",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_xrootd_vectorread_max_element_split_consistency",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_xrootd_vectorread_fail",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "could not import 'XRootD': No module named 'XRootD'",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_xrootd_size",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_xrootd_numpy_int",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0001-source-class",
                "name": "test_cursor_debug",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0006-notify-when-downloaded",
                "name": "test_file",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0006-notify-when-downloaded",
                "name": "test_file_workers",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0006-notify-when-downloaded",
                "name": "test_memmap",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0006-notify-when-downloaded",
                "name": "test_http_multipart",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: example.com is flaky, too",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0006-notify-when-downloaded",
                "name": "test_http",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: example.com is flaky, too",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0006-notify-when-downloaded",
                "name": "test_http_workers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: example.com is flaky, too",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0006-notify-when-downloaded",
                "name": "test_http_fallback",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0006-notify-when-downloaded",
                "name": "test_http_fallback_workers",
                "time": 0.134,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0006-notify-when-downloaded",
                "name": "test_xrootd",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0006-notify-when-downloaded",
                "name": "test_xrootd_workers",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0006-notify-when-downloaded",
                "name": "test_xrootd_vectorread",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0007-single-chunk-interface",
                "name": "test_file",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0007-single-chunk-interface",
                "name": "test_memmap",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0007-single-chunk-interface",
                "name": "test_http",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: example.com is flaky, too",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0007-single-chunk-interface",
                "name": "test_http_fail",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0007-single-chunk-interface",
                "name": "test_http_multipart",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: example.com is flaky, too",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0007-single-chunk-interface",
                "name": "test_http_multipart_fail",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0007-single-chunk-interface",
                "name": "test_xrootd",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0007-single-chunk-interface",
                "name": "test_xrootd_worker",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0007-single-chunk-interface",
                "name": "test_xrootd_vectorread",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0008-start-interpretation",
                "name": "test_classname_encoding",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0008-start-interpretation",
                "name": "test_file_header",
                "time": 0.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0009-nested-directories",
                "name": "test",
                "time": 0.461,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0010-start-streamers",
                "name": "test",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0011-generate-classes-from-streamers",
                "name": "test",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0013-rntuple-anchor",
                "name": "test",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0014-all-ttree-versions",
                "name": "test_streamerless_read",
                "time": 4.365,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0014-all-ttree-versions",
                "name": "test_list_streamers",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0016-interpretations",
                "name": "test_get_key",
                "time": 1.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0016-interpretations",
                "name": "test_basket_data",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0016-interpretations",
                "name": "test_compressed",
                "time": 0.707,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0016-interpretations",
                "name": "test_read_all",
                "time": 0.581,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0016-interpretations",
                "name": "test_recovery[False]",
                "time": 0.664,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0016-interpretations",
                "name": "test_recovery[True]",
                "time": 0.408,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_any_basket",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_stitching_arrays",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_names_entries_to_ranges_or_baskets",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_ranges_or_baskets_to_arrays",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_branch_array_1[MultithreadedFileSource]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_branch_array_1[MemmapSource]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_branch_array_2[MultithreadedFileSource]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_branch_array_2[MemmapSource]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_branch_array_3[MultithreadedFileSource]",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_branch_array_3[MemmapSource]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_branch_array_4[MultithreadedFileSource]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_branch_array_4[MemmapSource]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_cache",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0017-multi-basket-multi-branch-fetch",
                "name": "test_pandas",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0018-array-fetching-interface",
                "name": "test_leaf_interpretation",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0018-array-fetching-interface",
                "name": "test_compute",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0018-array-fetching-interface",
                "name": "test_arrays",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0018-array-fetching-interface",
                "name": "test_jagged",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0018-array-fetching-interface",
                "name": "test_jagged_awkward",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0018-array-fetching-interface",
                "name": "test_jagged_pandas",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0018-array-fetching-interface",
                "name": "test_stl_vector",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0018-array-fetching-interface",
                "name": "test_pandas_merge",
                "time": 0.182,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0022-number-of-branches",
                "name": "test_branchname",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0022-number-of-branches",
                "name": "test_tuple_branchname",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0022-number-of-branches",
                "name": "test_interpretation",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0022-number-of-branches",
                "name": "test_compute",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0022-number-of-branches",
                "name": "test_cut",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0022-number-of-branches",
                "name": "test_aliases",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0022-number-of-branches",
                "name": "test_jagged",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-more-interpretations-1",
                "name": "test_formula_with_dot",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-more-interpretations-1",
                "name": "test_formula_with_slash",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-more-interpretations-1",
                "name": "test_formula_with_missing",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-more-interpretations-1",
                "name": "test_strings1",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-more-interpretations-1",
                "name": "test_strings4",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-more-interpretations-1",
                "name": "test_double32",
                "time": 0.614,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-more-interpretations-1",
                "name": "test_double32_2",
                "time": 0.511,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-more-interpretations-1",
                "name": "test_double32_3",
                "time": 0.495,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-more-interpretations-1",
                "name": "test_double32_float16",
                "time": 0.242,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[5.23.02]",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[5.24.00]",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[5.25.02]",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[5.26.00]",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[5.27.02]",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[5.28.00]",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[5.29.02]",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[5.30.00]",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[6.08.04]",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[6.10.05]",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[6.14.00]",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[6.16.00]",
                "time": 0.185,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[6.18.00]",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0023-ttree-versions",
                "name": "test[6.20.04]",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0028-fallback-to-read-streamer",
                "name": "test_fallback_reading",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0029-more-string-types",
                "name": "test_parse_typename",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0029-more-string-types",
                "name": "test_strings1",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0029-more-string-types",
                "name": "test_map_string_string_in_object",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0029-more-string-types",
                "name": "test_map_long_int_in_object",
                "time": 0.527,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0029-more-string-types",
                "name": "test_top_level_vectors",
                "time": 0.242,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0029-more-string-types",
                "name": "test_strings2",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0029-more-string-types",
                "name": "test_strings3",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_nonmemberwise_asmap",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Implement non-memberwise std::map; we have a sample (map<string,double>)",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_typename",
                "time": 0.366,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_string",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_tstring",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_vector_int32",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_vector_string",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_vector_tstring",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_vector_vector_int32",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_vector_vector_string",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_vector_set_int32",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_vector_set_string",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_set_int32",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_set_string",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_int32_int16",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_int32_vector_int16",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_int32_vector_string",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_int32_set_int16",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_int32_set_string",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_string_int16",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_string_vector_int16",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_string_vector_string",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_string_set_int16",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_string_set_string",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_int32_vector_vector_int16",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_int32_vector_set_int16",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_string_string",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_string_tstring",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0031-test-stl-containers",
                "name": "test_map_int_struct",
                "time": 0.756,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0033-more-interpretations-2",
                "name": "test_awkward_strings",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0033-more-interpretations-2",
                "name": "test_pandas_strings",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0033-more-interpretations-2",
                "name": "test_leaflist_numpy",
                "time": 0.248,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0033-more-interpretations-2",
                "name": "test_leaflist_awkward",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0033-more-interpretations-2",
                "name": "test_leaflist_pandas",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0033-more-interpretations-2",
                "name": "test_fixed_width",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0033-more-interpretations-2",
                "name": "test_fixed_width_awkward",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0033-more-interpretations-2",
                "name": "test_fixed_width_pandas",
                "time": 0.15,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0033-more-interpretations-2",
                "name": "test_fixed_width_pandas_2",
                "time": 0.15,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_histograms_outside_of_ttrees",
                "time": 0.576,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_gohep_nosplit_file",
                "time": 1.665,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_TLorentzVectors_show",
                "time": 0.43,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_TVector2",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_vector_TLorentzVector",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_strided",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_read_strided_TVector2",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_read_strided_TLorentzVector",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_strided_awkward",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_jagged_strided_awkward",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_jagged_awkward_1",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_jagged_awkward_2",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_general_awkward_form",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_jagged_awkward_3",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_string",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_tstring",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_vector_int32",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_vector_string",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_vector_tstring",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_vector_vector_int32",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_vector_vector_string",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_map_int32_int16",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_map_int32_vector_int16",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_map_int32_vector_string",
                "time": 0.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_map_string_int16",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_map_string_vector_string",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_map_int32_vector_vector_int16",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_map_string_string",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_map_string_tstring",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_map_int_struct",
                "time": 0.122,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_awkward_nosplit_file",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_pandas_TVector2",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_pandas_vector_TLorentzVector",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_map_string_TVector3",
                "time": 0.576,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0034-generic-objects-in-ttrees",
                "name": "test_gohep_output_file",
                "time": 0.567,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0035-datatype-generality",
                "name": "test_TH2_in_ttree",
                "time": 0.354,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0035-datatype-generality",
                "name": "test_iofeatures_offsets",
                "time": 0.5,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0038-memberwise-serialization",
                "name": "test_read_efficiency_with_streamer",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0038-memberwise-serialization",
                "name": "test_read_efficiency_without_streamer",
                "time": 0.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0043-iterate-function",
                "name": "test_num_entries_for",
                "time": 0.426,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0043-iterate-function",
                "name": "test_num_entries_for_2",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0043-iterate-function",
                "name": "test_iterate_1",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0043-iterate-function",
                "name": "test_iterate_2",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0043-iterate-function",
                "name": "test_iterate_pandas_1",
                "time": 0.372,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0043-iterate-function",
                "name": "test_iterate_pandas_2",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0043-iterate-function",
                "name": "test_iterate_report_1",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0043-iterate-function",
                "name": "test_iterate_report_2",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0043-iterate-function",
                "name": "test_function_iterate",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0043-iterate-function",
                "name": "test_function_iterate_pandas",
                "time": 1.557,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0043-iterate-function",
                "name": "test_function_iterate_pandas_2",
                "time": 1.709,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0044-concatenate-function",
                "name": "test_concatenate_numpy",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0044-concatenate-function",
                "name": "test_concatenate_awkward",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0044-concatenate-function",
                "name": "test_concatenate_pandas",
                "time": 2.171,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0046-histograms-bh-hist",
                "name": "test_numpy_1d",
                "time": 0.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0046-histograms-bh-hist",
                "name": "test_numpy_2d",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0046-histograms-bh-hist",
                "name": "test_numpy_profile",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0046-histograms-bh-hist",
                "name": "test_boost_1d",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0046-histograms-bh-hist",
                "name": "test_boost_2d",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0046-histograms-bh-hist",
                "name": "test_hist_1d",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0046-histograms-bh-hist",
                "name": "test_hist_2d",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0046-histograms-bh-hist",
                "name": "test_hist_boost_categorical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "could not import 'boost': No module named 'boost'",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0053-parents-should-not-be-bases",
                "name": "test_TRefArray",
                "time": 0.929,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0053-parents-should-not-be-bases",
                "name": "test_awkward_TRefArray",
                "time": 0.408,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0053-parents-should-not-be-bases",
                "name": "test_same_names",
                "time": 0.549,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0058-detach-model-objects-from-files",
                "name": "test_detachment",
                "time": 1.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0058-detach-model-objects-from-files",
                "name": "test_copy",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0058-detach-model-objects-from-files",
                "name": "test_pickle",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0058-detach-model-objects-from-files",
                "name": "test_pickle_boost",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0066-fix-http-fallback-freeze",
                "name": "test",
                "time": 0.329,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0067-common-entry-offsets",
                "name": "test_common_offsets",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0081-dont-parse-colons",
                "name": "test_open",
                "time": 0.854,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0081-dont-parse-colons",
                "name": "test_concatenate",
                "time": 1.716,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0081-dont-parse-colons",
                "name": "test_iterate",
                "time": 1.854,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0081-dont-parse-colons",
                "name": "test_open_colon",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0087-memberwise-splitting-not-implemented-messages",
                "name": "test_issue510b",
                "time": 2.976,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0087-memberwise-splitting-not-implemented-messages",
                "name": "test_issue403",
                "time": 0.615,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0087-memberwise-splitting-not-implemented-messages",
                "name": "test_issue475",
                "time": 0.438,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0088-read-with-http",
                "name": "test_issue176",
                "time": 0.844,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0088-read-with-http",
                "name": "test_issue176_again",
                "time": 0.663,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0088-read-with-http",
                "name": "test_issue121",
                "time": 5.205,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0099-read-from-file-object",
                "name": "test",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0112-fix-pandas-with-cut",
                "name": "test",
                "time": 0.345,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0118-fix-name-fetch-again",
                "name": "test_keys",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0118-fix-name-fetch-again",
                "name": "test_numpy",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0118-fix-name-fetch-again",
                "name": "test_awkward",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0118-fix-name-fetch-again",
                "name": "test_pandas",
                "time": 3.612,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0123-atlas-issues",
                "name": "test_version",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0126-turn-unknown-emptyarrays-into-known-types",
                "name": "test",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0167-use-the-common-histogram-interface",
                "name": "test_axis",
                "time": 0.537,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0167-use-the-common-histogram-interface",
                "name": "test_bins",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0167-use-the-common-histogram-interface",
                "name": "test_boost",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0167-use-the-common-histogram-interface",
                "name": "test_boost_2",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Something's wrong with uproot-issue33.root and boost-histogram",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0167-use-the-common-histogram-interface",
                "name": "test_issue_0722",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0172-allow-allocators-in-vector-typenames",
                "name": "test",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0173-empty-and-multiprocessing-bugs",
                "name": "test_empty",
                "time": 0.243,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0173-empty-and-multiprocessing-bugs",
                "name": "test_multiprocessing",
                "time": 0.393,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0182-complain-about-missing-files",
                "name": "test",
                "time": 0.591,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0194-fix-lost-cuts-in-iterate",
                "name": "test",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0220-contiguous-byte-ranges-in-http",
                "name": "test",
                "time": 0.946,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0228_read-TProfiles",
                "name": "test_read_TProfile2D",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0228_read-TProfiles",
                "name": "test_read_TProfile3D",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_interpretation",
                "time": 0.231,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_values_single[-2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_values_single[-1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_values_single[0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_values_single[1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_values_single[x]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_values_single[y]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[low--2]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[low--1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[low-0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[low-1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[low-x]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[low-y]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[high--2]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[high--1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[high-0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[high-1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[high-x]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[high-y]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[mean--2]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[mean--1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[mean-0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[mean-1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[mean-x]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[mean-y]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[diff--2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[diff--1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[diff-0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[diff-1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[diff-x]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_single[diff-y]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_values_double[both]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_double[low-both]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_double[high-both]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_double[mean-both]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0240-read_TGraphAsymmErrors",
                "name": "test_errors_double[diff-both]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0278-specializations-for-TParameter",
                "name": "test",
                "time": 0.418,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0278-specializations-for-TParameter",
                "name": "test_issue_707",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0302-pickle",
                "name": "test_pickle_roundtrip_mmap",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0302-pickle",
                "name": "test_pickle_roundtrip_http",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0302-pickle",
                "name": "test_pickle_roundtrip_xrootd",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0303-empty-jagged-array",
                "name": "test_numpy",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0303-empty-jagged-array",
                "name": "test_awkward",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0325-fix-windows-file-uris",
                "name": "test_windows_drive_letters",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Drive letters only parsed on Windows.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0325-fix-windows-file-uris",
                "name": "test_escaped_uri_codes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0335-empty-ttree-division-by-zero",
                "name": "test",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0350-read-RooCurve-RooHist",
                "name": "test_interpretation",
                "time": 0.432,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0350-read-RooCurve-RooHist",
                "name": "test_to_boost",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0350-read-RooCurve-RooHist",
                "name": "test_interpolate",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0351-write-TList",
                "name": "test_write_empty",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0351-write-TList",
                "name": "test_write_single_key",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0351-write-TList",
                "name": "test_write_nested",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0352-write-THashList",
                "name": "test_write_compare_tlist",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0398-dimensions-in-leaflist",
                "name": "test",
                "time": 0.245,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0407-read-TDatime",
                "name": "test_streamer[foo]",
                "time": 0.28,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0407-read-TDatime",
                "name": "test_streamer[foo_padded]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0407-read-TDatime",
                "name": "test_strided_interpretation",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0418-read-TTable",
                "name": "test_geant_dot_root",
                "time": 0.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0430-global_index-for-tuples-of-DataFrames",
                "name": "test",
                "time": 0.473,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0438-TClonesArray-is-not-AsGrouped",
                "name": "test",
                "time": 0.627,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0439-check-awkward-before-numpy",
                "name": "test",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0442-regular-TClonesArray",
                "name": "test_read_delphes_np",
                "time": 2.627,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0442-regular-TClonesArray",
                "name": "test_read_delphes_ak",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0484-manually-add-model-for-TMatrixTSym_double_",
                "name": "test",
                "time": 0.23,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0487-implement-asdtypeinplace",
                "name": "test_inplace_tbranch_array",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0487-implement-asdtypeinplace",
                "name": "test_inplace_ttree_arrays",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0519-remove-memmap-copy",
                "name": "test",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0520-dynamic-classes-cant-be-abc-subclasses",
                "name": "test",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0569-fBits-is-4-bytes",
                "name": "test",
                "time": 0.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0578-dask-for-numpy",
                "name": "test_single_dask_array",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0578-dask-for-numpy",
                "name": "test_dask_concatenation",
                "time": 0.738,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0578-dask-for-numpy",
                "name": "test_multidim_array",
                "time": 0.618,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0578-dask-for-numpy",
                "name": "test_chunking_single_num",
                "time": 0.198,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0578-dask-for-numpy",
                "name": "test_chunking_single_string",
                "time": 0.404,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0578-dask-for-numpy",
                "name": "test_chunking_multiple_num",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0578-dask-for-numpy",
                "name": "test_chunking_multiple_string",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0580-round-trip-for-no-flow-histograms",
                "name": "test_no_flow",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0580-round-trip-for-no-flow-histograms",
                "name": "test_yes_flow",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0589-explicitly-interpret-RVec-type",
                "name": "test_numpy",
                "time": 0.347,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0589-explicitly-interpret-RVec-type",
                "name": "test_awkward",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0603-dask-delayed-open",
                "name": "test_single_delay_open",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0603-dask-delayed-open",
                "name": "test_multiple_delay_open",
                "time": 0.136,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0603-dask-delayed-open",
                "name": "test_supplied_steps[np-False]",
                "time": 0.199,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0603-dask-delayed-open",
                "name": "test_supplied_steps[np-True]",
                "time": 0.449,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0603-dask-delayed-open",
                "name": "test_supplied_steps[ak-False]",
                "time": 0.197,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0603-dask-delayed-open",
                "name": "test_supplied_steps[ak-True]",
                "time": 0.135,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0609-num-enteries-func",
                "name": "test_num_entries_single",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0609-num-enteries-func",
                "name": "test_num_entries_multiple",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0609-num-enteries-func",
                "name": "test_num_entries_as_iterator",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0609-num-enteries-func",
                "name": "test_dict_input",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_strings",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_tstring",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_vector_int32",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_vector_string",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_vector_string_forth",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_array_tref_array_forth",
                "time": 1.239,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_array_tvector2_array_forth",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_vector_tstring",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_vector_vector_int32",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_vector_vector_string",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_vector_vector_tstring",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_set_int32",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_vector_set_int32",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_vector_set_string",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_set_string",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_map_int32_int16",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_map_int32_vector_int16",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_map_int32_vector_string",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_map_int32_set_int16",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_map_int32_set_string",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_map_string_int16",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_map_string_vector_int16",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_map_string_vector_string",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_map_string_set_int16",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_map_string_set_string",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_map_int32_vector_vector_int16",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_map_string_string",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0610-awkward-form",
                "name": "test_awkward_map_string_tstring",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0630-rntuple-basics",
                "name": "test_flat",
                "time": 0.592,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0630-rntuple-basics",
                "name": "test_jagged",
                "time": 0.232,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_00[False]",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_00[True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_01[False]",
                "time": 1.496,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_01[True]",
                "time": 1.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_02[False]",
                "time": 1.644,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_02[True]",
                "time": 1.218,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_03[False]",
                "time": 3.37,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_03[True]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_04[False]",
                "time": 0.997,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_04[True]",
                "time": 0.193,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_05",
                "time": 1.895,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_06[False]",
                "time": 1.447,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_06[True]",
                "time": 0.819,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_07[False]",
                "time": 1.627,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_07[True]",
                "time": 0.82,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_08",
                "time": 1.429,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_09[False]",
                "time": 1.522,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_09[True]",
                "time": 2.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_10[False]",
                "time": 0.798,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_10[True]",
                "time": 2.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_11[False]",
                "time": 0.97,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_11[True]",
                "time": 1.713,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_12[False]",
                "time": 1.384,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_12[True]",
                "time": 1.587,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_13[False]",
                "time": 0.908,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_13[True]",
                "time": 2.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_14[False]",
                "time": 0.856,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_14[True]",
                "time": 1.598,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_15[False]",
                "time": 1.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_15[True]",
                "time": 1.356,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_16[False]",
                "time": 1.686,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_16[True]",
                "time": 0.87,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_17[False]",
                "time": 0.448,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_17[True]",
                "time": 0.212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_18[False]",
                "time": 0.892,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_18[True]",
                "time": 0.148,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_19[False]",
                "time": 0.152,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_19[True]",
                "time": 0.155,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_20[False]",
                "time": 0.143,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_20[True]",
                "time": 0.144,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_21[False]",
                "time": 0.14,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_21[True]",
                "time": 0.131,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_22[False]",
                "time": 0.122,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_22[True]",
                "time": 0.114,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_23[False]",
                "time": 0.14,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_23[True]",
                "time": 0.137,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_24[False]",
                "time": 0.117,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_24[True]",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_25[False]",
                "time": 1.806,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_25[True]",
                "time": 0.184,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_26",
                "time": 0.186,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_27[False]",
                "time": 0.197,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_27[True]",
                "time": 0.194,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_28[False]",
                "time": 0.205,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_28[True]",
                "time": 0.199,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_29",
                "time": 1.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_30[False]",
                "time": 0.563,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_30[True]",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_31[False]",
                "time": 1.341,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_31[True]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_32[False]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_32[True]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_33[False]",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_33[True]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_34[False]",
                "time": 0.729,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_34[True]",
                "time": 0.195,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_35[False]",
                "time": 0.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_35[True]",
                "time": 0.283,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_36[False]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_36[True]",
                "time": 0.279,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_37[False]",
                "time": 0.574,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_37[True]",
                "time": 0.662,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_38[False]",
                "time": 2.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_38[True]",
                "time": 1.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_39[False]",
                "time": 0.646,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_39[True]",
                "time": 0.289,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_40[False]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_40[True]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_41[False]",
                "time": 0.605,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_41[True]",
                "time": 1.224,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_42[False]",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_42[True]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_43[False]",
                "time": 0.32,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_43[True]",
                "time": 0.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_44[False]",
                "time": 0.714,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_44[True]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_45",
                "time": 1.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_46",
                "time": 0.805,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_47[False]",
                "time": 0.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_47[True]",
                "time": 0.322,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_48",
                "time": 0.207,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_49",
                "time": 1.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_50",
                "time": 1.477,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_51[False]",
                "time": 0.147,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_51[True]",
                "time": 0.146,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_52[False]",
                "time": 0.529,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_52[True]",
                "time": 0.41,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_53[False]",
                "time": 0.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_53[True]",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_54[False]",
                "time": 0.492,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_54[True]",
                "time": 0.386,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_55[False]",
                "time": 0.302,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_55[True]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_56[False]",
                "time": 1.637,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_56[True]",
                "time": 0.144,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_57[False]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_57[True]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_58[False]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_58[True]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_59[False]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_59[True]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_60[False]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_60[True]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_61[False]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_61[True]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_62[False]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_62[True]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_63[False]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_63[True]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_64[False]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_64[True]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_65[False]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_65[True]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_66[False]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_66[True]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_67[False]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_67[True]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_68[False]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_68[True]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_69[False]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_69[True]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_70[False]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_70[True]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_71[False]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_71[True]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_72[False]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_72[True]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_73[False]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_73[True]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_74[False]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_74[True]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_75[False]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_75[True]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_76[False]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_76[True]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_77[False]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_77[True]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_78[False]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_78[True]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_79[False]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_79[True]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_80[False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_80[True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_81[False]",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0637-setup-tests-for-AwkwardForth",
                "name": "test_81[True]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0643-reading-vector-pair-TLorentzVector-int",
                "name": "test_numpy",
                "time": 0.658,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0643-reading-vector-pair-TLorentzVector-int",
                "name": "test_awkward",
                "time": 0.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0651-implement-transformed-axis",
                "name": "test",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0662-rntuple-stl-containers",
                "name": "test_rntuple_stl_containers",
                "time": 0.368,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0705-rntuple-writing-metadata",
                "name": "test_header",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0705-rntuple-writing-metadata",
                "name": "test_writable",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0750-avoid-empty-TBasket-issue",
                "name": "test",
                "time": 0.351,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0755-dask-awkward-column-projection",
                "name": "test_column_projection_sanity_check",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0791-protect-uproot-project_columns-from-dask-node-names",
                "name": "test",
                "time": 1.19,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0798_DAOD_PHYSLITE",
                "name": "test_AnalysisJetsAuxDyn_GhostTrack[False]",
                "time": 2.49,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0798_DAOD_PHYSLITE",
                "name": "test_AnalysisJetsAuxDyn_GhostTrack[True]",
                "time": 1.674,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0798_DAOD_PHYSLITE",
                "name": "test_TruthBosonAuxDyn_childLinks[False]",
                "time": 2.173,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0798_DAOD_PHYSLITE",
                "name": "test_TruthBosonAuxDyn_childLinks[True]",
                "time": 1.597,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0798_DAOD_PHYSLITE",
                "name": "test_TruthPhotonsAuxDyn_parentLinks[False]",
                "time": 1.846,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0798_DAOD_PHYSLITE",
                "name": "test_TruthPhotonsAuxDyn_parentLinks[True]",
                "time": 1.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0798_DAOD_PHYSLITE",
                "name": "test_TruthTopAuxDyn_parentLinks[False]",
                "time": 1.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0798_DAOD_PHYSLITE",
                "name": "test_TruthTopAuxDyn_parentLinks[True]",
                "time": 2.312,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0808-fix_awkward_form_for_AsStridedObjects",
                "name": "test",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0816-separate-AwkwardForth-machines-by-TBranch",
                "name": "test[False]",
                "time": 0.558,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0816-separate-AwkwardForth-machines-by-TBranch",
                "name": "test[True]",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0832-ak_add_doc-should-also-add-to-typetracer",
                "name": "test",
                "time": 2.566,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0852-fix-strided-interp-extra-offsets",
                "name": "test_xyz_vector_with_headers",
                "time": 0.595,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0870-writing-arrays-of-type-unknown-fix-822",
                "name": "test_writing_ak_arrays_of_type_unknown",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_0886-fix-awkward-form-breadcrumbs",
                "name": "test_fix_awkward_form_breadcrumbs",
                "time": 0.49,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/build        ] \ud83d\udea7  Skipping unsupported platform -- Try running with `-P =...`\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build] \ud83d\ude80  Start image=crawlergpt:latest\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/scikit-hep-uproot5] user=0 workdir=\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build] \ud83e\uddea  Matrix: map[platform:ubuntu-latest python-version:3.11]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build] \u2b50 Run Main actions/checkout@v3\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2705  Success - Main actions/checkout@v3\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build] \u2b50 Run Main actions/setup-python@v4\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udc33  docker cp src=/tmp/act-cache/2dca8c21-7bf6-4970-a9ab-bca7a343c533/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2753  ::group::Installed versions\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::Semantic version spec of 3.11 is 3.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: \n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? false\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? true\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? true\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? true\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? true\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? true\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? true\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::match not found\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Version 3.11 was not found in the local cache\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::set auth\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::arm64===x64 && darwin===linux\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::matched 3.11.4\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Version 3.11 is available for downloading\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Download from \"https://github.com/actions/python-versions/releases/download/3.11.4-5199054971/python-3.11.4-linux-20.04-x64.tar.gz\"\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.11.4-5199054971/python-3.11.4-linux-20.04-x64.tar.gz\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::Destination /tmp/325217da-187b-4258-af31-cc2b70dc9521\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::set auth\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::download complete\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Extract downloaded archive\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::Checking tar --version\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/be674484-3e19-46d7-9108-f59eaa6c0e0c -f /tmp/325217da-187b-4258-af31-cc2b70dc9521\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Execute installation script\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Check if Python hostedtoolcache folder exist...\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Create Python 3.11.4 folder\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Copy Python binaries to hostedtoolcache folder\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Upgrading pip...\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Looking in links: /tmp/tmpl5hcb31u\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (65.5.0)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (23.1.2)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting pip\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 15.6 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | \n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Installing collected packages: pip\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Successfully installed pip-23.1.2\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Create complete file\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: \n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? false\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? true\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: 3.11.4\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? true\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? true\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? true\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? true\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? true\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::explicit? true\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::evaluating 7 versions\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::matched: 3.11.4\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.11.4/x64\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.11.4 x64\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Successfully set up CPython (3.11.4)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2753  ::endgroup::\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2705  Success - Main actions/setup-python@v4\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.11.4/x64/lib\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.11.4/x64\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.11.4/x64/lib/pkgconfig\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2699  ::set-output:: python-version=3.11.4\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.11.4/x64/bin/python\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.11.4/x64\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.11.4/x64/bin\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build] \u2b50 Run Main Pip install the package\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Processing /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/scikit-hep-uproot5\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Installing build dependencies: started\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Installing build dependencies: finished with status 'done'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Getting requirements to build wheel: started\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Getting requirements to build wheel: finished with status 'done'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Preparing metadata (pyproject.toml): started\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting awkward>=2.0.0 (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading awkward-2.2.4-py3-none-any.whl (622 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 622.8/622.8 kB 9.2 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting numpy (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading numpy-1.25.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.6 MB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.6/17.6 MB 23.5 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting packaging (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Using cached packaging-23.1-py3-none-any.whl (48 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting awkward-pandas (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading awkward_pandas-2022.12a1-py3-none-any.whl (10 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting boost-histogram>=0.13 (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading boost_histogram-1.3.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.4 MB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.4/1.4 MB 10.9 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting dask-awkward>=2022.12a3 (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading dask_awkward-2023.6.3-py3-none-any.whl (60 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 60.6/60.6 kB 1.9 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting dask[array] (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading dask-2023.6.1-py3-none-any.whl (1.2 MB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.2/1.2 MB 4.0 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting hist>=1.2 (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading hist-2.6.3-py3-none-any.whl (36 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting pandas (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading pandas-2.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.2 MB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 12.2/12.2 MB 33.1 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting lz4 (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading lz4-4.3.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.3/1.3 MB 11.4 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting pytest-rerunfailures (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading pytest_rerunfailures-11.1.2-py3-none-any.whl (12 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting pytest-timeout (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading pytest_timeout-2.1.0-py3-none-any.whl (12 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting pytest>=6 (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 16.3 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting requests (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 8.5 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting scikit-hep-testdata (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading scikit_hep_testdata-0.4.31-py3-none-any.whl (12 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting xxhash (from uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading xxhash-3.2.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (213 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 213.2/213.2 kB 11.5 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting awkward-cpp==17 (from awkward>=2.0.0->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading awkward_cpp-17-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.0 MB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.0/1.0 MB 31.9 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting histoprint>=2.2.0 (from hist>=1.2->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading histoprint-2.4.0-py3-none-any.whl (16 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting iniconfig (from pytest>=6->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting pluggy<2.0,>=0.12 (from pytest>=6->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Using cached pluggy-1.2.0-py3-none-any.whl (17 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting python-dateutil>=2.8.2 (from pandas->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 7.0 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting pytz>=2020.1 (from pandas->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 22.1 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting tzdata>=2022.1 (from pandas->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading tzdata-2023.3-py2.py3-none-any.whl (341 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 341.8/341.8 kB 22.0 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting click>=8.0 (from dask[array]->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 96.6/96.6 kB 1.6 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting cloudpickle>=1.5.0 (from dask[array]->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading cloudpickle-2.2.1-py3-none-any.whl (25 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting fsspec>=2021.09.0 (from dask[array]->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading fsspec-2023.6.0-py3-none-any.whl (163 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 163.8/163.8 kB 4.3 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting partd>=1.2.0 (from dask[array]->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading partd-1.4.0-py3-none-any.whl (18 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting pyyaml>=5.3.1 (from dask[array]->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading PyYAML-6.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (757 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 757.9/757.9 kB 21.6 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting toolz>=0.10.0 (from dask[array]->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading toolz-0.12.0-py3-none-any.whl (55 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 55.8/55.8 kB 3.1 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting importlib-metadata>=4.13.0 (from dask[array]->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting charset-normalizer<4,>=2 (from requests->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading charset_normalizer-3.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (197 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 197.3/197.3 kB 6.2 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting idna<4,>=2.5 (from requests->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 2.9 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting urllib3<3,>=1.21.1 (from requests->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 2.2 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting certifi>=2017.4.17 (from requests->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 15.7 MB/s eta 0:00:00\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting uhi>=0.2.1 (from histoprint>=2.2.0->hist>=1.2->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading uhi-0.3.3-py3-none-any.whl (11 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting zipp>=0.5 (from importlib-metadata>=4.13.0->dask[array]->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting locket (from partd>=1.2.0->dask[array]->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading locket-1.0.0-py2.py3-none-any.whl (4.4 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Collecting six>=1.5 (from python-dateutil>=2.8.2->pandas->uproot==5.0.9)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Building wheels for collected packages: uproot\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Building wheel for uproot (pyproject.toml): started\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Building wheel for uproot (pyproject.toml): finished with status 'done'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Created wheel for uproot: filename=uproot-5.0.9-py3-none-any.whl size=332867 sha256=ad50d0078984c826fcefcd0a82c0712873d433e16e08fcb6b8fed7250de62b4b\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/bc/6d/86/23891a0108a874d991afef918c03b7992236112b6d22a1c89e\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Successfully built uproot\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Installing collected packages: pytz, zipp, xxhash, urllib3, tzdata, toolz, six, pyyaml, pluggy, packaging, numpy, lz4, locket, iniconfig, idna, fsspec, cloudpickle, click, charset-normalizer, certifi, uhi, requests, python-dateutil, pytest, partd, importlib-metadata, boost-histogram, awkward-cpp, scikit-hep-testdata, pytest-timeout, pytest-rerunfailures, pandas, histoprint, dask, awkward, uproot, hist, dask-awkward, awkward-pandas\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Successfully installed awkward-2.2.4 awkward-cpp-17 awkward-pandas-2022.12a1 boost-histogram-1.3.2 certifi-2023.5.7 charset-normalizer-3.1.0 click-8.1.3 cloudpickle-2.2.1 dask-2023.6.1 dask-awkward-2023.6.3 fsspec-2023.6.0 hist-2.6.3 histoprint-2.4.0 idna-3.4 importlib-metadata-6.7.0 iniconfig-2.0.0 locket-1.0.0 lz4-4.3.2 numpy-1.25.0 packaging-23.1 pandas-2.0.2 partd-1.4.0 pluggy-1.2.0 pytest-7.4.0 pytest-rerunfailures-11.1.2 pytest-timeout-2.1.0 python-dateutil-2.8.2 pytz-2023.3 pyyaml-6.0 requests-2.31.0 scikit-hep-testdata-0.4.31 six-1.16.0 toolz-0.12.0 tzdata-2023.3 uhi-0.3.3 uproot-5.0.9 urllib3-2.0.3 xxhash-3.2.0 zipp-3.15.0\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2705  Success - Main Pip install the package\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build] \u2b50 Run Main Run pytest\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | ============================= test session starts ==============================\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0 -- /opt/hostedtoolcache/Python/3.11.4/x64/bin/python\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | cachedir: .pytest_cache\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/scikit-hep-uproot5\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | configfile: pyproject.toml\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | plugins: rerunfailures-11.1.2, timeout-2.1.0\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | timeout: 600.0s\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | timeout method: signal\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | timeout func_only: False\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | collecting ... collected 553 items / 25 skipped\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | \n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_file PASSED                        [  0%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_file_fail PASSED                   [  0%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_memmap PASSED                      [  0%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_memmap_fail PASSED                 [  0%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_http SKIPPED (RECHECK: example.com\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | is flaky, too)                                                           [  0%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_http_port SKIPPED (RECHECK:\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | example.com is flaky, too)                                               [  1%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_http_size PASSED                   [  1%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_http_size_port PASSED              [  1%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_http_fail PASSED                   [  1%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_no_multipart PASSED                [  1%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_no_multipart_fail PASSED           [  1%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_fallback PASSED                    [  2%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_xrootd SKIPPED (RECHECK:\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Run2012B_DoubleMuParked.root is super-flaky right now)                   [  2%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_xrootd_deadlock SKIPPED (RECHECK:\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Run2012B_DoubleMuParked.root is super-flaky right now)                   [  2%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_xrootd_fail SKIPPED (could not\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | import 'XRootD': No module named 'XRootD')                               [  2%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_xrootd_vectorread SKIPPED)         [  2%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_xrootd_vectorread_max_element_split SKIPPED [  3%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_xrootd_vectorread_max_element_split_consistency SKIPPED [  3%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_xrootd_vectorread_fail SKIPPED     [  3%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_xrootd_size SKIPPED (RECHECK:\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Run2012B_DoubleMuParked.root is super-flaky right now)                   [  3%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_xrootd_numpy_int SKIPPED (RECHECK:\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Run2012B_DoubleMuParked.root is super-flaky right now)                   [  3%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0001-source-class.py::test_cursor_debug PASSED                [  3%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0006-notify-when-downloaded.py::test_file PASSED              [  4%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0006-notify-when-downloaded.py::test_file_workers PASSED      [  4%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0006-notify-when-downloaded.py::test_memmap PASSED            [  4%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0006-notify-when-downloaded.py::test_http_multipart SKIPPED   [  4%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0006-notify-when-downloaded.py::test_http SKIPPED (RECHECK:\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | example.com is flaky, too)                                               [  4%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0006-notify-when-downloaded.py::test_http_workers SKIPPED     [  5%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0006-notify-when-downloaded.py::test_http_fallback PASSED     [  5%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0006-notify-when-downloaded.py::test_http_fallback_workers PASSED [  5%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0006-notify-when-downloaded.py::test_xrootd SKIPPED (RECHECK:\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Run2012B_DoubleMuParked.root is super-flaky right now)                   [  5%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0006-notify-when-downloaded.py::test_xrootd_workers SKIPPED   [  5%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0006-notify-when-downloaded.py::test_xrootd_vectorread SKIPPED [  5%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0007-single-chunk-interface.py::test_file PASSED              [  6%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0007-single-chunk-interface.py::test_memmap PASSED            [  6%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0007-single-chunk-interface.py::test_http SKIPPED (RECHECK:\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | example.com is flaky, too)                                               [  6%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0007-single-chunk-interface.py::test_http_fail PASSED         [  6%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0007-single-chunk-interface.py::test_http_multipart SKIPPED   [  6%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0007-single-chunk-interface.py::test_http_multipart_fail PASSED [  7%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0007-single-chunk-interface.py::test_xrootd SKIPPED (RECHECK:\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | Run2012B_DoubleMuParked.root is super-flaky right now)                   [  7%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0007-single-chunk-interface.py::test_xrootd_worker SKIPPED    [  7%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0007-single-chunk-interface.py::test_xrootd_vectorread SKIPPED [  7%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0008-start-interpretation.py::test_classname_encoding PASSED  [  7%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0008-start-interpretation.py::test_file_header PASSED         [  7%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0009-nested-directories.py::test PASSED                       [  8%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0010-start-streamers.py::test PASSED                          [  8%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0011-generate-classes-from-streamers.py::test PASSED          [  8%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0013-rntuple-anchor.py::test PASSED                           [  8%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0014-all-ttree-versions.py::test_streamerless_read PASSED     [  8%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0014-all-ttree-versions.py::test_list_streamers PASSED        [  9%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0016-interpretations.py::test_get_key PASSED                  [  9%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0016-interpretations.py::test_basket_data PASSED              [  9%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0016-interpretations.py::test_compressed PASSED               [  9%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0016-interpretations.py::test_read_all PASSED                 [  9%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0016-interpretations.py::test_recovery[False] PASSED          [  9%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0016-interpretations.py::test_recovery[True] PASSED           [ 10%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_any_basket PASSED [ 10%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_stitching_arrays PASSED [ 10%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_names_entries_to_ranges_or_baskets PASSED [ 10%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_ranges_or_baskets_to_arrays PASSED [ 10%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_branch_array_1[MultithreadedFileSource] PASSED [ 11%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_branch_array_1[MemmapSource] PASSED [ 11%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_branch_array_2[MultithreadedFileSource] PASSED [ 11%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_branch_array_2[MemmapSource] PASSED [ 11%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_branch_array_3[MultithreadedFileSource] PASSED [ 11%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_branch_array_3[MemmapSource] PASSED [ 11%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_branch_array_4[MultithreadedFileSource] PASSED [ 12%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_branch_array_4[MemmapSource] PASSED [ 12%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_cache PASSED    [ 12%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0017-multi-basket-multi-branch-fetch.py::test_pandas PASSED   [ 12%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0018-array-fetching-interface.py::test_leaf_interpretation PASSED [ 12%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0018-array-fetching-interface.py::test_compute PASSED         [ 13%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0018-array-fetching-interface.py::test_arrays PASSED          [ 13%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0018-array-fetching-interface.py::test_jagged PASSED          [ 13%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0018-array-fetching-interface.py::test_jagged_awkward PASSED  [ 13%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0018-array-fetching-interface.py::test_jagged_pandas PASSED   [ 13%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0018-array-fetching-interface.py::test_stl_vector PASSED      [ 13%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0018-array-fetching-interface.py::test_pandas_merge PASSED    [ 14%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0022-number-of-branches.py::test_branchname PASSED            [ 14%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0022-number-of-branches.py::test_tuple_branchname PASSED      [ 14%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0022-number-of-branches.py::test_interpretation PASSED        [ 14%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0022-number-of-branches.py::test_compute PASSED               [ 14%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0022-number-of-branches.py::test_cut PASSED                   [ 15%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0022-number-of-branches.py::test_aliases PASSED               [ 15%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0022-number-of-branches.py::test_jagged PASSED                [ 15%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-more-interpretations-1.py::test_formula_with_dot PASSED  [ 15%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-more-interpretations-1.py::test_formula_with_slash PASSED [ 15%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-more-interpretations-1.py::test_formula_with_missing PASSED [ 15%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-more-interpretations-1.py::test_strings1 PASSED          [ 16%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-more-interpretations-1.py::test_strings4 PASSED          [ 16%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-more-interpretations-1.py::test_double32 PASSED          [ 16%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-more-interpretations-1.py::test_double32_2 PASSED        [ 16%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-more-interpretations-1.py::test_double32_3 PASSED        [ 16%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-more-interpretations-1.py::test_double32_float16 PASSED  [ 16%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[5.23.02] PASSED                  [ 17%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[5.24.00] PASSED                  [ 17%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[5.25.02] PASSED                  [ 17%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[5.26.00] PASSED                  [ 17%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[5.27.02] PASSED                  [ 17%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[5.28.00] PASSED                  [ 18%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[5.29.02] PASSED                  [ 18%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[5.30.00] PASSED                  [ 18%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[6.08.04] PASSED                  [ 18%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[6.10.05] PASSED                  [ 18%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[6.14.00] PASSED                  [ 18%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[6.16.00] PASSED                  [ 19%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[6.18.00] PASSED                  [ 19%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0023-ttree-versions.py::test[6.20.04] PASSED                  [ 19%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0028-fallback-to-read-streamer.py::test_fallback_reading PASSED [ 19%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0029-more-string-types.py::test_parse_typename PASSED         [ 19%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0029-more-string-types.py::test_strings1 PASSED               [ 20%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0029-more-string-types.py::test_map_string_string_in_object PASSED [ 20%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0029-more-string-types.py::test_map_long_int_in_object PASSED [ 20%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0029-more-string-types.py::test_top_level_vectors PASSED      [ 20%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0029-more-string-types.py::test_strings2 PASSED               [ 20%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0029-more-string-types.py::test_strings3 PASSED               [ 20%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_nonmemberwise_asmap SKIPPED>)) [ 21%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_typename PASSED             [ 21%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_string PASSED               [ 21%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_tstring PASSED              [ 21%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_vector_int32 PASSED         [ 21%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_vector_string PASSED        [ 22%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_vector_tstring PASSED       [ 22%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_vector_vector_int32 PASSED  [ 22%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_vector_vector_string PASSED [ 22%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_vector_set_int32 PASSED     [ 22%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_vector_set_string PASSED    [ 22%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_set_int32 PASSED            [ 23%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_set_string PASSED           [ 23%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_int32_int16 PASSED      [ 23%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_int32_vector_int16 PASSED [ 23%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_int32_vector_string PASSED [ 23%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_int32_set_int16 PASSED  [ 24%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_int32_set_string PASSED [ 24%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_string_int16 PASSED     [ 24%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_string_vector_int16 PASSED [ 24%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_string_vector_string PASSED [ 24%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_string_set_int16 PASSED [ 24%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_string_set_string PASSED [ 25%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_int32_vector_vector_int16 PASSED [ 25%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_int32_vector_set_int16 PASSED [ 25%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_string_string PASSED    [ 25%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_string_tstring PASSED   [ 25%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0031-test-stl-containers.py::test_map_int_struct PASSED       [ 26%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0033-more-interpretations-2.py::test_awkward_strings PASSED   [ 26%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0033-more-interpretations-2.py::test_pandas_strings PASSED    [ 26%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0033-more-interpretations-2.py::test_leaflist_numpy PASSED    [ 26%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0033-more-interpretations-2.py::test_leaflist_awkward PASSED  [ 26%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0033-more-interpretations-2.py::test_leaflist_pandas PASSED   [ 26%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0033-more-interpretations-2.py::test_fixed_width PASSED       [ 27%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0033-more-interpretations-2.py::test_fixed_width_awkward PASSED [ 27%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0033-more-interpretations-2.py::test_fixed_width_pandas PASSED [ 27%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0033-more-interpretations-2.py::test_fixed_width_pandas_2 PASSED [ 27%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_histograms_outside_of_ttrees PASSED [ 27%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_gohep_nosplit_file PASSED [ 28%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_TLorentzVectors_show PASSED [ 28%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_TVector2 PASSED       [ 28%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_vector_TLorentzVector PASSED [ 28%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_strided PASSED        [ 28%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_read_strided_TVector2 PASSED [ 28%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_read_strided_TLorentzVector PASSED [ 29%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_strided_awkward PASSED [ 29%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_jagged_strided_awkward PASSED [ 29%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_jagged_awkward_1 PASSED [ 29%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_jagged_awkward_2 PASSED [ 29%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_general_awkward_form PASSED [ 30%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_jagged_awkward_3 PASSED [ 30%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_string PASSED [ 30%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_tstring PASSED [ 30%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_vector_int32 PASSED [ 30%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_vector_string PASSED [ 30%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_vector_tstring PASSED [ 31%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_vector_vector_int32 PASSED [ 31%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_vector_vector_string PASSED [ 31%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_map_int32_int16 PASSED [ 31%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_map_int32_vector_int16 PASSED [ 31%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_map_int32_vector_string PASSED [ 32%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_map_string_int16 PASSED [ 32%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_map_string_vector_string PASSED [ 32%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_map_int32_vector_vector_int16 PASSED [ 32%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_map_string_string PASSED [ 32%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_map_string_tstring PASSED [ 32%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_map_int_struct PASSED [ 33%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_awkward_nosplit_file PASSED [ 33%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_pandas_TVector2 PASSED [ 33%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_pandas_vector_TLorentzVector PASSED [ 33%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_map_string_TVector3 PASSED [ 33%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0034-generic-objects-in-ttrees.py::test_gohep_output_file PASSED [ 33%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0035-datatype-generality.py::test_TH2_in_ttree PASSED         [ 34%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0035-datatype-generality.py::test_iofeatures_offsets PASSED   [ 34%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0038-memberwise-serialization.py::test_read_efficiency_with_streamer PASSED [ 34%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0038-memberwise-serialization.py::test_read_efficiency_without_streamer PASSED [ 34%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0043-iterate-function.py::test_num_entries_for PASSED         [ 34%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0043-iterate-function.py::test_num_entries_for_2 PASSED       [ 35%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0043-iterate-function.py::test_iterate_1 PASSED               [ 35%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0043-iterate-function.py::test_iterate_2 PASSED               [ 35%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0043-iterate-function.py::test_iterate_pandas_1 PASSED        [ 35%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0043-iterate-function.py::test_iterate_pandas_2 PASSED        [ 35%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0043-iterate-function.py::test_iterate_report_1 PASSED        [ 35%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0043-iterate-function.py::test_iterate_report_2 PASSED        [ 36%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0043-iterate-function.py::test_function_iterate PASSED        [ 36%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0043-iterate-function.py::test_function_iterate_pandas PASSED [ 36%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0043-iterate-function.py::test_function_iterate_pandas_2 PASSED [ 36%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0044-concatenate-function.py::test_concatenate_numpy PASSED   [ 36%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0044-concatenate-function.py::test_concatenate_awkward PASSED [ 37%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0044-concatenate-function.py::test_concatenate_pandas PASSED  [ 37%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0046-histograms-bh-hist.py::test_numpy_1d PASSED              [ 37%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0046-histograms-bh-hist.py::test_numpy_2d PASSED              [ 37%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0046-histograms-bh-hist.py::test_numpy_profile PASSED         [ 37%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0046-histograms-bh-hist.py::test_boost_1d PASSED              [ 37%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0046-histograms-bh-hist.py::test_boost_2d PASSED              [ 38%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0046-histograms-bh-hist.py::test_hist_1d PASSED               [ 38%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0046-histograms-bh-hist.py::test_hist_2d PASSED               [ 38%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0046-histograms-bh-hist.py::test_hist_boost_categorical SKIPPED [ 38%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0053-parents-should-not-be-bases.py::test_TRefArray PASSED    [ 38%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0053-parents-should-not-be-bases.py::test_awkward_TRefArray PASSED [ 39%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0053-parents-should-not-be-bases.py::test_same_names PASSED   [ 39%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0058-detach-model-objects-from-files.py::test_detachment PASSED [ 39%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0058-detach-model-objects-from-files.py::test_copy PASSED     [ 39%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0058-detach-model-objects-from-files.py::test_pickle PASSED   [ 39%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0058-detach-model-objects-from-files.py::test_pickle_boost PASSED [ 39%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0066-fix-http-fallback-freeze.py::test PASSED                 [ 40%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0067-common-entry-offsets.py::test_common_offsets PASSED      [ 40%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0081-dont-parse-colons.py::test_open PASSED                   [ 40%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0081-dont-parse-colons.py::test_concatenate PASSED            [ 40%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0081-dont-parse-colons.py::test_iterate PASSED                [ 40%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0081-dont-parse-colons.py::test_open_colon PASSED             [ 41%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0087-memberwise-splitting-not-implemented-messages.py::test_issue510b PASSED [ 41%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0087-memberwise-splitting-not-implemented-messages.py::test_issue403 PASSED [ 41%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0087-memberwise-splitting-not-implemented-messages.py::test_issue475 PASSED [ 41%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0088-read-with-http.py::test_issue176 PASSED                  [ 41%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0088-read-with-http.py::test_issue176_again PASSED            [ 41%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0088-read-with-http.py::test_issue121 PASSED                  [ 42%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0099-read-from-file-object.py::test PASSED                    [ 42%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0112-fix-pandas-with-cut.py::test PASSED                      [ 42%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0118-fix-name-fetch-again.py::test_keys PASSED                [ 42%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0118-fix-name-fetch-again.py::test_numpy PASSED               [ 42%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0118-fix-name-fetch-again.py::test_awkward PASSED             [ 43%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0118-fix-name-fetch-again.py::test_pandas PASSED              [ 43%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0123-atlas-issues.py::test_version PASSED                     [ 43%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0126-turn-unknown-emptyarrays-into-known-types.py::test PASSED [ 43%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0167-use-the-common-histogram-interface.py::test_axis PASSED  [ 43%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0167-use-the-common-histogram-interface.py::test_bins PASSED  [ 43%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0167-use-the-common-histogram-interface.py::test_boost PASSED [ 44%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0167-use-the-common-histogram-interface.py::test_boost_2 SKIPPED [ 44%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0167-use-the-common-histogram-interface.py::test_issue_0722 PASSED [ 44%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0172-allow-allocators-in-vector-typenames.py::test PASSED     [ 44%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0173-empty-and-multiprocessing-bugs.py::test_empty PASSED     [ 44%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0173-empty-and-multiprocessing-bugs.py::test_multiprocessing PASSED [ 45%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0182-complain-about-missing-files.py::test PASSED             [ 45%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0194-fix-lost-cuts-in-iterate.py::test PASSED                 [ 45%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0220-contiguous-byte-ranges-in-http.py::test PASSED           [ 45%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0228_read-TProfiles.py::test_read_TProfile2D PASSED           [ 45%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0228_read-TProfiles.py::test_read_TProfile3D PASSED           [ 45%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_interpretation PASSED    [ 46%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_values_single[-2] PASSED [ 46%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_values_single[-1] PASSED [ 46%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_values_single[0] PASSED  [ 46%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_values_single[1] PASSED  [ 46%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_values_single[x] PASSED  [ 47%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_values_single[y] PASSED  [ 47%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[low--2] PASSED [ 47%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[low--1] PASSED [ 47%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[low-0] PASSED [ 47%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[low-1] PASSED [ 47%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[low-x] PASSED [ 48%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[low-y] PASSED [ 48%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[high--2] PASSED [ 48%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[high--1] PASSED [ 48%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[high-0] PASSED [ 48%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[high-1] PASSED [ 49%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[high-x] PASSED [ 49%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[high-y] PASSED [ 49%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[mean--2] PASSED [ 49%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[mean--1] PASSED [ 49%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[mean-0] PASSED [ 49%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[mean-1] PASSED [ 50%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[mean-x] PASSED [ 50%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[mean-y] PASSED [ 50%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[diff--2] PASSED [ 50%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[diff--1] PASSED [ 50%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[diff-0] PASSED [ 50%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[diff-1] PASSED [ 51%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[diff-x] PASSED [ 51%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_single[diff-y] PASSED [ 51%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_values_double[both] PASSED [ 51%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_double[low-both] PASSED [ 51%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_double[high-both] PASSED [ 52%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_double[mean-both] PASSED [ 52%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0240-read_TGraphAsymmErrors.py::test_errors_double[diff-both] PASSED [ 52%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0278-specializations-for-TParameter.py::test PASSED           [ 52%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0278-specializations-for-TParameter.py::test_issue_707 PASSED [ 52%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0302-pickle.py::test_pickle_roundtrip_mmap PASSED             [ 52%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0302-pickle.py::test_pickle_roundtrip_http PASSED             [ 53%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0302-pickle.py::test_pickle_roundtrip_xrootd SKIPPED)         [ 53%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0303-empty-jagged-array.py::test_numpy PASSED                 [ 53%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0303-empty-jagged-array.py::test_awkward PASSED               [ 53%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0325-fix-windows-file-uris.py::test_windows_drive_letters SKIPPED [ 53%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0325-fix-windows-file-uris.py::test_escaped_uri_codes PASSED  [ 54%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0335-empty-ttree-division-by-zero.py::test PASSED             [ 54%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0350-read-RooCurve-RooHist.py::test_interpretation PASSED     [ 54%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0350-read-RooCurve-RooHist.py::test_to_boost PASSED           [ 54%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0350-read-RooCurve-RooHist.py::test_interpolate PASSED        [ 54%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0351-write-TList.py::test_write_empty PASSED                  [ 54%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0351-write-TList.py::test_write_single_key PASSED             [ 55%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0351-write-TList.py::test_write_nested PASSED                 [ 55%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0352-write-THashList.py::test_write_compare_tlist PASSED      [ 55%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0398-dimensions-in-leaflist.py::test PASSED                   [ 55%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0407-read-TDatime.py::test_streamer[foo] PASSED               [ 55%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0407-read-TDatime.py::test_streamer[foo_padded] PASSED        [ 56%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0407-read-TDatime.py::test_strided_interpretation PASSED      [ 56%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0418-read-TTable.py::test_geant_dot_root PASSED               [ 56%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0430-global_index-for-tuples-of-DataFrames.py::test PASSED    [ 56%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0438-TClonesArray-is-not-AsGrouped.py::test PASSED            [ 56%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0439-check-awkward-before-numpy.py::test PASSED               [ 56%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0442-regular-TClonesArray.py::test_read_delphes_np PASSED     [ 57%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0442-regular-TClonesArray.py::test_read_delphes_ak PASSED     [ 57%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0484-manually-add-model-for-TMatrixTSym_double_.py::test PASSED [ 57%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0487-implement-asdtypeinplace.py::test_inplace_tbranch_array PASSED [ 57%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0487-implement-asdtypeinplace.py::test_inplace_ttree_arrays PASSED [ 57%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0519-remove-memmap-copy.py::test PASSED                       [ 58%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0520-dynamic-classes-cant-be-abc-subclasses.py::test PASSED   [ 58%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0569-fBits-is-4-bytes.py::test PASSED                         [ 58%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0578-dask-for-numpy.py::test_single_dask_array PASSED         [ 58%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0578-dask-for-numpy.py::test_dask_concatenation PASSED        [ 58%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0578-dask-for-numpy.py::test_multidim_array PASSED            [ 58%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0578-dask-for-numpy.py::test_chunking_single_num PASSED       [ 59%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0578-dask-for-numpy.py::test_chunking_single_string PASSED    [ 59%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0578-dask-for-numpy.py::test_chunking_multiple_num PASSED     [ 59%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0578-dask-for-numpy.py::test_chunking_multiple_string PASSED  [ 59%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0580-round-trip-for-no-flow-histograms.py::test_no_flow PASSED [ 59%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0580-round-trip-for-no-flow-histograms.py::test_yes_flow PASSED [ 60%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0589-explicitly-interpret-RVec-type.py::test_numpy PASSED     [ 60%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0589-explicitly-interpret-RVec-type.py::test_awkward PASSED   [ 60%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0603-dask-delayed-open.py::test_single_delay_open PASSED      [ 60%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0603-dask-delayed-open.py::test_multiple_delay_open PASSED    [ 60%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0603-dask-delayed-open.py::test_supplied_steps[np-False] PASSED [ 60%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0603-dask-delayed-open.py::test_supplied_steps[np-True] PASSED [ 61%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0603-dask-delayed-open.py::test_supplied_steps[ak-False] PASSED [ 61%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0603-dask-delayed-open.py::test_supplied_steps[ak-True] PASSED [ 61%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0609-num-enteries-func.py::test_num_entries_single PASSED     [ 61%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0609-num-enteries-func.py::test_num_entries_multiple PASSED   [ 61%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0609-num-enteries-func.py::test_num_entries_as_iterator PASSED [ 62%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0609-num-enteries-func.py::test_dict_input PASSED             [ 62%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_strings PASSED             [ 62%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_tstring PASSED             [ 62%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_vector_int32 PASSED        [ 62%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_vector_string PASSED       [ 62%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_vector_string_forth PASSED [ 63%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_array_tref_array_forth PASSED [ 63%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_array_tvector2_array_forth PASSED [ 63%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_vector_tstring PASSED      [ 63%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_vector_vector_int32 PASSED [ 63%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_vector_vector_string PASSED [ 64%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_vector_vector_tstring PASSED [ 64%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_set_int32 PASSED           [ 64%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_vector_set_int32 PASSED    [ 64%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_vector_set_string PASSED   [ 64%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_set_string PASSED          [ 64%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_map_int32_int16 PASSED     [ 65%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_map_int32_vector_int16 PASSED [ 65%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_map_int32_vector_string PASSED [ 65%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_map_int32_set_int16 PASSED [ 65%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_map_int32_set_string PASSED [ 65%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_map_string_int16 PASSED    [ 66%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_map_string_vector_int16 PASSED [ 66%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_map_string_vector_string PASSED [ 66%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_map_string_set_int16 PASSED [ 66%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_map_string_set_string PASSED [ 66%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_map_int32_vector_vector_int16 PASSED [ 66%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_map_string_string PASSED   [ 67%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0610-awkward-form.py::test_awkward_map_string_tstring PASSED  [ 67%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0630-rntuple-basics.py::test_flat PASSED                      [ 67%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0630-rntuple-basics.py::test_jagged PASSED                    [ 67%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_00[False] PASSED   [ 67%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_00[True] PASSED    [ 67%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_01[False] PASSED   [ 68%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_01[True] PASSED    [ 68%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_02[False] PASSED   [ 68%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_02[True] PASSED    [ 68%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_03[False] PASSED   [ 68%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_03[True] PASSED    [ 69%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_04[False] PASSED   [ 69%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_04[True] PASSED    [ 69%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_05 PASSED          [ 69%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_06[False] PASSED   [ 69%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_06[True] PASSED    [ 69%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_07[False] PASSED   [ 70%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_07[True] PASSED    [ 70%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_08 PASSED          [ 70%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_09[False] PASSED   [ 70%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_09[True] PASSED    [ 70%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_10[False] PASSED   [ 71%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_10[True] PASSED    [ 71%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_11[False] PASSED   [ 71%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_11[True] PASSED    [ 71%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_12[False] PASSED   [ 71%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_12[True] PASSED    [ 71%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_13[False] PASSED   [ 72%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_13[True] PASSED    [ 72%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_14[False] PASSED   [ 72%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_14[True] PASSED    [ 72%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_15[False] PASSED   [ 72%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_15[True] PASSED    [ 73%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_16[False] PASSED   [ 73%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_16[True] PASSED    [ 73%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_17[False] PASSED   [ 73%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_17[True] PASSED    [ 73%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_18[False] PASSED   [ 73%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_18[True] PASSED    [ 74%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_19[False] PASSED   [ 74%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_19[True] PASSED    [ 74%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_20[False] PASSED   [ 74%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_20[True] PASSED    [ 74%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_21[False] PASSED   [ 75%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_21[True] PASSED    [ 75%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_22[False] PASSED   [ 75%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_22[True] PASSED    [ 75%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_23[False] PASSED   [ 75%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_23[True] PASSED    [ 75%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_24[False] PASSED   [ 76%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_24[True] PASSED    [ 76%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_25[False] PASSED   [ 76%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_25[True] PASSED    [ 76%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_26 PASSED          [ 76%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_27[False] PASSED   [ 77%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_27[True] PASSED    [ 77%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_28[False] PASSED   [ 77%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_28[True] PASSED    [ 77%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_29 PASSED          [ 77%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_30[False] PASSED   [ 77%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_30[True] PASSED    [ 78%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_31[False] PASSED   [ 78%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_31[True] PASSED    [ 78%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_32[False] PASSED   [ 78%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_32[True] PASSED    [ 78%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_33[False] PASSED   [ 79%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_33[True] PASSED    [ 79%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_34[False] PASSED   [ 79%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_34[True] PASSED    [ 79%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_35[False] PASSED   [ 79%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_35[True] PASSED    [ 79%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_36[False] PASSED   [ 80%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_36[True] PASSED    [ 80%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_37[False] PASSED   [ 80%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_37[True] PASSED    [ 80%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_38[False] PASSED   [ 80%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_38[True] PASSED    [ 81%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_39[False] PASSED   [ 81%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_39[True] PASSED    [ 81%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_40[False] PASSED   [ 81%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_40[True] PASSED    [ 81%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_41[False] PASSED   [ 81%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_41[True] PASSED    [ 82%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_42[False] PASSED   [ 82%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_42[True] PASSED    [ 82%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_43[False] PASSED   [ 82%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_43[True] PASSED    [ 82%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_44[False] PASSED   [ 83%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_44[True] PASSED    [ 83%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_45 PASSED          [ 83%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_46 PASSED          [ 83%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_47[False] PASSED   [ 83%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_47[True] PASSED    [ 83%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_48 PASSED          [ 84%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_49 PASSED          [ 84%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_50 PASSED          [ 84%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_51[False] PASSED   [ 84%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_51[True] PASSED    [ 84%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_52[False] PASSED   [ 84%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_52[True] PASSED    [ 85%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_53[False] PASSED   [ 85%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_53[True] PASSED    [ 85%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_54[False] PASSED   [ 85%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_54[True] PASSED    [ 85%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_55[False] PASSED   [ 86%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_55[True] PASSED    [ 86%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_56[False] PASSED   [ 86%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_56[True] PASSED    [ 86%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_57[False] PASSED   [ 86%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_57[True] PASSED    [ 86%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_58[False] PASSED   [ 87%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_58[True] PASSED    [ 87%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_59[False] PASSED   [ 87%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_59[True] PASSED    [ 87%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_60[False] PASSED   [ 87%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_60[True] PASSED    [ 88%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_61[False] PASSED   [ 88%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_61[True] PASSED    [ 88%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_62[False] PASSED   [ 88%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_62[True] PASSED    [ 88%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_63[False] PASSED   [ 88%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_63[True] PASSED    [ 89%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_64[False] PASSED   [ 89%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_64[True] PASSED    [ 89%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_65[False] PASSED   [ 89%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_65[True] PASSED    [ 89%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_66[False] PASSED   [ 90%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_66[True] PASSED    [ 90%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_67[False] PASSED   [ 90%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_67[True] PASSED    [ 90%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_68[False] PASSED   [ 90%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_68[True] PASSED    [ 90%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_69[False] PASSED   [ 91%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_69[True] PASSED    [ 91%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_70[False] PASSED   [ 91%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_70[True] PASSED    [ 91%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_71[False] PASSED   [ 91%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_71[True] PASSED    [ 92%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_72[False] PASSED   [ 92%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_72[True] PASSED    [ 92%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_73[False] PASSED   [ 92%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_73[True] PASSED    [ 92%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_74[False] PASSED   [ 92%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_74[True] PASSED    [ 93%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_75[False] PASSED   [ 93%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_75[True] PASSED    [ 93%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_76[False] PASSED   [ 93%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_76[True] PASSED    [ 93%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_77[False] PASSED   [ 94%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_77[True] PASSED    [ 94%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_78[False] PASSED   [ 94%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_78[True] PASSED    [ 94%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_79[False] PASSED   [ 94%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_79[True] PASSED    [ 94%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_80[False] PASSED   [ 95%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_80[True] PASSED    [ 95%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_81[False] PASSED   [ 95%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0637-setup-tests-for-AwkwardForth.py::test_81[True] PASSED    [ 95%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0643-reading-vector-pair-TLorentzVector-int.py::test_numpy PASSED [ 95%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0643-reading-vector-pair-TLorentzVector-int.py::test_awkward PASSED [ 96%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0651-implement-transformed-axis.py::test PASSED               [ 96%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0662-rntuple-stl-containers.py::test_rntuple_stl_containers PASSED [ 96%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0705-rntuple-writing-metadata.py::test_header PASSED          [ 96%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0705-rntuple-writing-metadata.py::test_writable PASSED        [ 96%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0750-avoid-empty-TBasket-issue.py::test PASSED                [ 96%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0755-dask-awkward-column-projection.py::test_column_projection_sanity_check PASSED [ 97%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0791-protect-uproot-project_columns-from-dask-node-names.py::test PASSED [ 97%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0798_DAOD_PHYSLITE.py::test_AnalysisJetsAuxDyn_GhostTrack[False] PASSED [ 97%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0798_DAOD_PHYSLITE.py::test_AnalysisJetsAuxDyn_GhostTrack[True] PASSED [ 97%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0798_DAOD_PHYSLITE.py::test_TruthBosonAuxDyn_childLinks[False] PASSED [ 97%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0798_DAOD_PHYSLITE.py::test_TruthBosonAuxDyn_childLinks[True] PASSED [ 98%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0798_DAOD_PHYSLITE.py::test_TruthPhotonsAuxDyn_parentLinks[False] PASSED [ 98%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0798_DAOD_PHYSLITE.py::test_TruthPhotonsAuxDyn_parentLinks[True] PASSED [ 98%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0798_DAOD_PHYSLITE.py::test_TruthTopAuxDyn_parentLinks[False] PASSED [ 98%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0798_DAOD_PHYSLITE.py::test_TruthTopAuxDyn_parentLinks[True] PASSED [ 98%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0808-fix_awkward_form_for_AsStridedObjects.py::test PASSED    [ 98%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0816-separate-AwkwardForth-machines-by-TBranch.py::test[False] PASSED [ 99%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0816-separate-AwkwardForth-machines-by-TBranch.py::test[True] PASSED [ 99%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0832-ak_add_doc-should-also-add-to-typetracer.py::test PASSED [ 99%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0852-fix-strided-interp-extra-offsets.py::test_xyz_vector_with_headers PASSED [ 99%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0870-writing-arrays-of-type-unknown-fix-822.py::test_writing_ak_arrays_of_type_unknown PASSED [ 99%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | tests/test_0886-fix-awkward-form-breadcrumbs.py::test_fix_awkward_form_breadcrumbs PASSED [100%]\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | \n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/scikit-hep-uproot5/report.xml -\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | =========================== short test summary info ============================\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0320-start-working-on-ROOT-writing.py:13: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0322-writablefile-infrastructure.py:13: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0329-update-existing-root-files.py:12: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0341-manipulate-streamer-info.py:11: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0344-writabledirectory-can-read.py:11: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0345-bulk-copy-method.py:11: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0349-write-TObjString.py:10: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0384-move-behavior_of-and-fix-383.py:11: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0405-write-a-histogram.py:12: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0406-write-a-ttree.py:11: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0412-write-multidimensional-numpy-to-ttree.py:13: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0414-write-jagged-arrays.py:13: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0416-writing-compressed-data.py:11: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0420-pyroot-uproot-interoperability.py:11: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0422-hist-integration.py:11: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0472-tstreamerinfo-for-ttree.py:12: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0475-remember-to-update-freesegments.py:13: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0498-create-leaf-branch-in-extend.py:13: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0576-unicode-in-names.py:11: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0652_dask-for-awkward.py:12: could not import 'pyarrow': No module named 'pyarrow'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0700-dask-empty-arrays.py:12: could not import 'pyarrow': No module named 'pyarrow'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0840-support-tleafG.py:7: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0841-fix-814.py:8: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0844-fix-delete-hist-from-root.py:8: could not import 'ROOT': No module named 'ROOT'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0876-uproot-dask-blind-steps.py:10: could not import 'pyarrow': No module named 'pyarrow'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0001-source-class.py:97: RECHECK: example.com is flaky, too\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0001-source-class.py:136: RECHECK: example.com is flaky, too\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0001-source-class.py:252: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0001-source-class.py:273: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0001-source-class.py:290: could not import 'XRootD': No module named 'XRootD'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0001-source-class.py:297: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0001-source-class.py:319: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0001-source-class.py:339: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0001-source-class.py:371: could not import 'XRootD': No module named 'XRootD'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0001-source-class.py:381: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0001-source-class.py:408: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0006-notify-when-downloaded.py:65: RECHECK: example.com is flaky, too\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0006-notify-when-downloaded.py:81: RECHECK: example.com is flaky, too\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0006-notify-when-downloaded.py:97: RECHECK: example.com is flaky, too\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0006-notify-when-downloaded.py:147: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0006-notify-when-downloaded.py:169: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0006-notify-when-downloaded.py:191: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0007-single-chunk-interface.py:76: RECHECK: example.com is flaky, too\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0007-single-chunk-interface.py:100: RECHECK: example.com is flaky, too\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0007-single-chunk-interface.py:120: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0007-single-chunk-interface.py:141: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0007-single-chunk-interface.py:162: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0031-test-stl-containers.py:17: Implement non-memberwise std::map; we have a sample (map<string,double>)\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0046-histograms-bh-hist.py:2848: could not import 'boost': No module named 'boost'\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0167-use-the-common-histogram-interface.py:139: Something's wrong with uproot-issue33.root and boost-histogram\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0302-pickle.py:56: RECHECK: Run2012B_DoubleMuParked.root is super-flaky right now\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | SKIPPED [1] tests/test_0325-fix-windows-file-uris.py:10: Drive letters only parsed on Windows.\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   | ================= 526 passed, 52 skipped in 184.97s (0:03:04) ==================\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2705  Success - Main Run pytest\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build] \u2b50 Run Post actions/setup-python@v4\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build]   \u2705  Success - Post actions/setup-python@v4\n[31bf33aa-2e81-4ac0-a4d1-c917c85bc5d4/vanilla-build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/scikit-hep-uproot5/.github/workflows/build-test-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 525.2549715042114
    }
}