{
    "repository": "mcfunley/pugsql",
    "stars": 615,
    "language": "python",
    "size": 4602,
    "clone_url": "https://github.com/mcfunley/pugsql.git",
    "timestamp": "2023-06-28T13:57:31.720436Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_compiler.BasicCompilerTest",
                "name": "test_function_redefinition",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_compiler.BasicCompilerTest",
                "name": "test_multiple_statements_per_file",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_compiler.BasicCompilerTest",
                "name": "test_reserved_function_name",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_compiler.BasicCompilerTest",
                "name": "test_sets_sqlpaths",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_compiler.BasicCompilerTest",
                "name": "test_setsattr",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_compiler.ModuleTest",
                "name": "test_add_queries",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_compiler.ModuleTest",
                "name": "test_dialect_no_connection",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_compiler.ModuleTest",
                "name": "test_dialect_works",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_context.ContextTest",
                "name": "test_advance_col",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_context.ContextTest",
                "name": "test_advance_lines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_context.ContextTest",
                "name": "test_advance_lines_from_indent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_context.ContextTest",
                "name": "test_default_col",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_context.ContextTest",
                "name": "test_default_line",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexTest",
                "name": "test_basic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexTest",
                "name": "test_blank_lines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexTest",
                "name": "test_leading_comment_whitespace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexTest",
                "name": "test_whitespace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexCommentTest",
                "name": "test_internal_keyword",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexCommentTest",
                "name": "test_internal_whitespace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexCommentTest",
                "name": "test_keyword_only",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexCommentTest",
                "name": "test_leading_whitespace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexCommentTest",
                "name": "test_multiple_keywords",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexCommentTest",
                "name": "test_no_keywords",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexCommentTest",
                "name": "test_no_space",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexCommentTest",
                "name": "test_not_a_comment",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexCommentTest",
                "name": "test_works",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexNameTest",
                "name": "test_empty",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexNameTest",
                "name": "test_leading_whitespace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexNameTest",
                "name": "test_name_only",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexNameTest",
                "name": "test_name_only_trailing_whitespace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexNameTest",
                "name": "test_name_rest_no_keyword",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexNameTest",
                "name": "test_no_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexNameTest",
                "name": "test_trailing_whitespace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexNameTest",
                "name": "test_with_keyword",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexNameTest",
                "name": "test_with_keyword_trailing_whitespace",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexNameTest",
                "name": "test_with_rest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexResultTest",
                "name": "test_no_keyword",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexResultTest",
                "name": "test_rest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.LexResultTest",
                "name": "test_works",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.SqlTests",
                "name": "test_extra_comments",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.SqlTests",
                "name": "test_query",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.BasicTest",
                "name": "test_returns_stmt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.BasicTest",
                "name": "test_sets_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.OneLinerTest",
                "name": "test_insert",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.OneLinerTest",
                "name": "test_long_affected",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.OneLinerTest",
                "name": "test_long_many",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.OneLinerTest",
                "name": "test_long_one",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.OneLinerTest",
                "name": "test_long_raw",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.OneLinerTest",
                "name": "test_name_only_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.OneLinerTest",
                "name": "test_name_only_raw",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.OneLinerTest",
                "name": "test_scalar",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.OneLinerTest",
                "name": "test_short_affected",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.OneLinerTest",
                "name": "test_short_many",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.OneLinerTest",
                "name": "test_short_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.MultilineTest",
                "name": "test_has_commentary",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.MultilineTest",
                "name": "test_has_commentary_whitespace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.MultilineTest",
                "name": "test_insert",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.MultilineTest",
                "name": "test_long_affected",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.MultilineTest",
                "name": "test_long_many",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.MultilineTest",
                "name": "test_long_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.MultilineTest",
                "name": "test_long_raw",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.MultilineTest",
                "name": "test_scalar",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.MultilineTest",
                "name": "test_short_affected",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.MultilineTest",
                "name": "test_short_many",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.MultilineTest",
                "name": "test_short_one",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParserErrorTest",
                "name": "test_extra_after_result_nameline",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParserErrorTest",
                "name": "test_extra_after_result_result_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParserErrorTest",
                "name": "test_missing_result_type_result_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParserErrorTest",
                "name": "test_name_only_extra",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParserErrorTest",
                "name": "test_no_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParserErrorTest",
                "name": "test_result_type_not_keyword_result_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParserErrorTest",
                "name": "test_unrecognized_keyword_nameline",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ParserErrorTest",
                "name": "test_unrecognized_keyword_resultline",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ResultLineWhitespaceTest",
                "name": "test_works_internal_whitespace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ResultLineWhitespaceTest",
                "name": "test_works_leading_whitespace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.ResultLineWhitespaceTest",
                "name": "test_works_trailing_whitespace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.LegalFunctionNameTest",
                "name": "test_begins_with_number",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.LegalFunctionNameTest",
                "name": "test_dashes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.LegalFunctionNameTest",
                "name": "test_leading_underscores",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.LegalFunctionNameTest",
                "name": "test_nonalphaunderscore",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.LegalFunctionNameTest",
                "name": "test_numbers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.LegalFunctionNameTest",
                "name": "test_underscores",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser.LegalFunctionNameTest",
                "name": "test_uppercase",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_postgres.PostgresqlTest",
                "name": "test_multi_upsert",
                "time": 0.106,
                "results": [
                    {
                        "result": "Failure",
                        "message": "sqlalchemy.exc.InterfaceError: (pg8000.exceptions.InterfaceError) Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n(Background on this error at: https://sqlalche.me/e/14/rvf5)",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_postgres.PostgresqlTest",
                "name": "test_nested_transactions",
                "time": 0.013,
                "results": [
                    {
                        "result": "Failure",
                        "message": "sqlalchemy.exc.InterfaceError: (pg8000.exceptions.InterfaceError) Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n(Background on this error at: https://sqlalche.me/e/14/rvf5)",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_postgres.PostgresqlTest",
                "name": "test_rolling_back_nested_transactions",
                "time": 0.004,
                "results": [
                    {
                        "result": "Failure",
                        "message": "sqlalchemy.exc.InterfaceError: (pg8000.exceptions.InterfaceError) Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n(Background on this error at: https://sqlalche.me/e/14/rvf5)",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_postgres.PostgresqlTest",
                "name": "test_transaction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Failure",
                        "message": "sqlalchemy.exc.InterfaceError: (pg8000.exceptions.InterfaceError) Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n(Background on this error at: https://sqlalche.me/e/14/rvf5)",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_postgres.PostgresqlTest",
                "name": "test_where_in",
                "time": 0.002,
                "results": [
                    {
                        "result": "Failure",
                        "message": "sqlalchemy.exc.InterfaceError: (pg8000.exceptions.InterfaceError) Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n(Background on this error at: https://sqlalche.me/e/14/rvf5)",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql",
                "name": "test_module",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_bad_path",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_empty_many",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_get_one",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_initialized_other_thread",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_insert",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_iterable",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_many",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_mixed_positional_args_mistake",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_multi_insert",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_nesting_transactions",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_nesting_transactions_rollback",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_nesting_transactions_rollback_inner",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_not_connected",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_null_one",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_pass_connect_args",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_positional_args_mistake",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_rolling_back_transaction",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_scalar",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_scalar_null",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_three_dashes",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "fails - see issue #13",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_transaction_not_connected",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_update",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_where_in",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_where_in_list",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_where_in_multiple_parameters",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_pugsql.PugsqlTest",
                "name": "test_where_in_set",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement",
                "name": "test_raw",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StatementTest",
                "name": "test_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StatementTest",
                "name": "test_name_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StatementTest",
                "name": "test_no_module",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StatementTest",
                "name": "test_no_name",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StatementTest",
                "name": "test_result_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StatementTest",
                "name": "test_sets_module",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StatementTest",
                "name": "test_sql_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StatementTest",
                "name": "test_sql_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StatementTest",
                "name": "test_sql_whitespace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StrTest",
                "name": "test_multiple_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StrTest",
                "name": "test_no_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StrTest",
                "name": "test_param_order",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StrTest",
                "name": "test_repr",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StrTest",
                "name": "test_row",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StrTest",
                "name": "test_rowcount",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StrTest",
                "name": "test_rows",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StatementFilenameErrorTest",
                "name": "test_no_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StatementFilenameErrorTest",
                "name": "test_result_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StatementFilenameErrorTest",
                "name": "test_sql_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_statement.StatementFilenameErrorTest",
                "name": "test_sql_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests] \ud83d\ude80  Start image=crawlergpt:latest\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/mcfunley-pugsql] user=0 workdir=\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2601  git clone 'https://github.com/abatilo/actions-poetry' # ref=v2.1.3\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests] \u2b50 Run Pre abatilo/actions-poetry@v2.1.3\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2705  Success - Pre abatilo/actions-poetry@v2.1.3\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests] \ud83e\uddea  Matrix: map[python-version:3.7]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests] \u2b50 Run Main actions/checkout@v2\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2705  Success - Main actions/checkout@v2\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests] \u2b50 Run Main actions/setup-python@v2\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/2a574f6b-90c2-4e23-af52-fe601fb5c568/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::isExplicit: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::explicit? false\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::explicit? true\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::explicit? true\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::explicit? true\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::explicit? true\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::explicit? true\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::explicit? true\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::matched: 3.7.11\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Successfully setup CPython (3.7.11)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2705  Success - Main actions/setup-python@v2\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2699  ::set-output:: python-version=3.7.11\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests] \u2b50 Run Main abatilo/actions-poetry@v2.1.3\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/2a574f6b-90c2-4e23-af52-fe601fb5c568/act/abatilo-actions-poetry@v2.1.3/ dst=/var/run/act/actions/abatilo-actions-poetry@v2.1.3/\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/abatilo-actions-poetry@v2.1.3/] user=0 workdir=\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests] \u2b50 Run Main pip install poetry==1.1.8\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting poetry==1.1.8\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading poetry-1.1.8-py2.py3-none-any.whl (173 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting html5lib<2.0,>=1.0\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting clikit<0.7.0,>=0.6.2\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading clikit-0.6.2-py2.py3-none-any.whl (91 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting keyring<22.0.0,>=21.2.0\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading keyring-21.8.0-py3-none-any.whl (32 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting cleo<0.9.0,>=0.8.1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading cleo-0.8.1-py2.py3-none-any.whl (21 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting crashtest<0.4.0,>=0.3.0\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading crashtest-0.3.1-py3-none-any.whl (7.0 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting pkginfo<2.0,>=1.4\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting requests-toolbelt<0.10.0,>=0.9.1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading requests_toolbelt-0.9.1-py2.py3-none-any.whl (54 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting virtualenv<21.0.0,>=20.0.26\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting requests<3.0,>=2.18\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting shellingham<2.0,>=1.1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading shellingham-1.5.0.post1-py2.py3-none-any.whl (9.4 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting tomlkit<1.0.0,>=0.7.0\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting packaging<21.0,>=20.4\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading packaging-20.9-py2.py3-none-any.whl (40 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting pexpect<5.0.0,>=4.7.0\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting cachy<0.4.0,>=0.3.0\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading cachy-0.3.0-py2.py3-none-any.whl (20 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting importlib-metadata<2.0.0,>=1.6.0\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading importlib_metadata-1.7.0-py2.py3-none-any.whl (31 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting poetry-core<1.1.0,>=1.0.4\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading poetry_core-1.0.8-py2.py3-none-any.whl (425 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.4\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading CacheControl-0.12.14-py2.py3-none-any.whl (21 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting msgpack>=0.5.2\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading msgpack-1.0.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (299 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting lockfile>=0.9\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting pylev<2.0,>=1.3\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading pylev-1.4.0-py2.py3-none-any.whl (6.1 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting pastel<0.3.0,>=0.2.0\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading pastel-0.2.1-py2.py3-none-any.whl (6.0 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting webencodings\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting six>=1.9\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting zipp>=0.5\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting SecretStorage>=3.2\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting jeepney>=0.4.2\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting pyparsing>=2.0.2\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting ptyprocess>=0.5\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting certifi>=2017.4.17\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting idna<4,>=2.5\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting charset-normalizer<4,>=2\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting urllib3<3,>=1.21.1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting cryptography>=2.0\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting cffi>=1.12\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading cffi-1.15.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (427 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting pycparser\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting filelock<4,>=3.12\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting distlib<1,>=0.3.6\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting platformdirs<4,>=3.5.1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting virtualenv<21.0.0,>=20.0.26\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.22.0-py3-none-any.whl (3.2 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.21.1-py3-none-any.whl (8.7 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.21.0-py3-none-any.whl (8.7 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.20.0-py3-none-any.whl (8.7 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.19.0-py3-none-any.whl (8.7 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.18.0-py3-none-any.whl (8.7 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.17.1-py3-none-any.whl (8.8 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.17.0-py3-none-any.whl (8.8 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.16.7-py3-none-any.whl (8.8 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.16.6-py3-none-any.whl (8.8 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.16.5-py3-none-any.whl (8.8 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.16.4-py3-none-any.whl (8.8 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.16.3-py2.py3-none-any.whl (8.8 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading virtualenv-20.16.2-py2.py3-none-any.whl (8.8 MB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting platformdirs<3,>=2\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading platformdirs-2.6.2-py3-none-any.whl (14 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Collecting typing-extensions>=4.4\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Installing collected packages: pycparser, urllib3, idna, charset-normalizer, cffi, certifi, zipp, typing-extensions, requests, pylev, pastel, msgpack, jeepney, cryptography, crashtest, webencodings, six, SecretStorage, pyparsing, ptyprocess, platformdirs, lockfile, importlib-metadata, filelock, distlib, clikit, cachecontrol, virtualenv, tomlkit, shellingham, requests-toolbelt, poetry-core, pkginfo, pexpect, packaging, keyring, html5lib, cleo, cachy, poetry\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Successfully installed SecretStorage-3.3.3 cachecontrol-0.12.14 cachy-0.3.0 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 cleo-0.8.1 clikit-0.6.2 crashtest-0.3.1 cryptography-41.0.1 distlib-0.3.6 filelock-3.12.2 html5lib-1.1 idna-3.4 importlib-metadata-1.7.0 jeepney-0.8.0 keyring-21.8.0 lockfile-0.12.2 msgpack-1.0.5 packaging-20.9 pastel-0.2.1 pexpect-4.8.0 pkginfo-1.9.6 platformdirs-2.6.2 poetry-1.1.8 poetry-core-1.0.8 ptyprocess-0.7.0 pycparser-2.21 pylev-1.4.0 pyparsing-3.1.0 requests-2.31.0 requests-toolbelt-0.9.1 shellingham-1.5.0.post1 six-1.16.0 tomlkit-0.11.8 typing-extensions-4.6.3 urllib3-2.0.3 virtualenv-20.16.2 webencodings-0.5.1 zipp-3.15.0\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2705  Success - Main pip install poetry==1.1.8\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2705  Success - Main abatilo/actions-poetry@v2.1.3\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests] \u2b50 Run Main install dependencies\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Creating virtualenv pugsql-RGUqz-o1-py3.7 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Installing dependencies from lock file\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Package operations: 24 installs, 0 updates, 0 removals\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing typing-extensions (4.1.1)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing zipp (3.7.0)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing asn1crypto (1.5.0)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing importlib-metadata (4.2.0)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing markupsafe (2.1.0)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing pyparsing (3.0.7)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing attrs (21.4.0)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing greenlet (1.1.2)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing iniconfig (1.1.1)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing mako (1.2.0)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing markdown (3.3.5)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing mccabe (0.6.1)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing packaging (20.9)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing pluggy (1.0.0)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing py (1.11.0)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing pycodestyle (2.8.0)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing pyflakes (2.4.0)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing scramp (1.4.1)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing tomli (2.0.1)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing flake8 (4.0.1)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing pdoc3 (0.6.4)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing pg8000 (1.24.1)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing pytest (7.1.0)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |   \u2022 Installing sqlalchemy (1.4.32)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | Installing the current project: pugsql (0.2.4)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2705  Success - Main install dependencies\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests] \u2b50 Run Main run tests\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | ============================= test session starts ==============================\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | platform linux -- Python 3.7.11, pytest-7.1.0, pluggy-1.0.0\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/mcfunley-pugsql\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | collected 136 items\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tests/test_compiler.py ........                                          [  5%]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tests/test_context.py .....                                              [  9%]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tests/test_lexer.py ..........................                           [ 28%]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tests/test_parser.py ............................................        [ 61%]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tests/test_postgres.py FFFFF                                             [ 64%]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tests/test_pugsql.py ....................s......                         [ 84%]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tests/test_statement.py .....................                            [100%]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | =================================== FAILURES ===================================\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _______________________ PostgresqlTest.test_multi_upsert _______________________\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc78034dc90>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:209: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | address = ('127.0.0.1', 5432), timeout = None, source_address = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                           source_address=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Connect to *address* and return the socket object.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port)``) and return the socket object.  Passing the optional\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         *timeout* parameter will set the timeout on the socket instance\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for the socket to bind as a source address before making the connection.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         A host of '' or port 0 tells the OS to use the default.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host, port = address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             af, socktype, proto, canonname, sa = res\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock = socket(af, socktype, proto)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.settimeout(timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if source_address:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.bind(source_address)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock.connect(sa)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 # Break explicitly a reference cycle\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return sock\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except error as _:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 err = _\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if sock is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.close()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if err is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               raise err\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | address = ('127.0.0.1', 5432), timeout = None, source_address = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                           source_address=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Connect to *address* and return the socket object.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port)``) and return the socket object.  Passing the optional\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         *timeout* parameter will set the timeout on the socket instance\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for the socket to bind as a source address before making the connection.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         A host of '' or port 0 tells the OS to use the default.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host, port = address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             af, socktype, proto, canonname, sa = res\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock = socket(af, socktype, proto)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.settimeout(timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if source_address:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.bind(source_address)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               sock.connect(sa)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | The above exception was the direct cause of the following exception:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = Engine(postgresql+pg8000://postgres:***@127.0.0.1)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | fn = <bound method Pool.connect of <sqlalchemy.pool.impl.QueuePool object at 0x7fc780339bd0>>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _wrap_pool_connect(self, fn, connection):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         dialect = self.dialect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           return fn()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3256: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc780339bd0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Return a DBAPI connection from the pool.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         The connection is instrumented such that when its\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ``close()`` method is called, the connection will be returned to\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         the pool.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return _ConnectionFairy._checkout(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:310: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cls = <class 'sqlalchemy.pool.base._ConnectionFairy'>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc780339bd0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | threadconns = None, fairy = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     @classmethod\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _checkout(cls, pool, threadconns=None, fairy=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if not fairy:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           fairy = _ConnectionRecord.checkout(pool)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:868: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cls = <class 'sqlalchemy.pool.base._ConnectionRecord'>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc780339bd0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     @classmethod\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def checkout(cls, pool):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       rec = pool._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:476: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc780339bd0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _do_get(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         use_overflow = self._max_overflow > -1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             wait = use_overflow and self._overflow >= self._max_overflow\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             return self._pool.get(wait, self._timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except sqla_queue.Empty:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # don't do things inside of \"except Empty\", because when we say\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # we timed out or can't connect and raise, Python 3 tells\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # people the real error is queue.Empty which it isn't.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pass\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if use_overflow and self._overflow >= self._max_overflow:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not wait:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise exc.TimeoutError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"QueuePool limit of size %d overflow %d reached, \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"connection timed out, timeout %0.2f\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     % (self.size(), self.overflow(), self._timeout),\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     code=\"3o7r\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if self._inc_overflow():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 with util.safe_reraise():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   self._dec_overflow()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:146: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fc78034de50>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | type_ = None, value = None, traceback = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __exit__(self, type_, value, traceback):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # see #2703 for notes\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if type_ is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exc_type, exc_value, exc_tb = self._exc_info\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self._exc_info = None  # remove potential circular references\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not self.warn_only:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 compat.raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     exc_value,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         exception, with_traceback=None, replace_context=None, from_=False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         r\"\"\"implement \"raise\" with cause support.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param exception: exception to raise\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param with_traceback: will call exception.with_traceback()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param replace_context: an as-yet-unsupported feature.  This is\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          an exception object which we are \"replacing\", e.g., it's our\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          \"cause\" but we don't want it printed.    Basically just what\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          ``__suppress_context__`` does but we don't want to suppress\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          the enclosing context, if any.  So for now we make it the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          cause.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param from\\_: the cause.  this actually sets the cause and doesn't\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          hope to hide it someday.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if with_traceback is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception = exception.with_traceback(with_traceback)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if from_ is not False:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = from_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         elif replace_context is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # no good solution here, we would like to have the exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # have only the context of replace_context.__context__ so that the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # intermediary exception does not change, but we can't figure\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # that out.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = replace_context\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc780339bd0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _do_get(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         use_overflow = self._max_overflow > -1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             wait = use_overflow and self._overflow >= self._max_overflow\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             return self._pool.get(wait, self._timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except sqla_queue.Empty:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # don't do things inside of \"except Empty\", because when we say\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # we timed out or can't connect and raise, Python 3 tells\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # people the real error is queue.Empty which it isn't.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pass\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if use_overflow and self._overflow >= self._max_overflow:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not wait:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise exc.TimeoutError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"QueuePool limit of size %d overflow %d reached, \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"connection timed out, timeout %0.2f\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     % (self.size(), self.overflow(), self._timeout),\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     code=\"3o7r\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if self._inc_overflow():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:143: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc780339bd0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _create_connection(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Called by subclasses to create a new ConnectionRecord.\"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return _ConnectionRecord(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:256: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc78034d850>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc780339bd0>, connect = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(self, pool, connect=True):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.__pool = pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if connect:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           self.__connect()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:371: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc78034d850>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pool = self.__pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # ensure any existing connection is removed, so that if\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # creator fails, this attribute stays None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.dbapi_connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.starttime = time.time()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pool.logger.debug(\"Created new connection %r\", connection)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.fresh = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except Exception as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             with util.safe_reraise():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               pool.logger.debug(\"Error on connect(): %s\", e)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:666: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fc78034de10>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | type_ = None, value = None, traceback = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __exit__(self, type_, value, traceback):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # see #2703 for notes\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if type_ is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exc_type, exc_value, exc_tb = self._exc_info\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self._exc_info = None  # remove potential circular references\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not self.warn_only:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 compat.raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     exc_value,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         exception, with_traceback=None, replace_context=None, from_=False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         r\"\"\"implement \"raise\" with cause support.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param exception: exception to raise\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param with_traceback: will call exception.with_traceback()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param replace_context: an as-yet-unsupported feature.  This is\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          an exception object which we are \"replacing\", e.g., it's our\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          \"cause\" but we don't want it printed.    Basically just what\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          ``__suppress_context__`` does but we don't want to suppress\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          the enclosing context, if any.  So for now we make it the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          cause.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param from\\_: the cause.  this actually sets the cause and doesn't\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          hope to hide it someday.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if with_traceback is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception = exception.with_traceback(with_traceback)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if from_ is not False:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = from_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         elif replace_context is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # no good solution here, we would like to have the exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # have only the context of replace_context.__context__ so that the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # intermediary exception does not change, but we can't figure\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # that out.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = replace_context\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc78034d850>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pool = self.__pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # ensure any existing connection is removed, so that if\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # creator fails, this attribute stays None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.dbapi_connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.starttime = time.time()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:661: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | connection_record = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc78034d850>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(connection_record=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if dialect._has_events:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             for fn in dialect.dispatch.do_connect:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 connection = fn(dialect, connection_record, cargs, cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if connection is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     return connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return dialect.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/create.py:590: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000 object at 0x7fc7803935d0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cargs = ()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cparams = {'host': '127.0.0.1', 'password': 'postgres', 'user': 'postgres'}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(self, *cargs, **cparams):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # inherits the docstring from interfaces.Dialect.connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return self.dbapi.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/default.py:597: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | user = 'postgres', host = '127.0.0.1', database = None, port = 5432\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | password = 'postgres', source_address = None, unix_sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | ssl_context = None, timeout = None, tcp_keepalive = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         return Connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             host=host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             database=database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             port=port,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             password=password,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             source_address=source_address,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             unix_sock=unix_sock,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             ssl_context=ssl_context,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             timeout=timeout,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             tcp_keepalive=tcp_keepalive,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             application_name=application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           replication=replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/__init__.py:129: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc78034dc90>, args = ('postgres',)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | kwargs = {'application_name': None, 'database': None, 'host': '127.0.0.1', 'password': 'postgres', ...}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(self, *args, **kwargs):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           super().__init__(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/legacy.py:442: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc78034dc90>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except socket.error as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"Can't create a connection to host {host} and port {port} \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"(timeout is {timeout} and source_address is {source_address}).\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               ) from e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               pg8000.exceptions.InterfaceError: Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:215: InterfaceError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | The above exception was the direct cause of the following exception:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <tests.test_postgres.PostgresqlTest testMethod=test_multi_upsert>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def setUp(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user = os.getenv('PGUSER') or getuser()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pw = os.getenv('PGPASS')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user_pass = user if pw is None else f'{user}:{pw}'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.fixtures = pugsql.module('tests/sql/postgres')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.fixtures.connect(f'postgresql+pg8000://{user_pass}@127.0.0.1')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       self.fixtures.setup()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tests/test_postgres.py:14: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pugsql/statement.py:157: in __call__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     r = self._module._execute(self._text, *multiparams, **params)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pugsql/compiler.py:142: in _execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self.engine.execute(clause, *multiparams, **params)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | <string>:2: in execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ???\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/deprecations.py:401: in warned\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return fn(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3151: in execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     connection = self.connect(close_with_result=True)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3210: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._connection_cls(self, close_with_result=close_with_result)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:96: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     else engine.raw_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3289: in raw_connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._wrap_pool_connect(self.pool.connect, _connection)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3260: in _wrap_pool_connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     e, dialect, self\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2107: in _handle_dbapi_exception_noconnection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     sqlalchemy_exception, with_traceback=exc_info[2], from_=e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3256: in _wrap_pool_connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return fn()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:310: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return _ConnectionFairy._checkout(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:868: in _checkout\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     fairy = _ConnectionRecord.checkout(pool)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:476: in checkout\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     rec = pool._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:146: in _do_get\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self._dec_overflow()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: in __exit__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:143: in _do_get\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:256: in _create_connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return _ConnectionRecord(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:371: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self.__connect()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:666: in __connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: in __exit__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:661: in __connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/create.py:590: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return dialect.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/default.py:597: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self.dbapi.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/__init__.py:129: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     replication=replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/legacy.py:442: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     super().__init__(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc78034dc90>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except socket.error as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"Can't create a connection to host {host} and port {port} \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"(timeout is {timeout} and source_address is {source_address}).\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               ) from e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               sqlalchemy.exc.InterfaceError: (pg8000.exceptions.InterfaceError) Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               (Background on this error at: https://sqlalche.me/e/14/rvf5)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:215: InterfaceError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | ___________________ PostgresqlTest.test_nested_transactions ____________________\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77fb4d8d0>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:209: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | address = ('127.0.0.1', 5432), timeout = None, source_address = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                           source_address=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Connect to *address* and return the socket object.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port)``) and return the socket object.  Passing the optional\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         *timeout* parameter will set the timeout on the socket instance\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for the socket to bind as a source address before making the connection.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         A host of '' or port 0 tells the OS to use the default.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host, port = address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             af, socktype, proto, canonname, sa = res\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock = socket(af, socktype, proto)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.settimeout(timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if source_address:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.bind(source_address)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock.connect(sa)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 # Break explicitly a reference cycle\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return sock\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except error as _:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 err = _\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if sock is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.close()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if err is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               raise err\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | address = ('127.0.0.1', 5432), timeout = None, source_address = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                           source_address=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Connect to *address* and return the socket object.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port)``) and return the socket object.  Passing the optional\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         *timeout* parameter will set the timeout on the socket instance\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for the socket to bind as a source address before making the connection.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         A host of '' or port 0 tells the OS to use the default.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host, port = address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             af, socktype, proto, canonname, sa = res\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock = socket(af, socktype, proto)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.settimeout(timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if source_address:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.bind(source_address)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               sock.connect(sa)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | The above exception was the direct cause of the following exception:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = Engine(postgresql+pg8000://postgres:***@127.0.0.1)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | fn = <bound method Pool.connect of <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fb4d610>>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _wrap_pool_connect(self, fn, connection):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         dialect = self.dialect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           return fn()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3256: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fb4d610>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Return a DBAPI connection from the pool.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         The connection is instrumented such that when its\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ``close()`` method is called, the connection will be returned to\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         the pool.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return _ConnectionFairy._checkout(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:310: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cls = <class 'sqlalchemy.pool.base._ConnectionFairy'>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fb4d610>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | threadconns = None, fairy = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     @classmethod\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _checkout(cls, pool, threadconns=None, fairy=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if not fairy:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           fairy = _ConnectionRecord.checkout(pool)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:868: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cls = <class 'sqlalchemy.pool.base._ConnectionRecord'>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fb4d610>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     @classmethod\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def checkout(cls, pool):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       rec = pool._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:476: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fb4d610>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _do_get(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         use_overflow = self._max_overflow > -1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             wait = use_overflow and self._overflow >= self._max_overflow\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             return self._pool.get(wait, self._timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except sqla_queue.Empty:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # don't do things inside of \"except Empty\", because when we say\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # we timed out or can't connect and raise, Python 3 tells\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # people the real error is queue.Empty which it isn't.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pass\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if use_overflow and self._overflow >= self._max_overflow:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not wait:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise exc.TimeoutError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"QueuePool limit of size %d overflow %d reached, \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"connection timed out, timeout %0.2f\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     % (self.size(), self.overflow(), self._timeout),\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     code=\"3o7r\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if self._inc_overflow():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 with util.safe_reraise():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   self._dec_overflow()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:146: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fc77fb4dc10>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | type_ = None, value = None, traceback = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __exit__(self, type_, value, traceback):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # see #2703 for notes\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if type_ is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exc_type, exc_value, exc_tb = self._exc_info\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self._exc_info = None  # remove potential circular references\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not self.warn_only:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 compat.raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     exc_value,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         exception, with_traceback=None, replace_context=None, from_=False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         r\"\"\"implement \"raise\" with cause support.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param exception: exception to raise\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param with_traceback: will call exception.with_traceback()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param replace_context: an as-yet-unsupported feature.  This is\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          an exception object which we are \"replacing\", e.g., it's our\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          \"cause\" but we don't want it printed.    Basically just what\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          ``__suppress_context__`` does but we don't want to suppress\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          the enclosing context, if any.  So for now we make it the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          cause.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param from\\_: the cause.  this actually sets the cause and doesn't\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          hope to hide it someday.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if with_traceback is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception = exception.with_traceback(with_traceback)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if from_ is not False:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = from_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         elif replace_context is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # no good solution here, we would like to have the exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # have only the context of replace_context.__context__ so that the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # intermediary exception does not change, but we can't figure\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # that out.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = replace_context\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fb4d610>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _do_get(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         use_overflow = self._max_overflow > -1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             wait = use_overflow and self._overflow >= self._max_overflow\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             return self._pool.get(wait, self._timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except sqla_queue.Empty:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # don't do things inside of \"except Empty\", because when we say\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # we timed out or can't connect and raise, Python 3 tells\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # people the real error is queue.Empty which it isn't.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pass\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if use_overflow and self._overflow >= self._max_overflow:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not wait:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise exc.TimeoutError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"QueuePool limit of size %d overflow %d reached, \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"connection timed out, timeout %0.2f\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     % (self.size(), self.overflow(), self._timeout),\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     code=\"3o7r\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if self._inc_overflow():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:143: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fb4d610>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _create_connection(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Called by subclasses to create a new ConnectionRecord.\"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return _ConnectionRecord(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:256: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77fb4d490>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fb4d610>, connect = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(self, pool, connect=True):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.__pool = pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if connect:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           self.__connect()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:371: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77fb4d490>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pool = self.__pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # ensure any existing connection is removed, so that if\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # creator fails, this attribute stays None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.dbapi_connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.starttime = time.time()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pool.logger.debug(\"Created new connection %r\", connection)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.fresh = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except Exception as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             with util.safe_reraise():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               pool.logger.debug(\"Error on connect(): %s\", e)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:666: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fc77fb4db90>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | type_ = None, value = None, traceback = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __exit__(self, type_, value, traceback):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # see #2703 for notes\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if type_ is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exc_type, exc_value, exc_tb = self._exc_info\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self._exc_info = None  # remove potential circular references\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not self.warn_only:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 compat.raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     exc_value,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         exception, with_traceback=None, replace_context=None, from_=False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         r\"\"\"implement \"raise\" with cause support.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param exception: exception to raise\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param with_traceback: will call exception.with_traceback()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param replace_context: an as-yet-unsupported feature.  This is\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          an exception object which we are \"replacing\", e.g., it's our\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          \"cause\" but we don't want it printed.    Basically just what\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          ``__suppress_context__`` does but we don't want to suppress\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          the enclosing context, if any.  So for now we make it the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          cause.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param from\\_: the cause.  this actually sets the cause and doesn't\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          hope to hide it someday.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if with_traceback is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception = exception.with_traceback(with_traceback)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if from_ is not False:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = from_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         elif replace_context is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # no good solution here, we would like to have the exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # have only the context of replace_context.__context__ so that the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # intermediary exception does not change, but we can't figure\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # that out.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = replace_context\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77fb4d490>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pool = self.__pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # ensure any existing connection is removed, so that if\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # creator fails, this attribute stays None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.dbapi_connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.starttime = time.time()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:661: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | connection_record = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77fb4d490>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(connection_record=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if dialect._has_events:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             for fn in dialect.dispatch.do_connect:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 connection = fn(dialect, connection_record, cargs, cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if connection is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     return connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return dialect.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/create.py:590: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000 object at 0x7fc77fb4dfd0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cargs = ()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cparams = {'host': '127.0.0.1', 'password': 'postgres', 'user': 'postgres'}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(self, *cargs, **cparams):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # inherits the docstring from interfaces.Dialect.connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return self.dbapi.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/default.py:597: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | user = 'postgres', host = '127.0.0.1', database = None, port = 5432\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | password = 'postgres', source_address = None, unix_sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | ssl_context = None, timeout = None, tcp_keepalive = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         return Connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             host=host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             database=database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             port=port,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             password=password,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             source_address=source_address,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             unix_sock=unix_sock,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             ssl_context=ssl_context,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             timeout=timeout,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             tcp_keepalive=tcp_keepalive,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             application_name=application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           replication=replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/__init__.py:129: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77fb4d8d0>, args = ('postgres',)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | kwargs = {'application_name': None, 'database': None, 'host': '127.0.0.1', 'password': 'postgres', ...}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(self, *args, **kwargs):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           super().__init__(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/legacy.py:442: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77fb4d8d0>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except socket.error as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"Can't create a connection to host {host} and port {port} \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"(timeout is {timeout} and source_address is {source_address}).\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               ) from e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               pg8000.exceptions.InterfaceError: Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:215: InterfaceError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | The above exception was the direct cause of the following exception:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <tests.test_postgres.PostgresqlTest testMethod=test_nested_transactions>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def setUp(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user = os.getenv('PGUSER') or getuser()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pw = os.getenv('PGPASS')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user_pass = user if pw is None else f'{user}:{pw}'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.fixtures = pugsql.module('tests/sql/postgres')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.fixtures.connect(f'postgresql+pg8000://{user_pass}@127.0.0.1')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       self.fixtures.setup()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tests/test_postgres.py:14: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pugsql/statement.py:157: in __call__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     r = self._module._execute(self._text, *multiparams, **params)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pugsql/compiler.py:142: in _execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self.engine.execute(clause, *multiparams, **params)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | <string>:2: in execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ???\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/deprecations.py:401: in warned\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return fn(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3151: in execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     connection = self.connect(close_with_result=True)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3210: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._connection_cls(self, close_with_result=close_with_result)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:96: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     else engine.raw_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3289: in raw_connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._wrap_pool_connect(self.pool.connect, _connection)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3260: in _wrap_pool_connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     e, dialect, self\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2107: in _handle_dbapi_exception_noconnection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     sqlalchemy_exception, with_traceback=exc_info[2], from_=e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3256: in _wrap_pool_connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return fn()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:310: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return _ConnectionFairy._checkout(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:868: in _checkout\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     fairy = _ConnectionRecord.checkout(pool)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:476: in checkout\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     rec = pool._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:146: in _do_get\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self._dec_overflow()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: in __exit__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:143: in _do_get\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:256: in _create_connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return _ConnectionRecord(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:371: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self.__connect()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:666: in __connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: in __exit__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:661: in __connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/create.py:590: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return dialect.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/default.py:597: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self.dbapi.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/__init__.py:129: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     replication=replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/legacy.py:442: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     super().__init__(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77fb4d8d0>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except socket.error as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"Can't create a connection to host {host} and port {port} \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"(timeout is {timeout} and source_address is {source_address}).\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               ) from e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               sqlalchemy.exc.InterfaceError: (pg8000.exceptions.InterfaceError) Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               (Background on this error at: https://sqlalche.me/e/14/rvf5)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:215: InterfaceError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _____________ PostgresqlTest.test_rolling_back_nested_transactions _____________\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77f961210>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:209: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | address = ('127.0.0.1', 5432), timeout = None, source_address = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                           source_address=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Connect to *address* and return the socket object.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port)``) and return the socket object.  Passing the optional\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         *timeout* parameter will set the timeout on the socket instance\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for the socket to bind as a source address before making the connection.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         A host of '' or port 0 tells the OS to use the default.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host, port = address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             af, socktype, proto, canonname, sa = res\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock = socket(af, socktype, proto)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.settimeout(timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if source_address:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.bind(source_address)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock.connect(sa)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 # Break explicitly a reference cycle\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return sock\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except error as _:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 err = _\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if sock is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.close()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if err is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               raise err\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | address = ('127.0.0.1', 5432), timeout = None, source_address = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                           source_address=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Connect to *address* and return the socket object.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port)``) and return the socket object.  Passing the optional\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         *timeout* parameter will set the timeout on the socket instance\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for the socket to bind as a source address before making the connection.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         A host of '' or port 0 tells the OS to use the default.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host, port = address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             af, socktype, proto, canonname, sa = res\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock = socket(af, socktype, proto)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.settimeout(timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if source_address:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.bind(source_address)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               sock.connect(sa)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | The above exception was the direct cause of the following exception:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = Engine(postgresql+pg8000://postgres:***@127.0.0.1)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | fn = <bound method Pool.connect of <sqlalchemy.pool.impl.QueuePool object at 0x7fc77f971710>>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _wrap_pool_connect(self, fn, connection):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         dialect = self.dialect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           return fn()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3256: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77f971710>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Return a DBAPI connection from the pool.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         The connection is instrumented such that when its\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ``close()`` method is called, the connection will be returned to\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         the pool.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return _ConnectionFairy._checkout(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:310: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cls = <class 'sqlalchemy.pool.base._ConnectionFairy'>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77f971710>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | threadconns = None, fairy = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     @classmethod\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _checkout(cls, pool, threadconns=None, fairy=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if not fairy:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           fairy = _ConnectionRecord.checkout(pool)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:868: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cls = <class 'sqlalchemy.pool.base._ConnectionRecord'>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77f971710>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     @classmethod\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def checkout(cls, pool):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       rec = pool._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:476: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77f971710>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _do_get(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         use_overflow = self._max_overflow > -1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             wait = use_overflow and self._overflow >= self._max_overflow\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             return self._pool.get(wait, self._timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except sqla_queue.Empty:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # don't do things inside of \"except Empty\", because when we say\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # we timed out or can't connect and raise, Python 3 tells\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # people the real error is queue.Empty which it isn't.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pass\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if use_overflow and self._overflow >= self._max_overflow:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not wait:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise exc.TimeoutError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"QueuePool limit of size %d overflow %d reached, \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"connection timed out, timeout %0.2f\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     % (self.size(), self.overflow(), self._timeout),\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     code=\"3o7r\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if self._inc_overflow():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 with util.safe_reraise():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   self._dec_overflow()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:146: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fc77f961cd0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | type_ = None, value = None, traceback = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __exit__(self, type_, value, traceback):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # see #2703 for notes\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if type_ is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exc_type, exc_value, exc_tb = self._exc_info\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self._exc_info = None  # remove potential circular references\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not self.warn_only:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 compat.raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     exc_value,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         exception, with_traceback=None, replace_context=None, from_=False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         r\"\"\"implement \"raise\" with cause support.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param exception: exception to raise\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param with_traceback: will call exception.with_traceback()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param replace_context: an as-yet-unsupported feature.  This is\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          an exception object which we are \"replacing\", e.g., it's our\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          \"cause\" but we don't want it printed.    Basically just what\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          ``__suppress_context__`` does but we don't want to suppress\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          the enclosing context, if any.  So for now we make it the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          cause.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param from\\_: the cause.  this actually sets the cause and doesn't\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          hope to hide it someday.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if with_traceback is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception = exception.with_traceback(with_traceback)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if from_ is not False:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = from_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         elif replace_context is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # no good solution here, we would like to have the exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # have only the context of replace_context.__context__ so that the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # intermediary exception does not change, but we can't figure\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # that out.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = replace_context\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77f971710>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _do_get(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         use_overflow = self._max_overflow > -1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             wait = use_overflow and self._overflow >= self._max_overflow\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             return self._pool.get(wait, self._timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except sqla_queue.Empty:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # don't do things inside of \"except Empty\", because when we say\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # we timed out or can't connect and raise, Python 3 tells\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # people the real error is queue.Empty which it isn't.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pass\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if use_overflow and self._overflow >= self._max_overflow:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not wait:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise exc.TimeoutError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"QueuePool limit of size %d overflow %d reached, \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"connection timed out, timeout %0.2f\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     % (self.size(), self.overflow(), self._timeout),\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     code=\"3o7r\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if self._inc_overflow():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:143: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77f971710>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _create_connection(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Called by subclasses to create a new ConnectionRecord.\"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return _ConnectionRecord(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:256: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77f961290>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77f971710>, connect = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(self, pool, connect=True):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.__pool = pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if connect:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           self.__connect()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:371: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77f961290>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pool = self.__pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # ensure any existing connection is removed, so that if\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # creator fails, this attribute stays None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.dbapi_connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.starttime = time.time()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pool.logger.debug(\"Created new connection %r\", connection)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.fresh = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except Exception as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             with util.safe_reraise():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               pool.logger.debug(\"Error on connect(): %s\", e)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:666: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fc77f961b50>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | type_ = None, value = None, traceback = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __exit__(self, type_, value, traceback):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # see #2703 for notes\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if type_ is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exc_type, exc_value, exc_tb = self._exc_info\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self._exc_info = None  # remove potential circular references\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not self.warn_only:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 compat.raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     exc_value,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         exception, with_traceback=None, replace_context=None, from_=False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         r\"\"\"implement \"raise\" with cause support.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param exception: exception to raise\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param with_traceback: will call exception.with_traceback()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param replace_context: an as-yet-unsupported feature.  This is\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          an exception object which we are \"replacing\", e.g., it's our\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          \"cause\" but we don't want it printed.    Basically just what\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          ``__suppress_context__`` does but we don't want to suppress\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          the enclosing context, if any.  So for now we make it the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          cause.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param from\\_: the cause.  this actually sets the cause and doesn't\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          hope to hide it someday.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if with_traceback is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception = exception.with_traceback(with_traceback)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if from_ is not False:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = from_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         elif replace_context is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # no good solution here, we would like to have the exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # have only the context of replace_context.__context__ so that the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # intermediary exception does not change, but we can't figure\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # that out.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = replace_context\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77f961290>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pool = self.__pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # ensure any existing connection is removed, so that if\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # creator fails, this attribute stays None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.dbapi_connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.starttime = time.time()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:661: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | connection_record = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77f961290>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(connection_record=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if dialect._has_events:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             for fn in dialect.dispatch.do_connect:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 connection = fn(dialect, connection_record, cargs, cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if connection is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     return connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return dialect.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/create.py:590: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000 object at 0x7fc77f971f10>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cargs = ()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cparams = {'host': '127.0.0.1', 'password': 'postgres', 'user': 'postgres'}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(self, *cargs, **cparams):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # inherits the docstring from interfaces.Dialect.connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return self.dbapi.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/default.py:597: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | user = 'postgres', host = '127.0.0.1', database = None, port = 5432\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | password = 'postgres', source_address = None, unix_sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | ssl_context = None, timeout = None, tcp_keepalive = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         return Connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             host=host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             database=database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             port=port,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             password=password,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             source_address=source_address,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             unix_sock=unix_sock,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             ssl_context=ssl_context,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             timeout=timeout,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             tcp_keepalive=tcp_keepalive,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             application_name=application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           replication=replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/__init__.py:129: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77f961210>, args = ('postgres',)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | kwargs = {'application_name': None, 'database': None, 'host': '127.0.0.1', 'password': 'postgres', ...}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(self, *args, **kwargs):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           super().__init__(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/legacy.py:442: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77f961210>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except socket.error as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"Can't create a connection to host {host} and port {port} \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"(timeout is {timeout} and source_address is {source_address}).\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               ) from e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               pg8000.exceptions.InterfaceError: Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:215: InterfaceError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | The above exception was the direct cause of the following exception:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <tests.test_postgres.PostgresqlTest testMethod=test_rolling_back_nested_transactions>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def setUp(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user = os.getenv('PGUSER') or getuser()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pw = os.getenv('PGPASS')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user_pass = user if pw is None else f'{user}:{pw}'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.fixtures = pugsql.module('tests/sql/postgres')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.fixtures.connect(f'postgresql+pg8000://{user_pass}@127.0.0.1')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       self.fixtures.setup()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tests/test_postgres.py:14: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pugsql/statement.py:157: in __call__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     r = self._module._execute(self._text, *multiparams, **params)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pugsql/compiler.py:142: in _execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self.engine.execute(clause, *multiparams, **params)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | <string>:2: in execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ???\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/deprecations.py:401: in warned\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return fn(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3151: in execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     connection = self.connect(close_with_result=True)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3210: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._connection_cls(self, close_with_result=close_with_result)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:96: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     else engine.raw_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3289: in raw_connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._wrap_pool_connect(self.pool.connect, _connection)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3260: in _wrap_pool_connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     e, dialect, self\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2107: in _handle_dbapi_exception_noconnection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     sqlalchemy_exception, with_traceback=exc_info[2], from_=e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3256: in _wrap_pool_connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return fn()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:310: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return _ConnectionFairy._checkout(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:868: in _checkout\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     fairy = _ConnectionRecord.checkout(pool)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:476: in checkout\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     rec = pool._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:146: in _do_get\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self._dec_overflow()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: in __exit__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:143: in _do_get\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:256: in _create_connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return _ConnectionRecord(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:371: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self.__connect()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:666: in __connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: in __exit__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:661: in __connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/create.py:590: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return dialect.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/default.py:597: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self.dbapi.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/__init__.py:129: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     replication=replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/legacy.py:442: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     super().__init__(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77f961210>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except socket.error as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"Can't create a connection to host {host} and port {port} \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"(timeout is {timeout} and source_address is {source_address}).\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               ) from e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               sqlalchemy.exc.InterfaceError: (pg8000.exceptions.InterfaceError) Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               (Background on this error at: https://sqlalche.me/e/14/rvf5)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:215: InterfaceError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _______________________ PostgresqlTest.test_transaction ________________________\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77fd37b50>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:209: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | address = ('127.0.0.1', 5432), timeout = None, source_address = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                           source_address=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Connect to *address* and return the socket object.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port)``) and return the socket object.  Passing the optional\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         *timeout* parameter will set the timeout on the socket instance\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for the socket to bind as a source address before making the connection.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         A host of '' or port 0 tells the OS to use the default.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host, port = address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             af, socktype, proto, canonname, sa = res\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock = socket(af, socktype, proto)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.settimeout(timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if source_address:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.bind(source_address)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock.connect(sa)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 # Break explicitly a reference cycle\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return sock\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except error as _:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 err = _\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if sock is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.close()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if err is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               raise err\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | address = ('127.0.0.1', 5432), timeout = None, source_address = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                           source_address=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Connect to *address* and return the socket object.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port)``) and return the socket object.  Passing the optional\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         *timeout* parameter will set the timeout on the socket instance\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for the socket to bind as a source address before making the connection.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         A host of '' or port 0 tells the OS to use the default.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host, port = address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             af, socktype, proto, canonname, sa = res\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock = socket(af, socktype, proto)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.settimeout(timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if source_address:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.bind(source_address)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               sock.connect(sa)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | The above exception was the direct cause of the following exception:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = Engine(postgresql+pg8000://postgres:***@127.0.0.1)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | fn = <bound method Pool.connect of <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fd379d0>>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _wrap_pool_connect(self, fn, connection):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         dialect = self.dialect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           return fn()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3256: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fd379d0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Return a DBAPI connection from the pool.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         The connection is instrumented such that when its\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ``close()`` method is called, the connection will be returned to\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         the pool.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return _ConnectionFairy._checkout(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:310: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cls = <class 'sqlalchemy.pool.base._ConnectionFairy'>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fd379d0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | threadconns = None, fairy = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     @classmethod\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _checkout(cls, pool, threadconns=None, fairy=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if not fairy:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           fairy = _ConnectionRecord.checkout(pool)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:868: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cls = <class 'sqlalchemy.pool.base._ConnectionRecord'>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fd379d0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     @classmethod\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def checkout(cls, pool):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       rec = pool._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:476: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fd379d0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _do_get(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         use_overflow = self._max_overflow > -1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             wait = use_overflow and self._overflow >= self._max_overflow\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             return self._pool.get(wait, self._timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except sqla_queue.Empty:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # don't do things inside of \"except Empty\", because when we say\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # we timed out or can't connect and raise, Python 3 tells\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # people the real error is queue.Empty which it isn't.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pass\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if use_overflow and self._overflow >= self._max_overflow:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not wait:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise exc.TimeoutError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"QueuePool limit of size %d overflow %d reached, \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"connection timed out, timeout %0.2f\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     % (self.size(), self.overflow(), self._timeout),\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     code=\"3o7r\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if self._inc_overflow():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 with util.safe_reraise():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   self._dec_overflow()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:146: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fc77fd37050>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | type_ = None, value = None, traceback = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __exit__(self, type_, value, traceback):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # see #2703 for notes\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if type_ is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exc_type, exc_value, exc_tb = self._exc_info\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self._exc_info = None  # remove potential circular references\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not self.warn_only:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 compat.raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     exc_value,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         exception, with_traceback=None, replace_context=None, from_=False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         r\"\"\"implement \"raise\" with cause support.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param exception: exception to raise\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param with_traceback: will call exception.with_traceback()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param replace_context: an as-yet-unsupported feature.  This is\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          an exception object which we are \"replacing\", e.g., it's our\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          \"cause\" but we don't want it printed.    Basically just what\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          ``__suppress_context__`` does but we don't want to suppress\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          the enclosing context, if any.  So for now we make it the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          cause.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param from\\_: the cause.  this actually sets the cause and doesn't\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          hope to hide it someday.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if with_traceback is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception = exception.with_traceback(with_traceback)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if from_ is not False:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = from_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         elif replace_context is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # no good solution here, we would like to have the exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # have only the context of replace_context.__context__ so that the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # intermediary exception does not change, but we can't figure\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # that out.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = replace_context\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fd379d0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _do_get(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         use_overflow = self._max_overflow > -1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             wait = use_overflow and self._overflow >= self._max_overflow\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             return self._pool.get(wait, self._timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except sqla_queue.Empty:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # don't do things inside of \"except Empty\", because when we say\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # we timed out or can't connect and raise, Python 3 tells\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # people the real error is queue.Empty which it isn't.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pass\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if use_overflow and self._overflow >= self._max_overflow:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not wait:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise exc.TimeoutError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"QueuePool limit of size %d overflow %d reached, \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"connection timed out, timeout %0.2f\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     % (self.size(), self.overflow(), self._timeout),\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     code=\"3o7r\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if self._inc_overflow():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:143: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fd379d0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _create_connection(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Called by subclasses to create a new ConnectionRecord.\"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return _ConnectionRecord(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:256: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77fd37c90>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77fd379d0>, connect = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(self, pool, connect=True):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.__pool = pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if connect:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           self.__connect()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:371: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77fd37c90>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pool = self.__pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # ensure any existing connection is removed, so that if\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # creator fails, this attribute stays None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.dbapi_connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.starttime = time.time()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pool.logger.debug(\"Created new connection %r\", connection)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.fresh = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except Exception as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             with util.safe_reraise():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               pool.logger.debug(\"Error on connect(): %s\", e)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:666: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fc77fd37090>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | type_ = None, value = None, traceback = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __exit__(self, type_, value, traceback):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # see #2703 for notes\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if type_ is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exc_type, exc_value, exc_tb = self._exc_info\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self._exc_info = None  # remove potential circular references\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not self.warn_only:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 compat.raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     exc_value,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         exception, with_traceback=None, replace_context=None, from_=False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         r\"\"\"implement \"raise\" with cause support.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param exception: exception to raise\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param with_traceback: will call exception.with_traceback()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param replace_context: an as-yet-unsupported feature.  This is\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          an exception object which we are \"replacing\", e.g., it's our\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          \"cause\" but we don't want it printed.    Basically just what\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          ``__suppress_context__`` does but we don't want to suppress\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          the enclosing context, if any.  So for now we make it the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          cause.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param from\\_: the cause.  this actually sets the cause and doesn't\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          hope to hide it someday.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if with_traceback is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception = exception.with_traceback(with_traceback)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if from_ is not False:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = from_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         elif replace_context is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # no good solution here, we would like to have the exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # have only the context of replace_context.__context__ so that the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # intermediary exception does not change, but we can't figure\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # that out.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = replace_context\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77fd37c90>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pool = self.__pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # ensure any existing connection is removed, so that if\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # creator fails, this attribute stays None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.dbapi_connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.starttime = time.time()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:661: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | connection_record = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77fd37c90>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(connection_record=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if dialect._has_events:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             for fn in dialect.dispatch.do_connect:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 connection = fn(dialect, connection_record, cargs, cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if connection is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     return connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return dialect.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/create.py:590: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000 object at 0x7fc77fd37f10>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cargs = ()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cparams = {'host': '127.0.0.1', 'password': 'postgres', 'user': 'postgres'}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(self, *cargs, **cparams):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # inherits the docstring from interfaces.Dialect.connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return self.dbapi.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/default.py:597: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | user = 'postgres', host = '127.0.0.1', database = None, port = 5432\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | password = 'postgres', source_address = None, unix_sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | ssl_context = None, timeout = None, tcp_keepalive = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         return Connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             host=host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             database=database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             port=port,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             password=password,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             source_address=source_address,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             unix_sock=unix_sock,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             ssl_context=ssl_context,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             timeout=timeout,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             tcp_keepalive=tcp_keepalive,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             application_name=application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           replication=replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/__init__.py:129: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77fd37b50>, args = ('postgres',)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | kwargs = {'application_name': None, 'database': None, 'host': '127.0.0.1', 'password': 'postgres', ...}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(self, *args, **kwargs):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           super().__init__(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/legacy.py:442: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77fd37b50>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except socket.error as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"Can't create a connection to host {host} and port {port} \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"(timeout is {timeout} and source_address is {source_address}).\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               ) from e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               pg8000.exceptions.InterfaceError: Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:215: InterfaceError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | The above exception was the direct cause of the following exception:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <tests.test_postgres.PostgresqlTest testMethod=test_transaction>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def setUp(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user = os.getenv('PGUSER') or getuser()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pw = os.getenv('PGPASS')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user_pass = user if pw is None else f'{user}:{pw}'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.fixtures = pugsql.module('tests/sql/postgres')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.fixtures.connect(f'postgresql+pg8000://{user_pass}@127.0.0.1')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       self.fixtures.setup()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tests/test_postgres.py:14: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pugsql/statement.py:157: in __call__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     r = self._module._execute(self._text, *multiparams, **params)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pugsql/compiler.py:142: in _execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self.engine.execute(clause, *multiparams, **params)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | <string>:2: in execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ???\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/deprecations.py:401: in warned\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return fn(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3151: in execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     connection = self.connect(close_with_result=True)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3210: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._connection_cls(self, close_with_result=close_with_result)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:96: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     else engine.raw_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3289: in raw_connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._wrap_pool_connect(self.pool.connect, _connection)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3260: in _wrap_pool_connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     e, dialect, self\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2107: in _handle_dbapi_exception_noconnection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     sqlalchemy_exception, with_traceback=exc_info[2], from_=e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3256: in _wrap_pool_connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return fn()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:310: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return _ConnectionFairy._checkout(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:868: in _checkout\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     fairy = _ConnectionRecord.checkout(pool)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:476: in checkout\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     rec = pool._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:146: in _do_get\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self._dec_overflow()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: in __exit__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:143: in _do_get\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:256: in _create_connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return _ConnectionRecord(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:371: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self.__connect()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:666: in __connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: in __exit__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:661: in __connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/create.py:590: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return dialect.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/default.py:597: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self.dbapi.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/__init__.py:129: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     replication=replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/legacy.py:442: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     super().__init__(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77fd37b50>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except socket.error as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"Can't create a connection to host {host} and port {port} \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"(timeout is {timeout} and source_address is {source_address}).\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               ) from e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               sqlalchemy.exc.InterfaceError: (pg8000.exceptions.InterfaceError) Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               (Background on this error at: https://sqlalche.me/e/14/rvf5)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:215: InterfaceError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _________________________ PostgresqlTest.test_where_in _________________________\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77ff86e50>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:209: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | address = ('127.0.0.1', 5432), timeout = None, source_address = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                           source_address=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Connect to *address* and return the socket object.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port)``) and return the socket object.  Passing the optional\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         *timeout* parameter will set the timeout on the socket instance\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for the socket to bind as a source address before making the connection.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         A host of '' or port 0 tells the OS to use the default.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host, port = address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             af, socktype, proto, canonname, sa = res\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock = socket(af, socktype, proto)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.settimeout(timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if source_address:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.bind(source_address)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock.connect(sa)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 # Break explicitly a reference cycle\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return sock\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except error as _:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 err = _\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if sock is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.close()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if err is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               raise err\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:728: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | address = ('127.0.0.1', 5432), timeout = None, source_address = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                           source_address=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Connect to *address* and return the socket object.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port)``) and return the socket object.  Passing the optional\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         *timeout* parameter will set the timeout on the socket instance\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         global default timeout setting returned by :func:`getdefaulttimeout`\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for the socket to bind as a source address before making the connection.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         A host of '' or port 0 tells the OS to use the default.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host, port = address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         err = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for res in getaddrinfo(host, port, 0, SOCK_STREAM):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             af, socktype, proto, canonname, sa = res\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 sock = socket(af, socktype, proto)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.settimeout(timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if source_address:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     sock.bind(source_address)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               sock.connect(sa)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/socket.py:716: ConnectionRefusedError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | The above exception was the direct cause of the following exception:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = Engine(postgresql+pg8000://postgres:***@127.0.0.1)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | fn = <bound method Pool.connect of <sqlalchemy.pool.impl.QueuePool object at 0x7fc77ff86650>>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _wrap_pool_connect(self, fn, connection):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         dialect = self.dialect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           return fn()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3256: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77ff86650>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Return a DBAPI connection from the pool.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         The connection is instrumented such that when its\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ``close()`` method is called, the connection will be returned to\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         the pool.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return _ConnectionFairy._checkout(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:310: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cls = <class 'sqlalchemy.pool.base._ConnectionFairy'>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77ff86650>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | threadconns = None, fairy = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     @classmethod\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _checkout(cls, pool, threadconns=None, fairy=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if not fairy:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           fairy = _ConnectionRecord.checkout(pool)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:868: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cls = <class 'sqlalchemy.pool.base._ConnectionRecord'>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77ff86650>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     @classmethod\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def checkout(cls, pool):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       rec = pool._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:476: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77ff86650>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _do_get(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         use_overflow = self._max_overflow > -1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             wait = use_overflow and self._overflow >= self._max_overflow\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             return self._pool.get(wait, self._timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except sqla_queue.Empty:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # don't do things inside of \"except Empty\", because when we say\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # we timed out or can't connect and raise, Python 3 tells\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # people the real error is queue.Empty which it isn't.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pass\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if use_overflow and self._overflow >= self._max_overflow:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not wait:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise exc.TimeoutError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"QueuePool limit of size %d overflow %d reached, \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"connection timed out, timeout %0.2f\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     % (self.size(), self.overflow(), self._timeout),\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     code=\"3o7r\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if self._inc_overflow():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 with util.safe_reraise():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   self._dec_overflow()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:146: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fc77ff84ad0>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | type_ = None, value = None, traceback = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __exit__(self, type_, value, traceback):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # see #2703 for notes\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if type_ is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exc_type, exc_value, exc_tb = self._exc_info\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self._exc_info = None  # remove potential circular references\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not self.warn_only:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 compat.raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     exc_value,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         exception, with_traceback=None, replace_context=None, from_=False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         r\"\"\"implement \"raise\" with cause support.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param exception: exception to raise\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param with_traceback: will call exception.with_traceback()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param replace_context: an as-yet-unsupported feature.  This is\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          an exception object which we are \"replacing\", e.g., it's our\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          \"cause\" but we don't want it printed.    Basically just what\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          ``__suppress_context__`` does but we don't want to suppress\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          the enclosing context, if any.  So for now we make it the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          cause.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param from\\_: the cause.  this actually sets the cause and doesn't\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          hope to hide it someday.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if with_traceback is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception = exception.with_traceback(with_traceback)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if from_ is not False:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = from_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         elif replace_context is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # no good solution here, we would like to have the exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # have only the context of replace_context.__context__ so that the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # intermediary exception does not change, but we can't figure\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # that out.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = replace_context\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77ff86650>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _do_get(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         use_overflow = self._max_overflow > -1\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             wait = use_overflow and self._overflow >= self._max_overflow\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             return self._pool.get(wait, self._timeout)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except sqla_queue.Empty:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # don't do things inside of \"except Empty\", because when we say\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # we timed out or can't connect and raise, Python 3 tells\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # people the real error is queue.Empty which it isn't.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pass\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if use_overflow and self._overflow >= self._max_overflow:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not wait:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 return self._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise exc.TimeoutError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"QueuePool limit of size %d overflow %d reached, \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     \"connection timed out, timeout %0.2f\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     % (self.size(), self.overflow(), self._timeout),\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     code=\"3o7r\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if self._inc_overflow():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:143: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77ff86650>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def _create_connection(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"Called by subclasses to create a new ConnectionRecord.\"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return _ConnectionRecord(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:256: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77ff86e10>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pool = <sqlalchemy.pool.impl.QueuePool object at 0x7fc77ff86650>, connect = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(self, pool, connect=True):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.__pool = pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if connect:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           self.__connect()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:371: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77ff86e10>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pool = self.__pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # ensure any existing connection is removed, so that if\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # creator fails, this attribute stays None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.dbapi_connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.starttime = time.time()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             pool.logger.debug(\"Created new connection %r\", connection)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.fresh = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         except Exception as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             with util.safe_reraise():\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               pool.logger.debug(\"Error on connect(): %s\", e)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:666: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fc77ff84a90>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | type_ = None, value = None, traceback = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __exit__(self, type_, value, traceback):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # see #2703 for notes\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if type_ is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exc_type, exc_value, exc_tb = self._exc_info\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self._exc_info = None  # remove potential circular references\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if not self.warn_only:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 compat.raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     exc_value,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >                   with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def raise_(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         exception, with_traceback=None, replace_context=None, from_=False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         r\"\"\"implement \"raise\" with cause support.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param exception: exception to raise\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param with_traceback: will call exception.with_traceback()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param replace_context: an as-yet-unsupported feature.  This is\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          an exception object which we are \"replacing\", e.g., it's our\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          \"cause\" but we don't want it printed.    Basically just what\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          ``__suppress_context__`` does but we don't want to suppress\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          the enclosing context, if any.  So for now we make it the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          cause.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         :param from\\_: the cause.  this actually sets the cause and doesn't\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |          hope to hide it someday.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         \"\"\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if with_traceback is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception = exception.with_traceback(with_traceback)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if from_ is not False:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = from_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         elif replace_context is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # no good solution here, we would like to have the exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # have only the context of replace_context.__context__ so that the\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # intermediary exception does not change, but we can't figure\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             # that out.\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             exception.__cause__ = replace_context\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77ff86e10>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __connect(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pool = self.__pool\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # ensure any existing connection is removed, so that if\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # creator fails, this attribute stays None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.dbapi_connection = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.starttime = time.time()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:661: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | connection_record = <sqlalchemy.pool.base._ConnectionRecord object at 0x7fc77ff86e10>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(connection_record=None):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if dialect._has_events:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             for fn in dialect.dispatch.do_connect:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 connection = fn(dialect, connection_record, cargs, cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 if connection is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     return connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return dialect.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/create.py:590: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <sqlalchemy.dialects.postgresql.pg8000.PGDialect_pg8000 object at 0x7fc77ff86990>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cargs = ()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | cparams = {'host': '127.0.0.1', 'password': 'postgres', 'user': 'postgres'}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(self, *cargs, **cparams):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         # inherits the docstring from interfaces.Dialect.connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       return self.dbapi.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/default.py:597: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | user = 'postgres', host = '127.0.0.1', database = None, port = 5432\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | password = 'postgres', source_address = None, unix_sock = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | ssl_context = None, timeout = None, tcp_keepalive = True\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def connect(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         return Connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             host=host,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             database=database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             port=port,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             password=password,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             source_address=source_address,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             unix_sock=unix_sock,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             ssl_context=ssl_context,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             timeout=timeout,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             tcp_keepalive=tcp_keepalive,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             application_name=application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           replication=replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/__init__.py:129: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77ff86e50>, args = ('postgres',)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | kwargs = {'application_name': None, 'database': None, 'host': '127.0.0.1', 'password': 'postgres', ...}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(self, *args, **kwargs):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >           super().__init__(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/legacy.py:442: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77ff86e50>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except socket.error as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"Can't create a connection to host {host} and port {port} \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"(timeout is {timeout} and source_address is {source_address}).\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               ) from e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               pg8000.exceptions.InterfaceError: Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:215: InterfaceError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | The above exception was the direct cause of the following exception:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <tests.test_postgres.PostgresqlTest testMethod=test_where_in>\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def setUp(self):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user = os.getenv('PGUSER') or getuser()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         pw = os.getenv('PGPASS')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user_pass = user if pw is None else f'{user}:{pw}'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.fixtures = pugsql.module('tests/sql/postgres')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.fixtures.connect(f'postgresql+pg8000://{user_pass}@127.0.0.1')\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >       self.fixtures.setup()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tests/test_postgres.py:14: \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pugsql/statement.py:157: in __call__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     r = self._module._execute(self._text, *multiparams, **params)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | pugsql/compiler.py:142: in _execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self.engine.execute(clause, *multiparams, **params)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | <string>:2: in execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ???\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/deprecations.py:401: in warned\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return fn(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3151: in execute\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     connection = self.connect(close_with_result=True)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3210: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._connection_cls(self, close_with_result=close_with_result)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:96: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     else engine.raw_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3289: in raw_connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._wrap_pool_connect(self.pool.connect, _connection)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3260: in _wrap_pool_connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     e, dialect, self\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2107: in _handle_dbapi_exception_noconnection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     sqlalchemy_exception, with_traceback=exc_info[2], from_=e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3256: in _wrap_pool_connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return fn()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:310: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return _ConnectionFairy._checkout(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:868: in _checkout\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     fairy = _ConnectionRecord.checkout(pool)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:476: in checkout\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     rec = pool._do_get()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:146: in _do_get\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self._dec_overflow()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: in __exit__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:143: in _do_get\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self._create_connection()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:256: in _create_connection\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return _ConnectionRecord(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:371: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self.__connect()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:666: in __connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:72: in __exit__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     with_traceback=exc_tb,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/util/compat.py:207: in raise_\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     raise exception\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/pool/base.py:661: in __connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/create.py:590: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return dialect.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/sqlalchemy/engine/default.py:597: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     return self.dbapi.connect(*cargs, **cparams)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/__init__.py:129: in connect\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     replication=replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/legacy.py:442: in __init__\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     super().__init__(*args, **kwargs)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | self = <pg8000.legacy.Connection object at 0x7fc77ff86e50>, user = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | host = '127.0.0.1', database = None, port = 5432, password = 'postgres'\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | source_address = None, unix_sock = None, ssl_context = None, timeout = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | tcp_keepalive = True, application_name = None, replication = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     def __init__(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         host=\"localhost\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         database=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         port=5432,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         password=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         source_address=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         unix_sock=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         ssl_context=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         timeout=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         tcp_keepalive=True,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         application_name=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         replication=None,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     ):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._client_encoding = \"utf8\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._commands_with_count = (\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"INSERT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"DELETE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"UPDATE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"MOVE\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"FETCH\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"COPY\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             b\"SELECT\",\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notifications = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.notices = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.parameter_statuses = deque(maxlen=100)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if user is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             raise InterfaceError(\"The 'user' connection parameter cannot be None\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         init_params = {\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"user\": user,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"database\": database,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"application_name\": application_name,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             \"replication\": replication,\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         }\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         for k, v in tuple(init_params.items()):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             if isinstance(v, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 init_params[k] = v.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif v is None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 del init_params[k]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             elif not isinstance(v, (bytes, bytearray)):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(f\"The parameter {k} can't be of type {type(v)}.\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.user = init_params[\"user\"]\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if isinstance(password, str):\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password.encode(\"utf8\")\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         else:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             self.password = password\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self.autocommit = False\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._xid = None\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._statement_nums = set()\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         self._caches = {}\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |     \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |         if unix_sock is None and host is not None:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             try:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 self._usock = socket.create_connection(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     (host, port), timeout, source_address\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 )\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |             except socket.error as e:\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                 raise InterfaceError(\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"Can't create a connection to host {host} and port {port} \"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   |                     f\"(timeout is {timeout} and source_address is {source_address}).\"\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | >               ) from e\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               sqlalchemy.exc.InterfaceError: (pg8000.exceptions.InterfaceError) Can't create a connection to host 127.0.0.1 and port 5432 (timeout is None and source_address is None).\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | E               (Background on this error at: https://sqlalche.me/e/14/rvf5)\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | \n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | /home/runneradmin/.cache/pypoetry/virtualenvs/pugsql-RGUqz-o1-py3.7/lib/python3.7/site-packages/pg8000/core.py:215: InterfaceError\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/mcfunley-pugsql/report.xml -\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | =========================== short test summary info ============================\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | FAILED tests/test_postgres.py::PostgresqlTest::test_multi_upsert - sqlalchemy...\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | FAILED tests/test_postgres.py::PostgresqlTest::test_nested_transactions - sql...\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | FAILED tests/test_postgres.py::PostgresqlTest::test_rolling_back_nested_transactions\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | FAILED tests/test_postgres.py::PostgresqlTest::test_transaction - sqlalchemy....\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | FAILED tests/test_postgres.py::PostgresqlTest::test_where_in - sqlalchemy.exc...\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   | =================== 5 failed, 130 passed, 1 skipped in 4.22s ===================\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u274c  Failure - Main run tests\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests] exitcode '1': failure\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests] \u2b50 Run Post abatilo/actions-poetry@v2.1.3\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/2a574f6b-90c2-4e23-af52-fe601fb5c568/act/abatilo-actions-poetry@v2.1.3/ dst=/var/run/act/actions/abatilo-actions-poetry@v2.1.3/\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/abatilo-actions-poetry@v2.1.3/] user=0 workdir=\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests]   \u2705  Success - Post abatilo/actions-poetry@v2.1.3\n[6adba504-9149-4027-a5f4-a39c23fdd1cc/Python 3.7 tests] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Python ${{ matrix.python-version }} tests' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/mcfunley-pugsql/.github/workflows/poetry-tests-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 120.41332268714905
    }
}