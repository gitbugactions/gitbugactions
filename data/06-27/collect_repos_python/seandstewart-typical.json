{
    "repository": "seandstewart/typical",
    "stars": 176,
    "language": "python",
    "size": 2793,
    "clone_url": "https://github.com/seandstewart/typical.git",
    "timestamp": "2023-07-01T13:15:16.071253Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_bind",
                "name": "test_typed_arg",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bind",
                "name": "test_typed_arg_varg",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bind",
                "name": "test_typed_arg_varg_kwarg",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bind",
                "name": "test_typed_varg",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bind",
                "name": "test_typed_kwarg",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bind",
                "name": "test_typed_arg_kwarg",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bind",
                "name": "test_typed_args_kwd",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bind",
                "name": "test_bind",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bind",
                "name": "test_bind_errors[one-params0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bind",
                "name": "test_bind_errors[one-params1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bind",
                "name": "test_bind_errors[one-params2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bind",
                "name": "test_bind_errors[kwd-params3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bind",
                "name": "test_bind_errors[kwd-params4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bind",
                "name": "test_bind_errors[kwarg-params5]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[1-1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[True-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[1.0-1.0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[None-None]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[Ellipsis-None]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive['foo'-'foo'0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[b'foo'-'foo']",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[bytearray(b'foo')-'foo']",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[{'foo'}-['foo']]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[frozenset({'foo'})-['foo']]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[('foo',)-['foo']]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[['foo']-['foo']0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[mappingproxy({'foo': 1})-{'foo': 1}]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[{'foo': 1}-{'foo': 1}]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[IPv4Address('0.0.0.0')-'0.0.0.0']",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[re.compile('foo')-'foo']",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[datetime.datetime(1970, 1, 1, 0, 0)-'1970-01-01T00:00:00']",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[datetime.datetime(1970, 1, 1, 0, 0, tzinfo=datetime.timezone(datetime.timedelta(seconds=3600)))-'1970-01-01T00:00:00+01:00']",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[Typic(var='foo')-{'var': 'foo'}]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[Data(foo='foo')-{'foo': 'foo'}]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[FromDict(foo=None)-{'foo': None}]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[Decimal('1000000000000000.3')-'1000000000000000.3']",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[<FooNum.bar: 'bar'>-'bar'0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[<tests.objects.Class object at 0x7f77dcc1d7d0>-{'var': 'foo'}]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[FieldMapp(foo_bar='bar')-{'foo': 'bar'}]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[Camel(foo_bar='bar')-{'fooBar': 'bar'}]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[SigOnly(foo_bar='bar')-{'foo_bar': 'bar'}]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[Omit(bar='foo', foo='bar')-{'bar': 'foo'}]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[<FooNum.bar: 'bar'>-'bar'1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[{<FooNum.bar: 'bar'>: Forward(foo=<FooNum.bar: 'bar'>)}-{'bar': {'foo': 'bar'}}]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive['foo'-'foo'1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[['foo']-['foo']1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive['foo'-'foo'2]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive['foo'-'foo'3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_primitive[ClassVarEnum()-{'foo': 'bar'}]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[t0-None-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[t1-None-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[t2-obj2-prim2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[MultiNum-MultiNum.INT-1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[MultiNum-MultiNum.STR-str]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[t5-obj5-prim5]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[t6-obj6-prim6]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[SerDict-obj7-prim7]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[CaseDict-obj8-prim8]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[TDict-obj9-prim9]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[NTup-obj10-prim10]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[ListUnion-obj11-prim11]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[SubTypic-obj12-prim12]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[t13-None-None]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_serialize[t14-bar-bar]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[t0-None-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[t1-None-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[t2-obj2-prim2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[MultiNum-MultiNum.INT-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[MultiNum-MultiNum.STR-str]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[t5-obj5-prim5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[t6-obj6-prim6]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[t7-obj7-prim7]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[t8-obj8-prim8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[SerDict-obj9-prim9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[TDict-obj10-prim10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[NTup-obj11-prim11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[ListUnion-obj12-prim12]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[t13-1.0-1.0]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[t14-1-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[t15-1.0-1.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[t16-1-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[t17-foo-foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[Decimal-obj18-1000000000000000.3]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[Decimal-obj19-1000000000000000.2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[SubTypic-obj20-prim20]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_serde_deserialize[TClass-obj21-prim21]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_tojson[None-null]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_tojson[MultiNum.INT-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_tojson[MultiNum.STR-\"str\"]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_tojson[obj3-{\"bar\":{\"var\":\"foo\"}}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_tojson[obj4-[\"foo\"]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_tojson[obj5-{\"bar\":\"foo\"}]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_tojson[obj6-{\"foos\":[{\"bar\":\"bar\",\"id\":null}]}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_tojson_native[None-null]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_tojson_native[MultiNum.INT-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_tojson_native[MultiNum.STR-\"str\"]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_tojson_native[obj3-[\"foo\"]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_tojson_native[obj4-{\"foos\":[{\"bar\":\"bar\",\"id\":null}]}]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_invalid_serializer[str-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_invalid_serializer[bool-]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_invalid_serializer[bytes-]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_invalid_serializer[dict-value3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_invalid_serializer[list-value4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_invalid_serializer[type5-value5]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_invalid_serializer[Bar-value6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_invalid_serializer[Bar-value7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_invalid_serializer[type8-value8]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_invalid_serializer[type9-value9]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_inherited_serde_flags",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_custom_encode",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_custom_decode",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_klass_custom_encdec",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_functional_custom_encdec",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_proto_iterate",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_functional_iterate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_klass_iterate",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_iterate_slots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_functional_iterate_exclude",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_protocol_iterate_exclude",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_klass_iterate_exclude",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_iterate_invalid[1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_iterate_invalid[1001]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_iterate_invalid[1.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_iterate_invalid[1000.5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_transmute_excluded",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_serdes",
                "name": "test_routine_protocol",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test__resolve_from_env[kwargs0-1-bar]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test__resolve_from_env[kwargs1-None-bar]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test__resolve_from_env[kwargs2-1-bar]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test__resolve_from_env[kwargs3-1-BAR]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test__resolve_from_env[kwargs4-1-OTHER_BAR]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test__resolve_from_env[kwargs5-1-FAB_BAR]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test__resolve_from_env[kwargs6-1-ABAR]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test__resolve_from_env_field",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test__resolve_from_env_factory[kwargs0-environ0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test__resolve_from_env_factory[kwargs1-environ1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_environ[get-bool-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_environ[get-b-]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_environ[get-bs-value2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_environ[get-date-value3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_environ[get-datetime-value4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_environ[get-dict-value5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_environ[get-float-1.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_environ[get-frozenset-value7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_environ[get-int-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_environ[get-list-value9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_environ[get-set-value10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_environ[get-str-]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_environ[get-uuid-value12]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_isbuiltintype[int]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_isbuiltintype[list]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_isbuiltintype[set]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_isbuiltintype[str]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_isbuiltintype[frozenset]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_isbuiltintype[bool]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_isbuiltintype[float]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_isbuiltintype[tuple]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_isbuiltintype[NoneType]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_isbuiltintype[bytearray]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_isbuiltintype[dict]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_isbuiltintype[bytes]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[dict-value0-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[dict-value1-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[annotation2-value2-expected2]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[list-value3-expected3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[annotation4-value4-expected4]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[set-value5-expected5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[annotation6-value6-expected6]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[tuple-value7-expected7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[annotation8-value8-expected8]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[str-1-10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[str-1-11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[float-1-1.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[bool-1-True0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[bool-1-True1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[bool-true-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[bool-True-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[bool-false-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[bool-False-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[bool-0-False0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[bool-0-False1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[datetime-1970-01-01-expected20]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[DateTime-1970-01-01-expected21]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[datetime-0-expected22]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[datetime-value23-expected23]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[DateTime-value24-expected24]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[date-1970-01-01-expected25]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[date-0-expected26]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[datetime-value27-expected27]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[date-value28-expected28]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[Time-01:00:00-expected29]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[time-01:00:00-expected30]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[time-value31-expected31]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[time-value32-expected32]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[time-value33-expected33]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[time-0-expected34]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[UUID-1-expected35]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[UUID-\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01-expected36]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[UUID-00000000-0000-0000-0000-000000000001-expected37]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[UUID-value38-expected38]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[SubUUID-value39-expected39]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[DirectoryPath-value40-expected40]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[Path-value41-expected41]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[FromDict-value42-expected42]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[Data-value43-expected43]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[dict-value44-expected44]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[list-value45-expected45]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[TDict-value46-expected46]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[NTup-value47-expected47]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[TDict-value48-expected48]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[Nested-value49-expected49]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[Nested-value50-expected50]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[NestedFromDict-value51-expected51]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[FooNum-bar-bar]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[Data-value53-expected53]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[NetworkAddress-localhost-localhost]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[annotation55-\\\\w+-\\\\w+]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[Data-value56-expected56]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[Nested-value57-expected57]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[Nested-value58-expected58]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[SubTypic-value59-expected59]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[SuperBase-value60-expected60]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[Dest-value61-expected61]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[MyClass-value62-expected62]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[defaultdict-value63-expected63]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_simple[list-<genexpr>-expected64]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal[annotation0-1-1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal[annotation1-1-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal[annotation2-1-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal[annotation3-1-1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal[annotation4-None-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal[annotation5-None-None]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal[annotation6-1-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal[annotation7-1-1]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal[annotation8-null-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal_invalid[annotation0-2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal_invalid[annotation1-2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal_invalid[annotation2-2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal_invalid[annotation3-2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal_invalid[annotation4-2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal_invalid[annotation5-2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal_invalid[annotation6-3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_literal_invalid[annotation7-3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_invalid_literal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate_literal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_newtype[UserID-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_subclassed_enum_with_default",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collection_metas[<class 'tests.objects.t_dict'>-{\"a\": \"2\"}-{'a': 2}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collection_metas[<class 'tests.objects.n_tup'>-{\"a\": \"2\"}-n_tup(a=2)]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collection_metas[<class 'tests.objects.ntup'>-{\"a\": \"2\"}-ntup(a='2')]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collection_metas[<class 'tests.objects.t_dict_partial'>-{}-{}]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_default_none",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_default_ellipsis",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_get_origin[typing.list-<class 'list'>]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_get_origin[typing.class_var-typing.class_var]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_get_origin[typing.list[str]-<class 'list'>]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_get_args[typing.list-()]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_get_args[typing.list[~t]-()]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_get_args[typing.list[str]-(<class 'str'>,)]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_get_args[typing.union[str, none_type]-(<class 'str'>, <class 'none_type'>)]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_supscripted[typing.union[str, none_type]-1-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_supscripted[typing.union[str, none_type]-none-none]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_supscripted[typing.class_var[str]-1-1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.list[int]-[\"1\"]]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.list[bool]-[\"1\"]]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.list[int]-('1',)]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.set[int]-[\"1\"]]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.set[bool]-[\"1\"]]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.set[int]-('1',)]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.tuple[int]-[\"1\"]]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.tuple[bool]-[\"1\"]]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.tuple[int]-{'1'}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.sequence[int]-[\"1\"]]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.sequence[bool]-[\"1\"]]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.sequence[int]-{'1'}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.collection[int]-[\"1\"]]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.collection[bool]-[\"1\"]]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.collection[int]-{'1'}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.collection[tests.objects.from_dict]-[{'foo': 'bar!'}]]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.collection[tests.objects.data]-[{'foo': 'bar!'}]]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.collection[tests.objects.nested]-[{'data': {'foo': 'bar!'}}]]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.collection[tests.objects.nested_from_dict]-[{'data': {'foo': 'bar!'}}]]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.collection[tests.objects.nested_from_dict]-[\"{'data': {'foo': 'bar!'}}\"]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_collections_subscripted[typing.collection[str]-t_class(a=1)]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_tuple_subscripted[annotation0-[\"1\", \"2\"]-expected0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_tuple_subscripted[annotation1-[\"1\", \"2\"]-expected1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_tuple_subscripted[annotation2-[\"1\", \"2\", \"ignore\"]-expected2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_tuple_subscripted[annotation3-[\"1\", \"2\", \"foo\"]-expected3]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.mapping[int, str]-{\"1\": 0}]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.mapping[int, bool]-{\"1\": false}]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.mapping[str, int]-{1: '0'}]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.mapping[str, bool]-{1: '0'}]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.mapping[datetime.datetime, datetime.datetime]-{0: '1970'}]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.dict[int, str]-{\"1\": 0}]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.dict[str, int]-{1: '0'}]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.dict[str, bool]-{1: '0'}]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.dict[datetime.datetime, datetime.datetime]-{0: '1970'}]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.dict[str, tests.objects.from_dict]-{'blah': {'foo': 'bar!'}}]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.mapping[int, tests.objects.data]-{'0': {'foo': 'bar!'}}]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.dict[datetime.date, tests.objects.nested]-{'1970': {'data': {'foo': 'bar!'}}}]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.mapping[bool, tests.objects.nested_from_dict]-{0: {'data': {'foo': 'bar!'}}}]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.dict[bytes, tests.objects.nested_from_dict]-{0: \"{'data': {'foo': 'bar!'}}\"}]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[<function new_type.<locals>.new_type at 0x7f77dceed950>-{\"1970\": \"foo\"}]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.default_dict[str, int]-{}]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.default_dict[str, typing.default_dict[str, int]]-{'foo': {}}]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.default_dict[str, tests.objects.default_none]-{'foo': {}}]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.default_dict[str, tests.objects.default_ellipsis]-{'foo': {}}]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_mapping_subscripted[typing.mapping[str, str]-t_class(a=1)]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_optional[typing.union[typing.list[int], none_type]-[\"1\"]-[1]]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_optional[typing.union[typing.list[int], none_type]-none-none]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_optional[typing.list[typing.union[int, none_type]]-[none]-[none]]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_optional[typing.list[typing.union[int, none_type]]-['1']-[1]]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_optional[typing.list[typing.union[typic.strict.strict[int], none_type]]-[1]-[1]]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_optional[typing.list[typing.union[typic.strict.strict[int], none_type]]-[none]-[none]]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_optional[typing.union[typing.mapping[str, int], none_type]-{\"foo\":\"1\"}-{'foo': 1}]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_optional[typing.union[typing.mapping[str, int], none_type]-none-none]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_optional[typing.mapping[typing.union[str, none_type], typing.union[int, none_type]]-{\"foo\":null}-{'foo': none}]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_optional[typing.mapping[typing.union[str, none_type], typing.union[int, none_type]]-{none:none}-{none: none}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_optional[typing.mapping[typing.union[str, none_type], typing.union[int, none_type]]-{none:1}-{none: 1}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_optional[typing.mapping[typing.union[str, none_type], typing.union[int, none_type]]-{1:1}-{'1': 1}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_nested_sequence",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_wrap_callable[func-1-int]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_wrap_callable[math-4-int]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_wrap_callable[number-1-int]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_wrap_class[<class 'tests.objects.class'>-var-<class 'str'>]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_wrap_class[<class 'tests.objects.data'>-foo-<class 'str'>]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typed[<function func at 0x7f77dcf40ef0>-1-none-<class 'int'>-<function isfunction at 0x7f77e08889e0>]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typed[<function optional at 0x7f77dcefe290>-1-none-<class 'str'>-<function isfunction at 0x7f77e08889e0>]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typed[<function optional at 0x7f77dcefe290>-none-none-<class 'none_type'>-<function isfunction at 0x7f77e08889e0>]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typed[<class 'tests.objects.data'>-1-operator.attrgetter('foo')-<class 'str'>-<function isclass at 0x7f77e0883dd0>]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typed[<class 'tests.objects.default_none'>-none-operator.attrgetter('none')-<class 'none_type'>-<function isclass at 0x7f77e0883dd0>]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typed[<class 'tests.objects.default_ellipsis'>-ellipsis-operator.attrgetter('ellipsis')-<class 'ellipsis'>-<function isclass at 0x7f77e0883dd0>]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typed[<class 'tests.objects.forward'>-bar-operator.attrgetter('foo')-<enum 'foo_num'>-<function isclass at 0x7f77e0883dd0>]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typed[<class 'tests.objects.frozen'>-0-operator.attrgetter('var')-<class 'bool'>-<function isclass at 0x7f77e0883dd0>]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_ensure_invalid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typed_varargs[<function varargs at 0x7f77dcf24950>-({'foo': 'bar'},)-{'bar': {'foo': 'bar'}}-<function <lambda> at 0x7f77dc671dd0>]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_get_origin_returns_origin[typing.mapping[int, str]-<class 'dict'>]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_get_origin_returns_origin[typing.mapping-<class 'dict'>]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_get_origin_returns_origin[<function new_type.<locals>.new_type at 0x7f77dceed950>-<class 'dict'>]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_get_origin_returns_origin[<function new_type.<locals>.new_type at 0x7f77dceba170>-<class 'int'>]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_eval_invalid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_setattr[data(foo='foo')-foo-1-<class 'str'>]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_setattr[<tests.objects.no_params object at 0x7f77dcbba090>-var-1-<class 'str'>]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_register",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_no_transmuter[1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_no_transmuter[foo]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typic_klass",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typic_klass_is_dataclass",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typic_klass_passes_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typic_klass_inheritance",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typic_frozen",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_classvar[klass_var_subscripted()-var-<class 'str'>]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typic_callable_delayed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typic_resolve",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained[<class 'tests.objects.short_str'>-foo-foo]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained[<class 'tests.objects.short_str'>-1-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained[<class 'tests.objects.large_int'>-1001-1001]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained[<class 'tests.objects.large_int_dict'>-[('foo', 1001)]-{'foo': 1001}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained[<class 'tests.objects.short_key_dict'>-{'foo': ''}-{'foo': ''}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained_invalid[<class 'tests.objects.short_str'>-fooooo]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained_invalid[<class 'tests.objects.large_int'>-500]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained_invalid[<class 'tests.objects.large_int_dict'>-{'foo': 1}]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained_invalid[<class 'tests.objects.large_int_dict'>-{'fooooo': 1001}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained_invalid[<class 'tests.objects.itemized_valued_dict'>-{'foo': 1}]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained_invalid[<class 'tests.objects.itemized_dict'>-{'foo': 1}]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained_invalid[<class 'tests.objects.itemized_keyed_valued_dict'>-{'foo': 1}]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained_invalid[<class 'tests.objects.itemized_keyed_dict'>-{'foo': 1}]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained_invalid[<class 'tests.objects.itemized_valued_dict'>-{'blah': 'foooooooo'}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained_invalid[<class 'tests.objects.itemized_keyed_valued_dict'>-{'blah': 'foooooooo'}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained_invalid[<class 'tests.objects.itemized_keyed_dict'>-{'foooooooo': 'blah'}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_cast_constrained_invalid[<class 'tests.objects.short_key_dict'>-{'fooooooo': 'blah'}]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_typic_klass_constrained",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_bad_constraint_class",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_mode",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_enforce_strict_mode",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_constrained_any",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_fails[typic.strict.strict[typing.list[int]]-['1']]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_fails[typic.strict.strict[typing.list[int]]-[1.0]]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_fails[typic.strict.strict[typing.list[int]]-[none]]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_fails[typic.strict.strict[typing.list[int]]-{1}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_fails[typic.strict.strict[typing.union[typing.list[int], none_type]]-{none}]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_fails[typic.strict.strict[typing.union[typing.list[int], none_type]]-[1.0]]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_fails[typing.union[typic.strict.strict[str], none_type]-1.0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_fails[typic.strict.strict[typing.union[int, str]]-1.0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_fails[typic.strict.strict[typing.union[int, str]]-none]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_fails[typic.strict.strict[str]-b'']",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_passes[typic.strict.strict[typing.list[int]]-[1]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_passes[typic.strict.strict[typing.union[typing.list[int], none_type]]-none]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_passes[typic.strict.strict[typing.union[typing.list[int], none_type]]-[1]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_passes[typing.union[typic.strict.strict[str], none_type]-none]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_passes[typing.union[typic.strict.strict[str], none_type]-foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_passes[typic.strict.strict[typing.union[str, none_type]]-foo]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_passes[typic.strict.strict[typing.union[str, none_type]]-none]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_passes[typic.strict.strict[typing.union[int, str]]-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_passes[typic.strict.strict[typing.union[int, str]]-foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_anno_passes[typic.strict.strict[str]-foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_varargs_fails[<function strictvaradd at 0x7f77dceb74d0>-('1', 2)-{'foo': 3}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_varargs_fails[<function strictvaradd at 0x7f77dceb74d0>-(1, none)-{'foo': 3}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_varargs_fails[<function strictvaradd at 0x7f77dceb74d0>-(1, 2)-{'foo': b'4'}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_strict_varargs_passes[<function strictvaradd at 0x7f77dceb74d0>-(1, 2)-{'foo': 3}-6]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_nested_constrained[<class 'tests.test_typed.addresses'>-{'tcp://foo'}-['tcp://foo']]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_transmute_nested_constrained[<class 'tests.test_typed.addresse_map'>-{'foo': 'tcp://foo'}-{'foo': 'tcp://foo'}]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate[<class 'tests.objects.typic'>-{'var': 'foo'}]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate[<class 'tests.objects.t_dict'>-{'a': 1}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate[<class 'tests.objects.default_ellipsis'>-{'ellipsis': ellipsis}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate[<class 'tests.objects.default_none'>-{'none': none}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate[typing.union[str, pathlib.path]-.0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate[typing.union[str, pathlib.path]-.1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate_transmute[<class 'tests.objects.typic'>-{'var': 'foo'}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate_transmute[<class 'tests.objects.t_dict'>-{'a': 1}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate_invalid[<class 'int'>-]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate_invalid[<class 'str'>-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate_invalid[<class 'bytes'>-]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate_invalid[<class 'float'>-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate_invalid[<class 'list'>-set()]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate_invalid[<class 'dict'>-[]]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate_invalid[<class 'tests.objects.typic'>-{'var': 1}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate_invalid[<class 'tests.objects.t_dict'>-{'a': ''}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate_invalid[typing.mapping[int, str]-{'b': ''}]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate_invalid[typing.mapping[pathlib.path, str]-{1: ''}]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_validate_invalid[typing.union[str, pathlib.path]-1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[<tests.objects.alchemy object at 0x7f77dcbb5d10>-dict]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[<tests.objects.alchemy object at 0x7f77dcbb5d10>-list]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[<tests.objects.alchemy object at 0x7f77dcbb5d10>-tuple]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[<tests.objects.alchemy object at 0x7f77dcbb5d10>-target3]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[<tests.objects.alchemy object at 0x7f77dcbb5d10>-Alchemy]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[<tests.objects.alchemy object at 0x7f77dcbb5d10>-Pydantic]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[<tests.objects.alchemy object at 0x7f77dcbb5d10>-Typical]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[bar='bar' id=none-dict]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[bar='bar' id=none-list]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[bar='bar' id=none-tuple]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[bar='bar' id=none-target3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[bar='bar' id=none-Alchemy]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[bar='bar' id=none-Pydantic]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[bar='bar' id=none-Typical]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[typical(bar='bar', id=none)-dict]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[typical(bar='bar', id=none)-list]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[typical(bar='bar', id=none)-tuple]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[typical(bar='bar', id=none)-target3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[typical(bar='bar', id=none)-Alchemy]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[typical(bar='bar', id=none)-Pydantic]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate[typical(bar='bar', id=none)-Typical]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate_error[<class 'tests.objects.typic'>-<tests.objects.alchemy object at 0x7f77dcbb5550>-<class 'value_error'>]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_translate_error[<class 'tests.test_typed.cls'>-<tests.objects.alchemy object at 0x7f77dcbb5bd0>-<class 'type_error'>]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_prevent_recursion_with_slots",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_transmute[A-value0-expected0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_transmute[B-value1-expected1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_transmute[C-value2-expected2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_transmute[C-value3-expected3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_transmute[D-value4-expected4]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_transmute[D-value5-expected5]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_transmute[E-value6-expected6]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_transmute[E-value7-expected7]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_transmute[ABs-value8-expected8]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_transmute[H-value9-expected9]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_transmute[J-value10-expected10]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_validate[A-value0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_validate[B-value1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_validate[C-value2]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_validate[C-value3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_validate[D-value4]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_validate[D-value5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_validate[E-value6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_validate[E-value7]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_validate[ABs-value8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_validate[H-value9]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_validate[J-value10]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_primitive[value0-expected0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_primitive[value1-expected1]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_primitive[value2-expected2]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_primitive[value3-expected3]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_primitive[value4-expected4]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_primitive[value5-expected5]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_primitive[value6-expected6]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_primitive[value7-expected7]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_primitive[value8-expected8]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_primitive[value9-expected9]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_primitive[value10-expected10]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_validate_invalid[B-value0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_recursive_validate_invalid[E-value1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_tagged_union_transmute[ABlah-value0-expected0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_tagged_union_transmute[CBlah-value1-expected1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_tagged_union_transmute[DBlah-value2-expected2]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_tagged_union_validate[ABlah-value0]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_tagged_union_validate[CBlah-value1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_tagged_union_validate[DBlah-value2]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_union_transmute[annotation0-1-1-int]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_union_transmute[annotation1-foo-foo-str]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_union_transmute[annotation2-1-1-int]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_union_transmute[annotation3-1970-01-01-expected3-date]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_union_transmute[annotation4-1001-1001-LargeInt]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_union_transmute[annotation5-1001.0-1001.0-LargeFloat]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_union_transmute[annotation6-1001.0-1001.0-LargeFloat]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_tagged_union_validate_invalid[ABlah-value0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_tagged_union_validate_invalid[CBlah-value1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_tagged_union_validate_invalid[DBlah-value2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_local_namespace",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_pep_585",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typed",
                "name": "test_pep_604",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.3p.test_pandas",
                "name": "test_transmute_pandas_series",
                "time": 0.515,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.3p.test_pandas",
                "name": "test_transmute_pandas_dataframe",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.3p.test_pandas",
                "name": "test_transmute_pandas_union",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values[val0-constraint0-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values[val1-constraint1-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values[val2-constraint2-expected2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values[val3-constraint3-expected3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values[val4-constraint4-expected4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values[val5-constraint5-expected5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values[val6-constraint6-expected6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values[val7-constraint7-expected7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values_error[val0-constraint0-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values_error[val1-constraint1-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values_error[val2-constraint2-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values_error[val3-constraint3-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values_multi[val0-constraint0-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values_multi[val1-constraint1-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values_nested_constraints[val0-constraint0-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values_nested_constraints[val1-constraint1-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_array",
                "name": "test_validate_values_nested_constraints[val2-constraint2-expected2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[str-]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[int-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[float-0.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[dict-v3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[list-v4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[tuple-v5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[frozenset-v6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[t7-v7]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[t8-v8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[t9-1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[t10-v10]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[t11-v11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[Foo-v12]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[t13-v13]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[t14-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[t15-v15]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[t16-v16]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[t17-v17]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[datetime-v18]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[t19-v19]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[t20-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[MyStr-]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints[MyURL-foo.com]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[<class 'str'>-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[<class 'int'>-'']",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[<class 'float'>-'']",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[<class 'dict'>-[]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[<class 'list'>-{}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[<class 'tuple'>-'']",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[<class 'frozenset'>-'']",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[typing.Dict[str, int]-{'foo': ''}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[typing.List[int]-['']]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[typing.Union[int, str]-[]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[typing.List[typing.Union[typing.Dict[str, int], NoneType]]-[[]]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[typing.List[typing.Union[typing.Dict[str, int], NoneType]]-[{'foo': ''}]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[<class 'tests.constraints.test_factory.Foo'>-{'bar': 1}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[<class 'tests.constraints.test_factory.Foo'>-{'bar': '', 'unknown': 1}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[typing.Union[tests.constraints.test_factory.Foo, NoneType]-{'bar': 1}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[typing.Union[tests.constraints.test_factory.Foo, NoneType]-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[typing.List[typing.Union[tests.constraints.test_factory.Foo, typing.Dict[str, int], NoneType]]-[[]]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[typing.List[typing.Union[tests.constraints.test_factory.Foo, typing.Dict[str, int], NoneType]]-['']]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[typing.List[typing.Union[tests.constraints.test_factory.Foo, typing.Dict[str, int], NoneType]]-[{'bar': ''}]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_factory",
                "name": "test_get_contraints_invalid[<class 'tests.constraints.test_factory.MyStr'>-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys[val0-constraint0-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys[val1-constraint1-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys[val2-constraint2-expected2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys[val3-constraint3-expected3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys[val4-constraint4-expected4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys[val5-constraint5-expected5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys[val6-constraint6-expected6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys[val7-constraint7-expected7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys[val8-constraint8-expected8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys_error[val0-constraint0-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys_error[val1-constraint1-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys_error[val2-constraint2-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys_error[val3-constraint3-ConstraintValueError]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys_error[val4-constraint4-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys_error[val5-constraint5-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys_error[val6-constraint6-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys_error[val7-constraint7-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_validate_keys_error[val8-constraint8-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_syntax_error[kwargs0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_mapping",
                "name": "test_syntax_error[kwargs1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_multi",
                "name": "test_multi_type[constraints0-types0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_multi",
                "name": "test_multi_type[constraints1-types1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_multi",
                "name": "test_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[0-constraint0-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[1-constraint1-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[2-constraint2-2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[3-constraint3-3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[4-constraint4-4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[5-constraint5-5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[0.0-constraint6-0.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[1.0-constraint7-1.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[2.0-constraint8-2.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[3.0-constraint9-3.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[4.0-constraint10-4.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[5.0-constraint11-5.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[val12-constraint12-0.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[val13-constraint13-1.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[val14-constraint14-2.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[val15-constraint15-3.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[val16-constraint16-4.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[val17-constraint17-5.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[val18-constraint18-6.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[val19-constraint19-7.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values[val20-constraint20-expected20]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[0-constraint0-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[1-constraint1-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[2-constraint2-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[3-constraint3-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[0.0-constraint4-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[1.0-constraint5-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[2.0-constraint6-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[3.0-constraint7-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[val8-constraint8-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[val9-constraint9-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[val10-constraint10-ConstraintValueError]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[val11-constraint11-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[val12-constraint12-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[val13-constraint13-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_error[val14-constraint14-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_constraint_syntax_error[IntContraints-kwargs0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_constraint_syntax_error[IntContraints-kwargs1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_constraint_syntax_error[IntContraints-kwargs2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_constraint_syntax_error[IntContraints-kwargs3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_constraint_syntax_error[DecimalContraints-kwargs4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_complex[1-constraint0-1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_number",
                "name": "test_validate_values_complex[val1-constraint1-7.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_text",
                "name": "test_validate_values[-constraint0-]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_text",
                "name": "test_validate_values[foo -constraint1-foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_text",
                "name": "test_validate_values[min-constraint2-min]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_text",
                "name": "test_validate_values[max-constraint3-max]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_text",
                "name": "test_validate_values[cur-constraint4-cu]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_text",
                "name": "test_validate_values[re-constraint5-re]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_text",
                "name": "test_validate_values_error[-constraint0-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_text",
                "name": "test_validate_values_error[maxi-constraint1-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_text",
                "name": "test_validate_values_error[ -constraint2-ConstraintValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_text",
                "name": "test_validate_values_complex[foo -constraint0-foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_text",
                "name": "test_validate_values_complex[foobar -constraint1-foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_text",
                "name": "test_validate_values_complex[foo bar -constraint2-foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_type",
                "name": "test_validation_if_not_strict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_type",
                "name": "test_validation_if_strict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_type",
                "name": "test_allow_nullable_in_strict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.constraints.test_type",
                "name": "test_validation_if_strict_and_nullable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_dsn_info_attrs[driver-mysql]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_dsn_info_attrs[host-foobar.net]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_dsn_info_attrs[username-foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_dsn_info_attrs[password-bar]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_dsn_info_attrs[port-3306]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_dsn_info_attrs[name-/db]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_dsn_info_attrs[address-mysql://foo:bar@foobar.net:3306/db]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_dsn_info_attrs[address_encoded-mysql%3A//foo%3Abar%40foobar.net%3A3306/db]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_get_default_port",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_json_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_is_internal[mysql://localhost]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_is_internal[mysql://127.0.0.1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_is_internal[mysql://192.168.1.1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_is_private[mysql://127.0.0.1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_is_private[mysql://localhost]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_invalid_dsn[--wfofj:fou.0.has]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_invalid_dsn[]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_invalid_dsn[://127.0.0.1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_invalid_dsn[mysql://]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_invalid_dsn[othersql://192.168.1.1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_sqlite_dsn[sqlite://my.db]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_dsn",
                "name": "test_sqlite_dsn[sqlite:///my.db]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_email_info_attrs[username-o'foo.bar-o'foo.bar@foobar.net]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_email_info_attrs[host-foobar.net-o'foo.bar@foobar.net]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_email_info_attrs[address-o'foo.bar@foobar.net-o'foo.bar@foobar.net]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_email_info_attrs[address_encoded-o%27foo.bar%40foobar.net-o'foo.bar@foobar.net]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_email_info_attrs[username-o'foo.bar-Foo Bar <o'foo.bar@foobar.net>]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_email_info_attrs[name-Foo Bar-Foo Bar <o'foo.bar@foobar.net>]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_email_info_attrs[address-Foo Bar <o'foo.bar@foobar.net>-Foo Bar <o'foo.bar@foobar.net>]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_email_info_attrs[address_encoded-Foo Bar <o%27foo.bar%40foobar.net>-Foo Bar <o'foo.bar@foobar.net>]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_json_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_is_internal[foo.bar@localhost]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_is_internal[foo.bar@127.0.0.1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_is_internal[foo.bar@192.168.1.1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_is_private[foo.bar@127.0.0.1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_is_private[foo.bar@localhost]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_is_ip",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_invalid_email[--wfofj:fou.0.has]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_invalid_email[]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_invalid_email[foo.bar]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_invalid_email[@foobar.net]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_invalid_email[.@foobar.net]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_invalid_email[foo.@foobar.net]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_email",
                "name": "test_is_named",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_frozendict",
                "name": "test_frozendict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_frozendict",
                "name": "test_frozendict_immutable[args0-__delitem__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_frozendict",
                "name": "test_frozendict_immutable[args1-popitem]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_frozendict",
                "name": "test_frozendict_immutable[args2-clear]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_frozendict",
                "name": "test_frozendict_immutable[args3-pop]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_frozendict",
                "name": "test_frozendict_immutable[args4-update]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_frozendict",
                "name": "test_frozendict_immutable[args5-setdefault]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_frozendict",
                "name": "test_frozendict_immutable[args6-__setitem__]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_frozendict",
                "name": "test_copy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_frozendict",
                "name": "test_deepcopy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_path",
                "name": "test_invalid_path[/some/path/-FilePath]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_path",
                "name": "test_invalid_path[/some/path-DirectoryPath]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_secret",
                "name": "test_secrets[foo-***]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_secret",
                "name": "test_secrets[foo-b'***']",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_eq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar/path;attr=value?query=string#frag-scheme-http]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar/path;attr=value?query=string#frag-host-www.foo.bar]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar/path;attr=value?query=string#frag-port-80]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar/path;attr=value?query=string#frag-base-http://www.foo.bar]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar/path;attr=value?query=string#frag-path-/path]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar/path;attr=value?query=string#frag-qs-query=string]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar/path;attr=value?query=string#frag-params-attr=value0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar:100/path;attr=value?query=string#frag-fragment-frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar:100/path;attr=value?query=string#frag-scheme-http]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar:100/path;attr=value?query=string#frag-host-www.foo.bar]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar:100/path;attr=value?query=string#frag-port-100]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar:100/path;attr=value?query=string#frag-base-http://www.foo.bar:100]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar:100/path;attr=value?query=string#frag-path-/path]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar:100/path;attr=value?query=string#frag-qs-query=string]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar/path;attr=value?query=string#frag-params-attr=value1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[http://www.foo.bar/path;attr=value?query=string#frag-fragment-frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[www.foo.bar/path;attr=value?query=string#frag-scheme-]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[www.foo.bar/path;attr=value?query=string#frag-host-www.foo.bar]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[www.foo.bar/path;attr=value?query=string#frag-port-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[www.foo.bar/path;attr=value?query=string#frag-path-/path]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[www.foo.bar/path;attr=value?query=string#frag-qs-query=string]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[www.foo.bar/path;attr=value?query=string#frag-params-attr=value]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[www.foo.bar/path;attr=value?query=string#frag-fragment-frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[/path;attr=value?query=string#frag-scheme-]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[/path;attr=value?query=string#frag-host-]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[/path;attr=value?query=string#frag-port-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[/path;attr=value?query=string#frag-path-/path]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[/path;attr=value?query=string#frag-qs-query=string]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[/path;attr=value?query=string#frag-params-attr=value]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[/path;attr=value?query=string#frag-fragment-frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[foo-host-foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_net_address_attrs[#frag-fragment-frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_default_port[http://www.foo.bar/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_default_port[www.foo.bar/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_default_port[/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_default_port[foo]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_copying[copy-http://www.foo.bar/path;attr=value?query=string#frag]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_copying[copy-www.foo.bar/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_copying[copy-/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_copying[copy-foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_copying[deepcopy-http://www.foo.bar/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_copying[deepcopy-www.foo.bar/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_copying[deepcopy-/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_copying[deepcopy-foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_relative[www.foo.bar/path;attr=value?query=string#frag]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_relative[/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_relative[foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_private",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_internal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_query[http://www.foo.bar/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_query[www.foo.bar/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_query[/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_parameters[http://www.foo.bar/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_parameters[www.foo.bar/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_parameters[/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_info_url[http://www.foo.bar/path;attr=value?query=string#frag-http://www.foo.bar]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_info_url[www.foo.bar/path;attr=value?query=string#frag-www.foo.bar]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_info_url[/path;attr=value?query=string#frag-]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_info_url[foo-foo]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_url_join[/foo-bar-/foo/bar]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_url_join[http://foo.bar/bar-foo-http://foo.bar/bar/foo]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_url_join[http://foo.bar:8080/bar-foo-http://foo.bar:8080/bar/foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_url_join_chaining",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_rdiv_url",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_invalid_value[/foo-AbsoluteURL-AbsoluteURLValueError]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_invalid_value[http://foo.bar-RelativeURL-RelativeURLValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_invalid_value[-NetworkAddress-NetworkAddressValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_invalid_value[http:///-NetworkAddress-NetworkAddressValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_invalid_value[---NetworkAddress-NetworkAddressValueError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_immutable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_hostname[foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_hostname[foo.bar]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_hostname_invalid[/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_hostname_invalid[www.foo.bar/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.custom_types.test_url",
                "name": "test_hostname_invalid[http://www.foo.bar/path;attr=value?query=string#frag]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_json",
                "name": "test_orjson",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_json",
                "name": "test_ujson",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_json",
                "name": "test_native_json",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_objects_schema[Typic]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_objects_schema[Inherited]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_objects_schema[FrozenTypic]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_objects_schema[KlassDelayed]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_objects_schema[KlassVarSubscripted]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_objects_schema[Delayed]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_objects_schema[Constrained]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_objects_schema[NestedConstrained]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'str'>-StrSchemaField()]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'int'>-IntSchemaField()]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'bool'>-BooleanSchemaField()]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'float'>-NumberSchemaField()]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'list'>-ArraySchemaField()]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'set'>-ArraySchemaField(uniqueItems=True)]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'frozenset'>-ArraySchemaField(additionalItems=False, uniqueItems=True)]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tuple'>-ArraySchemaField(additionalItems=False)]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing.Any-UndeclaredSchemaField()]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing.List[str]-ArraySchemaField(items=StrSchemaField())]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing.List[tests.objects.LargeInt]-ArraySchemaField(items=IntSchemaField(exclusiveMinimum=1000))]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing.Mapping[str, tests.objects.LargeInt]-ObjectSchemaField(additionalProperties=IntSchemaField(exclusiveMinimum=1000))0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.objects.FromDict'>-ObjectSchemaField(title='FromDict', description=\"FromDict(foo: 'typing.Optional[str]' = None)\", properties={'foo': MultiSchemaField(title='Foo', anyOf=(StrSchemaField(), NullSchemaField()))}, additionalProperties=False)]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.objects.LargeInt'>-IntSchemaField(exclusiveMinimum=1000)]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typic.common.ReadOnly[str]-StrSchemaField(readOnly=True)]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing_extensions.Final[str]-StrSchemaField(readOnly=True)]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typic.common.WriteOnly[str]-StrSchemaField(writeOnly=True)]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing.Union[int, str]-MultiSchemaField(anyOf=(IntSchemaField(), StrSchemaField()))]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing.Mapping[str, int]-ObjectSchemaField(additionalProperties=IntSchemaField())]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing.Mapping[str, tests.objects.LargeInt]-ObjectSchemaField(additionalProperties=IntSchemaField(exclusiveMinimum=1000))1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.objects.ShortStrList'>-ArraySchemaField(items=StrSchemaField(maxLength=5))0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.objects.TDict'>-ObjectSchemaField(title='TDict', properties={'a': IntSchemaField()}, additionalProperties=False, required=('a',))]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.objects.TDictPartial'>-ObjectSchemaField(title='TDictPartial', properties={'a': IntSchemaField()}, additionalProperties=False)]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.objects.NTup'>-ObjectSchemaField(title='NTup', description='NTup(a,)', properties={'a': IntSchemaField()}, additionalProperties=False, required=('a',))]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.objects.ntup'>-ObjectSchemaField(title='Ntup', description='ntup(a,)', properties={'a': UndeclaredSchemaField()}, additionalProperties=False, required=('a',))]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing.Dict[str, typing.Union[int, str]]-ObjectSchemaField(additionalProperties=MultiSchemaField(anyOf=(IntSchemaField(), StrSchemaField())))]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing.Tuple[typing.Union[int, str], ...]-ArraySchemaField(items=MultiSchemaField(anyOf=(IntSchemaField(), StrSchemaField())))]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.objects.NestedDoubleReference'>-ObjectSchemaField(title='NestedDoubleReference', description=\"NestedDoubleReference(first: 'Data', second: 'Data' = Ellipsis)\", properties={'first': Ref(ref='#/definitions/Data'), 'second': Ref(ref='#/definitions/Data')}, additionalProperties=False, required=('first',), definitions={'Data': ObjectSchemaField(title='Data', description=\"Data(foo: 'str')\", properties={'foo': StrSchemaField()}, additionalProperties=False, required=('foo',))})]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.ext.test_schema.MySet'>-ArraySchemaField(uniqueItems=True)]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.ext.test_schema.MyURL'>-StrSchemaField(format=<StringFormat.URI: 'uri'>)]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.ext.test_schema.MyDateTime'>-StrSchemaField(format=<StringFormat.DTIME: 'date-time'>)0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.ext.test_schema.MyDateTime'>-StrSchemaField(format=<StringFormat.DTIME: 'date-time'>)1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.ext.test_schema.Container'>-ObjectSchemaField(title='Container', description=\"Container(data: 'DefaultDict[str, int]')\", properties={'data': Ref(ref='#/definitions/Data')}, additionalProperties=False, required=('data',), definitions={'Data': ObjectSchemaField(title='Data', additionalProperties=IntSchemaField())})]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.objects.KlassVarSubscripted'>-ObjectSchemaField(title='KlassVarSubscripted', description='KlassVarSubscripted()', properties={'var': StrSchemaField(enum=('foo',), default='foo', readOnly=True)}, additionalProperties=False)]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.objects.ThreeOptionals'>-ObjectSchemaField(title='ThreeOptionals', description=\"ThreeOptionals(a: 'typing.Optional[str]', b: 'typing.Optional[str]' = None, c: 'typing.Optional[str]' = None)\", properties={'a': MultiSchemaField(title='A', anyOf=(StrSchemaField(), NullSchemaField())), 'b': MultiSchemaField(title='B', anyOf=(StrSchemaField(), NullSchemaField())), 'c': MultiSchemaField(title='C', anyOf=(StrSchemaField(), NullSchemaField()))}, additionalProperties=False, required=('a',))]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.objects.A'>-ObjectSchemaField(title='A', description=\"A(b: 'typing.Optional[B]' = None)\", properties={'b': MultiSchemaField(title='OptionalB', anyOf=(Ref(ref='#/definitions/B'), NullSchemaField()))}, additionalProperties=False, definitions={'A': ObjectSchemaField(title='A', description=\"A(b: 'typing.Optional[B]' = None)\", properties={'b': MultiSchemaField(title='OptionalB', anyOf=(Ref(ref='#/definitions/B'), NullSchemaField()))}, additionalProperties=False), 'B': ObjectSchemaField(title='B', description=\"B(a: 'typing.Optional[A]' = None)\", properties={'a': MultiSchemaField(title='OptionalA', anyOf=(Ref(ref='#/definitions/A'), NullSchemaField()))}, additionalProperties=False)})]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing.Union[int, str, NoneType]-MultiSchemaField(anyOf=(IntSchemaField(), StrSchemaField(), NullSchemaField()))]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.objects.ItemizedKeyedValuedDict'>-ObjectSchemaField(title='ItemizedKeyedValuedDict', properties={'foo': IntSchemaField()}, additionalProperties=StrSchemaField(maxLength=5))]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[<class 'tests.objects.ShortStrList'>-ArraySchemaField(items=StrSchemaField(maxLength=5))1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing_extensions.Literal[1, 2]-IntSchemaField(enum=(1, 2))]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing_extensions.Literal[1, 2, None]-MultiSchemaField(anyOf=(IntSchemaField(enum=(1, 2)), NullSchemaField()))]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema[typing_extensions.Literal[1, 'foo', None]-MultiSchemaField(anyOf=(BaseSchemaField(enum=(1, 'foo')), NullSchemaField()))]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[str-expected0]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[int-expected1]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[bool-expected2]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[float-expected3]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[list-expected4]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[set-expected5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[frozenset-expected6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[tuple-expected7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[obj8-expected8]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[obj9-expected9]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[obj10-expected10]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[obj11-expected11]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[FromDict-expected12]",
                "time": 0.347,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_typic_schema_primitive[LargeInt-expected13]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_get_field_type[type0-UndeclaredSchemaField]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_get_field_type[None-MultiSchemaField]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_get_field_type[string-StrSchemaField]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_schema",
                "name": "test_ref_primitive",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mypy.test_mypy",
                "name": "test_mypy_results[mypy.ini-success.py-success.txt]",
                "time": 5.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mypy.test_mypy",
                "name": "test_mypy_results[mypy.ini-fail.py-fail.txt]",
                "time": 1.118,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.mypy.test_mypy",
                "name": "test_success_cases_run[success]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.api",
                "name": "typic.api.constrained",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.api",
                "name": "typic.api.resolve",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.api",
                "name": "typic.api.schema",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.api",
                "name": "typic.api.settings",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isbuiltinsubtype",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isbuiltintype",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isclassvartype",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.iscollectiontype",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isconstrained",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isdatetype",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isdecimaltype",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isenumtype",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isfinal",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.ishashable",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isinstance",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.ismappingtype",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isnamedtuple",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isoptionaltype",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isreadonly",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isstrict",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.issubclass",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.istimedeltatype",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.istimetype",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.istypeddict",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.istypedtuple",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.isuuidtype",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.checks",
                "name": "typic.checks.iswriteonly",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.klass",
                "name": "typic.klass.Field",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.util",
                "name": "typic.util.fastcachedmethod",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.util",
                "name": "typic.util.get_args",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.util",
                "name": "typic.util.get_name",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.util",
                "name": "typic.util.get_qualname",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.util",
                "name": "typic.util.origin",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.util",
                "name": "typic.util.resolve_supertype",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.util",
                "name": "typic.util.safe_eval",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.constraints.common",
                "name": "typic.constraints.common.TypeConstraints",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.ext.schema.schema",
                "name": "typic.ext.schema.schema.SchemaBuilder.all",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.serde.binder",
                "name": "typic.serde.binder.Binder.bind",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.serde.binder",
                "name": "typic.serde.binder.BoundArguments.eval",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.serde.des",
                "name": "typic.serde.des.DesFactory",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.serde.resolver",
                "name": "typic.serde.resolver.Resolver.primitive",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.serde.resolver",
                "name": "typic.serde.resolver.Resolver.protocols",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.serde.resolver",
                "name": "typic.serde.resolver.Resolver.resolve",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.serde.resolver",
                "name": "typic.serde.resolver.Resolver.tojson",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.types.dsn",
                "name": "typic.types.dsn.DSN",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.types.email",
                "name": "typic.types.email.Email",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.types.frozendict",
                "name": "typic.types.frozendict.FrozenDict",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.types.frozendict",
                "name": "typic.types.frozendict.FrozenDict.mutate",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.types.secret",
                "name": "typic.types.secret.SecretStr",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.types.url",
                "name": "typic.types.url.NetworkAddress",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "typic.types.url",
                "name": "typic.types.url.URL",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \ud83d\ude80  Start image=crawlergpt:latest\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical] user=0 workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2601  git clone 'https://github.com/abatilo/actions-poetry' # ref=v2.1.3\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Pre Install Poetry\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Pre Install Poetry\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2601  git clone 'https://github.com/actions/cache' # ref=v1\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \ud83e\uddea  Matrix: map[os:ubuntu-latest poetry-version:1.4.2 python-version:3.7]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Main actions/checkout@v2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Main actions/checkout@v2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Main Set up Python 3.7\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/30d75546-a1ac-4c3c-a226-a3565a46d3ea/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::isExplicit: \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::explicit? false\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::explicit? true\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::explicit? true\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::explicit? true\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::explicit? true\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::explicit? true\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::explicit? true\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::matched: 3.7.11\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Successfully setup CPython (3.7.11)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Main Set up Python 3.7\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2699  ::set-output:: python-version=3.7.11\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Main Display Python version\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Python 3.7.11 (default, Jul  5 2021, 20:57:17) \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | [GCC 9.3.0] on linux\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Main Display Python version\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Main Install Poetry\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/30d75546-a1ac-4c3c-a226-a3565a46d3ea/act/abatilo-actions-poetry@v2.1.3/ dst=/var/run/act/actions/abatilo-actions-poetry@v2.1.3/\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/abatilo-actions-poetry@v2.1.3/] user=0 workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Main pip install poetry==1.4.2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4-composite-0.sh] user= workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting poetry==1.4.2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading poetry-1.4.2-py3-none-any.whl (222 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting shellingham<2.0,>=1.5\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading shellingham-1.5.0.post1-py2.py3-none-any.whl (9.4 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting urllib3<2.0.0,>=1.26.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting poetry-plugin-export<2.0.0,>=1.3.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading poetry_plugin_export-1.4.0-py3-none-any.whl (10 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting requests-toolbelt<0.11.0,>=0.9.1\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading requests_toolbelt-0.10.1-py2.py3-none-any.whl (54 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting pyproject-hooks<2.0.0,>=1.0.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading pyproject_hooks-1.0.0-py3-none-any.whl (9.3 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting platformdirs<3.0.0,>=2.5.2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading platformdirs-2.6.2-py3-none-any.whl (14 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting pkginfo<2.0.0,>=1.9.4\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting jsonschema<5.0.0,>=4.10.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting installer<0.8.0,>=0.7.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading installer-0.7.0-py3-none-any.whl (453 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting lockfile<0.13.0,>=0.12.2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting trove-classifiers>=2022.5.19\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading trove_classifiers-2023.5.24-py3-none-any.whl (13 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting pexpect<5.0.0,>=4.7.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting build<0.11.0,>=0.10.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading build-0.10.0-py3-none-any.whl (17 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting html5lib<2.0,>=1.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting importlib-metadata>=4.4\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting packaging>=20.4\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting requests<3.0,>=2.18\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting filelock<4.0.0,>=3.8.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting backports.cached-property<2.0.0,>=1.0.2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading backports.cached_property-1.0.2-py3-none-any.whl (6.1 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.9\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading CacheControl-0.12.14-py2.py3-none-any.whl (21 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting tomlkit!=0.11.2,!=0.11.3,<1.0.0,>=0.11.1\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting dulwich<0.22.0,>=0.21.2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading dulwich-0.21.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (508 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting poetry-core==1.5.2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading poetry_core-1.5.2-py3-none-any.whl (465 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting crashtest<0.5.0,>=0.4.1\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading crashtest-0.4.1-py3-none-any.whl (7.6 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting cleo<3.0.0,>=2.0.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading cleo-2.0.1-py3-none-any.whl (77 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting tomli<3.0.0,>=2.0.1\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting virtualenv!=20.4.5,!=20.4.6,<21.0.0,>=20.4.3\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting keyring<24.0.0,>=23.9.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading keyring-23.13.1-py3-none-any.whl (37 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting msgpack>=0.5.2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading msgpack-1.0.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (299 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting rapidfuzz<3.0.0,>=2.2.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading rapidfuzz-2.15.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting typing-extensions\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting six>=1.9\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting webencodings\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting zipp>=0.5\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting pkgutil-resolve-name>=1.3.10\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading pkgutil_resolve_name-1.3.10-py3-none-any.whl (4.7 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting attrs>=17.4.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting importlib-resources>=1.4.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting jeepney>=0.4.2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting SecretStorage>=3.2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting jaraco.classes\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting ptyprocess>=0.5\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting poetry-plugin-export<2.0.0,>=1.3.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading poetry_plugin_export-1.3.1-py3-none-any.whl (10 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting idna<4,>=2.5\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting charset-normalizer<4,>=2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting certifi>=2017.4.17\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting cryptography>=2.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting cffi>=1.12\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading cffi-1.15.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (427 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting pycparser\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting virtualenv!=20.4.5,!=20.4.6,<21.0.0,>=20.4.3\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading virtualenv-20.22.0-py3-none-any.whl (3.2 MB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading virtualenv-20.21.1-py3-none-any.whl (8.7 MB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting distlib<1,>=0.3.6\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Collecting more-itertools\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Installing collected packages: pycparser, zipp, urllib3, typing-extensions, idna, charset-normalizer, cffi, certifi, tomli, requests, msgpack, more-itertools, jeepney, importlib-metadata, cryptography, webencodings, six, SecretStorage, rapidfuzz, pyrsistent, pyproject-hooks, ptyprocess, poetry-core, platformdirs, pkgutil-resolve-name, packaging, lockfile, jaraco.classes, importlib-resources, filelock, distlib, crashtest, cachecontrol, attrs, virtualenv, trove-classifiers, tomlkit, shellingham, requests-toolbelt, poetry-plugin-export, pkginfo, pexpect, keyring, jsonschema, installer, html5lib, dulwich, cleo, build, backports.cached-property, poetry\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Successfully installed SecretStorage-3.3.3 attrs-23.1.0 backports.cached-property-1.0.2 build-0.10.0 cachecontrol-0.12.14 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 cleo-2.0.1 crashtest-0.4.1 cryptography-41.0.1 distlib-0.3.6 dulwich-0.21.5 filelock-3.12.2 html5lib-1.1 idna-3.4 importlib-metadata-6.7.0 importlib-resources-5.12.0 installer-0.7.0 jaraco.classes-3.2.3 jeepney-0.8.0 jsonschema-4.17.3 keyring-23.13.1 lockfile-0.12.2 more-itertools-9.1.0 msgpack-1.0.5 packaging-23.1 pexpect-4.8.0 pkginfo-1.9.6 pkgutil-resolve-name-1.3.10 platformdirs-2.6.2 poetry-1.4.2 poetry-core-1.5.2 poetry-plugin-export-1.3.1 ptyprocess-0.7.0 pycparser-2.21 pyproject-hooks-1.0.0 pyrsistent-0.19.3 rapidfuzz-2.15.1 requests-2.31.0 requests-toolbelt-0.10.1 shellingham-1.5.0.post1 six-1.16.0 tomli-2.0.1 tomlkit-0.11.8 trove-classifiers-2023.5.24 typing-extensions-4.7.0 urllib3-1.26.16 virtualenv-20.21.1 webencodings-0.5.1 zipp-3.15.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Main pip install poetry==1.4.2\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Main Install Poetry\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Main Cache Poetry virtualenv\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/30d75546-a1ac-4c3c-a226-a3565a46d3ea/act/actions-cache@v1/ dst=/var/run/act/actions/actions-cache@v1/\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v1/] user=0 workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v1/dist/restore/index.js] user= workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Cache Path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/.venv\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Resolved Keys:\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::[\"poetry-Linux-3.7-b1b98303d32c39c699ee7a4f45993403c01f72dc548838702dae75e759c1df25\",\"poetry-Linux-3.7-b1b98303d32c39c699ee7a4f45993403c01f72dc548838702dae75e759c1df25\"]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:32977/_apis/artifactcache/cache?keys=poetry-Linux-3.7-b1b98303d32c39c699ee7a4f45993403c01f72dc548838702dae75e759c1df25%252Cpoetry-Linux-3.7-b1b98303d32c39c699ee7a4f45993403c01f72dc548838702dae75e759c1df25\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Cache not found for input keys: poetry-Linux-3.7-b1b98303d32c39c699ee7a4f45993403c01f72dc548838702dae75e759c1df25, poetry-Linux-3.7-b1b98303d32c39c699ee7a4f45993403c01f72dc548838702dae75e759c1df25.\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Main Cache Poetry virtualenv\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Main Set Poetry config\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Main Set Poetry config\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Main Use legacy installer (Poetry+py3.10)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/7] user= workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Main Use legacy installer (Poetry+py3.10)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Main Install Dependencies\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/8] user= workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Creating virtualenv typical in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/.venv\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | The `--no-dev` option is deprecated, use the `--only main` notation instead.\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Installing dependencies from lock file\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Setting `experimental.new-installer` to false is deprecated and slated for removal in an upcoming minor release.\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | (Despite of the setting's name the new installer is not experimental!)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Package operations: 33 installs, 0 updates, 0 removals\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing six (1.16.0)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing typing-extensions (4.5.0)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing zipp (3.15.0)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing importlib-metadata (6.6.0)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing python-dateutil (2.8.2)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing attrs (23.1.0)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing dnspython (2.3.0)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing idna (3.4)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing iniconfig (2.0.0)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing packaging (23.1)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing pluggy (1.0.0)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing py (1.11.0)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing pytz (2023.3)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing toml (0.10.2)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing coverage (7.2.3)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing email-validator (2.0.0.post2)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing greenlet (2.0.2)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing mypy-extensions (0.4.4)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing numpy (1.21.6)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing pytest (6.2.5)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing pytzdata (2020.1)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing typed-ast (1.4.3)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing fastjsonschema (2.16.3)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing future-typing (0.4.1)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing inflection (0.5.1)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing mypy (0.910)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing orjson (3.8.10)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing pandas (1.3.5)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing pendulum (2.1.2)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing pydantic (1.10.7)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing pytest-cov (2.12.1)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing sqlalchemy (1.4.47)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   - Installing ujson (3.2.0)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Installing the current project: typical (2.8.1)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Main Install Dependencies\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Main Test with pytest\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/10] user= workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ============================= test session starts ==============================\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | platform linux -- Python 3.7.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | plugins: cov-2.12.1\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | collected 903 items\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_bind.py ..............                                        [  1%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_serdes.py ................................................... [  7%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | .............................................................            [ 13%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_settings.py .......................                           [ 16%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py .................................................... [ 22%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ........................................................................ [ 30%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ........................................................................ [ 38%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ........................................................................ [ 46%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ........................................................................ [ 54%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ..........                                                               [ 55%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/3p/test_pandas.py ...                                              [ 55%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/constraints/test_array.py .................                        [ 57%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/constraints/test_factory.py ...................................... [ 61%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | .....                                                                    [ 62%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/constraints/test_mapping.py ....................                   [ 64%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/constraints/test_multi.py ...                                      [ 64%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/constraints/test_number.py ....................................... [ 69%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ....                                                                     [ 69%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/constraints/test_text.py ............                              [ 70%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/constraints/test_type.py ....                                      [ 71%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/custom_types/test_dsn.py ......................                    [ 73%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/custom_types/test_email.py ......................                  [ 76%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/custom_types/test_frozendict.py ..........                         [ 77%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/custom_types/test_path.py ..                                       [ 77%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/custom_types/test_secret.py ..                                     [ 77%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/custom_types/test_url.py ......................................... [ 82%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ...................................                                      [ 86%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/ext/test_json.py ...                                               [ 86%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/ext/test_schema.py ............................................... [ 91%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | .....................                                                    [ 94%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/mypy/test_mypy.py ...                                              [ 94%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/api.py ....                                                        [ 94%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/checks.py .......................                                  [ 97%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/klass.py .                                                         [ 97%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/util.py .......                                                    [ 98%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/constraints/common.py .                                            [ 98%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/ext/schema/schema.py .                                             [ 98%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/serde/binder.py ..                                                 [ 98%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/serde/des.py .                                                     [ 98%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/serde/resolver.py ....                                             [ 99%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/types/dsn.py .                                                     [ 99%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/types/email.py .                                                   [ 99%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/types/frozendict.py ..                                             [ 99%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/types/secret.py .                                                  [ 99%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/types/url.py ..                                                    [100%]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | =============================== warnings summary ===============================\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/api.py:323: 46 warnings\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_serdes.py: 5 warnings\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py: 10 warnings\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/api.py: 3 warnings\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/klass.py: 1 warning\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/serde/resolver.py: 2 warnings\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/typic/api.py:323: DeprecationWarning: The `delay` argument is no longer required and is deprecated.It will be removed in a future version.\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |     category=DeprecationWarning,\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/klass.py:251: 1 warning\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_serdes.py: 4 warnings\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py: 1 warning\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/api.py: 2 warnings\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/klass.py: 1 warning\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/serde/resolver.py: 2 warnings\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/typic/klass.py:251: UserWarning: Keyword `always` will default to `False` in a future version. You should update your code to either explicitly declare `always=True` or update your code to not assume values will be coerced when set.\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |     always=always,\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/api.py:180\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/api.py:180\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/api.py:180\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/api.py:180\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/api.py:180\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py::test_typed[<function func at 0x7f77dcf40ef0>-1-none-<class 'int'>-<function isfunction at 0x7f77e08889e0>]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py::test_typed[<function optional at 0x7f77dcefe290>-1-none-<class 'str'>-<function isfunction at 0x7f77e08889e0>]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py::test_typed[<function optional at 0x7f77dcefe290>-none-none-<class 'none_type'>-<function isfunction at 0x7f77e08889e0>]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py::test_typed_varargs[<function varargs at 0x7f77dcf24950>-({'foo': 'bar'},)-{'bar': {'foo': 'bar'}}-<function <lambda> at 0x7f77dc671dd0>]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/typic/api.py:180: DeprecationWarning: The `delay` argument is no longer required and is deprecated. It will be removed in a future version.\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |     category=DeprecationWarning,\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/objects.py:342\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/tests/objects.py:342: MovedIn20Warning: Deprecated API features detected! These feature(s) are not compatible with SQLAlchemy 2.0. To prevent incompatible upgrades prior to updating applications, ensure requirements files are pinned to \"sqlalchemy<2.0\". Set environment variable SQLALCHEMY_WARN_20=1 to show all deprecation warnings.  Set environment variable SQLALCHEMY_SILENCE_UBER_WARNING=1 to silence this message. (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |     Base = declarative_base()\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/api.py:403\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py::test_typed[<class 'tests.objects.default_none'>-none-operator.attrgetter('none')-<class 'none_type'>-<function isclass at 0x7f77e0883dd0>]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py::test_typed[<class 'tests.objects.default_ellipsis'>-ellipsis-operator.attrgetter('ellipsis')-<class 'ellipsis'>-<function isclass at 0x7f77e0883dd0>]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py::test_typed[<class 'tests.objects.forward'>-bar-operator.attrgetter('foo')-<enum 'foo_num'>-<function isclass at 0x7f77e0883dd0>]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py::test_enforce_strict_mode\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py::test_constrained_any\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/typic/api.py:403: UserWarning: Keyword `always` will default to `False` in a future version. You should update your code to either explicitly declare `always=True` or update your code to not assume values will be coerced when set.\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |     return _typed(_cls_or_callable) if _cls_or_callable is not None else _typed\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py::test_wrap_class[<class 'tests.objects.class'>-var-<class 'str'>]\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/.venv/lib/python3.7/site-packages/_pytest/python.py:183: UserWarning: Keyword `always` will default to `False` in a future version. You should update your code to either explicitly declare `always=True` or update your code to not assume values will be coerced when set.\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |     result = testfunction(**testargs)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/test_typed.py::test_typic_resolve\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | typic/api.py::typic.api.resolve\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/typic/api.py:425: DeprecationWarning: Delayed type resolution is handled automatically as of v2.3.0. This function is now a no-op and will be removed in a future version.\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |     category=DeprecationWarning,\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/3p/test_pandas.py::test_transmute_pandas_series\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | tests/3p/test_pandas.py::test_transmute_pandas_dataframe\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/typic/util.py:489: UserWarning: Couldn't evaluate type ForwardRef('typing.Union[weakref.ReferenceType[NDFrame],None]'): 'type' object is not subscriptable\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |     warnings.warn(f\"Couldn't evaluate type {value!r}: {e}\")\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | -- Docs: https://docs.pytest.org/en/stable/warnings.html\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/report.xml -\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | Coverage XML written to file coverage.xml\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ====================== 903 passed, 99 warnings in 15.60s =======================\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Main Test with pytest\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Main Upload coverage to Codecov\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/30d75546-a1ac-4c3c-a226-a3565a46d3ea/act/codecov-codecov-action@v2/ dst=/var/run/act/actions/codecov-codecov-action@v2/\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v2/] user=0 workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v2/dist/index.js] user= workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ==> linux OS detected\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | https://uploader.codecov.io/latest/linux/codecov.SHA256SUM\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ==> SHASUM file signed by key id 806bb28aed779869\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ==> Uploader SHASUM verified (0c9b79119b0d8dbe7aaf460dc3bd7c3094ceda06e5ae32b0d11a8ff56e2cc5c5  codecov)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ==> Running version latest\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | ==> Running version v0.6.1\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | [command]/run/act/actions/codecov-codecov-action@v2/dist/codecov -n codecov-umbrella -Q github-action-2.1.0 -e OS,PYTHON -f ./coverage.xml -F unittests\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | [2023-07-01T13:20:05.872Z] ['info'] \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |      _____          _\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |     / ____|        | |\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |    | |     ___   __| | ___  ___ _____   __\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |    | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |    | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |     \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   Codecov report uploader 0.6.1\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | [2023-07-01T13:20:05.884Z] ['info'] => Project root located at: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | [2023-07-01T13:20:05.886Z] ['info'] -> No token specified or token is empty\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | [2023-07-01T13:20:05.897Z] ['info'] Searching for coverage files...\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | [2023-07-01T13:20:06.065Z] ['info'] => Found 1 possible coverage files:\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   |   ./coverage.xml\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | [2023-07-01T13:20:06.065Z] ['info'] Processing ./coverage.xml...\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | [2023-07-01T13:20:06.077Z] ['info'] Detected GitHub Actions as the CI provider.\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | [2023-07-01T13:20:06.458Z] ['info'] Pinging Codecov: https://codecov.io/upload/v4?package=github-action-2.1.0-uploader-0.6.1&token=*******&branch=&build=1&build_url=https%3A%2F%2Fgithub.com%2Fseandstewart%2Ftypical%2Factions%2Fruns%2F1&commit=97eec305c094f265abc49051150be56a2fe17a07&job=efdd00f1-de36-4c9f-9a26-7601d2c97525&pr=&service=github-actions&slug=seandstewart%2Ftypical&name=codecov-umbrella&tag=&flags=unittests&parent=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | [2023-07-01T13:20:06.998Z] ['error'] There was an error running the uploader: Error uploading to https://codecov.io: Error: There was an error fetching the storage URL during POST: 404 - {'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Main Upload coverage to Codecov\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Post Cache Poetry virtualenv\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v1/dist/save/index.js] user= workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::State: \n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Reserving Cache\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:32977/_apis/artifactcache/caches\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Cache ID: 1\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Cache Path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/.venv\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Archive Path: /tmp/55d6f142-6fd7-4db5-95ad-9be37a15ac7a/cache.tgz\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | [command]/usr/bin/tar -cz -f /tmp/55d6f142-6fd7-4db5-95ad-9be37a15ac7a/cache.tgz -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/.venv .\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::File Size: 71709040\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Saving Cache (ID: 1)\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Upload cache\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:32977/_apis/artifactcache/caches/1\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Concurrency: 4 and Chunk Size: 33554432\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Awaiting all uploads\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 0 with content range: bytes 0-33554431/*\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 33554432 with content range: bytes 33554432-67108863/*\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Uploading chunk of size 4600176 bytes at offset 67108864 with content range: bytes 67108864-71709039/*\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Commiting cache\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:32977/_apis/artifactcache/caches/1\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::commitCache - Attempt 1 of 2 failed with error: {\"error\":\"broken file: 71709040 != 0\"}\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:32977/_apis/artifactcache/caches/1\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udcac  ::debug::commitCache - Attempt 2 of 2 failed with error: {\"error\":\"open /tmp/act-cache/30d75546-a1ac-4c3c-a226-a3565a46d3ea/actcache/cache/tmp/1: no such file or directory\"}\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   | [warning]commitCache failed: {\"error\":\"open /tmp/act-cache/30d75546-a1ac-4c3c-a226-a3565a46d3ea/actcache/cache/tmp/1: no such file or directory\"}\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Post Cache Poetry virtualenv\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Post Install Poetry\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/30d75546-a1ac-4c3c-a226-a3565a46d3ea/act/abatilo-actions-poetry@v2.1.3/ dst=/var/run/act/actions/abatilo-actions-poetry@v2.1.3/\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/abatilo-actions-poetry@v2.1.3/] user=0 workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Post Install Poetry\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \u2b50 Run Post Set up Python 3.7\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test]   \u2705  Success - Post Set up Python 3.7\n[efdd00f1-de36-4c9f-9a26-7601d2c97525/test] \ud83c\udfc1  Job succeeded\n",
        "stderr": "time=\"2023-07-01T15:20:22+02:00\" level=error msg=\"POST /_apis/artifactcache/caches/1: broken file: 71709040 != 0\" module=artifactcache\ntime=\"2023-07-01T15:20:22+02:00\" level=error msg=\"POST /_apis/artifactcache/caches/1: open /tmp/act-cache/30d75546-a1ac-4c3c-a226-a3565a46d3ea/actcache/cache/tmp/1: no such file or directory\" module=artifactcache\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/seandstewart-typical/.github/workflows/tests-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "efdd00f1-de36-4c9f-9a26-7601d2c97525",
        "build_tool": "pytest",
        "elapsed_time": 297.2797863483429
    }
}