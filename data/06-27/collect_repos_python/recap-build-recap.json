{
    "repository": "recap-build/recap",
    "stars": 244,
    "language": "python",
    "size": 1054,
    "clone_url": "https://github.com/recap-build/recap.git",
    "timestamp": "2023-06-28T18:39:54.719288Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.integration.readers.test_confluent_registry.TestConfluentRegistryReader",
                "name": "test_struct_avro",
                "time": 0.005,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=8081): Max retries exceeded with url: /subjects/dummy_topic-value/versions?normalize=False (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused'))\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.readers.test_confluent_registry.TestConfluentRegistryReader",
                "name": "test_struct_proto",
                "time": 0.008,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=8081): Max retries exceeded with url: /subjects/dummy_topic-value/versions?normalize=False (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused'))\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.readers.test_confluent_registry.TestConfluentRegistryReader",
                "name": "test_struct_json",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=8081): Max retries exceeded with url: /subjects/dummy_topic-value/versions?normalize=False (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused'))\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.readers.test_postgresql.TestPostgresqlReader",
                "name": "test_struct_method",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests] \ud83d\ude80  Start image=crawlergpt:latest\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap] user=0 workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests] \ud83e\uddea  Matrix: map[python-version:3.10]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests] \u2b50 Run Main actions/checkout@v2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2705  Success - Main actions/checkout@v2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests] \u2b50 Run Main Build using Python 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/41990a26-cbff-4ec2-a12a-dc9a955b4610/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2753  ::group::Installed versions\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? false\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::match not found\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Version 3.10 was not found in the local cache\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::set auth\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.3 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.2 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.1 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-rc.2 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-rc.1 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-beta.5 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-beta.4 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-beta.3 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-beta.2 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-beta.1 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.7 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.6 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.5 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.4 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.3 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.2 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.1 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::check 3.10.12 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::matched 3.10.12\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Version 3.10 is available for downloading\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Download from \"https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::Destination /tmp/9b639d8f-a013-48c7-bbea-fca23928fe33\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::set auth\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::download complete\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Extract downloaded archive\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::Checking tar --version\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/2dbd2b9d-9e30-4e1b-9f03-cc4f1c5cc3e6 -f /tmp/9b639d8f-a013-48c7-bbea-fca23928fe33\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Execute installation script\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Check if Python hostedtoolcache folder exist...\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Create Python 3.10.12 folder\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Copy Python binaries to hostedtoolcache folder\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Upgrading pip...\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Looking in links: /tmp/tmph2oxj13l\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (65.5.0)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (23.0.1)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting pip\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 9.0 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Installing collected packages: pip\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Successfully installed pip-23.1.2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Create complete file\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? false\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.10.12\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::evaluating 7 versions\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::matched: 3.10.12\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.10.12/x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.10.12 x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Successfully set up CPython (3.10.12)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2753  ::endgroup::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2705  Success - Main Build using Python 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.10.12/x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib/pkgconfig\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2699  ::set-output:: python-version=3.10.12\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.10.12/x64/bin/python\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64/bin\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests] \u2b50 Run Main Install dependencies\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting pdm\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading pdm-2.7.4-py3-none-any.whl (224 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 224.5/224.5 kB 2.5 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting installer<0.8,>=0.7\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading installer-0.7.0-py3-none-any.whl (453 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 453.8/453.8 kB 9.2 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting findpython>=0.2.2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading findpython-0.2.5-py3-none-any.whl (18 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting blinker\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading blinker-1.6.2-py3-none-any.whl (13 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting requests-toolbelt\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 54.5/54.5 kB 894.0 kB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting virtualenv>=20\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.3/3.3 MB 52.6 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting packaging!=22.0,>=20.9\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 4.3 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting cachecontrol[filecache]>=0.13.0\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading cachecontrol-0.13.1-py3-none-any.whl (22 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting certifi\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 26.4 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting rich>=12.3.0\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading rich-13.4.2-py3-none-any.whl (239 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 239.4/239.4 kB 32.8 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting pyproject-hooks\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading pyproject_hooks-1.0.0-py3-none-any.whl (9.3 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting tomlkit<1,>=0.11.1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting tomli>=1.1.0\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting resolvelib>=1.0.1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading resolvelib-1.0.1-py2.py3-none-any.whl (17 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting platformdirs\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting python-dotenv>=0.15\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading python_dotenv-1.0.0-py3-none-any.whl (19 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting shellingham>=1.3.2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading shellingham-1.5.0.post1-py2.py3-none-any.whl (9.4 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting unearth>=0.9.0\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading unearth-0.9.1-py3-none-any.whl (41 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.1/41.1 kB 5.8 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting requests>=2.16.0\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 888.6 kB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting msgpack>=0.5.2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading msgpack-1.0.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (316 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 316.8/316.8 kB 21.0 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting filelock>=3.8.0\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting markdown-it-py>=2.2.0\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading markdown_it_py-3.0.0-py3-none-any.whl (87 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 87.5/87.5 kB 10.6 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting pygments<3.0.0,>=2.13.0\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 29.3 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting distlib<1,>=0.3.6\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 468.5/468.5 kB 16.8 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting mdurl~=0.1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading mdurl-0.1.2-py3-none-any.whl (10.0 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting idna<4,>=2.5\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 5.4 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting urllib3<3,>=1.21.1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 11.7 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Collecting charset-normalizer<4,>=2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   Downloading charset_normalizer-3.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (199 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.3/199.3 kB 19.9 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Installing collected packages: resolvelib, msgpack, distlib, urllib3, tomlkit, tomli, shellingham, python-dotenv, pygments, platformdirs, packaging, mdurl, installer, idna, filelock, charset-normalizer, certifi, blinker, virtualenv, requests, pyproject-hooks, markdown-it-py, findpython, unearth, rich, requests-toolbelt, cachecontrol, pdm\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Successfully installed blinker-1.6.2 cachecontrol-0.13.1 certifi-2023.5.7 charset-normalizer-3.1.0 distlib-0.3.6 filelock-3.12.2 findpython-0.2.5 idna-3.4 installer-0.7.0 markdown-it-py-3.0.0 mdurl-0.1.2 msgpack-1.0.5 packaging-23.1 pdm-2.7.4 platformdirs-3.8.0 pygments-2.15.1 pyproject-hooks-1.0.0 python-dotenv-1.0.0 requests-2.31.0 requests-toolbelt-1.0.0 resolvelib-1.0.1 rich-13.4.2 shellingham-1.5.0.post1 tomli-2.0.1 tomlkit-0.11.8 unearth-0.9.1 urllib3-2.0.3 virtualenv-20.23.1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | [notice] A new release of pip is available: 23.0.1 -> 23.1.2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | [notice] To update, run: pip install --upgrade pip\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | STATUS: Resolving packages from lockfile...\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Inside an active virtualenv /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap/venv, reusing it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Set env var PDM_IGNORE_ACTIVE_VENV to ignore it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | STATUS: Fetching hashes for resolved packages...\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Synchronizing working set with lock file: 38 to add, 5 to update, 0 to remove\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Update setuptools 65.5.0 -> 67.8.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install asn1crypto 1.5.1 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Update platformdirs 3.8.0 -> 2.6.2 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install antlr4-python3-runtime 4.13.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install astroid 2.15.5 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install cffi 1.15.1 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Update tomlkit 0.11.8 -> 0.11.6 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install click 8.1.3 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install black 23.3.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Update packaging 23.1 -> 23.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install exceptiongroup 1.1.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Update urllib3 2.0.3 -> 1.26.16 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install dill 0.3.6 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install iniconfig 2.0.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install fakesnow 0.2.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install mypy-extensions 1.0.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install mccabe 0.7.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install lazy-object-proxy 1.9.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install isort 5.12.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install nodeenv 1.7.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install oscrypto 1.3.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install pathspec 0.11.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install pluggy 1.0.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install proto-schema-parser 0.2.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install pycparser 2.21 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install confluent-kafka 2.1.1 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install pyjwt 2.7.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install cryptography 40.0.2 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install pyopenssl 23.2.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install pyright 1.1.314 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install psycopg2-binary 2.9.6 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install pytest 7.3.2 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install pylint 2.17.4 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install sortedcontainers 2.4.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install typing-extensions 4.4.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install wrapt 1.14.1 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install sqlglot 16.4.2 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install pycryptodomex 3.18.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install pytz 2023.3 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install duckdb 0.8.1 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install numpy 1.25.0 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install snowflake-connector-python 3.0.4 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install pyarrow 10.0.1 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Installing the project as an editable package...\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   \u2714 Install recap-core 0.5.3 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \ud83c\udf89 All complete!\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2705  Success - Main Install dependencies\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests] \u2b50 Run Main Run black\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Inside an active virtualenv /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap/venv, reusing it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Set env var PDM_IGNORE_ACTIVE_VENV to ignore it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | All done! \u2728 \ud83c\udf70 \u2728\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | 19 files would be left unchanged.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2705  Success - Main Run black\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests] \u2b50 Run Main Run isort\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Inside an active virtualenv /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap/venv, reusing it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Set env var PDM_IGNORE_ACTIVE_VENV to ignore it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2705  Success - Main Run isort\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests] \u2b50 Run Main Run pylint\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Inside an active virtualenv /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap/venv, reusing it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Set env var PDM_IGNORE_ACTIVE_VENV to ignore it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module recap.types\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:41:0: R0903: Too few public methods (0/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:48:0: R0903: Too few public methods (0/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:55:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:70:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:81:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:96:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:111:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:134:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:149:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:160:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:171:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:191:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:281:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:286:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:290:12: W0707: Consider explicitly re-raising using 'except KeyError as exc' and 'raise TypeError(f'No RecapType with alias {alias} found.') from exc' (raise-missing-from)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:293:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:311:12: C0103: Variable name \"t\" doesn't conform to snake_case naming style (invalid-name)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:293:0: R0912: Too many branches (16/12) (too-many-branches)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:293:0: R0915: Too many statements (51/50) (too-many-statements)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:386:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/types.py:387:4: C0103: Variable name \"RecapTypeClass\" doesn't conform to snake_case naming style (invalid-name)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module recap.converters.avro\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/avro.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/avro.py:21:0: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/avro.py:25:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/avro.py:102:4: R0911: Too many return statements (8/6) (too-many-return-statements)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/avro.py:21:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module recap.converters.protobuf\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/protobuf.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/protobuf.py:30:0: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/protobuf.py:34:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/protobuf.py:138:4: R0911: Too many return statements (15/6) (too-many-return-statements)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/protobuf.py:30:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module recap.converters.json_schema\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/json_schema.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/json_schema.py:16:0: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/json_schema.py:17:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/json_schema.py:24:4: R0911: Too many return statements (10/6) (too-many-return-statements)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/converters/json_schema.py:16:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module recap.readers.dbapi\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:10:0: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:14:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:49:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:49:4: E0213: Method 'param_style' should have \"self\" as first argument (no-self-argument)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:53:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:75:0: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:76:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:79:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:85:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:89:0: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:90:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:93:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:96:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:99:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:102:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/dbapi.py:106:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module recap.readers.postgresql\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/postgresql.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/postgresql.py:10:0: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/postgresql.py:11:4: R0912: Too many branches (13/12) (too-many-branches)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module recap.readers.confluent_registry\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/confluent_registry.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/confluent_registry.py:9:0: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/confluent_registry.py:17:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/confluent_registry.py:9:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module recap.readers.snowflake\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/snowflake.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/snowflake.py:7:0: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | recap/readers/snowflake.py:46:12: R0916: Too many boolean expressions in if statement (7/5) (too-many-boolean-expressions)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module integration.readers.test_postgresql\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/integration/readers/test_postgresql.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/integration/readers/test_postgresql.py:16:0: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/integration/readers/test_postgresql.py:18:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/integration/readers/test_postgresql.py:51:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/integration/readers/test_postgresql.py:60:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module integration.readers.test_confluent_registry\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/integration/readers/test_confluent_registry.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/integration/readers/test_confluent_registry.py:7:0: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/integration/readers/test_confluent_registry.py:9:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/integration/readers/test_confluent_registry.py:66:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/integration/readers/test_confluent_registry.py:77:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/integration/readers/test_confluent_registry.py:90:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module unit.test_types\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/test_types.py:5:0: W0611: Unused RecapType imported from recap.types (unused-import)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module unit.converters.test_json_schema\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_json_schema.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_json_schema.py:14:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_json_schema.py:40:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_json_schema.py:74:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_json_schema.py:116:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_json_schema.py:135:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_json_schema.py:158:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_json_schema.py:179:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_json_schema.py:205:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_json_schema.py:225:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_json_schema.py:245:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module unit.converters.test_protobuf\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:17:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:48:11: C0121: Comparison 'fields[0].types[1].variable == True' should be 'fields[0].types[1].variable is True' if checking for the singleton value True, or 'fields[0].types[1].variable' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:60:11: C0121: Comparison 'fields[2].types[1].variable == True' should be 'fields[2].types[1].variable is True' if checking for the singleton value True, or 'fields[2].types[1].variable' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:67:11: C0121: Comparison 'fields[3].types[1].signed == True' should be 'fields[3].types[1].signed is True' if checking for the singleton value True, or 'fields[3].types[1].signed' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:74:11: C0121: Comparison 'fields[4].types[1].signed == True' should be 'fields[4].types[1].signed is True' if checking for the singleton value True, or 'fields[4].types[1].signed' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:81:11: C0121: Comparison 'fields[5].types[1].signed == False' should be 'fields[5].types[1].signed is False' if checking for the singleton value False, or 'not fields[5].types[1].signed' if testing for falsiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:88:11: C0121: Comparison 'fields[6].types[1].signed == False' should be 'fields[6].types[1].signed is False' if checking for the singleton value False, or 'not fields[6].types[1].signed' if testing for falsiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:95:11: C0121: Comparison 'fields[7].types[1].signed == True' should be 'fields[7].types[1].signed is True' if checking for the singleton value True, or 'fields[7].types[1].signed' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:102:11: C0121: Comparison 'fields[8].types[1].signed == True' should be 'fields[8].types[1].signed is True' if checking for the singleton value True, or 'fields[8].types[1].signed' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:121:11: C0121: Comparison 'fields[11].types[1].signed == False' should be 'fields[11].types[1].signed is False' if checking for the singleton value False, or 'not fields[11].types[1].signed' if testing for falsiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:128:11: C0121: Comparison 'fields[12].types[1].signed == False' should be 'fields[12].types[1].signed is False' if checking for the singleton value False, or 'not fields[12].types[1].signed' if testing for falsiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:135:11: C0121: Comparison 'fields[13].types[1].signed == True' should be 'fields[13].types[1].signed is True' if checking for the singleton value True, or 'fields[13].types[1].signed' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:142:11: C0121: Comparison 'fields[14].types[1].signed == True' should be 'fields[14].types[1].signed is True' if checking for the singleton value True, or 'fields[14].types[1].signed' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:17:0: R0915: Too many statements (77/50) (too-many-statements)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:145:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:163:11: C0121: Comparison 'fields[0].types[1].values.signed == True' should be 'fields[0].types[1].values.signed is True' if checking for the singleton value True, or 'fields[0].types[1].values.signed' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:166:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:184:11: C0121: Comparison 'fields[0].keys.variable == True' should be 'fields[0].keys.variable is True' if checking for the singleton value True, or 'fields[0].keys.variable' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:188:11: C0121: Comparison 'fields[0].values.signed == True' should be 'fields[0].values.signed is True' if checking for the singleton value True, or 'fields[0].values.signed' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:191:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:218:11: C0121: Comparison 'inner_fields[0].types[1].signed == True' should be 'inner_fields[0].types[1].signed is True' if checking for the singleton value True, or 'inner_fields[0].types[1].signed' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:221:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:247:11: C0121: Comparison 'inner_fields[0].types[1].signed == True' should be 'inner_fields[0].types[1].signed is True' if checking for the singleton value True, or 'inner_fields[0].types[1].signed' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:250:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:273:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:300:11: C0121: Comparison 'oneof_types[1].variable == True' should be 'oneof_types[1].variable is True' if checking for the singleton value True, or 'oneof_types[1].variable' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:305:11: C0121: Comparison 'oneof_types[2].signed == True' should be 'oneof_types[2].signed is True' if checking for the singleton value True, or 'oneof_types[2].signed' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:308:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py:343:11: C0121: Comparison 'inner_fields[0].types[1].signed == True' should be 'inner_fields[0].types[1].signed is True' if checking for the singleton value True, or 'inner_fields[0].types[1].signed' if testing for truthiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module unit.converters.test_avro\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_avro.py:37:17: W0212: Access to a protected member _parse of a client class (protected-access)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_avro.py:252:11: C0121: Comparison 'field.variable == False' should be 'field.variable is False' if checking for the singleton value False, or 'not field.variable' if testing for falsiness (singleton-comparison)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_avro.py:6:0: W0611: Unused RecapType imported from recap.types (unused-import)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module unit.readers.test_confluent_registry\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:9:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:12:4: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:12:4: R0903: Too few public methods (0/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:25:4: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:25:4: R0903: Too few public methods (0/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:47:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:50:4: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:50:4: R0903: Too few public methods (0/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:61:4: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:61:4: R0903: Too few public methods (0/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:83:0: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:86:4: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:86:4: R0903: Too few public methods (0/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:105:4: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py:105:4: R0903: Too few public methods (0/2) (too-few-public-methods)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ************* Module unit.readers.test_snowflake\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_snowflake.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_snowflake.py:19:0: C0115: Missing class docstring (missing-class-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_snowflake.py:21:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_snowflake.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_snowflake.py:1:0: W0611: Unused import os (unused-import)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_snowflake.py:1:0: R0801: Similar lines in 2 files\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ==integration.readers.test_confluent_registry:[15:58]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ==unit.readers.test_confluent_registry:[14:102]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         {\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             \"type\": \"record\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             \"name\": \"User\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             \"fields\": [\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |                 {\"name\": \"name\", \"type\": \"string\"},\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |                 {\"name\": \"age\",  \"type\": \"int\"}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             ]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         }\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         avro_schema = schema_registry.Schema(avro_schema_str, \"AVRO\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         cls.schema_registry_client.register_schema(\"dummy_topic-value\", avro_schema)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         # Define and register the Protobuf schema for the \"dummy_topic_protobuf\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         protobuf_schema_str = \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         syntax = \"proto3\";\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         message Person {\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             string name = 1;\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             int32 age = 2;\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         }\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         protobuf_schema = schema_registry.Schema(protobuf_schema_str, \"PROTOBUF\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         cls.schema_registry_client.register_schema(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             \"dummy_topic_protobuf-value\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             protobuf_schema,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         # Define and register the JSON schema for the \"dummy_topic_json\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         json_schema_str = \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         {\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             \"title\": \"User\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             \"type\": \"object\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             \"properties\": {\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |                 \"name\": {\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |                     \"type\": \"string\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |                 },\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |                 \"age\": {\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |                     \"type\": \"integer\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |                 }\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             },\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |             \"required\": [\"name\", \"age\"]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |         } (duplicate-code)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | -----------------------------------\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Your code has been rated at 8.86/10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2705  Success - Main Run pylint\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests] \u2b50 Run Main Run pyright\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Inside an active virtualenv /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap/venv, reusing it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Set env var PDM_IGNORE_ACTIVE_VENV to ignore it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | npm notice created a lockfile as package-lock.json. You should commit this file.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | + pyright@1.1.314\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | added 1 package from 1 contributor and audited 1 package in 9.454s\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | found 0 vulnerabilities\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | 0 errors, 0 warnings, 0 informations \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | WARNING: there is a new pyright version available (v1.1.314 -> v1.1.316).\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Please install the new version or set PYRIGHT_PYTHON_FORCE_VERSION to `latest`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2705  Success - Main Run pyright\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests] \u2b50 Run Main Test with pytest\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/7] user= workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Inside an active virtualenv /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap/venv, reusing it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | Set env var PDM_IGNORE_ACTIVE_VENV to ignore it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ============================= test session starts ==============================\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | platform linux -- Python 3.10.12, pytest-7.3.2, pluggy-1.0.0\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | collected 90 items\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/test_types.py ............................................... [ 52%]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | .....                                                                    [ 57%]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_avro.py ................                      [ 75%]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_json_schema.py ..........                     [ 86%]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/converters/test_protobuf.py ........                          [ 95%]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_confluent_registry.py ...                        [ 98%]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | tests/unit/readers/test_snowflake.py .                                   [100%]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | =============================== warnings summary ===============================\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | venv/lib/python3.10/site-packages/snowflake/connector/vendored/requests/__init__.py:119\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap/venv/lib/python3.10/site-packages/snowflake/connector/vendored/requests/__init__.py:119: DeprecationWarning: 'urllib3.contrib.pyopenssl' module is deprecated and will be removed in a future release of urllib3 2.x. Read more in this issue: https://github.com/urllib3/urllib3/issues/2680\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   |     from ..urllib3.contrib import pyopenssl\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap/report.xml -\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   | ======================== 90 passed, 1 warning in 4.20s =========================\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2705  Success - Main Test with pytest\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests] \u2b50 Run Post Build using Python 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests]   \u2705  Success - Post Build using Python 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/unit-tests] \ud83c\udfc1  Job succeeded\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests] \ud83d\ude80  Start image=crawlergpt:latest\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap] user=0 workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests] \ud83e\uddea  Matrix: map[python-version:3.10]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests] \u2b50 Run Main actions/checkout@v2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2705  Success - Main actions/checkout@v2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests] \u2b50 Run Main Build using Python 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/41990a26-cbff-4ec2-a12a-dc9a955b4610/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2753  ::group::Installed versions\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? false\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::match not found\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Version 3.10 was not found in the local cache\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::set auth\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.3 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.2 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.1 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-rc.2 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-rc.1 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-beta.5 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-beta.4 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-beta.3 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-beta.2 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-beta.1 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.7 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.6 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.5 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.4 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.3 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.2 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.11.0-alpha.1 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::check 3.10.12 satisfies 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::matched 3.10.12\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Version 3.10 is available for downloading\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Download from \"https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::Destination /tmp/df5c5f79-7ea2-4e26-9a21-8359e3d38e6f\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::set auth\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::download complete\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Extract downloaded archive\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::Checking tar --version\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/c6d3b2e2-46a9-44dc-93fb-38534f385535 -f /tmp/df5c5f79-7ea2-4e26-9a21-8359e3d38e6f\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Execute installation script\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Check if Python hostedtoolcache folder exist...\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Create Python 3.10.12 folder\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Copy Python binaries to hostedtoolcache folder\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Upgrading pip...\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Looking in links: /tmp/tmpaqd0_ub6\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (65.5.0)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (23.0.1)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Collecting pip\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 5.4 MB/s eta 0:00:00\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Installing collected packages: pip\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Successfully installed pip-23.1.2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Create complete file\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? false\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: 3.10.12\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::explicit? true\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::evaluating 7 versions\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::matched: 3.10.12\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.10.12/x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.10.12 x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Successfully set up CPython (3.10.12)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2753  ::endgroup::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2705  Success - Main Build using Python 3.10\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.10.12/x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib/pkgconfig\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.10.12/x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2699  ::set-output:: python-version=3.10.12\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.10.12/x64/bin/python\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64/bin\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests] \u2b50 Run Main Install dependencies\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: pdm in ./venv/lib/python3.10/site-packages (2.7.4)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: certifi in ./venv/lib/python3.10/site-packages (from pdm) (2023.5.7)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: cachecontrol[filecache]>=0.13.0 in ./venv/lib/python3.10/site-packages (from pdm) (0.13.1)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: packaging!=22.0,>=20.9 in ./venv/lib/python3.10/site-packages (from pdm) (23.0)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: virtualenv>=20 in ./venv/lib/python3.10/site-packages (from pdm) (20.23.1)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: python-dotenv>=0.15 in ./venv/lib/python3.10/site-packages (from pdm) (1.0.0)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: resolvelib>=1.0.1 in ./venv/lib/python3.10/site-packages (from pdm) (1.0.1)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: findpython>=0.2.2 in ./venv/lib/python3.10/site-packages (from pdm) (0.2.5)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: blinker in ./venv/lib/python3.10/site-packages (from pdm) (1.6.2)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: platformdirs in ./venv/lib/python3.10/site-packages (from pdm) (2.6.2)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: shellingham>=1.3.2 in ./venv/lib/python3.10/site-packages (from pdm) (1.5.0.post1)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: unearth>=0.9.0 in ./venv/lib/python3.10/site-packages (from pdm) (0.9.1)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: rich>=12.3.0 in ./venv/lib/python3.10/site-packages (from pdm) (13.4.2)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: installer<0.8,>=0.7 in ./venv/lib/python3.10/site-packages (from pdm) (0.7.0)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: tomli>=1.1.0 in ./venv/lib/python3.10/site-packages (from pdm) (2.0.1)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: requests-toolbelt in ./venv/lib/python3.10/site-packages (from pdm) (1.0.0)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: pyproject-hooks in ./venv/lib/python3.10/site-packages (from pdm) (1.0.0)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: tomlkit<1,>=0.11.1 in ./venv/lib/python3.10/site-packages (from pdm) (0.11.6)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: msgpack>=0.5.2 in ./venv/lib/python3.10/site-packages (from cachecontrol[filecache]>=0.13.0->pdm) (1.0.5)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: requests>=2.16.0 in ./venv/lib/python3.10/site-packages (from cachecontrol[filecache]>=0.13.0->pdm) (2.31.0)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: filelock>=3.8.0 in ./venv/lib/python3.10/site-packages (from cachecontrol[filecache]>=0.13.0->pdm) (3.12.2)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: markdown-it-py>=2.2.0 in ./venv/lib/python3.10/site-packages (from rich>=12.3.0->pdm) (3.0.0)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: pygments<3.0.0,>=2.13.0 in ./venv/lib/python3.10/site-packages (from rich>=12.3.0->pdm) (2.15.1)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: distlib<1,>=0.3.6 in ./venv/lib/python3.10/site-packages (from virtualenv>=20->pdm) (0.3.6)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Collecting platformdirs\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: mdurl~=0.1 in ./venv/lib/python3.10/site-packages (from markdown-it-py>=2.2.0->rich>=12.3.0->pdm) (0.1.2)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: charset-normalizer<4,>=2 in ./venv/lib/python3.10/site-packages (from requests>=2.16.0->cachecontrol[filecache]>=0.13.0->pdm) (3.1.0)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: idna<4,>=2.5 in ./venv/lib/python3.10/site-packages (from requests>=2.16.0->cachecontrol[filecache]>=0.13.0->pdm) (3.4)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Requirement already satisfied: urllib3<3,>=1.21.1 in ./venv/lib/python3.10/site-packages (from requests>=2.16.0->cachecontrol[filecache]>=0.13.0->pdm) (1.26.16)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Installing collected packages: platformdirs\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |   Attempting uninstall: platformdirs\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     Found existing installation: platformdirs 2.6.2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     Uninstalling platformdirs-2.6.2:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |       Successfully uninstalled platformdirs-2.6.2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Successfully installed platformdirs-3.8.0\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | [notice] A new release of pip is available: 23.0.1 -> 23.1.2\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | [notice] To update, run: pip install --upgrade pip\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | STATUS: Resolving packages from lockfile...\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Inside an active virtualenv /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap/venv, reusing it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Set env var PDM_IGNORE_ACTIVE_VENV to ignore it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | STATUS: Fetching hashes for resolved packages...\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Synchronizing working set with lock file: 0 to add, 1 to update, 0 to remove\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |   \u2714 Update platformdirs 3.8.0 -> 2.6.2 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Installing the project as an editable package...\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |   \u2714 Update recap-core 0.5.3 -> 0.5.3 successful\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \ud83c\udf89 All complete!\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u2705  Success - Main Install dependencies\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests] \u2b50 Run Main Test with pytest\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Inside an active virtualenv /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap/venv, reusing it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | Set env var PDM_IGNORE_ACTIVE_VENV to ignore it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | ============================= test session starts ==============================\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | platform linux -- Python 3.10.12, pytest-7.3.2, pluggy-1.0.0\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | collected 4 items\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | tests/integration/readers/test_confluent_registry.py EEE                 [ 75%]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | tests/integration/readers/test_postgresql.py E                           [100%]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | ==================================== ERRORS ====================================\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | ________ ERROR at setup of TestConfluentRegistryReader.test_struct_avro ________\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _new_conn(self):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Establish a socket connection and set nodelay settings on it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :return: New socket connection.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         extra_kw = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.source_address:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             extra_kw[\"source_address\"] = self.source_address\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.socket_options:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             extra_kw[\"socket_options\"] = self.socket_options\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           conn = connection.create_connection(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 (self._dns_host, self.port), self.timeout, **extra_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connection.py:174: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | address = ('localhost', 8081), timeout = None, source_address = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | socket_options = [(6, 1, 1)]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def create_connection(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         address,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout=socket._GLOBAL_DEFAULT_TIMEOUT,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         source_address=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         socket_options=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Connect to *address* and return the socket object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         port)``) and return the socket object.  Passing the optional\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         *timeout* parameter will set the timeout on the socket instance\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         global default timeout setting returned by :func:`socket.getdefaulttimeout`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for the socket to bind as a source address before making the connection.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         An host of '' or port 0 tells the OS to use the default.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         host, port = address\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if host.startswith(\"[\"):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             host = host.strip(\"[]\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         err = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Using the value from allowed_gai_family() in the context of getaddrinfo lets\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # us select whether to work with IPv4 DNS records, IPv6 records, or both.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # The original create_connection function always returns all records.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         family = allowed_gai_family()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             host.encode(\"idna\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except UnicodeError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             return six.raise_from(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 LocationParseError(u\"'%s', label empty or too long\" % host), None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             af, socktype, proto, canonname, sa = res\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             sock = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 sock = socket.socket(af, socktype, proto)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # If provided, set socket level options before connecting.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 _set_socket_options(sock, socket_options)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.settimeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if source_address:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.bind(source_address)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 sock.connect(sa)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 return sock\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             except socket.error as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 err = e\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if sock is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.close()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if err is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           raise err\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/util/connection.py:95: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | address = ('localhost', 8081), timeout = None, source_address = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | socket_options = [(6, 1, 1)]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def create_connection(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         address,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout=socket._GLOBAL_DEFAULT_TIMEOUT,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         source_address=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         socket_options=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Connect to *address* and return the socket object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         port)``) and return the socket object.  Passing the optional\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         *timeout* parameter will set the timeout on the socket instance\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         global default timeout setting returned by :func:`socket.getdefaulttimeout`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for the socket to bind as a source address before making the connection.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         An host of '' or port 0 tells the OS to use the default.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         host, port = address\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if host.startswith(\"[\"):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             host = host.strip(\"[]\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         err = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Using the value from allowed_gai_family() in the context of getaddrinfo lets\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # us select whether to work with IPv4 DNS records, IPv6 records, or both.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # The original create_connection function always returns all records.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         family = allowed_gai_family()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             host.encode(\"idna\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except UnicodeError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             return six.raise_from(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 LocationParseError(u\"'%s', label empty or too long\" % host), None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             af, socktype, proto, canonname, sa = res\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             sock = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 sock = socket.socket(af, socktype, proto)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # If provided, set socket level options before connecting.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 _set_socket_options(sock, socket_options)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.settimeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if source_address:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.bind(source_address)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >               sock.connect(sa)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/util/connection.py:85: ConnectionRefusedError\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | During handling of the above exception, another exception occurred:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f559d7087f0>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n            ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | retries = Retry(total=0, connect=None, read=False, redirect=None, status=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | redirect = False, assert_same_host = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), pool_timeout = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | release_conn = False, chunked = False, body_pos = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | response_kw = {'decode_content': False, 'preload_content': False}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | parsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/subjects/dummy_topic-value/versions', query='normalize=False', fragment=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | destination_scheme = None, conn = None, release_this_conn = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | http_tunnel_required = False, err = None, clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def urlopen(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         headers=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         retries=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         redirect=True,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         assert_same_host=True,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout=_Default,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         pool_timeout=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         release_conn=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         chunked=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body_pos=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         **response_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Get a connection from the pool and perform an HTTP request. This is the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         lowest level call for making a request, so you'll need to specify all\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         the raw details.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         .. note::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            More commonly, it's appropriate to use a convenience method provided\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            by :class:`.RequestMethods`, such as :meth:`request`.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         .. note::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `release_conn` will only behave as expected if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `preload_content=False` because we want to make\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `preload_content=False` the default behaviour someday soon without\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            breaking backwards compatibility.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param method:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             HTTP request method (such as GET, POST, PUT, etc.)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param url:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             The URL to perform the request on.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param body:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Data to send in the request body, either :class:`str`, :class:`bytes`,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param headers:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Dictionary of custom headers to send, such as User-Agent,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If-None-Match, etc. If None, pool headers are used. If provided,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             these headers completely replace any pool-specific headers.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param retries:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Configure the number of retries to allow before raising a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`~urllib3.exceptions.MaxRetryError` exception.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Pass ``None`` to retry until you receive a response. Pass a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`~urllib3.util.retry.Retry` object for fine-grained control\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             over different types of retries.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Pass an integer number to retry connection errors that many times,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             but no other types of errors. Pass zero to never retry.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If ``False``, then retries are disabled and any exception is raised\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             immediately. Also, instead of raising a MaxRetryError on redirects,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the redirect response will be returned.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param redirect:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If True, automatically handle redirects (status codes 301, 302,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             303, 307, 308). Each redirect counts as a retry. Disabling retries\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             will disable redirect, too.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param assert_same_host:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If ``True``, will make sure that the host of the pool requests is\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             consistent else will raise HostChangedError. When ``False``, you can\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             use the pool on an HTTP proxy and request foreign hosts.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If specified, overrides the default timeout for this one\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             request. It may be a float (in seconds) or an instance of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`urllib3.util.Timeout`.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param pool_timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If set and the pool is set to block=True, then this method will\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             block for ``pool_timeout`` seconds and raise EmptyPoolError if no\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             connection is available within the time period.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param release_conn:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If False, then the urlopen call will not release the connection\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             back into the pool once a response is received (but will release if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             you read the entire contents of the response such as when\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             `preload_content=True`). This is useful if you're not preloading\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the response's content immediately. You will need to call\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ``r.release_conn()`` on the response ``r`` to return the connection\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             back into the pool. If None, it takes the value of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ``response_kw.get('preload_content', True)``.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param chunked:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If True, urllib3 will send the body using chunked transfer\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             encoding. Otherwise, urllib3 will send the body using the standard\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             content-length form. Defaults to False.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param int body_pos:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Position to seek to in file-like body in the event of a retry or\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             redirect. Typically this won't need to be set because urllib3 will\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             auto-populate the value when needed.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param \\\\**response_kw:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Additional parameters are passed to\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :meth:`urllib3.response.HTTPResponse.from_httplib`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         parsed_url = parse_url(url)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         destination_scheme = parsed_url.scheme\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if headers is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = self.headers\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if not isinstance(retries, Retry):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             retries = Retry.from_int(retries, redirect=redirect, default=self.retries)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if release_conn is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             release_conn = response_kw.get(\"preload_content\", True)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Check host\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if assert_same_host and not self.is_same_host(url):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise HostChangedError(self, url, retries)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Ensure that the URL we're connecting to is properly encoded\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if url.startswith(\"/\"):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             url = six.ensure_str(_encode_target(url))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             url = six.ensure_str(parsed_url.url)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         conn = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Track whether `conn` needs to be released before\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # returning/raising/recursing. Update this variable if necessary, and\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # leave `release_conn` constant throughout the function. That way, if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # the function recurses, the original value of `release_conn` will be\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # passed down into the recursive call, and its value will be respected.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         #\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # See issue #651 [1] for details.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         #\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # [1] <https://github.com/urllib3/urllib3/issues/651>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         release_this_conn = release_conn\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         http_tunnel_required = connection_requires_http_tunnel(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.proxy, self.proxy_config, destination_scheme\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Merge the proxy headers. Only done when not using HTTP CONNECT. We\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # have to copy the headers dict so we can safely change it without those\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # changes being reflected in anyone else's copy.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if not http_tunnel_required:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = headers.copy()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers.update(self.proxy_headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Must keep the exception bound to a separate variable or else Python 3\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # complains about UnboundLocalError.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         err = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Keep track of whether we cleanly exited the except block. This\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # ensures we do proper cleanup in finally.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Rewind body position, if needed. Record current position\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # for future rewinds in the event of a redirect/retry.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body_pos = set_file_position(body, body_pos)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Request a connection from the queue.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout_obj = self._get_timeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = self._get_conn(timeout=pool_timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn.timeout = timeout_obj.connect_timeout\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             is_new_proxy_conn = self.proxy is not None and not getattr(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn, \"sock\", None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if is_new_proxy_conn and http_tunnel_required:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 self._prepare_proxy(conn)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Make the request on the httplib connection object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           httplib_response = self._make_request(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout=timeout_obj,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 body=body,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 headers=headers,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 chunked=chunked,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connectionpool.py:714: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f559d7087f0>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | conn = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | httplib_request_kw = {'body': '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n   ... '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout_obj = Timeout(connect=None, read=None, total=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _make_request(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self, conn, method, url, timeout=_Default, chunked=False, **httplib_request_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Perform a request on a given urllib connection object taken from our\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         pool.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param conn:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             a connection from one of our connection pools\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Socket timeout in seconds for the request. This can be a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             float or integer, which will set the same timeout value for\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the socket connect and the socket read, or an instance of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`urllib3.util.Timeout`, which gives you more fine-grained\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             control over your timeouts.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.num_requests += 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout_obj = self._get_timeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout_obj.start_connect()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         conn.timeout = Timeout.resolve_default_timeout(timeout_obj.connect_timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Trigger any extra validation we need to do.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self._validate_conn(conn)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except (SocketTimeout, BaseSSLError) as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Py2 raises this as a BaseSSLError, Py3 raises it as socket timeout.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self._raise_timeout(err=e, url=url, timeout_value=conn.timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # conn.request() calls http.client.*.request, not the method in\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # urllib3.request. It also calls makefile (recv) on the socket.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if chunked:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn.request_chunked(method, url, **httplib_request_kw)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >               conn.request(method, url, **httplib_request_kw)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connectionpool.py:415: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n            ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def request(self, method, url, body=None, headers=None):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Update the inner socket's timeout value to send the request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # This only triggers if the connection is re-used.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if getattr(self, \"sock\", None) is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.sock.settimeout(self.timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if headers is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Avoid modifying the headers passed into .request()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = headers.copy()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if \"user-agent\" not in (six.ensure_str(k.lower()) for k in headers):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers[\"User-Agent\"] = _get_default_user_agent()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       super(HTTPConnection, self).request(method, url, body=body, headers=headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connection.py:244: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n            ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def request(self, method, url, body=None, headers={}, *,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 encode_chunked=False):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Send a complete request to the server.\"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       self._send_request(method, url, body, headers, encode_chunked)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:1283: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = b'{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n           ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | encode_chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _send_request(self, method, url, body, headers, encode_chunked):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Honor explicitly requested Host: and Accept-Encoding: headers.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         header_names = frozenset(k.lower() for k in headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         skips = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if 'host' in header_names:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             skips['skip_host'] = 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if 'accept-encoding' in header_names:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             skips['skip_accept_encoding'] = 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.putrequest(method, url, **skips)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # chunked encoding will happen if HTTP/1.1 is used and either\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # the caller passes encode_chunked=True or the following\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # conditions hold:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # 1. content-length has not been explicitly set\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # 2. the body is a file or iterable, but not a str or bytes-like\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # 3. Transfer-Encoding has NOT been explicitly set by the caller\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if 'content-length' not in header_names:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # only chunk body if not explicitly set for backwards\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # compatibility, assuming the client code is already handling the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # chunking\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if 'transfer-encoding' not in header_names:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # if content-length cannot be automatically determined, fall\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # back to chunked encoding\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 encode_chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 content_length = self._get_content_length(body, method)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if content_length is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     if body is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                         if self.debuglevel > 0:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                             print('Unable to determine size of %r' % body)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                         encode_chunked = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                         self.putheader('Transfer-Encoding', 'chunked')\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     self.putheader('Content-Length', str(content_length))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             encode_chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for hdr, value in headers.items():\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.putheader(hdr, value)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if isinstance(body, str):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # RFC 2616 Section 3.7.1 says that text default has a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # default charset of iso-8859-1.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             body = _encode(body, 'body')\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       self.endheaders(body, encode_chunked=encode_chunked)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:1329: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | message_body = b'{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n           ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def endheaders(self, message_body=None, *, encode_chunked=False):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Indicate that the last header line has been sent to the server.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         This method sends the request to the server.  The optional message_body\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         argument can be used to pass a message body associated with the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.__state == _CS_REQ_STARTED:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.__state = _CS_REQ_SENT\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise CannotSendHeader()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       self._send_output(message_body, encode_chunked=encode_chunked)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:1278: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | message_body = b'{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n           ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | encode_chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _send_output(self, message_body=None, encode_chunked=False):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Send the currently buffered request and clear the buffer.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Appends an extra \\\\r\\\\n to the buffer.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         A message_body may be specified, to be appended to the request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self._buffer.extend((b\"\", b\"\"))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         msg = b\"\\r\\n\".join(self._buffer)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         del self._buffer[:]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       self.send(msg)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:1038: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | data = b'POST /subjects/dummy_topic-value/versions?normalize=False HTTP/1.1\\r\\nHost: localhost:8081\\r\\nUser-Agent: python-req...: */*\\r\\nConnection: keep-alive\\r\\nContent-Length: 274\\r\\nContent-Type: application/vnd.schemaregistry.v1+json\\r\\n\\r\\n'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def send(self, data):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Send `data' to the server.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         ``data`` can be a string object, a bytes object, an array object, a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         file-like object that supports a .read() method, or an iterable object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.sock is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if self.auto_open:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >               self.connect()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:976: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def connect(self):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       conn = self._new_conn()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connection.py:205: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _new_conn(self):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Establish a socket connection and set nodelay settings on it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :return: New socket connection.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         extra_kw = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.source_address:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             extra_kw[\"source_address\"] = self.source_address\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.socket_options:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             extra_kw[\"socket_options\"] = self.socket_options\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = connection.create_connection(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 (self._dns_host, self.port), self.timeout, **extra_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except SocketTimeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise ConnectTimeoutError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 \"Connection to %s timed out. (connect timeout=%s)\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 % (self.host, self.timeout),\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except SocketError as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           raise NewConnectionError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 self, \"Failed to establish a new connection: %s\" % e\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E           urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connection.py:186: NewConnectionError\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | During handling of the above exception, another exception occurred:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <requests.adapters.HTTPAdapter object at 0x7f559d708520>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | request = <PreparedRequest [POST]>, stream = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), verify = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | cert = None, proxies = OrderedDict()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def send(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Sends PreparedRequest object. Returns Response object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param stream: (optional) Whether to stream the request content.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout: (optional) How long to wait for the server to send\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             data before giving up, as a float, or a :ref:`(connect timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             read timeout) <timeouts>` tuple.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type timeout: float or tuple or urllib3 Timeout object\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param verify: (optional) Either a boolean, in which case it controls whether\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             we verify the server's TLS certificate, or a string, in which case it\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             must be a path to a CA bundle to use\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param cert: (optional) Any user-provided SSL certificate to be trusted.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param proxies: (optional) The proxies dictionary to apply to the request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :rtype: requests.Response\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = self.get_connection(request.url, proxies)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except LocationValueError as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise InvalidURL(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.cert_verify(conn, request.url, verify, cert)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url = self.request_url(request, proxies)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.add_headers(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             request,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             stream=stream,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout=timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             verify=verify,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             cert=cert,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             proxies=proxies,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         chunked = not (request.body is None or \"Content-Length\" in request.headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if isinstance(timeout, tuple):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 connect, read = timeout\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout = TimeoutSauce(connect=connect, read=read)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             except ValueError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise ValueError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     f\"Invalid timeout {timeout}. Pass a (connect, read) timeout tuple, \"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     f\"or a single float to set both timeouts to the same value.\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif isinstance(timeout, TimeoutSauce):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             pass\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout = TimeoutSauce(connect=timeout, read=timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           resp = conn.urlopen(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method=request.method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 url=url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 body=request.body,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 headers=request.headers,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 redirect=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 assert_same_host=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 preload_content=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 decode_content=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 retries=self.max_retries,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout=timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 chunked=chunked,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/requests/adapters.py:486: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f559d7087f0>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n            ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | retries = Retry(total=0, connect=None, read=False, redirect=None, status=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | redirect = False, assert_same_host = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), pool_timeout = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | release_conn = False, chunked = False, body_pos = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | response_kw = {'decode_content': False, 'preload_content': False}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | parsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/subjects/dummy_topic-value/versions', query='normalize=False', fragment=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | destination_scheme = None, conn = None, release_this_conn = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | http_tunnel_required = False, err = None, clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def urlopen(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         headers=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         retries=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         redirect=True,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         assert_same_host=True,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout=_Default,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         pool_timeout=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         release_conn=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         chunked=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body_pos=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         **response_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Get a connection from the pool and perform an HTTP request. This is the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         lowest level call for making a request, so you'll need to specify all\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         the raw details.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         .. note::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            More commonly, it's appropriate to use a convenience method provided\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            by :class:`.RequestMethods`, such as :meth:`request`.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         .. note::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `release_conn` will only behave as expected if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `preload_content=False` because we want to make\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `preload_content=False` the default behaviour someday soon without\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            breaking backwards compatibility.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param method:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             HTTP request method (such as GET, POST, PUT, etc.)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param url:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             The URL to perform the request on.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param body:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Data to send in the request body, either :class:`str`, :class:`bytes`,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param headers:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Dictionary of custom headers to send, such as User-Agent,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If-None-Match, etc. If None, pool headers are used. If provided,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             these headers completely replace any pool-specific headers.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param retries:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Configure the number of retries to allow before raising a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`~urllib3.exceptions.MaxRetryError` exception.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Pass ``None`` to retry until you receive a response. Pass a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`~urllib3.util.retry.Retry` object for fine-grained control\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             over different types of retries.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Pass an integer number to retry connection errors that many times,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             but no other types of errors. Pass zero to never retry.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If ``False``, then retries are disabled and any exception is raised\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             immediately. Also, instead of raising a MaxRetryError on redirects,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the redirect response will be returned.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param redirect:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If True, automatically handle redirects (status codes 301, 302,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             303, 307, 308). Each redirect counts as a retry. Disabling retries\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             will disable redirect, too.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param assert_same_host:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If ``True``, will make sure that the host of the pool requests is\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             consistent else will raise HostChangedError. When ``False``, you can\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             use the pool on an HTTP proxy and request foreign hosts.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If specified, overrides the default timeout for this one\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             request. It may be a float (in seconds) or an instance of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`urllib3.util.Timeout`.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param pool_timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If set and the pool is set to block=True, then this method will\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             block for ``pool_timeout`` seconds and raise EmptyPoolError if no\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             connection is available within the time period.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param release_conn:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If False, then the urlopen call will not release the connection\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             back into the pool once a response is received (but will release if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             you read the entire contents of the response such as when\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             `preload_content=True`). This is useful if you're not preloading\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the response's content immediately. You will need to call\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ``r.release_conn()`` on the response ``r`` to return the connection\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             back into the pool. If None, it takes the value of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ``response_kw.get('preload_content', True)``.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param chunked:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If True, urllib3 will send the body using chunked transfer\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             encoding. Otherwise, urllib3 will send the body using the standard\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             content-length form. Defaults to False.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param int body_pos:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Position to seek to in file-like body in the event of a retry or\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             redirect. Typically this won't need to be set because urllib3 will\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             auto-populate the value when needed.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param \\\\**response_kw:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Additional parameters are passed to\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :meth:`urllib3.response.HTTPResponse.from_httplib`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         parsed_url = parse_url(url)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         destination_scheme = parsed_url.scheme\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if headers is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = self.headers\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if not isinstance(retries, Retry):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             retries = Retry.from_int(retries, redirect=redirect, default=self.retries)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if release_conn is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             release_conn = response_kw.get(\"preload_content\", True)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Check host\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if assert_same_host and not self.is_same_host(url):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise HostChangedError(self, url, retries)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Ensure that the URL we're connecting to is properly encoded\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if url.startswith(\"/\"):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             url = six.ensure_str(_encode_target(url))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             url = six.ensure_str(parsed_url.url)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         conn = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Track whether `conn` needs to be released before\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # returning/raising/recursing. Update this variable if necessary, and\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # leave `release_conn` constant throughout the function. That way, if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # the function recurses, the original value of `release_conn` will be\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # passed down into the recursive call, and its value will be respected.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         #\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # See issue #651 [1] for details.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         #\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # [1] <https://github.com/urllib3/urllib3/issues/651>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         release_this_conn = release_conn\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         http_tunnel_required = connection_requires_http_tunnel(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.proxy, self.proxy_config, destination_scheme\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Merge the proxy headers. Only done when not using HTTP CONNECT. We\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # have to copy the headers dict so we can safely change it without those\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # changes being reflected in anyone else's copy.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if not http_tunnel_required:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = headers.copy()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers.update(self.proxy_headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Must keep the exception bound to a separate variable or else Python 3\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # complains about UnboundLocalError.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         err = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Keep track of whether we cleanly exited the except block. This\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # ensures we do proper cleanup in finally.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Rewind body position, if needed. Record current position\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # for future rewinds in the event of a redirect/retry.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body_pos = set_file_position(body, body_pos)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Request a connection from the queue.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout_obj = self._get_timeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = self._get_conn(timeout=pool_timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn.timeout = timeout_obj.connect_timeout\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             is_new_proxy_conn = self.proxy is not None and not getattr(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn, \"sock\", None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if is_new_proxy_conn and http_tunnel_required:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 self._prepare_proxy(conn)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Make the request on the httplib connection object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             httplib_response = self._make_request(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout=timeout_obj,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 body=body,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 headers=headers,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 chunked=chunked,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # If we're going to release the connection in ``finally:``, then\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # the response doesn't need to know about the connection. Otherwise\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # it will also try to release it and we'll have a double-release\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # mess.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             response_conn = conn if not release_conn else None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Pass method to Response for length checking\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             response_kw[\"request_method\"] = method\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Import httplib's response into our own wrapper object\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             response = self.ResponseCls.from_httplib(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 httplib_response,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 pool=self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 connection=response_conn,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 retries=retries,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 **response_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Everything went great!\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             clean_exit = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except EmptyPoolError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Didn't get a connection from the pool, no need to clean up\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             clean_exit = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             release_this_conn = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except (\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             TimeoutError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             HTTPException,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             SocketError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ProtocolError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             BaseSSLError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             SSLError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             CertificateError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         ) as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Discard the connection for these exceptions. It will be\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # replaced during the next _get_conn() call.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             def _is_ssl_error_message_from_http_proxy(ssl_error):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # We're trying to detect the message 'WRONG_VERSION_NUMBER' but\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # SSLErrors are kinda all over the place when it comes to the message,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # so we try to cover our bases here!\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 message = \" \".join(re.split(\"[^a-z]\", str(ssl_error).lower()))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 return (\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"wrong version number\" in message or \"unknown protocol\" in message\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Try to detect a common user error with proxies which is to\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # set an HTTP proxy to be HTTPS when it should be 'http://'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # (ie {'http': 'http://proxy', 'https': 'https://proxy'})\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Instead we add a nice error message and point to a URL.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if (\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 isinstance(e, BaseSSLError)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 and self.proxy\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 and _is_ssl_error_message_from_http_proxy(e)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 and conn.proxy\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 and conn.proxy.scheme == \"https\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 e = ProxyError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"Your proxy appears to only use HTTP and not HTTPS, \"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"try changing your proxy URL to be HTTP. See: \"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"#https-proxy-error-http-proxy\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     SSLError(e),\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif isinstance(e, (BaseSSLError, CertificateError)):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 e = SSLError(e)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif isinstance(e, (SocketError, NewConnectionError)) and self.proxy:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 e = ProxyError(\"Cannot connect to proxy.\", e)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif isinstance(e, (SocketError, HTTPException)):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 e = ProtocolError(\"Connection aborted.\", e)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           retries = retries.increment(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connectionpool.py:798: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = Retry(total=0, connect=None, read=False, redirect=None, status=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | response = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | error = NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused')\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _pool = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f559d7087f0>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _stacktrace = <traceback object at 0x7f559d71db40>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def increment(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         method=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         response=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         error=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         _pool=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         _stacktrace=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Return a new Retry object with incremented retry counters.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param response: A response object, or None, if the server did not\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             return a response.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type response: :class:`~urllib3.response.HTTPResponse`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param Exception error: An error encountered during the request, or\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             None if the response was received successfully.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :return: A new ``Retry`` object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.total is False and error:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Disabled, indicate to re-raise the error.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise six.reraise(type(error), error, _stacktrace)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         total = self.total\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if total is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             total -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         connect = self.connect\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         read = self.read\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         redirect = self.redirect\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         status_count = self.status\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         other = self.other\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         cause = \"unknown\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         status = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         redirect_location = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if error and self._is_connection_error(error):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Connect retry?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if connect is False:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise six.reraise(type(error), error, _stacktrace)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif connect is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 connect -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif error and self._is_read_error(error):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Read retry?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if read is False or not self._is_method_retryable(method):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise six.reraise(type(error), error, _stacktrace)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif read is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 read -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif error:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Other retry?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if other is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 other -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif response and response.get_redirect_location():\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Redirect retry?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if redirect is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 redirect -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             cause = \"too many redirects\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             redirect_location = response.get_redirect_location()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             status = response.status\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Incrementing because of a server error like a 500 in\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # status_forcelist and the given method is in the allowed_methods\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             cause = ResponseError.GENERIC_ERROR\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if response and response.status:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if status_count is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     status_count -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 cause = ResponseError.SPECIFIC_ERROR.format(status_code=response.status)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 status = response.status\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         history = self.history + (\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             RequestHistory(method, url, error, status, redirect_location),\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         new_retry = self.new(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             total=total,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             connect=connect,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             read=read,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             redirect=redirect,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             status=status_count,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             other=other,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             history=history,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if new_retry.is_exhausted():\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           raise MaxRetryError(_pool, url, error or ResponseError(cause))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E           urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=8081): Max retries exceeded with url: /subjects/dummy_topic-value/versions?normalize=False (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused'))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/util/retry.py:592: MaxRetryError\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | During handling of the above exception, another exception occurred:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | cls = <class 'test_confluent_registry.TestConfluentRegistryReader'>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     @classmethod\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def setup_class(cls):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         cls.schema_registry_client = schema_registry.SchemaRegistryClient(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             {\"url\": \"http://localhost:8081\"}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Define and register the Avro schema for the \"dummy_topic\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         avro_schema_str = \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         {\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             \"type\": \"record\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             \"name\": \"User\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             \"fields\": [\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 {\"name\": \"name\", \"type\": \"string\"},\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 {\"name\": \"age\",  \"type\": \"int\"}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         }\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         avro_schema = schema_registry.Schema(avro_schema_str, \"AVRO\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       cls.schema_registry_client.register_schema(\"dummy_topic-value\", avro_schema)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | tests/integration/readers/test_confluent_registry.py:26: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/confluent_kafka/schema_registry/schema_registry_client.py:337: in register_schema\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     response = self._rest_client.post(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/confluent_kafka/schema_registry/schema_registry_client.py:128: in post\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     return self.send_request(url, method='POST', body=body)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/confluent_kafka/schema_registry/schema_registry_client.py:168: in send_request\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     response = self.session.request(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/requests/sessions.py:589: in request\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     resp = self.send(prep, **send_kwargs)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/requests/sessions.py:703: in send\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     r = adapter.send(request, **kwargs)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <requests.adapters.HTTPAdapter object at 0x7f559d708520>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | request = <PreparedRequest [POST]>, stream = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), verify = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | cert = None, proxies = OrderedDict()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def send(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Sends PreparedRequest object. Returns Response object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param stream: (optional) Whether to stream the request content.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout: (optional) How long to wait for the server to send\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             data before giving up, as a float, or a :ref:`(connect timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             read timeout) <timeouts>` tuple.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type timeout: float or tuple or urllib3 Timeout object\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param verify: (optional) Either a boolean, in which case it controls whether\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             we verify the server's TLS certificate, or a string, in which case it\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             must be a path to a CA bundle to use\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param cert: (optional) Any user-provided SSL certificate to be trusted.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param proxies: (optional) The proxies dictionary to apply to the request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :rtype: requests.Response\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = self.get_connection(request.url, proxies)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except LocationValueError as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise InvalidURL(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.cert_verify(conn, request.url, verify, cert)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url = self.request_url(request, proxies)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.add_headers(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             request,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             stream=stream,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout=timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             verify=verify,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             cert=cert,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             proxies=proxies,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         chunked = not (request.body is None or \"Content-Length\" in request.headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if isinstance(timeout, tuple):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 connect, read = timeout\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout = TimeoutSauce(connect=connect, read=read)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             except ValueError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise ValueError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     f\"Invalid timeout {timeout}. Pass a (connect, read) timeout tuple, \"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     f\"or a single float to set both timeouts to the same value.\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif isinstance(timeout, TimeoutSauce):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             pass\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout = TimeoutSauce(connect=timeout, read=timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             resp = conn.urlopen(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method=request.method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 url=url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 body=request.body,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 headers=request.headers,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 redirect=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 assert_same_host=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 preload_content=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 decode_content=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 retries=self.max_retries,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout=timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 chunked=chunked,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except (ProtocolError, OSError) as err:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise ConnectionError(err, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except MaxRetryError as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if isinstance(e.reason, ConnectTimeoutError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # TODO: Remove this in 3.0.0: see #2811\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if not isinstance(e.reason, NewConnectionError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     raise ConnectTimeout(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if isinstance(e.reason, ResponseError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise RetryError(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if isinstance(e.reason, _ProxyError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise ProxyError(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if isinstance(e.reason, _SSLError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # This branch is for urllib3 v1.22 and later.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise SSLError(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           raise ConnectionError(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E           requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=8081): Max retries exceeded with url: /subjects/dummy_topic-value/versions?normalize=False (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused'))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/requests/adapters.py:519: ConnectionError\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _______ ERROR at setup of TestConfluentRegistryReader.test_struct_proto ________\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _new_conn(self):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Establish a socket connection and set nodelay settings on it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :return: New socket connection.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         extra_kw = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.source_address:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             extra_kw[\"source_address\"] = self.source_address\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.socket_options:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             extra_kw[\"socket_options\"] = self.socket_options\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           conn = connection.create_connection(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 (self._dns_host, self.port), self.timeout, **extra_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connection.py:174: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | address = ('localhost', 8081), timeout = None, source_address = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | socket_options = [(6, 1, 1)]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def create_connection(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         address,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout=socket._GLOBAL_DEFAULT_TIMEOUT,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         source_address=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         socket_options=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Connect to *address* and return the socket object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         port)``) and return the socket object.  Passing the optional\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         *timeout* parameter will set the timeout on the socket instance\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         global default timeout setting returned by :func:`socket.getdefaulttimeout`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for the socket to bind as a source address before making the connection.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         An host of '' or port 0 tells the OS to use the default.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         host, port = address\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if host.startswith(\"[\"):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             host = host.strip(\"[]\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         err = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Using the value from allowed_gai_family() in the context of getaddrinfo lets\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # us select whether to work with IPv4 DNS records, IPv6 records, or both.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # The original create_connection function always returns all records.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         family = allowed_gai_family()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             host.encode(\"idna\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except UnicodeError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             return six.raise_from(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 LocationParseError(u\"'%s', label empty or too long\" % host), None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             af, socktype, proto, canonname, sa = res\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             sock = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 sock = socket.socket(af, socktype, proto)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # If provided, set socket level options before connecting.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 _set_socket_options(sock, socket_options)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.settimeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if source_address:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.bind(source_address)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 sock.connect(sa)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 return sock\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             except socket.error as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 err = e\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if sock is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.close()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if err is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           raise err\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/util/connection.py:95: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | address = ('localhost', 8081), timeout = None, source_address = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | socket_options = [(6, 1, 1)]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def create_connection(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         address,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout=socket._GLOBAL_DEFAULT_TIMEOUT,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         source_address=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         socket_options=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Connect to *address* and return the socket object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         port)``) and return the socket object.  Passing the optional\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         *timeout* parameter will set the timeout on the socket instance\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         global default timeout setting returned by :func:`socket.getdefaulttimeout`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for the socket to bind as a source address before making the connection.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         An host of '' or port 0 tells the OS to use the default.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         host, port = address\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if host.startswith(\"[\"):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             host = host.strip(\"[]\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         err = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Using the value from allowed_gai_family() in the context of getaddrinfo lets\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # us select whether to work with IPv4 DNS records, IPv6 records, or both.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # The original create_connection function always returns all records.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         family = allowed_gai_family()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             host.encode(\"idna\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except UnicodeError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             return six.raise_from(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 LocationParseError(u\"'%s', label empty or too long\" % host), None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             af, socktype, proto, canonname, sa = res\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             sock = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 sock = socket.socket(af, socktype, proto)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # If provided, set socket level options before connecting.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 _set_socket_options(sock, socket_options)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.settimeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if source_address:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.bind(source_address)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >               sock.connect(sa)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/util/connection.py:85: ConnectionRefusedError\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | During handling of the above exception, another exception occurred:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f559d7087f0>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n            ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | retries = Retry(total=0, connect=None, read=False, redirect=None, status=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | redirect = False, assert_same_host = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), pool_timeout = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | release_conn = False, chunked = False, body_pos = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | response_kw = {'decode_content': False, 'preload_content': False}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | parsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/subjects/dummy_topic-value/versions', query='normalize=False', fragment=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | destination_scheme = None, conn = None, release_this_conn = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | http_tunnel_required = False, err = None, clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def urlopen(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         headers=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         retries=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         redirect=True,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         assert_same_host=True,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout=_Default,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         pool_timeout=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         release_conn=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         chunked=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body_pos=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         **response_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Get a connection from the pool and perform an HTTP request. This is the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         lowest level call for making a request, so you'll need to specify all\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         the raw details.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         .. note::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            More commonly, it's appropriate to use a convenience method provided\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            by :class:`.RequestMethods`, such as :meth:`request`.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         .. note::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `release_conn` will only behave as expected if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `preload_content=False` because we want to make\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `preload_content=False` the default behaviour someday soon without\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            breaking backwards compatibility.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param method:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             HTTP request method (such as GET, POST, PUT, etc.)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param url:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             The URL to perform the request on.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param body:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Data to send in the request body, either :class:`str`, :class:`bytes`,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param headers:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Dictionary of custom headers to send, such as User-Agent,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If-None-Match, etc. If None, pool headers are used. If provided,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             these headers completely replace any pool-specific headers.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param retries:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Configure the number of retries to allow before raising a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`~urllib3.exceptions.MaxRetryError` exception.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Pass ``None`` to retry until you receive a response. Pass a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`~urllib3.util.retry.Retry` object for fine-grained control\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             over different types of retries.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Pass an integer number to retry connection errors that many times,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             but no other types of errors. Pass zero to never retry.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If ``False``, then retries are disabled and any exception is raised\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             immediately. Also, instead of raising a MaxRetryError on redirects,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the redirect response will be returned.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param redirect:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If True, automatically handle redirects (status codes 301, 302,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             303, 307, 308). Each redirect counts as a retry. Disabling retries\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             will disable redirect, too.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param assert_same_host:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If ``True``, will make sure that the host of the pool requests is\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             consistent else will raise HostChangedError. When ``False``, you can\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             use the pool on an HTTP proxy and request foreign hosts.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If specified, overrides the default timeout for this one\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             request. It may be a float (in seconds) or an instance of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`urllib3.util.Timeout`.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param pool_timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If set and the pool is set to block=True, then this method will\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             block for ``pool_timeout`` seconds and raise EmptyPoolError if no\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             connection is available within the time period.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param release_conn:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If False, then the urlopen call will not release the connection\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             back into the pool once a response is received (but will release if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             you read the entire contents of the response such as when\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             `preload_content=True`). This is useful if you're not preloading\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the response's content immediately. You will need to call\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ``r.release_conn()`` on the response ``r`` to return the connection\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             back into the pool. If None, it takes the value of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ``response_kw.get('preload_content', True)``.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param chunked:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If True, urllib3 will send the body using chunked transfer\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             encoding. Otherwise, urllib3 will send the body using the standard\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             content-length form. Defaults to False.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param int body_pos:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Position to seek to in file-like body in the event of a retry or\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             redirect. Typically this won't need to be set because urllib3 will\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             auto-populate the value when needed.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param \\\\**response_kw:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Additional parameters are passed to\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :meth:`urllib3.response.HTTPResponse.from_httplib`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         parsed_url = parse_url(url)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         destination_scheme = parsed_url.scheme\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if headers is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = self.headers\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if not isinstance(retries, Retry):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             retries = Retry.from_int(retries, redirect=redirect, default=self.retries)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if release_conn is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             release_conn = response_kw.get(\"preload_content\", True)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Check host\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if assert_same_host and not self.is_same_host(url):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise HostChangedError(self, url, retries)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Ensure that the URL we're connecting to is properly encoded\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if url.startswith(\"/\"):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             url = six.ensure_str(_encode_target(url))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             url = six.ensure_str(parsed_url.url)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         conn = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Track whether `conn` needs to be released before\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # returning/raising/recursing. Update this variable if necessary, and\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # leave `release_conn` constant throughout the function. That way, if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # the function recurses, the original value of `release_conn` will be\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # passed down into the recursive call, and its value will be respected.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         #\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # See issue #651 [1] for details.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         #\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # [1] <https://github.com/urllib3/urllib3/issues/651>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         release_this_conn = release_conn\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         http_tunnel_required = connection_requires_http_tunnel(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.proxy, self.proxy_config, destination_scheme\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Merge the proxy headers. Only done when not using HTTP CONNECT. We\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # have to copy the headers dict so we can safely change it without those\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # changes being reflected in anyone else's copy.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if not http_tunnel_required:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = headers.copy()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers.update(self.proxy_headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Must keep the exception bound to a separate variable or else Python 3\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # complains about UnboundLocalError.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         err = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Keep track of whether we cleanly exited the except block. This\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # ensures we do proper cleanup in finally.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Rewind body position, if needed. Record current position\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # for future rewinds in the event of a redirect/retry.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body_pos = set_file_position(body, body_pos)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Request a connection from the queue.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout_obj = self._get_timeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = self._get_conn(timeout=pool_timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn.timeout = timeout_obj.connect_timeout\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             is_new_proxy_conn = self.proxy is not None and not getattr(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn, \"sock\", None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if is_new_proxy_conn and http_tunnel_required:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 self._prepare_proxy(conn)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Make the request on the httplib connection object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           httplib_response = self._make_request(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout=timeout_obj,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 body=body,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 headers=headers,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 chunked=chunked,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connectionpool.py:714: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f559d7087f0>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | conn = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | httplib_request_kw = {'body': '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n   ... '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout_obj = Timeout(connect=None, read=None, total=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _make_request(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self, conn, method, url, timeout=_Default, chunked=False, **httplib_request_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Perform a request on a given urllib connection object taken from our\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         pool.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param conn:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             a connection from one of our connection pools\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Socket timeout in seconds for the request. This can be a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             float or integer, which will set the same timeout value for\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the socket connect and the socket read, or an instance of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`urllib3.util.Timeout`, which gives you more fine-grained\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             control over your timeouts.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.num_requests += 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout_obj = self._get_timeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout_obj.start_connect()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         conn.timeout = Timeout.resolve_default_timeout(timeout_obj.connect_timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Trigger any extra validation we need to do.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self._validate_conn(conn)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except (SocketTimeout, BaseSSLError) as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Py2 raises this as a BaseSSLError, Py3 raises it as socket timeout.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self._raise_timeout(err=e, url=url, timeout_value=conn.timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # conn.request() calls http.client.*.request, not the method in\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # urllib3.request. It also calls makefile (recv) on the socket.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if chunked:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn.request_chunked(method, url, **httplib_request_kw)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >               conn.request(method, url, **httplib_request_kw)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connectionpool.py:415: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n            ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def request(self, method, url, body=None, headers=None):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Update the inner socket's timeout value to send the request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # This only triggers if the connection is re-used.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if getattr(self, \"sock\", None) is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.sock.settimeout(self.timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if headers is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Avoid modifying the headers passed into .request()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = headers.copy()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if \"user-agent\" not in (six.ensure_str(k.lower()) for k in headers):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers[\"User-Agent\"] = _get_default_user_agent()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       super(HTTPConnection, self).request(method, url, body=body, headers=headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connection.py:244: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n            ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def request(self, method, url, body=None, headers={}, *,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 encode_chunked=False):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Send a complete request to the server.\"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       self._send_request(method, url, body, headers, encode_chunked)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:1283: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = b'{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n           ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | encode_chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _send_request(self, method, url, body, headers, encode_chunked):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Honor explicitly requested Host: and Accept-Encoding: headers.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         header_names = frozenset(k.lower() for k in headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         skips = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if 'host' in header_names:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             skips['skip_host'] = 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if 'accept-encoding' in header_names:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             skips['skip_accept_encoding'] = 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.putrequest(method, url, **skips)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # chunked encoding will happen if HTTP/1.1 is used and either\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # the caller passes encode_chunked=True or the following\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # conditions hold:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # 1. content-length has not been explicitly set\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # 2. the body is a file or iterable, but not a str or bytes-like\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # 3. Transfer-Encoding has NOT been explicitly set by the caller\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if 'content-length' not in header_names:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # only chunk body if not explicitly set for backwards\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # compatibility, assuming the client code is already handling the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # chunking\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if 'transfer-encoding' not in header_names:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # if content-length cannot be automatically determined, fall\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # back to chunked encoding\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 encode_chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 content_length = self._get_content_length(body, method)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if content_length is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     if body is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                         if self.debuglevel > 0:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                             print('Unable to determine size of %r' % body)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                         encode_chunked = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                         self.putheader('Transfer-Encoding', 'chunked')\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     self.putheader('Content-Length', str(content_length))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             encode_chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for hdr, value in headers.items():\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.putheader(hdr, value)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if isinstance(body, str):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # RFC 2616 Section 3.7.1 says that text default has a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # default charset of iso-8859-1.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             body = _encode(body, 'body')\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       self.endheaders(body, encode_chunked=encode_chunked)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:1329: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | message_body = b'{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n           ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def endheaders(self, message_body=None, *, encode_chunked=False):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Indicate that the last header line has been sent to the server.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         This method sends the request to the server.  The optional message_body\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         argument can be used to pass a message body associated with the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.__state == _CS_REQ_STARTED:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.__state = _CS_REQ_SENT\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise CannotSendHeader()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       self._send_output(message_body, encode_chunked=encode_chunked)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:1278: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | message_body = b'{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n           ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | encode_chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _send_output(self, message_body=None, encode_chunked=False):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Send the currently buffered request and clear the buffer.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Appends an extra \\\\r\\\\n to the buffer.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         A message_body may be specified, to be appended to the request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self._buffer.extend((b\"\", b\"\"))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         msg = b\"\\r\\n\".join(self._buffer)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         del self._buffer[:]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       self.send(msg)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:1038: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | data = b'POST /subjects/dummy_topic-value/versions?normalize=False HTTP/1.1\\r\\nHost: localhost:8081\\r\\nUser-Agent: python-req...: */*\\r\\nConnection: keep-alive\\r\\nContent-Length: 274\\r\\nContent-Type: application/vnd.schemaregistry.v1+json\\r\\n\\r\\n'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def send(self, data):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Send `data' to the server.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         ``data`` can be a string object, a bytes object, an array object, a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         file-like object that supports a .read() method, or an iterable object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.sock is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if self.auto_open:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >               self.connect()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:976: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def connect(self):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       conn = self._new_conn()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connection.py:205: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _new_conn(self):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Establish a socket connection and set nodelay settings on it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :return: New socket connection.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         extra_kw = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.source_address:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             extra_kw[\"source_address\"] = self.source_address\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.socket_options:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             extra_kw[\"socket_options\"] = self.socket_options\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = connection.create_connection(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 (self._dns_host, self.port), self.timeout, **extra_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except SocketTimeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise ConnectTimeoutError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 \"Connection to %s timed out. (connect timeout=%s)\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 % (self.host, self.timeout),\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except SocketError as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           raise NewConnectionError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 self, \"Failed to establish a new connection: %s\" % e\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E           urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connection.py:186: NewConnectionError\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | During handling of the above exception, another exception occurred:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <requests.adapters.HTTPAdapter object at 0x7f559d708520>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | request = <PreparedRequest [POST]>, stream = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), verify = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | cert = None, proxies = OrderedDict()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def send(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Sends PreparedRequest object. Returns Response object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param stream: (optional) Whether to stream the request content.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout: (optional) How long to wait for the server to send\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             data before giving up, as a float, or a :ref:`(connect timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             read timeout) <timeouts>` tuple.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type timeout: float or tuple or urllib3 Timeout object\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param verify: (optional) Either a boolean, in which case it controls whether\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             we verify the server's TLS certificate, or a string, in which case it\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             must be a path to a CA bundle to use\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param cert: (optional) Any user-provided SSL certificate to be trusted.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param proxies: (optional) The proxies dictionary to apply to the request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :rtype: requests.Response\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = self.get_connection(request.url, proxies)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except LocationValueError as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise InvalidURL(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.cert_verify(conn, request.url, verify, cert)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url = self.request_url(request, proxies)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.add_headers(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             request,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             stream=stream,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout=timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             verify=verify,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             cert=cert,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             proxies=proxies,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         chunked = not (request.body is None or \"Content-Length\" in request.headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if isinstance(timeout, tuple):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 connect, read = timeout\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout = TimeoutSauce(connect=connect, read=read)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             except ValueError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise ValueError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     f\"Invalid timeout {timeout}. Pass a (connect, read) timeout tuple, \"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     f\"or a single float to set both timeouts to the same value.\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif isinstance(timeout, TimeoutSauce):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             pass\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout = TimeoutSauce(connect=timeout, read=timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           resp = conn.urlopen(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method=request.method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 url=url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 body=request.body,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 headers=request.headers,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 redirect=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 assert_same_host=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 preload_content=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 decode_content=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 retries=self.max_retries,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout=timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 chunked=chunked,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/requests/adapters.py:486: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f559d7087f0>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n            ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | retries = Retry(total=0, connect=None, read=False, redirect=None, status=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | redirect = False, assert_same_host = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), pool_timeout = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | release_conn = False, chunked = False, body_pos = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | response_kw = {'decode_content': False, 'preload_content': False}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | parsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/subjects/dummy_topic-value/versions', query='normalize=False', fragment=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | destination_scheme = None, conn = None, release_this_conn = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | http_tunnel_required = False, err = None, clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def urlopen(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         headers=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         retries=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         redirect=True,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         assert_same_host=True,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout=_Default,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         pool_timeout=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         release_conn=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         chunked=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body_pos=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         **response_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Get a connection from the pool and perform an HTTP request. This is the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         lowest level call for making a request, so you'll need to specify all\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         the raw details.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         .. note::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            More commonly, it's appropriate to use a convenience method provided\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            by :class:`.RequestMethods`, such as :meth:`request`.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         .. note::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `release_conn` will only behave as expected if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `preload_content=False` because we want to make\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `preload_content=False` the default behaviour someday soon without\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            breaking backwards compatibility.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param method:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             HTTP request method (such as GET, POST, PUT, etc.)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param url:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             The URL to perform the request on.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param body:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Data to send in the request body, either :class:`str`, :class:`bytes`,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param headers:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Dictionary of custom headers to send, such as User-Agent,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If-None-Match, etc. If None, pool headers are used. If provided,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             these headers completely replace any pool-specific headers.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param retries:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Configure the number of retries to allow before raising a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`~urllib3.exceptions.MaxRetryError` exception.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Pass ``None`` to retry until you receive a response. Pass a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`~urllib3.util.retry.Retry` object for fine-grained control\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             over different types of retries.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Pass an integer number to retry connection errors that many times,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             but no other types of errors. Pass zero to never retry.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If ``False``, then retries are disabled and any exception is raised\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             immediately. Also, instead of raising a MaxRetryError on redirects,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the redirect response will be returned.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param redirect:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If True, automatically handle redirects (status codes 301, 302,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             303, 307, 308). Each redirect counts as a retry. Disabling retries\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             will disable redirect, too.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param assert_same_host:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If ``True``, will make sure that the host of the pool requests is\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             consistent else will raise HostChangedError. When ``False``, you can\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             use the pool on an HTTP proxy and request foreign hosts.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If specified, overrides the default timeout for this one\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             request. It may be a float (in seconds) or an instance of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`urllib3.util.Timeout`.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param pool_timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If set and the pool is set to block=True, then this method will\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             block for ``pool_timeout`` seconds and raise EmptyPoolError if no\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             connection is available within the time period.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param release_conn:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If False, then the urlopen call will not release the connection\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             back into the pool once a response is received (but will release if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             you read the entire contents of the response such as when\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             `preload_content=True`). This is useful if you're not preloading\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the response's content immediately. You will need to call\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ``r.release_conn()`` on the response ``r`` to return the connection\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             back into the pool. If None, it takes the value of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ``response_kw.get('preload_content', True)``.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param chunked:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If True, urllib3 will send the body using chunked transfer\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             encoding. Otherwise, urllib3 will send the body using the standard\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             content-length form. Defaults to False.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param int body_pos:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Position to seek to in file-like body in the event of a retry or\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             redirect. Typically this won't need to be set because urllib3 will\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             auto-populate the value when needed.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param \\\\**response_kw:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Additional parameters are passed to\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :meth:`urllib3.response.HTTPResponse.from_httplib`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         parsed_url = parse_url(url)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         destination_scheme = parsed_url.scheme\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if headers is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = self.headers\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if not isinstance(retries, Retry):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             retries = Retry.from_int(retries, redirect=redirect, default=self.retries)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if release_conn is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             release_conn = response_kw.get(\"preload_content\", True)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Check host\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if assert_same_host and not self.is_same_host(url):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise HostChangedError(self, url, retries)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Ensure that the URL we're connecting to is properly encoded\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if url.startswith(\"/\"):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             url = six.ensure_str(_encode_target(url))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             url = six.ensure_str(parsed_url.url)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         conn = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Track whether `conn` needs to be released before\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # returning/raising/recursing. Update this variable if necessary, and\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # leave `release_conn` constant throughout the function. That way, if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # the function recurses, the original value of `release_conn` will be\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # passed down into the recursive call, and its value will be respected.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         #\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # See issue #651 [1] for details.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         #\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # [1] <https://github.com/urllib3/urllib3/issues/651>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         release_this_conn = release_conn\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         http_tunnel_required = connection_requires_http_tunnel(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.proxy, self.proxy_config, destination_scheme\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Merge the proxy headers. Only done when not using HTTP CONNECT. We\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # have to copy the headers dict so we can safely change it without those\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # changes being reflected in anyone else's copy.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if not http_tunnel_required:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = headers.copy()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers.update(self.proxy_headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Must keep the exception bound to a separate variable or else Python 3\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # complains about UnboundLocalError.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         err = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Keep track of whether we cleanly exited the except block. This\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # ensures we do proper cleanup in finally.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Rewind body position, if needed. Record current position\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # for future rewinds in the event of a redirect/retry.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body_pos = set_file_position(body, body_pos)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Request a connection from the queue.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout_obj = self._get_timeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = self._get_conn(timeout=pool_timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn.timeout = timeout_obj.connect_timeout\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             is_new_proxy_conn = self.proxy is not None and not getattr(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn, \"sock\", None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if is_new_proxy_conn and http_tunnel_required:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 self._prepare_proxy(conn)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Make the request on the httplib connection object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             httplib_response = self._make_request(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout=timeout_obj,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 body=body,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 headers=headers,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 chunked=chunked,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # If we're going to release the connection in ``finally:``, then\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # the response doesn't need to know about the connection. Otherwise\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # it will also try to release it and we'll have a double-release\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # mess.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             response_conn = conn if not release_conn else None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Pass method to Response for length checking\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             response_kw[\"request_method\"] = method\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Import httplib's response into our own wrapper object\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             response = self.ResponseCls.from_httplib(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 httplib_response,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 pool=self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 connection=response_conn,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 retries=retries,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 **response_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Everything went great!\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             clean_exit = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except EmptyPoolError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Didn't get a connection from the pool, no need to clean up\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             clean_exit = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             release_this_conn = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except (\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             TimeoutError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             HTTPException,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             SocketError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ProtocolError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             BaseSSLError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             SSLError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             CertificateError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         ) as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Discard the connection for these exceptions. It will be\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # replaced during the next _get_conn() call.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             def _is_ssl_error_message_from_http_proxy(ssl_error):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # We're trying to detect the message 'WRONG_VERSION_NUMBER' but\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # SSLErrors are kinda all over the place when it comes to the message,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # so we try to cover our bases here!\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 message = \" \".join(re.split(\"[^a-z]\", str(ssl_error).lower()))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 return (\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"wrong version number\" in message or \"unknown protocol\" in message\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Try to detect a common user error with proxies which is to\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # set an HTTP proxy to be HTTPS when it should be 'http://'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # (ie {'http': 'http://proxy', 'https': 'https://proxy'})\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Instead we add a nice error message and point to a URL.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if (\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 isinstance(e, BaseSSLError)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 and self.proxy\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 and _is_ssl_error_message_from_http_proxy(e)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 and conn.proxy\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 and conn.proxy.scheme == \"https\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 e = ProxyError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"Your proxy appears to only use HTTP and not HTTPS, \"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"try changing your proxy URL to be HTTP. See: \"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"#https-proxy-error-http-proxy\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     SSLError(e),\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif isinstance(e, (BaseSSLError, CertificateError)):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 e = SSLError(e)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif isinstance(e, (SocketError, NewConnectionError)) and self.proxy:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 e = ProxyError(\"Cannot connect to proxy.\", e)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif isinstance(e, (SocketError, HTTPException)):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 e = ProtocolError(\"Connection aborted.\", e)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           retries = retries.increment(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connectionpool.py:798: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = Retry(total=0, connect=None, read=False, redirect=None, status=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | response = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | error = NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused')\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _pool = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f559d7087f0>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _stacktrace = <traceback object at 0x7f559d71db40>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def increment(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         method=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         response=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         error=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         _pool=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         _stacktrace=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Return a new Retry object with incremented retry counters.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param response: A response object, or None, if the server did not\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             return a response.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type response: :class:`~urllib3.response.HTTPResponse`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param Exception error: An error encountered during the request, or\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             None if the response was received successfully.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :return: A new ``Retry`` object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.total is False and error:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Disabled, indicate to re-raise the error.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise six.reraise(type(error), error, _stacktrace)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         total = self.total\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if total is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             total -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         connect = self.connect\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         read = self.read\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         redirect = self.redirect\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         status_count = self.status\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         other = self.other\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         cause = \"unknown\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         status = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         redirect_location = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if error and self._is_connection_error(error):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Connect retry?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if connect is False:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise six.reraise(type(error), error, _stacktrace)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif connect is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 connect -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif error and self._is_read_error(error):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Read retry?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if read is False or not self._is_method_retryable(method):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise six.reraise(type(error), error, _stacktrace)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif read is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 read -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif error:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Other retry?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if other is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 other -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif response and response.get_redirect_location():\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Redirect retry?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if redirect is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 redirect -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             cause = \"too many redirects\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             redirect_location = response.get_redirect_location()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             status = response.status\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Incrementing because of a server error like a 500 in\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # status_forcelist and the given method is in the allowed_methods\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             cause = ResponseError.GENERIC_ERROR\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if response and response.status:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if status_count is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     status_count -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 cause = ResponseError.SPECIFIC_ERROR.format(status_code=response.status)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 status = response.status\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         history = self.history + (\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             RequestHistory(method, url, error, status, redirect_location),\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         new_retry = self.new(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             total=total,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             connect=connect,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             read=read,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             redirect=redirect,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             status=status_count,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             other=other,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             history=history,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if new_retry.is_exhausted():\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           raise MaxRetryError(_pool, url, error or ResponseError(cause))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E           urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=8081): Max retries exceeded with url: /subjects/dummy_topic-value/versions?normalize=False (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused'))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/util/retry.py:592: MaxRetryError\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | During handling of the above exception, another exception occurred:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | cls = <class 'test_confluent_registry.TestConfluentRegistryReader'>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     @classmethod\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def setup_class(cls):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         cls.schema_registry_client = schema_registry.SchemaRegistryClient(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             {\"url\": \"http://localhost:8081\"}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Define and register the Avro schema for the \"dummy_topic\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         avro_schema_str = \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         {\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             \"type\": \"record\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             \"name\": \"User\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             \"fields\": [\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 {\"name\": \"name\", \"type\": \"string\"},\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 {\"name\": \"age\",  \"type\": \"int\"}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         }\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         avro_schema = schema_registry.Schema(avro_schema_str, \"AVRO\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       cls.schema_registry_client.register_schema(\"dummy_topic-value\", avro_schema)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | tests/integration/readers/test_confluent_registry.py:26: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/confluent_kafka/schema_registry/schema_registry_client.py:337: in register_schema\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     response = self._rest_client.post(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/confluent_kafka/schema_registry/schema_registry_client.py:128: in post\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     return self.send_request(url, method='POST', body=body)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/confluent_kafka/schema_registry/schema_registry_client.py:168: in send_request\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     response = self.session.request(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/requests/sessions.py:589: in request\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     resp = self.send(prep, **send_kwargs)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/requests/sessions.py:703: in send\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     r = adapter.send(request, **kwargs)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <requests.adapters.HTTPAdapter object at 0x7f559d708520>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | request = <PreparedRequest [POST]>, stream = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), verify = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | cert = None, proxies = OrderedDict()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def send(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Sends PreparedRequest object. Returns Response object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param stream: (optional) Whether to stream the request content.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout: (optional) How long to wait for the server to send\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             data before giving up, as a float, or a :ref:`(connect timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             read timeout) <timeouts>` tuple.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type timeout: float or tuple or urllib3 Timeout object\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param verify: (optional) Either a boolean, in which case it controls whether\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             we verify the server's TLS certificate, or a string, in which case it\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             must be a path to a CA bundle to use\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param cert: (optional) Any user-provided SSL certificate to be trusted.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param proxies: (optional) The proxies dictionary to apply to the request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :rtype: requests.Response\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = self.get_connection(request.url, proxies)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except LocationValueError as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise InvalidURL(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.cert_verify(conn, request.url, verify, cert)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url = self.request_url(request, proxies)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.add_headers(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             request,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             stream=stream,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout=timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             verify=verify,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             cert=cert,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             proxies=proxies,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         chunked = not (request.body is None or \"Content-Length\" in request.headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if isinstance(timeout, tuple):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 connect, read = timeout\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout = TimeoutSauce(connect=connect, read=read)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             except ValueError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise ValueError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     f\"Invalid timeout {timeout}. Pass a (connect, read) timeout tuple, \"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     f\"or a single float to set both timeouts to the same value.\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif isinstance(timeout, TimeoutSauce):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             pass\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout = TimeoutSauce(connect=timeout, read=timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             resp = conn.urlopen(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method=request.method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 url=url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 body=request.body,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 headers=request.headers,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 redirect=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 assert_same_host=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 preload_content=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 decode_content=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 retries=self.max_retries,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout=timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 chunked=chunked,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except (ProtocolError, OSError) as err:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise ConnectionError(err, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except MaxRetryError as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if isinstance(e.reason, ConnectTimeoutError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # TODO: Remove this in 3.0.0: see #2811\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if not isinstance(e.reason, NewConnectionError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     raise ConnectTimeout(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if isinstance(e.reason, ResponseError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise RetryError(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if isinstance(e.reason, _ProxyError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise ProxyError(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if isinstance(e.reason, _SSLError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # This branch is for urllib3 v1.22 and later.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise SSLError(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           raise ConnectionError(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E           requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=8081): Max retries exceeded with url: /subjects/dummy_topic-value/versions?normalize=False (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused'))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/requests/adapters.py:519: ConnectionError\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | ________ ERROR at setup of TestConfluentRegistryReader.test_struct_json ________\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _new_conn(self):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Establish a socket connection and set nodelay settings on it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :return: New socket connection.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         extra_kw = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.source_address:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             extra_kw[\"source_address\"] = self.source_address\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.socket_options:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             extra_kw[\"socket_options\"] = self.socket_options\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           conn = connection.create_connection(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 (self._dns_host, self.port), self.timeout, **extra_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connection.py:174: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | address = ('localhost', 8081), timeout = None, source_address = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | socket_options = [(6, 1, 1)]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def create_connection(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         address,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout=socket._GLOBAL_DEFAULT_TIMEOUT,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         source_address=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         socket_options=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Connect to *address* and return the socket object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         port)``) and return the socket object.  Passing the optional\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         *timeout* parameter will set the timeout on the socket instance\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         global default timeout setting returned by :func:`socket.getdefaulttimeout`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for the socket to bind as a source address before making the connection.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         An host of '' or port 0 tells the OS to use the default.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         host, port = address\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if host.startswith(\"[\"):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             host = host.strip(\"[]\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         err = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Using the value from allowed_gai_family() in the context of getaddrinfo lets\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # us select whether to work with IPv4 DNS records, IPv6 records, or both.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # The original create_connection function always returns all records.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         family = allowed_gai_family()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             host.encode(\"idna\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except UnicodeError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             return six.raise_from(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 LocationParseError(u\"'%s', label empty or too long\" % host), None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             af, socktype, proto, canonname, sa = res\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             sock = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 sock = socket.socket(af, socktype, proto)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # If provided, set socket level options before connecting.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 _set_socket_options(sock, socket_options)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.settimeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if source_address:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.bind(source_address)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 sock.connect(sa)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 return sock\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             except socket.error as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 err = e\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if sock is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.close()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if err is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           raise err\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/util/connection.py:95: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | address = ('localhost', 8081), timeout = None, source_address = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | socket_options = [(6, 1, 1)]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def create_connection(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         address,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout=socket._GLOBAL_DEFAULT_TIMEOUT,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         source_address=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         socket_options=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Connect to *address* and return the socket object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Convenience function.  Connect to *address* (a 2-tuple ``(host,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         port)``) and return the socket object.  Passing the optional\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         *timeout* parameter will set the timeout on the socket instance\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         before attempting to connect.  If no *timeout* is supplied, the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         global default timeout setting returned by :func:`socket.getdefaulttimeout`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         is used.  If *source_address* is set it must be a tuple of (host, port)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for the socket to bind as a source address before making the connection.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         An host of '' or port 0 tells the OS to use the default.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         host, port = address\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if host.startswith(\"[\"):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             host = host.strip(\"[]\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         err = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Using the value from allowed_gai_family() in the context of getaddrinfo lets\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # us select whether to work with IPv4 DNS records, IPv6 records, or both.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # The original create_connection function always returns all records.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         family = allowed_gai_family()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             host.encode(\"idna\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except UnicodeError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             return six.raise_from(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 LocationParseError(u\"'%s', label empty or too long\" % host), None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             af, socktype, proto, canonname, sa = res\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             sock = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 sock = socket.socket(af, socktype, proto)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # If provided, set socket level options before connecting.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 _set_socket_options(sock, socket_options)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if timeout is not socket._GLOBAL_DEFAULT_TIMEOUT:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.settimeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if source_address:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     sock.bind(source_address)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >               sock.connect(sa)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E               ConnectionRefusedError: [Errno 111] Connection refused\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/util/connection.py:85: ConnectionRefusedError\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | During handling of the above exception, another exception occurred:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f559d7087f0>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n            ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | retries = Retry(total=0, connect=None, read=False, redirect=None, status=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | redirect = False, assert_same_host = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), pool_timeout = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | release_conn = False, chunked = False, body_pos = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | response_kw = {'decode_content': False, 'preload_content': False}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | parsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/subjects/dummy_topic-value/versions', query='normalize=False', fragment=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | destination_scheme = None, conn = None, release_this_conn = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | http_tunnel_required = False, err = None, clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def urlopen(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         headers=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         retries=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         redirect=True,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         assert_same_host=True,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout=_Default,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         pool_timeout=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         release_conn=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         chunked=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body_pos=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         **response_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Get a connection from the pool and perform an HTTP request. This is the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         lowest level call for making a request, so you'll need to specify all\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         the raw details.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         .. note::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            More commonly, it's appropriate to use a convenience method provided\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            by :class:`.RequestMethods`, such as :meth:`request`.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         .. note::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `release_conn` will only behave as expected if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `preload_content=False` because we want to make\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `preload_content=False` the default behaviour someday soon without\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            breaking backwards compatibility.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param method:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             HTTP request method (such as GET, POST, PUT, etc.)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param url:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             The URL to perform the request on.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param body:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Data to send in the request body, either :class:`str`, :class:`bytes`,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param headers:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Dictionary of custom headers to send, such as User-Agent,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If-None-Match, etc. If None, pool headers are used. If provided,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             these headers completely replace any pool-specific headers.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param retries:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Configure the number of retries to allow before raising a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`~urllib3.exceptions.MaxRetryError` exception.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Pass ``None`` to retry until you receive a response. Pass a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`~urllib3.util.retry.Retry` object for fine-grained control\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             over different types of retries.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Pass an integer number to retry connection errors that many times,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             but no other types of errors. Pass zero to never retry.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If ``False``, then retries are disabled and any exception is raised\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             immediately. Also, instead of raising a MaxRetryError on redirects,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the redirect response will be returned.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param redirect:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If True, automatically handle redirects (status codes 301, 302,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             303, 307, 308). Each redirect counts as a retry. Disabling retries\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             will disable redirect, too.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param assert_same_host:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If ``True``, will make sure that the host of the pool requests is\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             consistent else will raise HostChangedError. When ``False``, you can\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             use the pool on an HTTP proxy and request foreign hosts.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If specified, overrides the default timeout for this one\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             request. It may be a float (in seconds) or an instance of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`urllib3.util.Timeout`.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param pool_timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If set and the pool is set to block=True, then this method will\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             block for ``pool_timeout`` seconds and raise EmptyPoolError if no\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             connection is available within the time period.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param release_conn:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If False, then the urlopen call will not release the connection\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             back into the pool once a response is received (but will release if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             you read the entire contents of the response such as when\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             `preload_content=True`). This is useful if you're not preloading\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the response's content immediately. You will need to call\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ``r.release_conn()`` on the response ``r`` to return the connection\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             back into the pool. If None, it takes the value of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ``response_kw.get('preload_content', True)``.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param chunked:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If True, urllib3 will send the body using chunked transfer\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             encoding. Otherwise, urllib3 will send the body using the standard\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             content-length form. Defaults to False.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param int body_pos:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Position to seek to in file-like body in the event of a retry or\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             redirect. Typically this won't need to be set because urllib3 will\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             auto-populate the value when needed.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param \\\\**response_kw:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Additional parameters are passed to\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :meth:`urllib3.response.HTTPResponse.from_httplib`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         parsed_url = parse_url(url)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         destination_scheme = parsed_url.scheme\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if headers is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = self.headers\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if not isinstance(retries, Retry):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             retries = Retry.from_int(retries, redirect=redirect, default=self.retries)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if release_conn is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             release_conn = response_kw.get(\"preload_content\", True)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Check host\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if assert_same_host and not self.is_same_host(url):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise HostChangedError(self, url, retries)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Ensure that the URL we're connecting to is properly encoded\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if url.startswith(\"/\"):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             url = six.ensure_str(_encode_target(url))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             url = six.ensure_str(parsed_url.url)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         conn = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Track whether `conn` needs to be released before\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # returning/raising/recursing. Update this variable if necessary, and\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # leave `release_conn` constant throughout the function. That way, if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # the function recurses, the original value of `release_conn` will be\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # passed down into the recursive call, and its value will be respected.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         #\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # See issue #651 [1] for details.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         #\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # [1] <https://github.com/urllib3/urllib3/issues/651>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         release_this_conn = release_conn\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         http_tunnel_required = connection_requires_http_tunnel(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.proxy, self.proxy_config, destination_scheme\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Merge the proxy headers. Only done when not using HTTP CONNECT. We\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # have to copy the headers dict so we can safely change it without those\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # changes being reflected in anyone else's copy.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if not http_tunnel_required:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = headers.copy()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers.update(self.proxy_headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Must keep the exception bound to a separate variable or else Python 3\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # complains about UnboundLocalError.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         err = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Keep track of whether we cleanly exited the except block. This\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # ensures we do proper cleanup in finally.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Rewind body position, if needed. Record current position\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # for future rewinds in the event of a redirect/retry.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body_pos = set_file_position(body, body_pos)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Request a connection from the queue.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout_obj = self._get_timeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = self._get_conn(timeout=pool_timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn.timeout = timeout_obj.connect_timeout\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             is_new_proxy_conn = self.proxy is not None and not getattr(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn, \"sock\", None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if is_new_proxy_conn and http_tunnel_required:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 self._prepare_proxy(conn)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Make the request on the httplib connection object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           httplib_response = self._make_request(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout=timeout_obj,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 body=body,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 headers=headers,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 chunked=chunked,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connectionpool.py:714: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f559d7087f0>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | conn = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | httplib_request_kw = {'body': '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n   ... '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout_obj = Timeout(connect=None, read=None, total=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _make_request(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self, conn, method, url, timeout=_Default, chunked=False, **httplib_request_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Perform a request on a given urllib connection object taken from our\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         pool.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param conn:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             a connection from one of our connection pools\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Socket timeout in seconds for the request. This can be a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             float or integer, which will set the same timeout value for\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the socket connect and the socket read, or an instance of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`urllib3.util.Timeout`, which gives you more fine-grained\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             control over your timeouts.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.num_requests += 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout_obj = self._get_timeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout_obj.start_connect()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         conn.timeout = Timeout.resolve_default_timeout(timeout_obj.connect_timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Trigger any extra validation we need to do.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self._validate_conn(conn)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except (SocketTimeout, BaseSSLError) as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Py2 raises this as a BaseSSLError, Py3 raises it as socket timeout.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self._raise_timeout(err=e, url=url, timeout_value=conn.timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # conn.request() calls http.client.*.request, not the method in\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # urllib3.request. It also calls makefile (recv) on the socket.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if chunked:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn.request_chunked(method, url, **httplib_request_kw)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >               conn.request(method, url, **httplib_request_kw)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connectionpool.py:415: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n            ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def request(self, method, url, body=None, headers=None):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Update the inner socket's timeout value to send the request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # This only triggers if the connection is re-used.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if getattr(self, \"sock\", None) is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.sock.settimeout(self.timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if headers is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Avoid modifying the headers passed into .request()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = headers.copy()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if \"user-agent\" not in (six.ensure_str(k.lower()) for k in headers):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers[\"User-Agent\"] = _get_default_user_agent()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       super(HTTPConnection, self).request(method, url, body=body, headers=headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connection.py:244: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n            ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def request(self, method, url, body=None, headers={}, *,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 encode_chunked=False):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Send a complete request to the server.\"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       self._send_request(method, url, body, headers, encode_chunked)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:1283: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = b'{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n           ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | encode_chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _send_request(self, method, url, body, headers, encode_chunked):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Honor explicitly requested Host: and Accept-Encoding: headers.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         header_names = frozenset(k.lower() for k in headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         skips = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if 'host' in header_names:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             skips['skip_host'] = 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if 'accept-encoding' in header_names:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             skips['skip_accept_encoding'] = 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.putrequest(method, url, **skips)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # chunked encoding will happen if HTTP/1.1 is used and either\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # the caller passes encode_chunked=True or the following\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # conditions hold:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # 1. content-length has not been explicitly set\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # 2. the body is a file or iterable, but not a str or bytes-like\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # 3. Transfer-Encoding has NOT been explicitly set by the caller\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if 'content-length' not in header_names:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # only chunk body if not explicitly set for backwards\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # compatibility, assuming the client code is already handling the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # chunking\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if 'transfer-encoding' not in header_names:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # if content-length cannot be automatically determined, fall\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # back to chunked encoding\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 encode_chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 content_length = self._get_content_length(body, method)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if content_length is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     if body is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                         if self.debuglevel > 0:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                             print('Unable to determine size of %r' % body)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                         encode_chunked = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                         self.putheader('Transfer-Encoding', 'chunked')\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     self.putheader('Content-Length', str(content_length))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             encode_chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         for hdr, value in headers.items():\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.putheader(hdr, value)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if isinstance(body, str):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # RFC 2616 Section 3.7.1 says that text default has a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # default charset of iso-8859-1.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             body = _encode(body, 'body')\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       self.endheaders(body, encode_chunked=encode_chunked)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:1329: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | message_body = b'{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n           ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def endheaders(self, message_body=None, *, encode_chunked=False):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Indicate that the last header line has been sent to the server.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         This method sends the request to the server.  The optional message_body\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         argument can be used to pass a message body associated with the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.__state == _CS_REQ_STARTED:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.__state = _CS_REQ_SENT\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise CannotSendHeader()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       self._send_output(message_body, encode_chunked=encode_chunked)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:1278: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | message_body = b'{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n           ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | encode_chunked = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _send_output(self, message_body=None, encode_chunked=False):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Send the currently buffered request and clear the buffer.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Appends an extra \\\\r\\\\n to the buffer.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         A message_body may be specified, to be appended to the request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self._buffer.extend((b\"\", b\"\"))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         msg = b\"\\r\\n\".join(self._buffer)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         del self._buffer[:]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       self.send(msg)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:1038: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | data = b'POST /subjects/dummy_topic-value/versions?normalize=False HTTP/1.1\\r\\nHost: localhost:8081\\r\\nUser-Agent: python-req...: */*\\r\\nConnection: keep-alive\\r\\nContent-Length: 274\\r\\nContent-Type: application/vnd.schemaregistry.v1+json\\r\\n\\r\\n'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def send(self, data):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Send `data' to the server.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         ``data`` can be a string object, a bytes object, an array object, a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         file-like object that supports a .read() method, or an iterable object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.sock is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if self.auto_open:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >               self.connect()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/http/client.py:976: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def connect(self):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       conn = self._new_conn()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connection.py:205: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connection.HTTPConnection object at 0x7f559d708e20>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def _new_conn(self):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Establish a socket connection and set nodelay settings on it.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :return: New socket connection.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         extra_kw = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.source_address:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             extra_kw[\"source_address\"] = self.source_address\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.socket_options:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             extra_kw[\"socket_options\"] = self.socket_options\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = connection.create_connection(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 (self._dns_host, self.port), self.timeout, **extra_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except SocketTimeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise ConnectTimeoutError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 \"Connection to %s timed out. (connect timeout=%s)\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 % (self.host, self.timeout),\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except SocketError as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           raise NewConnectionError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 self, \"Failed to establish a new connection: %s\" % e\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E           urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connection.py:186: NewConnectionError\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | During handling of the above exception, another exception occurred:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <requests.adapters.HTTPAdapter object at 0x7f559d708520>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | request = <PreparedRequest [POST]>, stream = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), verify = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | cert = None, proxies = OrderedDict()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def send(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Sends PreparedRequest object. Returns Response object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param stream: (optional) Whether to stream the request content.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout: (optional) How long to wait for the server to send\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             data before giving up, as a float, or a :ref:`(connect timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             read timeout) <timeouts>` tuple.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type timeout: float or tuple or urllib3 Timeout object\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param verify: (optional) Either a boolean, in which case it controls whether\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             we verify the server's TLS certificate, or a string, in which case it\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             must be a path to a CA bundle to use\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param cert: (optional) Any user-provided SSL certificate to be trusted.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param proxies: (optional) The proxies dictionary to apply to the request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :rtype: requests.Response\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = self.get_connection(request.url, proxies)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except LocationValueError as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise InvalidURL(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.cert_verify(conn, request.url, verify, cert)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url = self.request_url(request, proxies)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.add_headers(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             request,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             stream=stream,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout=timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             verify=verify,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             cert=cert,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             proxies=proxies,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         chunked = not (request.body is None or \"Content-Length\" in request.headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if isinstance(timeout, tuple):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 connect, read = timeout\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout = TimeoutSauce(connect=connect, read=read)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             except ValueError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise ValueError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     f\"Invalid timeout {timeout}. Pass a (connect, read) timeout tuple, \"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     f\"or a single float to set both timeouts to the same value.\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif isinstance(timeout, TimeoutSauce):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             pass\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout = TimeoutSauce(connect=timeout, read=timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           resp = conn.urlopen(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method=request.method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 url=url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 body=request.body,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 headers=request.headers,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 redirect=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 assert_same_host=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 preload_content=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 decode_content=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 retries=self.max_retries,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout=timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 chunked=chunked,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/requests/adapters.py:486: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f559d7087f0>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | body = '{\"schema\": \"\\\\n        {\\\\n            \\\\\"type\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"User\\\\\",\\\\n            ...string\\\\\"},\\\\n                {\\\\\"name\\\\\": \\\\\"age\\\\\",  \\\\\"type\\\\\": \\\\\"int\\\\\"}\\\\n            ]\\\\n        }\\\\n        \"}'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | headers = {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '274', 'Content-Type': 'application/vnd.schemaregistry.v1+json'}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | retries = Retry(total=0, connect=None, read=False, redirect=None, status=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | redirect = False, assert_same_host = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), pool_timeout = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | release_conn = False, chunked = False, body_pos = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | response_kw = {'decode_content': False, 'preload_content': False}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | parsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/subjects/dummy_topic-value/versions', query='normalize=False', fragment=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | destination_scheme = None, conn = None, release_this_conn = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | http_tunnel_required = False, err = None, clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def urlopen(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         headers=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         retries=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         redirect=True,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         assert_same_host=True,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         timeout=_Default,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         pool_timeout=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         release_conn=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         chunked=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body_pos=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         **response_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Get a connection from the pool and perform an HTTP request. This is the\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         lowest level call for making a request, so you'll need to specify all\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         the raw details.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         .. note::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            More commonly, it's appropriate to use a convenience method provided\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            by :class:`.RequestMethods`, such as :meth:`request`.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         .. note::\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `release_conn` will only behave as expected if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `preload_content=False` because we want to make\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            `preload_content=False` the default behaviour someday soon without\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |            breaking backwards compatibility.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param method:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             HTTP request method (such as GET, POST, PUT, etc.)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param url:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             The URL to perform the request on.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param body:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Data to send in the request body, either :class:`str`, :class:`bytes`,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param headers:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Dictionary of custom headers to send, such as User-Agent,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If-None-Match, etc. If None, pool headers are used. If provided,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             these headers completely replace any pool-specific headers.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param retries:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Configure the number of retries to allow before raising a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`~urllib3.exceptions.MaxRetryError` exception.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Pass ``None`` to retry until you receive a response. Pass a\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`~urllib3.util.retry.Retry` object for fine-grained control\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             over different types of retries.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Pass an integer number to retry connection errors that many times,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             but no other types of errors. Pass zero to never retry.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If ``False``, then retries are disabled and any exception is raised\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             immediately. Also, instead of raising a MaxRetryError on redirects,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the redirect response will be returned.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param redirect:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If True, automatically handle redirects (status codes 301, 302,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             303, 307, 308). Each redirect counts as a retry. Disabling retries\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             will disable redirect, too.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param assert_same_host:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If ``True``, will make sure that the host of the pool requests is\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             consistent else will raise HostChangedError. When ``False``, you can\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             use the pool on an HTTP proxy and request foreign hosts.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If specified, overrides the default timeout for this one\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             request. It may be a float (in seconds) or an instance of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :class:`urllib3.util.Timeout`.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param pool_timeout:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If set and the pool is set to block=True, then this method will\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             block for ``pool_timeout`` seconds and raise EmptyPoolError if no\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             connection is available within the time period.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param release_conn:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If False, then the urlopen call will not release the connection\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             back into the pool once a response is received (but will release if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             you read the entire contents of the response such as when\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             `preload_content=True`). This is useful if you're not preloading\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             the response's content immediately. You will need to call\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ``r.release_conn()`` on the response ``r`` to return the connection\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             back into the pool. If None, it takes the value of\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ``response_kw.get('preload_content', True)``.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param chunked:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             If True, urllib3 will send the body using chunked transfer\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             encoding. Otherwise, urllib3 will send the body using the standard\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             content-length form. Defaults to False.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param int body_pos:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Position to seek to in file-like body in the event of a retry or\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             redirect. Typically this won't need to be set because urllib3 will\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             auto-populate the value when needed.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param \\\\**response_kw:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             Additional parameters are passed to\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             :meth:`urllib3.response.HTTPResponse.from_httplib`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         parsed_url = parse_url(url)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         destination_scheme = parsed_url.scheme\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if headers is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = self.headers\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if not isinstance(retries, Retry):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             retries = Retry.from_int(retries, redirect=redirect, default=self.retries)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if release_conn is None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             release_conn = response_kw.get(\"preload_content\", True)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Check host\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if assert_same_host and not self.is_same_host(url):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise HostChangedError(self, url, retries)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Ensure that the URL we're connecting to is properly encoded\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if url.startswith(\"/\"):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             url = six.ensure_str(_encode_target(url))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             url = six.ensure_str(parsed_url.url)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         conn = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Track whether `conn` needs to be released before\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # returning/raising/recursing. Update this variable if necessary, and\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # leave `release_conn` constant throughout the function. That way, if\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # the function recurses, the original value of `release_conn` will be\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # passed down into the recursive call, and its value will be respected.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         #\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # See issue #651 [1] for details.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         #\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # [1] <https://github.com/urllib3/urllib3/issues/651>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         release_this_conn = release_conn\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         http_tunnel_required = connection_requires_http_tunnel(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             self.proxy, self.proxy_config, destination_scheme\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Merge the proxy headers. Only done when not using HTTP CONNECT. We\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # have to copy the headers dict so we can safely change it without those\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # changes being reflected in anyone else's copy.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if not http_tunnel_required:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers = headers.copy()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             headers.update(self.proxy_headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Must keep the exception bound to a separate variable or else Python 3\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # complains about UnboundLocalError.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         err = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Keep track of whether we cleanly exited the except block. This\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # ensures we do proper cleanup in finally.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Rewind body position, if needed. Record current position\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # for future rewinds in the event of a redirect/retry.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         body_pos = set_file_position(body, body_pos)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Request a connection from the queue.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout_obj = self._get_timeout(timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = self._get_conn(timeout=pool_timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn.timeout = timeout_obj.connect_timeout\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             is_new_proxy_conn = self.proxy is not None and not getattr(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn, \"sock\", None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if is_new_proxy_conn and http_tunnel_required:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 self._prepare_proxy(conn)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Make the request on the httplib connection object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             httplib_response = self._make_request(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 conn,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout=timeout_obj,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 body=body,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 headers=headers,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 chunked=chunked,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # If we're going to release the connection in ``finally:``, then\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # the response doesn't need to know about the connection. Otherwise\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # it will also try to release it and we'll have a double-release\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # mess.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             response_conn = conn if not release_conn else None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Pass method to Response for length checking\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             response_kw[\"request_method\"] = method\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Import httplib's response into our own wrapper object\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             response = self.ResponseCls.from_httplib(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 httplib_response,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 pool=self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 connection=response_conn,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 retries=retries,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 **response_kw\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Everything went great!\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             clean_exit = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except EmptyPoolError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Didn't get a connection from the pool, no need to clean up\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             clean_exit = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             release_this_conn = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except (\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             TimeoutError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             HTTPException,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             SocketError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ProtocolError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             BaseSSLError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             SSLError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             CertificateError,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         ) as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Discard the connection for these exceptions. It will be\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # replaced during the next _get_conn() call.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             clean_exit = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             def _is_ssl_error_message_from_http_proxy(ssl_error):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # We're trying to detect the message 'WRONG_VERSION_NUMBER' but\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # SSLErrors are kinda all over the place when it comes to the message,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # so we try to cover our bases here!\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 message = \" \".join(re.split(\"[^a-z]\", str(ssl_error).lower()))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 return (\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"wrong version number\" in message or \"unknown protocol\" in message\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Try to detect a common user error with proxies which is to\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # set an HTTP proxy to be HTTPS when it should be 'http://'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # (ie {'http': 'http://proxy', 'https': 'https://proxy'})\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Instead we add a nice error message and point to a URL.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if (\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 isinstance(e, BaseSSLError)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 and self.proxy\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 and _is_ssl_error_message_from_http_proxy(e)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 and conn.proxy\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 and conn.proxy.scheme == \"https\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 e = ProxyError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"Your proxy appears to only use HTTP and not HTTPS, \"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"try changing your proxy URL to be HTTP. See: \"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     \"#https-proxy-error-http-proxy\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     SSLError(e),\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif isinstance(e, (BaseSSLError, CertificateError)):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 e = SSLError(e)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif isinstance(e, (SocketError, NewConnectionError)) and self.proxy:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 e = ProxyError(\"Cannot connect to proxy.\", e)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif isinstance(e, (SocketError, HTTPException)):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 e = ProtocolError(\"Connection aborted.\", e)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           retries = retries.increment(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/connectionpool.py:798: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = Retry(total=0, connect=None, read=False, redirect=None, status=None)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | method = 'POST', url = '/subjects/dummy_topic-value/versions?normalize=False'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | response = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | error = NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused')\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _pool = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f559d7087f0>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _stacktrace = <traceback object at 0x7f559d71db40>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def increment(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         method=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         response=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         error=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         _pool=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         _stacktrace=None,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Return a new Retry object with incremented retry counters.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param response: A response object, or None, if the server did not\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             return a response.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type response: :class:`~urllib3.response.HTTPResponse`\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param Exception error: An error encountered during the request, or\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             None if the response was received successfully.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :return: A new ``Retry`` object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if self.total is False and error:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Disabled, indicate to re-raise the error.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise six.reraise(type(error), error, _stacktrace)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         total = self.total\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if total is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             total -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         connect = self.connect\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         read = self.read\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         redirect = self.redirect\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         status_count = self.status\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         other = self.other\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         cause = \"unknown\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         status = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         redirect_location = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if error and self._is_connection_error(error):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Connect retry?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if connect is False:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise six.reraise(type(error), error, _stacktrace)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif connect is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 connect -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif error and self._is_read_error(error):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Read retry?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if read is False or not self._is_method_retryable(method):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise six.reraise(type(error), error, _stacktrace)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             elif read is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 read -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif error:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Other retry?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if other is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 other -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif response and response.get_redirect_location():\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Redirect retry?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if redirect is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 redirect -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             cause = \"too many redirects\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             redirect_location = response.get_redirect_location()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             status = response.status\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # Incrementing because of a server error like a 500 in\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             # status_forcelist and the given method is in the allowed_methods\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             cause = ResponseError.GENERIC_ERROR\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if response and response.status:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if status_count is not None:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     status_count -= 1\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 cause = ResponseError.SPECIFIC_ERROR.format(status_code=response.status)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 status = response.status\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         history = self.history + (\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             RequestHistory(method, url, error, status, redirect_location),\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         new_retry = self.new(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             total=total,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             connect=connect,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             read=read,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             redirect=redirect,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             status=status_count,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             other=other,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             history=history,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if new_retry.is_exhausted():\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           raise MaxRetryError(_pool, url, error or ResponseError(cause))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E           urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=8081): Max retries exceeded with url: /subjects/dummy_topic-value/versions?normalize=False (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused'))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/urllib3/util/retry.py:592: MaxRetryError\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | During handling of the above exception, another exception occurred:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | cls = <class 'test_confluent_registry.TestConfluentRegistryReader'>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     @classmethod\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def setup_class(cls):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         cls.schema_registry_client = schema_registry.SchemaRegistryClient(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             {\"url\": \"http://localhost:8081\"}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Define and register the Avro schema for the \"dummy_topic\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         avro_schema_str = \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         {\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             \"type\": \"record\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             \"name\": \"User\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             \"fields\": [\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 {\"name\": \"name\", \"type\": \"string\"},\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 {\"name\": \"age\",  \"type\": \"int\"}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             ]\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         }\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         avro_schema = schema_registry.Schema(avro_schema_str, \"AVRO\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       cls.schema_registry_client.register_schema(\"dummy_topic-value\", avro_schema)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | tests/integration/readers/test_confluent_registry.py:26: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/confluent_kafka/schema_registry/schema_registry_client.py:337: in register_schema\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     response = self._rest_client.post(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/confluent_kafka/schema_registry/schema_registry_client.py:128: in post\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     return self.send_request(url, method='POST', body=body)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/confluent_kafka/schema_registry/schema_registry_client.py:168: in send_request\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     response = self.session.request(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/requests/sessions.py:589: in request\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     resp = self.send(prep, **send_kwargs)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/requests/sessions.py:703: in send\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     r = adapter.send(request, **kwargs)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | self = <requests.adapters.HTTPAdapter object at 0x7f559d708520>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | request = <PreparedRequest [POST]>, stream = False\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | timeout = Timeout(connect=None, read=None, total=None), verify = True\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | cert = None, proxies = OrderedDict()\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def send(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     ):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"Sends PreparedRequest object. Returns Response object.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param stream: (optional) Whether to stream the request content.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param timeout: (optional) How long to wait for the server to send\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             data before giving up, as a float, or a :ref:`(connect timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             read timeout) <timeouts>` tuple.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :type timeout: float or tuple or urllib3 Timeout object\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param verify: (optional) Either a boolean, in which case it controls whether\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             we verify the server's TLS certificate, or a string, in which case it\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             must be a path to a CA bundle to use\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param cert: (optional) Any user-provided SSL certificate to be trusted.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :param proxies: (optional) The proxies dictionary to apply to the request.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         :rtype: requests.Response\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = self.get_connection(request.url, proxies)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except LocationValueError as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise InvalidURL(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.cert_verify(conn, request.url, verify, cert)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         url = self.request_url(request, proxies)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         self.add_headers(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             request,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             stream=stream,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout=timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             verify=verify,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             cert=cert,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             proxies=proxies,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         chunked = not (request.body is None or \"Content-Length\" in request.headers)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if isinstance(timeout, tuple):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 connect, read = timeout\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout = TimeoutSauce(connect=connect, read=read)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             except ValueError:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise ValueError(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     f\"Invalid timeout {timeout}. Pass a (connect, read) timeout tuple, \"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     f\"or a single float to set both timeouts to the same value.\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         elif isinstance(timeout, TimeoutSauce):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             pass\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         else:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             timeout = TimeoutSauce(connect=timeout, read=timeout)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         try:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             resp = conn.urlopen(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 method=request.method,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 url=url,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 body=request.body,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 headers=request.headers,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 redirect=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 assert_same_host=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 preload_content=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 decode_content=False,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 retries=self.max_retries,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 timeout=timeout,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 chunked=chunked,\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except (ProtocolError, OSError) as err:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             raise ConnectionError(err, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         except MaxRetryError as e:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if isinstance(e.reason, ConnectTimeoutError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # TODO: Remove this in 3.0.0: see #2811\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 if not isinstance(e.reason, NewConnectionError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                     raise ConnectTimeout(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if isinstance(e.reason, ResponseError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise RetryError(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if isinstance(e.reason, _ProxyError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise ProxyError(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             if isinstance(e.reason, _SSLError):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 # This branch is for urllib3 v1.22 and later.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |                 raise SSLError(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >           raise ConnectionError(e, request=request)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E           requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=8081): Max retries exceeded with url: /subjects/dummy_topic-value/versions?normalize=False (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused'))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/requests/adapters.py:519: ConnectionError\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | __________ ERROR at setup of TestPostgresqlReader.test_struct_method ___________\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | cls = <class 'test_postgresql.TestPostgresqlReader'>\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     @classmethod\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def setup_class(cls):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         # Connect to the PostgreSQL database\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       cls.connection = psycopg2.connect(\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             host=\"localhost\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             port=\"5432\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             user=\"postgres\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             password=\"password\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             dbname=\"testdb\",\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         )\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | tests/integration/readers/test_postgresql.py:20: \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | dsn = 'host=localhost port=5432 user=postgres password=password dbname=testdb'\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | connection_factory = None, cursor_factory = None\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | kwargs = {'dbname': 'testdb', 'host': 'localhost', 'password': 'password', 'port': '5432', ...}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | kwasync = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Create a new database connection.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         The connection parameters can be specified as a string:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         or using a set of keyword arguments:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Or as a mix of both. The basic connection parameters are:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         - *dbname*: the database name\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         - *database*: the database name (only as keyword argument)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         - *user*: user name used to authenticate\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         - *password*: password used to authenticate\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Using the *connection_factory* parameter a different class or connections\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         factory can be specified. It should be a callable object taking a dsn\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         argument.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         used by cursor().\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         Any other keyword parameter will be passed to the underlying client\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         library: the list of supported parameters depends on the library version.\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         \"\"\"\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         kwasync = {}\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if 'async' in kwargs:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             kwasync['async'] = kwargs.pop('async')\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         if 'async_' in kwargs:\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |             kwasync['async_'] = kwargs.pop('async_')\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |     \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | venv/lib/python3.10/site-packages/psycopg2/__init__.py:122: OperationalError\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap/report.xml -\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | =========================== short test summary info ============================\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | ERROR tests/integration/readers/test_confluent_registry.py::TestConfluentRegistryReader::test_struct_avro - requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=8081): Max retries exceeded with url: /subjects/dummy_topic-value/versions?normalize=False (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused'))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | ERROR tests/integration/readers/test_confluent_registry.py::TestConfluentRegistryReader::test_struct_proto - requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=8081): Max retries exceeded with url: /subjects/dummy_topic-value/versions?normalize=False (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused'))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | ERROR tests/integration/readers/test_confluent_registry.py::TestConfluentRegistryReader::test_struct_json - requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=8081): Max retries exceeded with url: /subjects/dummy_topic-value/versions?normalize=False (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f559d708e20>: Failed to establish a new connection: [Errno 111] Connection refused'))\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | ERROR tests/integration/readers/test_postgresql.py::TestPostgresqlReader::test_struct_method - psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | \tIs the server running on that host and accepting TCP/IP connections?\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   | ============================== 4 errors in 1.30s ===============================\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests]   \u274c  Failure - Main Test with pytest\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests] exitcode '1': failure\n[424b6226-7993-4f72-a5b2-380ab8a29a91/integration-tests] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'integration-tests' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/recap-build-recap/.github/workflows/ci-crawler.yaml",
        "build_tool": "pytest",
        "elapsed_time": 568.8522119522095
    }
}