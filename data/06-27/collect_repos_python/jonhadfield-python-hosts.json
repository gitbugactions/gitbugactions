{
    "repository": "jonhadfield/python-hosts",
    "stars": 119,
    "language": "python",
    "size": 527,
    "clone_url": "https://github.com/jonhadfield/python-hosts.git",
    "timestamp": "2023-06-28T10:53:29.706841Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_hosts",
                "name": "test_find_all_matching_by_name_address_comment",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_merge_names",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_add_comments",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_remove_all_matching_with_loopback_address_and_multiple_names",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_remove_all_matching_with_non_loopback_address_and_multiple_names",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_import_from_url_without_force",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_import_from_url_with_force",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_remove_existing_entry_using_name_only",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_remove_existing_entry_using_address_only",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_remove_existing_entry_using_comment_only",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_hosts_str",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_hosts_write_to_custom_path",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_hosts_repr",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_import_from_url_counters_for_part_success",
                "time": 0.229,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_exception_raised_when_unable_to_write_hosts",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_write_will_create_path_if_missing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_add_adblock_entry_without_force_multiple_names",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_add_adblock_entry_with_force_single_name",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_add_adblock_entry_with_force_with_target_having_multiple_names",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_add_adblock_entry_without_force_with_target_having_multiple_names",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_remove_existing_ipv4_address_using_hostsentry",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_add_single_ipv6_host",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_add_single_ipv6_host_with_comment",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_replace_ipv4_host_where_name_differs",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_add_single_ipv4_host",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_add_single_ipv4_host_with_comment",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_import_from_url",
                "time": 0.262,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_import_file_increments_invalid_counter",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_replacement_of_ipv4_entry_where_address_differs",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_addition_of_ipv4_entry_where_matching_exists",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_import_file_returns_duplicate_correctly",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_addition_of_ipv6_entry_where_matching_name_exists_and_force_false",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_existing_ipv6_addresses_are_preserved",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_addition_of_ipv4_entry_where_matching_exists_and_force_true",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_existing_comments_and_blanks_are_preserved",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_hostsentry_initialisation_failure_with_invalid_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_hostsentry_initialisation_failure_with_missing_comment",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_hostsentry_initialisation_failure_with_missing_name_or_address",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_hostsentry_initialisation_failure_with_invalid_address",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_no_entries_if_hosts_path_does_not_exist",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_line_break_identified_as_blank",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_get_entry_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_windows_platform_detection",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_osx_platform_detection",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_linux_platform_detection",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_read_hosts_with_platform_detection",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_file_import_fails_when_not_readable",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_remove_all_matching_multiple",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts",
                "name": "test_remove_all_matching_failure",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts_entry",
                "name": "test_create_ipv4_instance",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts_entry",
                "name": "test_str_to_hostentry_ipv4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts_entry",
                "name": "test_str_to_hostentry_ipv6",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts_entry",
                "name": "test_str_to_hostentry_returns_fails_with_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts_entry",
                "name": "test_hostentry_repr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts_entry",
                "name": "test_hostentry_ipv4_str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts_entry",
                "name": "test_hostentry_comment_str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts_entry",
                "name": "test_hostentry_blank_str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_ipv4_validation_success",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_ipv4_validation_failure",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_ipv6_validation_success",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_ipv6_validation_failure",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_hostname_validation_success",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_hostname_validation_failure_too_long",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_hostname_validation_failure_with_leading_hyphen",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[4882c082-705b-419d-9e8b-d8cccf06d13e/build] \ud83d\ude80  Start image=crawlergpt:latest\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/jonhadfield-python-hosts] user=0 workdir=\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build] \u2b50 Run Main actions/checkout@v2\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \u2705  Success - Main actions/checkout@v2\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build] \u2b50 Run Main Set up Python 3.6\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/e6605f9d-ec7a-460a-a19c-32fe3445fb74/act/actions-setup-python@v1/ dst=/var/run/act/actions/actions-setup-python@v1/\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v1/] user=0 workdir=\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v1/dist/index.js] user= workdir=\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::isExplicit: \n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::explicit? false\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::explicit? true\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::explicit? true\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::explicit? true\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::explicit? true\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::explicit? true\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::explicit? true\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::matched: 3.6.14\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Successfully setup CPython (3.6.14)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v1/.github/python.json\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \u2705  Success - Main Set up Python 3.6\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \u2699  ::set-output:: python-version=3.6.14\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build] \u2b50 Run Main Install dependencies\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (21.2.4)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting pip\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading pip-21.3.1-py3-none-any.whl (1.7 MB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Installing collected packages: pip\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Attempting uninstall: pip\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |     Found existing installation: pip 21.2.4\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |     Uninstalling pip-21.2.4:\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |       Successfully uninstalled pip-21.2.4\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Successfully installed pip-21.3.1\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting pytest\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading pytest-7.0.1-py3-none-any.whl (296 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting pytest-cov\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading pytest_cov-4.0.0-py3-none-any.whl (21 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting PyYAML\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading PyYAML-6.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (603 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting enum-compat\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading enum_compat-0.0.3-py3-none-any.whl (1.3 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting tomli>=1.0.0\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading tomli-1.2.3-py3-none-any.whl (12 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting packaging\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading packaging-21.3-py3-none-any.whl (40 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting importlib-metadata>=0.12\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading importlib_metadata-4.8.3-py3-none-any.whl (17 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting attrs>=19.2.0\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading attrs-22.2.0-py3-none-any.whl (60 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting pluggy<2.0,>=0.12\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting iniconfig\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading iniconfig-1.1.1-py2.py3-none-any.whl (5.0 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting py>=1.8.2\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting coverage[toml]>=5.2.1\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading coverage-6.2-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (212 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting zipp>=0.5\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading zipp-3.6.0-py3-none-any.whl (5.3 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting typing-extensions>=3.6.4\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading typing_extensions-4.1.1-py3-none-any.whl (26 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Collecting pyparsing!=3.0.5,>=2.0.2\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Installing collected packages: zipp, typing-extensions, pyparsing, importlib-metadata, tomli, py, pluggy, packaging, iniconfig, coverage, attrs, pytest, PyYAML, pytest-cov, enum-compat\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Successfully installed PyYAML-6.0 attrs-22.2.0 coverage-6.2 enum-compat-0.0.3 importlib-metadata-4.8.3 iniconfig-1.1.1 packaging-21.3 pluggy-1.0.0 py-1.11.0 pyparsing-3.1.0 pytest-7.0.1 pytest-cov-4.0.0 tomli-1.2.3 typing-extensions-4.1.1 zipp-3.6.0\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \u2705  Success - Main Install dependencies\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build] \u2b50 Run Main Test with pytest\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | ============================= test session starts ==============================\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | platform linux -- Python 3.6.14, pytest-7.0.1, pluggy-1.0.0 -- /opt/hostedtoolcache/Python/3.6.14/x64/bin/python\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | cachedir: .pytest_cache\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/jonhadfield-python-hosts, configfile: pytest.ini\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | plugins: cov-4.0.0\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | collecting ... collected 64 items\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | \n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_find_all_matching_by_name_address_comment PASSED [  1%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_merge_names PASSED                             [  3%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_add_comments PASSED                            [  4%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_remove_all_matching_with_loopback_address_and_multiple_names PASSED [  6%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_remove_all_matching_with_non_loopback_address_and_multiple_names PASSED [  7%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_import_from_url_without_force PASSED           [  9%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_import_from_url_with_force PASSED              [ 10%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_remove_existing_entry_using_name_only PASSED   [ 12%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_remove_existing_entry_using_address_only PASSED [ 14%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_remove_existing_entry_using_comment_only PASSED [ 15%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_hosts_str PASSED                               [ 17%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_hosts_write_to_custom_path PASSED              [ 18%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_hosts_repr PASSED                              [ 20%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_import_from_url_counters_for_part_success PASSED [ 21%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_exception_raised_when_unable_to_write_hosts PASSED [ 23%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_write_will_create_path_if_missing PASSED       [ 25%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_add_adblock_entry_without_force_multiple_names PASSED [ 26%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_add_adblock_entry_with_force_single_name PASSED [ 28%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_add_adblock_entry_with_force_with_target_having_multiple_names PASSED [ 29%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_add_adblock_entry_without_force_with_target_having_multiple_names PASSED [ 31%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_remove_existing_ipv4_address_using_hostsentry PASSED [ 32%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_add_single_ipv6_host PASSED                    [ 34%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_add_single_ipv6_host_with_comment PASSED       [ 35%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_replace_ipv4_host_where_name_differs PASSED    [ 37%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_add_single_ipv4_host PASSED                    [ 39%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_add_single_ipv4_host_with_comment PASSED       [ 40%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_import_from_url PASSED                         [ 42%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_import_file_increments_invalid_counter PASSED  [ 43%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_replacement_of_ipv4_entry_where_address_differs PASSED [ 45%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_addition_of_ipv4_entry_where_matching_exists PASSED [ 46%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_import_file_returns_duplicate_correctly PASSED [ 48%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_addition_of_ipv6_entry_where_matching_name_exists_and_force_false PASSED [ 50%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_existing_ipv6_addresses_are_preserved PASSED   [ 51%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_addition_of_ipv4_entry_where_matching_exists_and_force_true PASSED [ 53%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_existing_comments_and_blanks_are_preserved PASSED [ 54%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_hostsentry_initialisation_failure_with_invalid_type PASSED [ 56%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_hostsentry_initialisation_failure_with_missing_comment PASSED [ 57%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_hostsentry_initialisation_failure_with_missing_name_or_address PASSED [ 59%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_hostsentry_initialisation_failure_with_invalid_address PASSED [ 60%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_no_entries_if_hosts_path_does_not_exist PASSED [ 62%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_line_break_identified_as_blank PASSED          [ 64%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_get_entry_type PASSED                          [ 65%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_windows_platform_detection PASSED              [ 67%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_osx_platform_detection PASSED                  [ 68%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_linux_platform_detection PASSED                [ 70%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_read_hosts_with_platform_detection PASSED      [ 71%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_file_import_fails_when_not_readable PASSED     [ 73%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_remove_all_matching_multiple PASSED            [ 75%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts.py::test_remove_all_matching_failure PASSED             [ 76%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts_entry.py::test_create_ipv4_instance PASSED              [ 78%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts_entry.py::test_str_to_hostentry_ipv4 PASSED             [ 79%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts_entry.py::test_str_to_hostentry_ipv6 PASSED             [ 81%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts_entry.py::test_str_to_hostentry_returns_fails_with_false PASSED [ 82%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts_entry.py::test_hostentry_repr PASSED                    [ 84%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts_entry.py::test_hostentry_ipv4_str PASSED                [ 85%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts_entry.py::test_hostentry_comment_str PASSED             [ 87%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_hosts_entry.py::test_hostentry_blank_str PASSED               [ 89%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_utils.py::test_ipv4_validation_success PASSED                 [ 90%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_utils.py::test_ipv4_validation_failure PASSED                 [ 92%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_utils.py::test_ipv6_validation_success PASSED                 [ 93%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_utils.py::test_ipv6_validation_failure PASSED                 [ 95%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_utils.py::test_hostname_validation_success PASSED             [ 96%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_utils.py::test_hostname_validation_failure_too_long PASSED    [ 98%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | tests/test_utils.py::test_hostname_validation_failure_with_leading_hyphen PASSED [100%]\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | \n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/jonhadfield-python-hosts/report.xml -\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | \n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | ---------- coverage: platform linux, python 3.6.14-final-0 -----------\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Name                        Stmts   Miss  Cover   Missing\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | ---------------------------------------------------------\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | python_hosts/__init__.py        5      0   100%\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | python_hosts/exception.py      13      0   100%\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | python_hosts/hosts.py         275      0   100%\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | python_hosts/utils.py          31      0   100%\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | ---------------------------------------------------------\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | TOTAL                         324      0   100%\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | Coverage XML written to file coverage.xml\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | \n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   | ============================== 64 passed in 1.80s ==============================\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build]   \u2705  Success - Main Test with pytest\n[4882c082-705b-419d-9e8b-d8cccf06d13e/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/jonhadfield-python-hosts/.github/workflows/ci-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 253.12486624717712
    }
}