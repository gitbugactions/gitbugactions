{
    "repository": "marcoeilers/nagini",
    "stars": 188,
    "language": "python",
    "size": 164849,
    "clone_url": "https://github.com/marcoeilers/nagini.git",
    "timestamp": "2023-06-28T11:55:36.923308Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build] \ud83d\ude80  Start image=crawlergpt:latest\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/marcoeilers-nagini] user=0 workdir=\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build] \u2b50 Run Main actions/checkout@v2\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \u2705  Success - Main actions/checkout@v2\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build] \u2b50 Run Main Set up Python 3.8\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/69be28f8-75c5-4ab2-9a69-823cac80018d/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::isExplicit: \n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::explicit? false\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::explicit? true\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::explicit? true\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::explicit? true\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::explicit? true\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::explicit? true\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::explicit? true\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::matched: 3.8.11\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Successfully setup CPython (3.8.11)\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \u2705  Success - Main Set up Python 3.8\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \u2699  ::set-output:: python-version=3.8.11\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build] \u2b50 Run Main Install Boogie\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | \n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Welcome to .NET 5.0!\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | ---------------------\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | SDK Version: 5.0.400\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | \n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Telemetry\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | ---------\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | The .NET tools collect usage data in order to help us improve your experience. It is collected by Microsoft and shared with the community. You can opt-out of telemetry by setting the DOTNET_CLI_TELEMETRY_OPTOUT environment variable to '1' or 'true' using your favorite shell.\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | \r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Read more about .NET CLI Tools telemetry: https://aka.ms/dotnet-cli-telemetry\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | \n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | ----------------\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Installed an ASP.NET Core HTTPS development certificate.\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | To trust the certificate run 'dotnet dev-certs https --trust' (Windows and macOS only).\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Learn about HTTPS: https://aka.ms/dotnet-https\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | ----------------\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Write your first app: https://aka.ms/dotnet-hello-world\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Find out what's new: https://aka.ms/dotnet-whats-new\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Explore documentation: https://aka.ms/dotnet-docs\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Report issues and find source on GitHub: https://github.com/dotnet/core\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Use 'dotnet --help' to see available commands or visit: https://aka.ms/dotnet-cli\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | --------------------------------------------------------------------------------------\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Since you just installed the .NET SDK, you will need to logout or restart your session before running the tool you installed.\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | You can invoke the tool using the following command: boogie\r\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Tool 'boogie' (version '2.4.21') was successfully installed.\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \u2705  Success - Main Install Boogie\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build] \u2b50 Run Main Install Nagini\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (21.2.4)\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Collecting pip\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Installing collected packages: pip\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   |   Attempting uninstall: pip\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   |     Found existing installation: pip 21.2.4\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   |     Uninstalling pip-21.2.4:\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   |       Successfully uninstalled pip-21.2.4\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Successfully installed pip-23.1.2\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | \n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | Usage:   \n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   |   pip install [options] <requirement specifier> [package-index-options] ...\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   |   pip install [options] -r <requirements file> [package-index-options] ...\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   |   pip install [options] [-e] <vcs project url> ...\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   |   pip install [options] [-e] <local project path> ...\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   |   pip install [options] <archive url/path> ...\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | \n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   | no such option: --junitxml\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build]   \u274c  Failure - Main Install Nagini\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build] exitcode '2': failure\n[d30600c3-e5dc-46ee-9a71-8283d6d6364b/build] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/marcoeilers-nagini/.github/workflows/test-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 106.51324486732483
    }
}