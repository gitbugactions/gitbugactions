{
    "repository": "Ljzd-PRO/Mys_Goods_Tool",
    "stars": 416,
    "language": "python",
    "size": 893,
    "clone_url": "https://github.com/Ljzd-PRO/Mys_Goods_Tool.git",
    "timestamp": "2023-07-01T16:58:37.537244Z",
    "clone_success": true,
    "number_of_actions": 6,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "pytest",
        "unknown",
        "unknown",
        "unknown",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test] \ud83d\ude80  Start image=crawlergpt:latest\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/Ljzd-PRO-Mys_Goods_Tool] user=0 workdir=\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test] Unable to interpolate expression 'format('{0}', vars._)': Unavailable context: vars\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test] \ud83e\uddea  Matrix: map[python-version:3.9]\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test] \u2b50 Run Main actions/checkout@v3\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \u2705  Success - Main actions/checkout@v3\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test] \u2b50 Run Main Set up Python 3.9\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udc33  docker cp src=/tmp/act-cache/e539e9c5-d5c1-4a76-8782-fc02af99ce80/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::isExplicit: \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::explicit? false\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::explicit? true\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::explicit? true\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::explicit? true\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::explicit? true\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::explicit? true\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::explicit? true\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::matched: 3.9.6\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | Successfully setup CPython (3.9.6)\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \u2705  Success - Main Set up Python 3.9\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \u2699  ::set-output:: python-version=3.9.6\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test] \u2b50 Run Main Install dependencies\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | Retrieving Poetry metadata\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | # Welcome to Poetry!\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | This will download and install the latest version of Poetry,\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | a dependency and package manager for Python.\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | /home/runneradmin/.local/bin\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | You can uninstall at any time by executing this script with the --uninstall option,\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | and these changes will be reverted.\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | Installing Poetry (1.5.1)\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | Installing Poetry (1.5.1): Creating environment\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | Installing Poetry (1.5.1): Installing Poetry\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | Installing Poetry (1.5.1): Creating script\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | Installing Poetry (1.5.1): Done\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | Poetry (1.5.1) is installed now. Great!\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | environment variable.\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | You can test that everything is set up by executing:\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | `poetry --version`\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | \n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   | /var/run/act/workflow/2: line 3: poetry: command not found\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test]   \u274c  Failure - Main Install dependencies\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[b9dd1613-cab2-41e4-82c6-ef4152c9be71/build-and-test] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build-and-test' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/Ljzd-PRO-Mys_Goods_Tool/.github/workflows/python-package-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "b9dd1613-cab2-41e4-82c6-ef4152c9be71",
        "build_tool": "pytest",
        "elapsed_time": 182.416175365448
    }
}