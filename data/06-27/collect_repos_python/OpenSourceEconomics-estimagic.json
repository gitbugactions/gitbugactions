{
    "repository": "OpenSourceEconomics/estimagic",
    "stars": 172,
    "language": "python",
    "size": 27116,
    "clone_url": "https://github.com/OpenSourceEconomics/estimagic.git",
    "timestamp": "2023-07-01T13:05:11.766579Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "src.estimagic.utilities",
                "name": "estimagic.utilities.number_of_triangular_elements_to_dimension",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.utilities",
                "name": "estimagic.utilities.propose_alternatives",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.differentiation.derivatives",
                "name": "estimagic.differentiation.derivatives._split_into_str_and_int",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.differentiation.richardson_extrapolation",
                "name": "estimagic.differentiation.richardson_extrapolation._compute_step_ratio",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.differentiation.richardson_extrapolation",
                "name": "estimagic.differentiation.richardson_extrapolation._get_order_and_exponentiation_step",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.differentiation.richardson_extrapolation",
                "name": "estimagic.differentiation.richardson_extrapolation._richardson_coefficients",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.logging.read_from_database",
                "name": "estimagic.logging.read_from_database.dict_of_lists_to_list_of_dicts",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.logging.read_from_database",
                "name": "estimagic.logging.read_from_database.list_of_dicts_to_dict_of_lists",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.logging.read_from_database",
                "name": "estimagic.logging.read_from_database.transpose_nested_list",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.parameters.kernel_transformations",
                "name": "estimagic.parameters.kernel_transformations._commutation_matrix",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.parameters.kernel_transformations",
                "name": "estimagic.parameters.kernel_transformations._duplication_matrix",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.parameters.kernel_transformations",
                "name": "estimagic.parameters.kernel_transformations._elimination_matrix",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.parameters.kernel_transformations",
                "name": "estimagic.parameters.kernel_transformations._transformation_matrix",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.parameters.kernel_transformations",
                "name": "estimagic.parameters.kernel_transformations._unit_vector_or_zeros",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.parameters.space_conversion",
                "name": "estimagic.parameters.space_conversion.post_replace",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.parameters.space_conversion",
                "name": "estimagic.parameters.space_conversion.post_replace_jacobian",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.parameters.space_conversion",
                "name": "estimagic.parameters.space_conversion.pre_replace",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.estimagic.parameters.space_conversion",
                "name": "estimagic.parameters.space_conversion.pre_replace_jacobian",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_batch_evaluators",
                "name": "test_batch_evaluator_without_exceptions[joblib-1]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_batch_evaluators",
                "name": "test_batch_evaluator_without_exceptions[joblib-2]",
                "time": 3.53,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_batch_evaluators",
                "name": "test_batch_evaluator_with_unhandled_exceptions[joblib-1]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_batch_evaluators",
                "name": "test_batch_evaluator_with_unhandled_exceptions[joblib-2]",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_batch_evaluators",
                "name": "test_batch_evaluator_with_handled_exceptions[joblib-1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_batch_evaluators",
                "name": "test_batch_evaluator_with_handled_exceptions[joblib-2]",
                "time": 4.431,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_batch_evaluators",
                "name": "test_batch_evaluator_with_list_unpacking[joblib-1]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_batch_evaluators",
                "name": "test_batch_evaluator_with_list_unpacking[joblib-2]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_batch_evaluators",
                "name": "test_batch_evaluator_with_dict_unpacking[joblib-1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_batch_evaluators",
                "name": "test_batch_evaluator_with_dict_unpacking[joblib-2]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_batch_evaluators",
                "name": "test_get_batch_evaluator_invalid_value",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_batch_evaluators",
                "name": "test_get_batch_evaluator_invalid_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_batch_evaluators",
                "name": "test_get_batch_evaluator_with_callable",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorators",
                "name": "test_catch_at_defaults",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorators",
                "name": "test_catch_with_reraise",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorators",
                "name": "test_unpack_decorator_none",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorators",
                "name": "test_unpack_decorator_one_star",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorators",
                "name": "test_unpack_decorator_two_stars",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorators",
                "name": "test_mark_minimizer_decorator",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorators",
                "name": "test_mark_minimizer_direct_call",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorators",
                "name": "test_mark_minimizer_invalid_argument_types[kwargs0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorators",
                "name": "test_mark_minimizer_invalid_argument_types[kwargs1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorators",
                "name": "test_mark_minimizer_invalid_argument_types[kwargs2]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorators",
                "name": "test_mark_minimizer_invalid_argument_types[kwargs3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorators",
                "name": "test_mark_minimizer_invalid_argument_types[kwargs4]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorators",
                "name": "test_mark_minimizer_invalid_argument_primary_criterion_entry",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_process_function",
                "name": "test_process_func_of_params",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_process_function",
                "name": "test_process_func_of_params_too_many_kwargs",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_process_function",
                "name": "test_process_func_of_params_too_few_kwargs",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_chol_params_to_lower_triangular_matrix",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_cov_params_to_matrix",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_cov_matrix_to_params",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_sdcorr_params_to_sds_and_corr",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_sdcorr_params_to_matrix",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_cov_matrix_to_sdcorr_params",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_sds_and_corr_to_cov",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_cov_to_sds_and_corr",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_number_of_triangular_elements_to_dimension",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_dimension_to_number_of_triangular_elements",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_robust_cholesky_with_zero_variance[8-58822]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_robust_cholesky_with_zero_variance[8-3181]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_robust_cholesky_with_zero_variance[8-98855]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_robust_cholesky_with_zero_variance[8-44002]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_robust_cholesky_with_zero_variance[8-47631]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_robust_cholesky_with_zero_variance[8-97741]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_robust_cholesky_with_zero_variance[10-10655]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_robust_cholesky_with_zero_variance[12-4600]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_robust_cholesky_with_zero_variance[15-1151]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_robust_cholesky_with_zero_variance[20-58189]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_robust_cholesky_with_extreme_cases",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_robust_inverse_nonsingular",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_robust_inverse_singular",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_hash_array",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_initial_trust_radius_small_x",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_initial_trust_radius_large_x",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_pickling",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_isscalar_true[1]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_isscalar_true[2.0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_isscalar_true[3.141592653589793]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_isscalar_true[element3]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_isscalar_true[element4]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_isscalar_true[element5]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_isscalar_true[nan]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_isscalar_false[element0]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_isscalar_false[element1]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_isscalar_false[element2]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_isscalar_jax_false",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_get_rng_correct_input[0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_get_rng_correct_input[1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_get_rng_correct_input[10]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_get_rng_correct_input[1000000]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_get_rng_correct_input[None]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_get_rng_correct_input[seed5]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_get_rng_correct_input[seed6]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_get_rng_wrong_input[0.1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_get_rng_wrong_input[a]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_get_rng_wrong_input[seed2]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_get_rng_wrong_input[<lambda>]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utilities",
                "name": "test_propose_alternatives",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options0]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options1]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options2]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options3]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options4]",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options5]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options6]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options7]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options8]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options9]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options10]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options11]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options12]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options13]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options14]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_convergence_report[options15]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_rank_report[options0]",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_rank_report[options1]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_rank_report[options2]",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_rank_report[options3]",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_rank_report[options4]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_rank_report[options5]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_rank_report[options6]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_rank_report[options7]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_rank_report[options8]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_rank_report[options9]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_rank_report[options10]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_rank_report[options11]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_traceback_report[text]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_traceback_report[markdown]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_traceback_report[dict]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_benchmark_reports",
                "name": "test_traceback_report[dataframe]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[arglale-specification0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[arglble-specification1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[argtrig-specification2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[artif-specification3]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[arwhdne-specification4]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[bdvalues-specification5]",
                "time": 1.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[bratu_2d-specification6]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[bratu_2d_t-specification7]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[bratu_3d-specification8]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[brownale-specification9]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[broydn_3d-specification10]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[cbratu_2d-specification11]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[broydn_bd-specification12]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[chandheq-specification13]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[chemrcta-specification14]",
                "time": 0.821,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[chemrctb-specification15]",
                "time": 0.243,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[chnrsbne-specification16]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[drcavty1-specification17]",
                "time": 1.455,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[drcavty2-specification18]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[drcavty3-specification19]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[eigena-specification20]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[eigenb-specification21]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[flosp2hh-specification22]",
                "time": 3.197,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[flosp2hl-specification23]",
                "time": 3.427,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[flosp2hm-specification24]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[flosp2th-specification25]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[flosp2tl-specification26]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[flosp2tm-specification27]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[freurone-specification28]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[hatfldg-specification29]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[hydcar20-specification30]",
                "time": 2.884,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[hydcar6-specification31]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[integreq-specification32]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[luksan11-specification33]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[luksan12-specification34]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[luksan13-specification35]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[luksan14-specification36]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[luksan15-specification37]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[luksan16-specification38]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[luksan17-specification39]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[luksan21-specification40]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[luksan22-specification41]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[methanb8-specification42]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[methanl8-specification43]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[morebvne-specification44]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[msqrta-specification45]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[msqrtb-specification46]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[oscigrne-specification47]",
                "time": 0.405,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[penalty_1-specification48]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[penalty_2-specification49]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[powellse-specification50]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[qr3d-specification51]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[qr3dbd-specification52]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[spmsqrt-specification53]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[semicn2u-specification54]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[semicon2-specification55]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[vardimne-specification56]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[watsonne-specification57]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[yatpsq_1-specification58]",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_start_x[yatpsq_2-specification59]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[arglale-specification0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[arglble-specification1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[argtrig-specification2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[artif-specification3]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[arwhdne-specification4]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[bdvalues-specification5]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[bratu_2d-specification6]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[bratu_2d_t-specification7]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[bratu_3d-specification8]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[brownale-specification9]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[broydn_3d-specification10]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[cbratu_2d-specification11]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[broydn_bd-specification12]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[chandheq-specification13]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[chemrcta-specification14]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[chemrctb-specification15]",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[chnrsbne-specification16]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[drcavty1-specification17]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[drcavty2-specification18]",
                "time": 0.791,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[drcavty3-specification19]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[eigena-specification20]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[eigenb-specification21]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[flosp2hh-specification22]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[flosp2hl-specification23]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[flosp2hm-specification24]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[flosp2th-specification25]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[flosp2tl-specification26]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[flosp2tm-specification27]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[freurone-specification28]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[hatfldg-specification29]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[hydcar20-specification30]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[hydcar6-specification31]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[integreq-specification32]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[luksan11-specification33]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[luksan12-specification34]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[luksan13-specification35]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[luksan14-specification36]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[luksan15-specification37]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[luksan16-specification38]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[luksan17-specification39]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[luksan21-specification40]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[luksan22-specification41]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[methanb8-specification42]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[methanl8-specification43]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[morebvne-specification44]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[msqrta-specification45]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[msqrtb-specification46]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[oscigrne-specification47]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[penalty_1-specification48]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[penalty_2-specification49]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[powellse-specification50]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[qr3d-specification51]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[qr3dbd-specification52]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[spmsqrt-specification53]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[semicn2u-specification54]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[semicon2-specification55]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[vardimne-specification56]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[watsonne-specification57]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[yatpsq_1-specification58]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_cartis_roberts_function_at_solution_x[yatpsq_2-specification59]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_get_start_points_bdvalues",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_cartis_roberts",
                "name": "test_get_start_points_msqrta",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[more_wild-False-False-False]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[more_wild-False-False-True]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[more_wild-False-True-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[more_wild-False-True-True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[more_wild-True-False-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[more_wild-True-False-True]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[more_wild-True-True-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[more_wild-True-True-True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[cartis_roberts-False-False-False]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[cartis_roberts-False-False-True]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[cartis_roberts-False-True-False]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[cartis_roberts-False-True-True]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[cartis_roberts-True-False-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[cartis_roberts-True-False-True]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[cartis_roberts-True-True-False]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[cartis_roberts-True-True-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[example-False-False-False]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[example-False-False-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[example-False-True-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[example-False-True-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[example-True-False-False]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[example-True-False-True]",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[example-True-True-False]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[example-True-True-True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[estimagic-False-False-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[estimagic-False-False-True]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[estimagic-False-True-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[estimagic-False-True-True]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[estimagic-True-False-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[estimagic-True-False-True]",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[estimagic-True-True-False]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_get_problems[estimagic-True-True-True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_get_benchmark_problems",
                "name": "test_step_func",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[linear_full_rank_good_start-specification0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[linear_full_rank_bad_start-specification1]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[linear_rank_one_good_start-specification2]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[linear_rank_one_bad_start-specification3]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[linear_rank_one_zero_columns_rows_good_start-specification4]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[linear_rank_one_zero_columns_rows_bad_start-specification5]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[rosenbrock_good_start-specification6]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[rosenbrock_bad_start-specification7]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[helical_valley_good_start-specification8]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[helical_valley_bad_start-specification9]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[powell_singular_good_start-specification10]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[powell_singular_bad_start-specification11]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[freudenstein_roth_good_start-specification12]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[freudenstein_roth_bad_start-specification13]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[bard_good_start-specification14]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[bard_bad_start-specification15]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[kowalik_osborne-specification16]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[meyer-specification17]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[watson_6_good_start-specification18]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[watson_6_bad_start-specification19]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[watson_9_good_start-specification20]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[watson_9_bad_start-specification21]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[watson_12_good_start-specification22]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[watson_12_bad_start-specification23]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[box_3d-specification24]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[jennrich_sampson-specification25]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[brown_dennis_good_start-specification26]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[brown_dennis_bad_start-specification27]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[chebyquad_6-specification28]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[chebyquad_7-specification29]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[chebyquad_8-specification30]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[chebyquad_9-specification31]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[chebyquad_10-specification32]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[chebyquad_11-specification33]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[brown_almost_linear-specification34]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[osborne_one-specification35]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[osborne_two_good_start-specification36]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[osborne_two_bad_start-specification37]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[bdqrtic_8-specification38]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[bdqrtic_10-specification39]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[bdqrtic_11-specification40]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[bdqrtic_12-specification41]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[cube_5-specification42]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[cube_6-specification43]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[cube_8-specification44]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[mancino_5_good_start-specification45]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[mancino_5_bad_start-specification46]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[mancino_8-specification47]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[mancino_10-specification48]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[mancino_12_good_start-specification49]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[mancino_12_bad_start-specification50]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[heart_eight_good_start-specification51]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[heart_eight_bad_start-specification52]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_more_wild_function_at_start_x[brown_almost_linear_medium-specification53]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_more_wild",
                "name": "test_get_start_points_mancino",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_noise_distributions",
                "name": "test_sample_from_distribution[normal]",
                "time": 0.168,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_noise_distributions",
                "name": "test_sample_from_distribution[gumbel]",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_noise_distributions",
                "name": "test_sample_from_distribution[logistic]",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_noise_distributions",
                "name": "test_sample_from_distribution[uniform]",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_noise_distributions",
                "name": "test_sample_from_distribution[laplace]",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_run_benchmark",
                "name": "test_run_benchmark_dict_options",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_run_benchmark",
                "name": "test_run_benchmark_list_options",
                "time": 0.173,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_run_benchmark",
                "name": "test_run_benchmark_failing",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_run_benchmark",
                "name": "test_custom_benchmarks[raw_problems0-_internal_criterion_pandas]",
                "time": 0.186,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.benchmarking.test_run_benchmark",
                "name": "test_custom_benchmarks[raw_problems1-_internal_criterion_dict]",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_callbacks",
                "name": "test_create_params_data_for_update",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_callbacks",
                "name": "test_reset_column_data_sources",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_colors",
                "name": "test_correct_number_categorical",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_colors",
                "name": "test_wrong_palette_raises_error",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_dashboard_app",
                "name": "test_dashboard_app[pybaum_sphere-start_params0]",
                "time": 0.375,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_dashboard_app",
                "name": "test_dashboard_app[pandas_sphere-start_params1]",
                "time": 0.288,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_dashboard_app",
                "name": "test_create_cds_for_dashboard",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_dashboard_app",
                "name": "test_calculate_start_point",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_dashboard_app",
                "name": "test_calculate_start_point_no_negative_value",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_dashboard_app",
                "name": "test_create_id_column",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_dashboard_app",
                "name": "test_map_groups_to_param_ids_group_none[None]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_dashboard_app",
                "name": "test_map_groups_to_param_ids_group_none[nan]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_dashboard_app",
                "name": "test_map_groups_to_param_ids_group_none[False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_dashboard_app",
                "name": "test_map_groups_to_param_ids_group_none[]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_dashboard_app",
                "name": "test_map_groups_to_param_ids_group_not_none[index0-ids0]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_dashboard_app",
                "name": "test_map_groups_to_param_ids_group_not_none[index1-ids1]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_dashboard_app",
                "name": "test_map_groups_to_param_ids_group_multi_index",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.dashboard.test_run_dashboard",
                "name": "test_dashboard_cli",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_compare_derivatives_with_jax",
                "name": "test_scalar_input_scalar_output",
                "time": 0.478,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_compare_derivatives_with_jax",
                "name": "test_array_input_scalar_output",
                "time": 0.54,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_compare_derivatives_with_jax",
                "name": "test_dict_input_scalar_output",
                "time": 0.361,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_compare_derivatives_with_jax",
                "name": "test_array_dict_input_scalar_output",
                "time": 1.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_compare_derivatives_with_jax",
                "name": "test_array_input_array_output",
                "time": 0.654,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_compare_derivatives_with_jax",
                "name": "test_array_dict_input_array_output",
                "time": 0.939,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_compare_derivatives_with_jax",
                "name": "test_array_dict_input_dict_output",
                "time": 0.875,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_jacobian[forward]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_jacobian[backward]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_jacobian[central]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_jacobian_works_at_defaults",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_gradient[forward]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_gradient[backward]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_gradient[central]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_second_derivative_hessian[forward]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_second_derivative_hessian[backward]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_second_derivative_hessian[central_average]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_second_derivative_hessian[central_cross]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_scalar[forward]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_scalar[backward]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_scalar[central]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_second_derivative_scalar[forward]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_second_derivative_scalar[backward]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_second_derivative_scalar[central_average]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_second_derivative_scalar[central_cross]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_scalar_with_return_func_value[forward]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_scalar_with_return_func_value[backward]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_scalar_with_return_func_value[central]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_second_derivative_scalar_with_return_func_value[forward]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_second_derivative_scalar_with_return_func_value[backward]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_second_derivative_scalar_with_return_func_value[central_average]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_second_derivative_scalar_with_return_func_value[central_cross]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_nan_skipping_batch_evaluator",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_consolidate_one_step_derivatives",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_gradient_richardson",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_first_derivative_jacobian_richardson",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_convert_evaluation_data_to_frame",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test__convert_richardson_candidates_to_frame",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test__select_minimizer_along_axis",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_reshape_one_step_evals",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_reshape_two_step_evals",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_reshape_cross_step_evals",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_derivatives",
                "name": "test_is_scalar_nan",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_finite_differences",
                "name": "test_jacobian_finite_differences[forward]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_finite_differences",
                "name": "test_jacobian_finite_differences[backward]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_finite_differences",
                "name": "test_jacobian_finite_differences[central]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_scalars_as_base_steps",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_scalars_as_min_steps",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_calculate_or_validate_base_steps_invalid_too_small",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_calculate_or_validate_base_steps_wrong_shape",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_calculate_or_validate_base_steps_jacobian",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_calculate_or_validate_base_steps_jacobian_with_scaling_factor",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_calculate_or_validate_base_steps_binding_min_step",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_calculate_or_validate_base_steps_hessian",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_set_unused_side_to_nan_forward",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_set_unused_side_to_nan_backward",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_fillna",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_rescale_to_accomodate_bounds",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_rescale_to_accomodate_bounds_binding_min_step",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_generate_steps_binding_min_step",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.differentiation.test_generate_steps",
                "name": "test_generate_steps_min_step_equals_base_step",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_constraints",
                "time": 9.799,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options0-None-None]",
                "time": 0.421,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options1-None-logit_hessian]",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options2-None-False]",
                "time": 0.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options3-logit_jacobian-None]",
                "time": 0.586,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options4-logit_jacobian-logit_hessian]",
                "time": 0.467,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options5-logit_jacobian-False]",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options6-False-None]",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options7-False-logit_hessian]",
                "time": 0.237,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options8-False-False]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "jacobian and hessian cannot both be False.",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[scipy_lbfgsb-None-None]",
                "time": 0.505,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[scipy_lbfgsb-None-logit_hessian]",
                "time": 0.489,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[scipy_lbfgsb-None-False]",
                "time": 0.452,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[scipy_lbfgsb-logit_jacobian-None]",
                "time": 0.513,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[scipy_lbfgsb-logit_jacobian-logit_hessian]",
                "time": 0.401,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[scipy_lbfgsb-logit_jacobian-False]",
                "time": 0.433,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[scipy_lbfgsb-False-None]",
                "time": 0.483,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[scipy_lbfgsb-False-logit_hessian]",
                "time": 0.421,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[scipy_lbfgsb-False-False]",
                "time": 0.07,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "jacobian and hessian cannot both be False.",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options18-None-None]",
                "time": 0.247,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options19-None-logit_hessian]",
                "time": 0.148,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options20-None-False]",
                "time": 0.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options21-logit_jacobian-None]",
                "time": 0.154,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options22-logit_jacobian-logit_hessian]",
                "time": 0.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options23-logit_jacobian-False]",
                "time": 0.111,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options24-False-None]",
                "time": 0.157,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options25-False-logit_hessian]",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_no_constraints[optimize_options26-False-False]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "jacobian and hessian cannot both be False.",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_constraints[None-constraints0]",
                "time": 4.417,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_constraints[None-constraints1]",
                "time": 3.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_constraints[None-constraints2]",
                "time": 2.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_constraints[logit_jacobian-constraints3]",
                "time": 5.685,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_constraints[logit_jacobian-constraints4]",
                "time": 1.702,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_with_logit_constraints[logit_jacobian-constraints5]",
                "time": 1.65,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_optimize_options_false",
                "time": 0.108,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_estimate_ml_general_pytree",
                "time": 0.135,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_to_pickle",
                "time": 0.137,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_ml",
                "name": "test_caching",
                "time": 0.132,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_pd-moments_cov0-optimize_options0]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_pd-moments_cov1-scipy_lbfgsb]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_pd-moments_cov2-optimize_options2]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_pd-moments_cov3-scipy_lbfgsb]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_np-moments_cov4-optimize_options4]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_np-moments_cov5-scipy_lbfgsb]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_np-moments_cov6-optimize_options6]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_np-moments_cov7-scipy_lbfgsb]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_dict_pd-moments_cov8-optimize_options8]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_dict_pd-moments_cov9-scipy_lbfgsb]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_dict_pd-moments_cov10-optimize_options10]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_dict_pd-moments_cov11-scipy_lbfgsb]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_dict_np-moments_cov12-optimize_options12]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_dict_np-moments_cov13-scipy_lbfgsb]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_dict_np-moments_cov14-optimize_options14]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm[_sim_dict_np-moments_cov15-scipy_lbfgsb]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_check_and_process_numdiff_options_with_invalid_entries",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_check_and_process_optimize_options_with_invalid_entries",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_pd-moments_cov0-optimize_options0]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_pd-moments_cov1-pounders]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_pd-moments_cov2-optimize_options2]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_pd-moments_cov3-pounders]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_np-moments_cov4-optimize_options4]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_np-moments_cov5-pounders]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_np-moments_cov6-optimize_options6]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_np-moments_cov7-pounders]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_dict_pd-moments_cov8-optimize_options8]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_dict_pd-moments_cov9-pounders]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_dict_pd-moments_cov10-optimize_options10]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_dict_pd-moments_cov11-pounders]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_dict_np-moments_cov12-optimize_options12]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_dict_np-moments_cov13-pounders]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_dict_np-moments_cov14-optimize_options14]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_ls[_sim_dict_np-moments_cov15-pounders]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_estimate_msm_with_jacobian",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_to_pickle",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm",
                "name": "test_caching",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_estimate_msm_dict_params_and_moments",
                "name": "test_estimate_msm_dict_params_and_moments",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_msm_weighting",
                "name": "test_get_weighting_matrix[moments_cov0-diagonal]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_msm_weighting",
                "name": "test_get_weighting_matrix[moments_cov1-optimal]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_msm_weighting",
                "name": "test_get_weighting_matrix[moments_cov2-diagonal]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_msm_weighting",
                "name": "test_get_weighting_matrix[moments_cov3-optimal]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_msm_weighting",
                "name": "test_assemble_block_diagonal_matrix_pd",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_msm_weighting",
                "name": "test_assemble_block_diagonal_matrix_mixed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.estimation.test_msm_weighting",
                "name": "test_get_moments_cov_runs_with_pytrees",
                "time": 0.554,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_criterion_functions",
                "name": "test_scalar_criterion[trid]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_criterion_functions",
                "name": "test_scalar_criterion[rhe]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_criterion_functions",
                "name": "test_scalar_criterion[rosenbrock]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_criterion_functions",
                "name": "test_criterion_gradient[trid]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_criterion_functions",
                "name": "test_criterion_gradient[rhe]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_criterion_functions",
                "name": "test_criterion_gradient[rosenbrock]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_criterion_functions",
                "name": "test_criterion_and_gradient[trid]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_criterion_functions",
                "name": "test_criterion_and_gradient[rhe]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_criterion_functions",
                "name": "test_criterion_and_gradient[rosenbrock]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_criterion_functions",
                "name": "test_dict_criterion[trid]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_criterion_functions",
                "name": "test_dict_criterion[rhe]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_criterion_functions",
                "name": "test_dict_criterion[rosenbrock]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_logit",
                "name": "test_logit_loglike",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_logit",
                "name": "test_logit_derivative",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.examples.test_logit",
                "name": "test_logit_hessian",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_bootstrap_with_outcome_kwargs[0]",
                "time": 0.998,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_bootstrap_with_outcome_kwargs[10]",
                "time": 0.979,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_bootstrap_with_outcome_kwargs[-10]",
                "time": 0.926,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_bootstrap_existing_outcomes",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_bootstrap_from_outcomes",
                "time": 1.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_bootstrap_from_outcomes_private_methods",
                "time": 0.639,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_bootstrap_from_outcomes_single_outcome",
                "time": 0.82,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_outcome_not_callable",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_existing_result_wrong_input_type[arr]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_existing_result_wrong_input_type[df]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_existing_result_wrong_input_type[dict]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_cov_correct_return_type[array]",
                "time": 0.929,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_cov_correct_return_type[dataframe]",
                "time": 1.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_cov_correct_return_type[pytree]",
                "time": 0.892,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_cov_wrong_return_type",
                "time": 0.572,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap",
                "name": "test_existing_result",
                "time": 3.222,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_fun_series-percentile]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_fun_series-normal]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_fun_series-basic]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_fun_series-bc]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_fun_series-t]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_func_dict-percentile]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_func_dict-normal]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_func_dict-basic]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_func_dict-bc]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_func_dict-t]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_func_arr-percentile]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_func_arr-normal]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_func_arr-basic]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_func_arr-bc]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_ci[_outcome_func_arr-t]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_check_inputs_data",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_check_inputs_cluster_by",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_check_inputs_ci_method",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_ci",
                "name": "test_check_inputs_ci_level",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_outcomes",
                "name": "test_get_bootstrap_estimates_runs[outcome0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_outcomes",
                "name": "test_get_bootstrap_estimates_runs[_mean_return_series]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_outcomes",
                "name": "test_get_bootstrap_estimates_runs[_mean_return_dict]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_outcomes",
                "name": "test_get_bootstrap_estimates_runs[_mean_return_array]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_outcomes",
                "name": "test_bootstrap_estimates_from_indices_without_errors",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_outcomes",
                "name": "test_get_bootstrap_estimates_with_error_and_raise",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_outcomes",
                "name": "test_get_bootstrap_estimates_with_all_errors_and_continue",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_outcomes",
                "name": "test_get_bootstrap_estimates_with_some_errors_and_continue",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_samples",
                "name": "test_get_bootstrap_indices_randomization_works_without_clustering",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_samples",
                "name": "test_get_bootstrap_indices_radomization_works_with_clustering",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_samples",
                "name": "test_clustering_leaves_households_intact",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_samples",
                "name": "test_convert_cluster_ids_to_indices",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_samples",
                "name": "test_get_bootstrap_samples_from_indices",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_bootstrap_samples",
                "name": "test_get_bootstrap_samples_runs",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_clustering",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_stratification",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_sandwich_step",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_cov_robust",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_cov_cluster_robust",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_cov_strata_robust",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_cov_hessian",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_cov_jacobian",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_cov_function_against_statsmodels[probit-jacobian]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_cov_function_against_statsmodels[probit-hessian]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_cov_function_against_statsmodels[probit-robust]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_cov_function_against_statsmodels[logit-jacobian]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_cov_function_against_statsmodels[logit-hessian]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_ml_covs",
                "name": "test_cov_function_against_statsmodels[logit-robust]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_msm_covs",
                "name": "test_cov_robust_and_cov_optimal_are_equivalent_in_special_case[jac0-moments_cov0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_msm_covs",
                "name": "test_cov_robust_and_cov_optimal_are_equivalent_in_special_case[jac1-moments_cov1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_msm_covs",
                "name": "test_cov_robust_and_cov_optimal_are_equivalent_in_special_case[jac2-moments_cov2]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_msm_covs",
                "name": "test_cov_robust_and_cov_optimal_are_equivalent_in_special_case[jac3-moments_cov3]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_shared",
                "name": "test_process_pandas_arguments_all_pd",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_shared",
                "name": "test_process_pandas_arguments_incompatible_names",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_shared",
                "name": "test_transform_covariance_no_bounds",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_shared",
                "name": "test_transform_covariance_with_clipping",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_shared",
                "name": "test_transform_covariance_invalid_bounds",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_shared",
                "name": "test_transform_free_cov_to_cov_pytree",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_shared",
                "name": "test_transform_free_cov_to_cov_array",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_shared",
                "name": "test_transform_free_cov_to_cov_dataframe",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_shared",
                "name": "test_transform_free_cov_to_cov_invalid",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_shared",
                "name": "test_transform_free_values_to_params_tree",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_shared",
                "name": "test_get_derivative_case",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_shared",
                "name": "test_to_numpy_invalid",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.inference.test_shared",
                "name": "test_calculate_estimation_summary",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_database_utilities",
                "name": "test_load_database_from_path",
                "time": 0.294,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_database_utilities",
                "name": "test_load_database_after_pickling",
                "time": 0.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_database_utilities",
                "name": "test_optimization_iteration_table_scalar",
                "time": 0.454,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_database_utilities",
                "name": "test_steps_table",
                "time": 0.31,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_database_utilities",
                "name": "test_optimization_problem_table",
                "time": 0.542,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_database_utilities",
                "name": "test_read_new_rows_stride",
                "time": 0.18,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_database_utilities",
                "name": "test_update_row",
                "time": 0.162,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_database_utilities",
                "name": "test_read_last_rows_stride",
                "time": 0.138,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_database_utilities",
                "name": "test_read_new_rows_with_step",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_database_utilities",
                "name": "test_read_last_rows_with_step",
                "time": 0.133,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_database_utilities",
                "name": "test_read_table",
                "time": 0.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_read_log",
                "name": "test_read_start_params",
                "time": 0.377,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_read_log",
                "name": "test_log_reader_read_start_params",
                "time": 0.158,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_read_log",
                "name": "test_log_reader_read_iteration",
                "time": 0.194,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_read_log",
                "name": "test_log_reader_read_history",
                "time": 0.133,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_read_log",
                "name": "test_log_reader_read_multistart_history",
                "time": 0.173,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_read_log",
                "name": "test_read_steps_table",
                "time": 0.141,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_read_log",
                "name": "test_read_optimization_problem_table",
                "time": 0.159,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.logging.test_read_log",
                "name": "test_non_existing_database_raises_error",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_bhhh",
                "name": "test_maximum_likelihood[criterion_and_derivative_logit-result_statsmodels_logit]",
                "time": 0.481,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_bhhh",
                "name": "test_maximum_likelihood[criterion_and_derivative_probit-result_statsmodels_probit]",
                "time": 0.707,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_convergence_report",
                "name": "test_get_convergence_report_minimize",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_convergence_report",
                "name": "test_get_convergence_report_maximize",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_convergence_report",
                "name": "test_history_is_too_short",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_criterion_versions",
                "name": "test_valid_criterion_versions[sos_dict_criterion-scipy_lbfgsb]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_criterion_versions",
                "name": "test_valid_criterion_versions[sos_scalar_criterion-scipy_lbfgsb]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_criterion_versions",
                "name": "test_valid_criterion_versions[sos_dict_criterion_with_pd_objects-scipy_lbfgsb]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_criterion_versions",
                "name": "test_valid_criterion_versions[sos_dict_criterion-scipy_neldermead]",
                "time": 0.161,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_criterion_versions",
                "name": "test_valid_criterion_versions[sos_scalar_criterion-scipy_neldermead]",
                "time": 0.151,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_criterion_versions",
                "name": "test_valid_criterion_versions[sos_dict_criterion_with_pd_objects-scipy_neldermead]",
                "time": 0.162,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_criterion_versions",
                "name": "test_valid_criterion_versions[sos_dict_criterion-nag_dfols]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_criterion_versions",
                "name": "test_valid_criterion_versions[sos_dict_criterion_with_pd_objects-nag_dfols]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_criterion_versions",
                "name": "test_invalid_criterion_versions[sos_scalar_criterion-nag_dfols]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_lbfgsb-None-None]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[maximize-scipy_lbfgsb-None-None]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_lbfgsb-None-sos_criterion_and_gradient]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[maximize-scipy_lbfgsb-None-sos_criterion_and_gradient]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_lbfgsb-sos_gradient-None]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[maximize-scipy_lbfgsb-sos_gradient-None]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_lbfgsb-sos_gradient-sos_criterion_and_gradient]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[maximize-scipy_lbfgsb-sos_gradient-sos_criterion_and_gradient]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_lbfgsb-sos_pandas_gradient-None]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[maximize-scipy_lbfgsb-sos_pandas_gradient-None]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_lbfgsb-sos_pandas_gradient-sos_criterion_and_gradient]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[maximize-scipy_lbfgsb-sos_pandas_gradient-sos_criterion_and_gradient]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_neldermead-None-None]",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[maximize-scipy_neldermead-None-None]",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_neldermead-None-sos_criterion_and_gradient]",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[maximize-scipy_neldermead-None-sos_criterion_and_gradient]",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_neldermead-sos_gradient-None]",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[maximize-scipy_neldermead-sos_gradient-None]",
                "time": 0.402,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_neldermead-sos_gradient-sos_criterion_and_gradient]",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[maximize-scipy_neldermead-sos_gradient-sos_criterion_and_gradient]",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_neldermead-sos_pandas_gradient-None]",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[maximize-scipy_neldermead-sos_pandas_gradient-None]",
                "time": 0.129,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_neldermead-sos_pandas_gradient-sos_criterion_and_gradient]",
                "time": 0.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[maximize-scipy_neldermead-sos_pandas_gradient-sos_criterion_and_gradient]",
                "time": 0.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_ls_dogbox-None-sos_criterion_and_jacobian]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_ls_dogbox-sos_jacobian-sos_criterion_and_jacobian]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_valid_derivative_versions[minimize-scipy_ls_dogbox-sos_pandas_jacobian-sos_criterion_and_jacobian]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_invalid_derivative_versions[maximize-scipy_ls_dogbox-None-sos_criterion_and_jacobian]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_invalid_derivative_versions[maximize-scipy_ls_dogbox-sos_jacobian-sos_criterion_and_jacobian]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_invalid_derivative_versions[maximize-scipy_ls_dogbox-sos_pandas_jacobian-sos_criterion_and_jacobian]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_derivative_versions",
                "name": "test_dict_derivative",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations[0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations[1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations[2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations[3]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations[4]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations[5]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations[6]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations[7]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations[8]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations[9]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_derivatives[_penalty_value-_penalty_value_derivative]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_derivatives[_penalty_contributions-_penalty_contributions_derivative]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_derivatives[_penalty_root_contributions-_penalty_root_contributions_derivative]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations_via_get_error_penalty[0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations_via_get_error_penalty[1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations_via_get_error_penalty[2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations_via_get_error_penalty[3]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations_via_get_error_penalty[4]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations_via_get_error_penalty[5]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations_via_get_error_penalty[6]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations_via_get_error_penalty[7]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations_via_get_error_penalty[8]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_error_penalty",
                "name": "test_penalty_aggregations_via_get_error_penalty[9]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options0]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options1]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options2]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options3]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options4]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options5]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options6]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options7]",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options8]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options9]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options10]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options11]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options12]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options13]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options14]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options15]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options16]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options17]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_correct_algo_options[algo_options18]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_unimplemented_algo_options[algo_options0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_unimplemented_algo_options[algo_options1]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_unimplemented_algo_options[algo_options2]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_unimplemented_algo_options[algo_options3]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_fides_options",
                "name": "test_fides_stop_after_one_iteration",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_history_collection",
                "name": "test_history_collection_with_parallelization[pygmo_gaco]",
                "time": 0.845,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_history_collection",
                "name": "test_history_collection_with_parallelization[pygmo_pso_gen]",
                "time": 0.672,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_history_collection",
                "name": "test_history_collection_with_parallelization[pounders]",
                "time": 0.164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_history_collection",
                "name": "test_history_collection_with_parallelization[tranquilo]",
                "time": 37.813,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_history_collection",
                "name": "test_history_collection_with_parallelization[tranquilo_ls]",
                "time": 0.151,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_history_collection",
                "name": "test_history_collection_with_dummy_optimizer[1-1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_history_collection",
                "name": "test_history_collection_with_dummy_optimizer[1-2]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_history_collection",
                "name": "test_history_collection_with_dummy_optimizer[2-2]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_history_collection",
                "name": "test_history_collection_with_dummy_optimizer[1-4]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_history_collection",
                "name": "test_history_collection_with_dummy_optimizer[2-4]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_history_tools",
                "name": "test_get_history_arrays_minimize",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_history_tools",
                "name": "test_get_history_arrays_maximize",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_dict_criterion-sos_gradient-sos_criterion_and_gradient]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_dict_criterion-sos_gradient-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_dict_criterion-sos_pandas_gradient-sos_criterion_and_gradient]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_dict_criterion-sos_pandas_gradient-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_dict_criterion-None-sos_criterion_and_gradient]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_dict_criterion-None-None]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_dict_criterion_with_pd_objects-sos_gradient-sos_criterion_and_gradient]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_dict_criterion_with_pd_objects-sos_gradient-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_dict_criterion_with_pd_objects-sos_pandas_gradient-sos_criterion_and_gradient]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_dict_criterion_with_pd_objects-sos_pandas_gradient-None]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_dict_criterion_with_pd_objects-None-sos_criterion_and_gradient]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_dict_criterion_with_pd_objects-None-None]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_scalar_criterion-sos_gradient-sos_criterion_and_gradient]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_scalar_criterion-sos_gradient-None]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_scalar_criterion-sos_pandas_gradient-sos_criterion_and_gradient]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_scalar_criterion-sos_pandas_gradient-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_scalar_criterion-None-sos_criterion_and_gradient]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[maximize-sos_scalar_criterion-None-None]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_dict_criterion-sos_gradient-sos_criterion_and_gradient]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_dict_criterion-sos_gradient-None]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_dict_criterion-sos_pandas_gradient-sos_criterion_and_gradient]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_dict_criterion-sos_pandas_gradient-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_dict_criterion-None-sos_criterion_and_gradient]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_dict_criterion-None-None]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_dict_criterion_with_pd_objects-sos_gradient-sos_criterion_and_gradient]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_dict_criterion_with_pd_objects-sos_gradient-None]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_dict_criterion_with_pd_objects-sos_pandas_gradient-sos_criterion_and_gradient]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_dict_criterion_with_pd_objects-sos_pandas_gradient-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_dict_criterion_with_pd_objects-None-sos_criterion_and_gradient]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_dict_criterion_with_pd_objects-None-None]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_scalar_criterion-sos_gradient-sos_criterion_and_gradient]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_scalar_criterion-sos_gradient-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_scalar_criterion-sos_pandas_gradient-sos_criterion_and_gradient]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_scalar_criterion-sos_pandas_gradient-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_scalar_criterion-None-sos_criterion_and_gradient]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_criterion_and_derivative_template[minimize-sos_scalar_criterion-None-None]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_internal_criterion_with_penalty[maximize]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_internal_criterion_and_derivative_template",
                "name": "test_internal_criterion_with_penalty[minimize]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options0]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options1]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options2]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options3]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options4]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options5]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options6]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options7]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options8]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options9]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options10]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options11]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options12]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options13]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options14]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options15]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options16]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options17]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options18]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options19]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options20]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options21]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options22]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options23]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options24]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options25]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options26]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options27]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options28]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options29]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options30]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options31]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options32]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options33]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options34]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options35]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options36]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options37]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options38]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options39]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options40]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options41]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options42]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options43]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options44]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options45]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options46]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options47]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options48]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options49]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options50]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options51]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options52]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options53]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options54]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options55]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options56]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options57]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options58]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options59]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options60]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options61]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options62]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options63]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options64]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options65]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options66]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options67]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options68]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options69]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options70]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options71]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options72]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options73]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options74]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options75]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options76]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options77]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options78]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options79]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options80]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options81]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options82]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options83]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options84]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options85]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options86]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options87]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options88]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options89]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options90]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options91]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options92]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options93]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options94]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options95]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options96]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options97]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options98]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options99]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options100]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options101]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options102]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options103]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options104]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options105]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options106]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options107]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options108]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options109]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options110]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options111]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options112]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options113]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options114]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options115]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options116]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options117]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options118]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options119]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options120]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options121]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options122]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options123]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options124]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options125]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options126]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options127]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options128]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options129]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options130]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options131]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options132]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options133]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options134]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options135]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options136]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options137]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options138]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options139]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options140]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options141]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options142]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options143]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options144]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options145]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options146]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options147]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options148]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options149]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options150]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options151]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options152]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options153]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options154]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options155]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options156]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options157]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options158]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options159]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options160]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options161]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options162]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options163]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options164]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options165]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options166]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options167]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options168]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options169]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options170]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options171]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options172]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options173]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options174]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options175]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options176]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_ipopt_options",
                "name": "test_ipopt_algo_options[algo_options177]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "cyipopt not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_jax_derivatives",
                "name": "test_scipy_conference_example",
                "time": 1.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_jax_derivatives",
                "name": "test_params_is_jax_scalar",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_jax_derivatives",
                "name": "test_dict_output_works[scipy_lbfgsb]",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_jax_derivatives",
                "name": "test_dict_output_works[scipy_ls_lm]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_jax_derivatives",
                "name": "test_least_squares_optimizer_pytree",
                "time": 0.207,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_linear[model_gradient0-lower_bounds0-upper_bounds0-2.0-expected0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_linear[model_gradient1-lower_bounds1-upper_bounds1-9.5367431640625e-05-expected1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_linear[model_gradient2-lower_bounds2-upper_bounds2-0.1-expected2]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_linear[model_gradient3-lower_bounds3-upper_bounds3-0.1-expected3]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_linear[model_gradient4-lower_bounds4-upper_bounds4-0.1-expected4]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_linear[model_gradient5-lower_bounds5-upper_bounds5-0.1-expected5]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_linear[model_gradient6-lower_bounds6-upper_bounds6-0.1-expected6]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_geometry[x_center0--1.0-model_gradient0-lower_bounds0-upper_bounds0-2.0-expected0]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_geometry[x_center1--1.0-model_gradient1-lower_bounds1-upper_bounds1-5.0-expected1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_geometry[x_center2-3.0-model_gradient2-lower_bounds2-upper_bounds2-5.0-expected2]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_geometry[x_center3--1.0-model_gradient3-lower_bounds3-upper_bounds3-1.4142135623730951-expected3]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_geometry[x_center4--1.0-model_gradient4-lower_bounds4-upper_bounds4-1.7320508075688772-expected4]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_geometry[x_center5-0.0-model_gradient5-lower_bounds5-upper_bounds5-5.0-expected5]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_linear_subsolvers",
                "name": "test_trsbox_geometry[x_center6-0.0-model_gradient6-lower_bounds6-upper_bounds6-5.0-expected6]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[fides]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nag_dfols]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nag_pybobyqa]",
                "time": 0.2,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nlopt_bobyqa]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nlopt_ccsaq]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nlopt_cobyla]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nlopt_lbfgs]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nlopt_mma]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nlopt_neldermead]",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nlopt_newuoa]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nlopt_praxis]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nlopt_sbplx]",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nlopt_slsqp]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nlopt_tnewton]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[nlopt_var]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[scipy_bfgs]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[scipy_cobyla]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[scipy_conjugate_gradient]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[scipy_lbfgsb]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[scipy_ls_dogbox]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[scipy_ls_lm]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[scipy_ls_trf]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[scipy_neldermead]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[scipy_newton_cg]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[scipy_powell]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[scipy_slsqp]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[scipy_truncated_newton]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[scipy_trust_constr]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[simopt_adam]",
                "time": 0.518,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[simopt_astrodf]",
                "time": 1.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[simopt_spsa]",
                "time": 0.274,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[simopt_strong]",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[neldermead_parallel]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[pounders]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[tranquilo]",
                "time": 38.496,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares[tranquilo_ls]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[fides]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[nag_dfols]",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[nag_pybobyqa]",
                "time": 0.261,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[nlopt_bobyqa]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[nlopt_ccsaq]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[nlopt_cobyla]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[nlopt_lbfgs]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[nlopt_mma]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[nlopt_neldermead]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[nlopt_newuoa]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[nlopt_sbplx]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[nlopt_slsqp]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[nlopt_tnewton]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[nlopt_var]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[scipy_lbfgsb]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[scipy_ls_dogbox]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[scipy_ls_trf]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[scipy_neldermead]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[scipy_powell]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[scipy_slsqp]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[scipy_truncated_newton]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[scipy_trust_constr]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[simopt_adam]",
                "time": 0.633,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[simopt_astrodf]",
                "time": 1.737,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[pounders]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[tranquilo]",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_algorithm_on_sum_of_squares_with_binding_bounds[tranquilo_ls]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[nlopt_crs2_lm]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[nlopt_direct]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[nlopt_esch]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[nlopt_isres]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_bee_colony]",
                "time": 0.3,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_cmaes]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_compass_search]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_de]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_de1220]",
                "time": 0.148,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_gaco]",
                "time": 0.443,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_gwo]",
                "time": 0.364,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_ihs]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_mbh]",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_pso]",
                "time": 0.17,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_pso_gen]",
                "time": 0.228,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_sade]",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_sea]",
                "time": 0.21,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_sga]",
                "time": 0.336,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_simulated_annealing]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[pygmo_xnes]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[scipy_basinhopping]",
                "time": 0.204,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[scipy_brute]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[scipy_differential_evolution]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[scipy_direct]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[scipy_dual_annealing]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_many_algorithms",
                "name": "test_global_algorithms_on_sum_of_squares[scipy_shgo]",
                "time": 0.164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_multistart_minimize_with_sum_of_squares_at_defaults[sos_scalar_criterion-maximize]",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_multistart_minimize_with_sum_of_squares_at_defaults[sos_scalar_criterion-minimize]",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_multistart_minimize_with_sum_of_squares_at_defaults[sos_dict_criterion-maximize]",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_multistart_minimize_with_sum_of_squares_at_defaults[sos_dict_criterion-minimize]",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_multistart_with_existing_sample",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_convergence_via_max_discoveries_works",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_steps_are_logged_as_skipped_if_convergence",
                "time": 0.696,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_all_steps_occur_in_optimization_iterations_if_no_convergence",
                "time": 0.527,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_with_non_transforming_constraints",
                "time": 0.121,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_error_is_raised_with_transforming_constraints",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_multistart_with_numpy_params",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_with_invalid_bounds",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_with_scaling",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_with_ackley",
                "time": 0.587,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_multistart",
                "name": "test_multistart_with_least_squares_optimizers",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_nag_optimizers",
                "name": "test_change_evals_per_point_interface_none",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_nag_optimizers",
                "name": "test_change_evals_per_point_interface_func",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_nag_optimizers",
                "name": "test_get_fast_start_method_auto",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_nag_optimizers",
                "name": "test_get_fast_start_method_jacobian",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_nag_optimizers",
                "name": "test_get_fast_start_method_trust",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_nag_optimizers",
                "name": "test_get_fast_start_method_error",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_nag_optimizers",
                "name": "test_build_options_dict_none",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_nag_optimizers",
                "name": "test_build_options_dict_override",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_nag_optimizers",
                "name": "test_build_options_dict_invalid_key",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_neldermead",
                "name": "test_init_algo_params",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_neldermead",
                "name": "test_init_simplex",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_neldermead",
                "name": "test_pfeffer",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_neldermead",
                "name": "test_nash",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_neldermead",
                "name": "test_gao_han",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_neldermead",
                "name": "test_varadhan_borchers",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_neldermead",
                "name": "test_neldermead_correct_algo_options[algo_options0]",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_neldermead",
                "name": "test_neldermead_correct_algo_options[algo_options1]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_neldermead",
                "name": "test_neldermead_correct_algo_options[algo_options2]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_neldermead",
                "name": "test_neldermead_correct_algo_options[algo_options3]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_neldermead",
                "name": "test_neldermead_correct_algo_options[algo_options4]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_neldermead",
                "name": "test_fides_stop_after_one_iteration",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimization_helpers",
                "name": "test_check_that_every_param_is_bounded",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimization_helpers",
                "name": "test_determine_population_size[55.3-None-None-55]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimization_helpers",
                "name": "test_determine_population_size[None-x1-500-500]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimization_helpers",
                "name": "test_determine_population_size[None-x2-4-60]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimization_helpers",
                "name": "test_convert_str_to_int",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimization_helpers",
                "name": "test_replace_none",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimizations_with_scaling",
                "name": "test_optimizations_with_scaling[scipy_lbfgsb-scaling_options0]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimizations_with_scaling",
                "name": "test_optimizations_with_scaling[scipy_lbfgsb-scaling_options1]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimizations_with_scaling",
                "name": "test_optimizations_with_scaling[nag_pybobyqa-scaling_options2]",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimizations_with_scaling",
                "name": "test_optimizations_with_scaling[nag_pybobyqa-scaling_options3]",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimize",
                "name": "test_sign_is_switched_back_after_maximization",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimize",
                "name": "test_scipy_lbfgsb_actually_calls_criterion_and_derivative",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimize",
                "name": "test_with_invalid_numdiff_options",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimize_result",
                "name": "test_optimize_result_runs",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimize_result",
                "name": "test_create_stars",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_optimize_result",
                "name": "test_to_pickle",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_scalar_criterion[params0]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_scalar_criterion[params1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_scalar_criterion[params2]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_scalar_criterion[params3]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_scalar_criterion[params4]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_scalar_criterion[params5]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_scalar_criterion[6]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_scalar_criterion[6.2]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_scalar_criterion[params8]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_scalar_criterion[params9]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_scalar_criterion[params0]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_scalar_criterion[params1]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_scalar_criterion[params2]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_scalar_criterion[params3]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_scalar_criterion[params4]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_scalar_criterion[params5]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_scalar_criterion[6]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_scalar_criterion[6.2]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_scalar_criterion[params8]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_scalar_criterion[params9]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_sos_ls[params0-scipy_lbfgsb]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_sos_ls[params1-scipy_ls_lm]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_sos_ls[params2-scipy_lbfgsb]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_sos_ls[params3-scipy_ls_lm]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_sos_ls[params4-scipy_lbfgsb]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_sos_ls[params5-scipy_ls_lm]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_sos_ls[params6-scipy_lbfgsb]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_sos_ls[params7-scipy_ls_lm]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_sos_ls[params8-scipy_lbfgsb]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_sos_ls[params9-scipy_ls_lm]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_sos_ls[params10-scipy_lbfgsb]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_numerical_derivative_sos_ls[params11-scipy_ls_lm]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_sos_ls[params0-scipy_lbfgsb]",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_sos_ls[params1-scipy_ls_lm]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_sos_ls[params2-scipy_lbfgsb]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_sos_ls[params3-scipy_ls_lm]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_sos_ls[params4-scipy_lbfgsb]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_sos_ls[params5-scipy_ls_lm]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_sos_ls[params6-scipy_lbfgsb]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_sos_ls[params7-scipy_ls_lm]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_sos_ls[params8-scipy_lbfgsb]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_sos_ls[params9-scipy_ls_lm]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_sos_ls[params10-scipy_lbfgsb]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_params_versions",
                "name": "test_tree_params_sos_ls[params11-scipy_ls_lm]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_entries_not_initialized[entries0-True]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_entries_not_initialized[entries1-False]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_entries_not_initialized[entries2-True]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_entries_not_initialized[entries3-False]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_entries_not_initialized[entries4-True]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_entries_not_initialized[entries5-False]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_entries_initialized_with_space[entries0-True]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_entries_initialized_with_space[entries1-False]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_entries_initialized_with_space[entries2-True]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_entries_initialized_with_space[entries3-False]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_entries_initialized_with_space[entries4-True]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_entries_initialized_with_space[entries5-False]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_entries_initialized_extension_needed",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_add_centered_entries",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_history",
                "name": "test_get_centered_entries",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_integration",
                "name": "test_bntr[start_vec0-cg]",
                "time": 0.807,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_integration",
                "name": "test_bntr[start_vec1-steihaug_toint]",
                "time": 0.75,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_integration",
                "name": "test_bntr[start_vec2-trsbox]",
                "time": 0.819,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_integration",
                "name": "test_bntr[start_vec3-cg]",
                "time": 2.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_integration",
                "name": "test_bntr[start_vec4-cg]",
                "time": 3.164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_integration",
                "name": "test_gqtpar[start_vec0]",
                "time": 0.913,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_update_initial_residual_model",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "refactoring",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_update_residual_model",
                "time": 1.335,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_update_main_from_residual_model",
                "time": 0.912,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_update_residual_model_with_new_accepted_x",
                "time": 0.588,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_update_main_model_with_new_accepted_x",
                "time": 0.008,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Known rounding differences between C and Python.",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_find_affine_points[zero_i]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_find_affine_points[zero_ii]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_find_affine_points[zero_iii]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_find_affine_points[zero_iv]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_find_affine_points[nonzero_i]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_find_affine_points[nonzero_ii]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_find_affine_points[nonzero_iii]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_add_points_until_main_model_fully_linear[i]",
                "time": 0.503,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_add_points_until_main_model_fully_linear[ii]",
                "time": 0.688,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_get_interpolation_matrices_residual_model",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_evaluate_residual_model[4]",
                "time": 1.14,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_evaluate_residual_model[7]",
                "time": 1.145,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_pounders_unit",
                "name": "test_fit_residual_model",
                "time": 0.708,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_process_multistart_sample",
                "name": "test_process_multistart_sample[sample0-x0-<lambda>]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_process_multistart_sample",
                "name": "test_process_multistart_sample[sample1-x1-<lambda>]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_process_result",
                "name": "test_switch_sign_dict",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms0-square_terms0-lower_bounds0-upper_bounds0-x_expected0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms1-square_terms1-lower_bounds1-upper_bounds1-x_expected1]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms2-square_terms2-lower_bounds2-upper_bounds2-x_expected2]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms3-square_terms3-lower_bounds3-upper_bounds3-x_expected3]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms4-square_terms4-lower_bounds4-upper_bounds4-x_expected4]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms5-square_terms5-lower_bounds5-upper_bounds5-x_expected5]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms6-square_terms6-lower_bounds6-upper_bounds6-x_expected6]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms7-square_terms7-lower_bounds7-upper_bounds7-x_expected7]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms8-square_terms8-lower_bounds8-upper_bounds8-x_expected8]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms9-square_terms9-lower_bounds9-upper_bounds9-x_expected9]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms10-square_terms10-lower_bounds10-upper_bounds10-x_expected10]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms11-square_terms11-lower_bounds11-upper_bounds11-x_expected11]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms12-square_terms12-lower_bounds12-upper_bounds12-x_expected12]",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms13-square_terms13-lower_bounds13-upper_bounds13-x_expected13]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms14-square_terms14-lower_bounds14-upper_bounds14-x_expected14]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms15-square_terms15-lower_bounds15-upper_bounds15-x_expected15]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_bounded_newton_trustregion[linear_terms16-square_terms16-lower_bounds16-upper_bounds16-x_expected16]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_gqtpar_quadratic[linear_terms0-square_terms0-x_expected0--0.001340933981148]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_conjugate_gradient[gradient0-hessian0-0.2393319731158-x_expected0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_conjugate_gradient[gradient1-hessian1-9.5367431640625e-05-x_expected1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_conjugate_gradient[gradient2-hessian2-9.5367431640625e-05-x_expected2]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_conjugate_gradient[gradient3-hessian3-0.0003814697265625-x_expected3]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_conjugate_gradient[gradient4-hessian4-0.0657627701334-x_expected4]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_conjugate_gradient[gradient5-hessian5-0.0003814697265625-x_expected5]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_conjugate_gradient[gradient6-hessian6-0.390625-x_expected6]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_conjugate_gradient[gradient7-hessian7-0.0001192842356654-x_expected7]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_steihaug_toint[gradient0-hessian0-0.2393319731158-x_expected0]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_steihaug_toint[gradient1-hessian1-9.5367431640625e-05-x_expected1]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_steihaug_toint[gradient2-hessian2-9.5367431640625e-05-x_expected2]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_steihaug_toint[gradient3-hessian3-0.0003814697265625-x_expected3]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_steihaug_toint[gradient4-hessian4-0.0657627701334-x_expected4]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_steihaug_toint[gradient5-hessian5-0.0003814697265625-x_expected5]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_steihaug_toint[gradient6-hessian6-0.390625-x_expected6]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_steihaug_toint[gradient7-hessian7-0.0001192842356654-x_expected7]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_trsbox[linear_terms0-square_terms0-0.2393319731158-x_expected0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_trsbox[linear_terms1-square_terms1-9.5367431640625e-05-x_expected1]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_trsbox[linear_terms2-square_terms2-9.5367431640625e-05-x_expected2]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_trsbox[linear_terms3-square_terms3-0.0003814697265625-x_expected3]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_trsbox[linear_terms4-square_terms4-0.0657627701334-x_expected4]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_trsbox[linear_terms5-square_terms5-0.0003814697265625-x_expected5]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_trsbox[linear_terms6-square_terms6-0.390625-x_expected6]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_trsbox[linear_terms7-square_terms7-0.0001192842356654-x_expected7]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_trsbox[linear_terms8-square_terms8-2.0-x_expected8]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_trsbox[linear_terms9-square_terms9-0.4166666666666667-x_expected9]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_trsbox[linear_terms10-square_terms10-0.4166666666666667-x_expected10]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_quadratic_subsolvers",
                "name": "test_trustregion_trsbox[linear_terms11-square_terms11-0.5-x_expected11]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tao_optimizers",
                "name": "test_robustness",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "petsc4py is not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tao_optimizers",
                "name": "test_box_constr",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "petsc4py is not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tao_optimizers",
                "name": "test_max_iters",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "petsc4py is not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tao_optimizers",
                "name": "test_grtol",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "petsc4py is not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tao_optimizers",
                "name": "test_gatol",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "petsc4py is not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tao_optimizers",
                "name": "test_gttol",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "petsc4py is not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tao_optimizers",
                "name": "test_tol",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "petsc4py is not installed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-sobol-lower0-upper0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-sobol-lower1-upper1]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-sobol-lower2-upper2]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-sobol-lower3-upper3]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-sobol-lower4-upper4]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-sobol-lower5-upper5]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-sobol-lower6-upper6]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-sobol-lower7-upper7]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-sobol-lower8-upper8]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-halton-lower9-upper9]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-halton-lower10-upper10]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-halton-lower11-upper11]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-halton-lower12-upper12]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-halton-lower13-upper13]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-halton-lower14-upper14]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-halton-lower15-upper15]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-halton-lower16-upper16]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-halton-lower17-upper17]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-latin_hypercube-lower18-upper18]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-latin_hypercube-lower19-upper19]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-latin_hypercube-lower20-upper20]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-latin_hypercube-lower21-upper21]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-latin_hypercube-lower22-upper22]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-latin_hypercube-lower23-upper23]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-latin_hypercube-lower24-upper24]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-latin_hypercube-lower25-upper25]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-latin_hypercube-lower26-upper26]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-random-lower27-upper27]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-random-lower28-upper28]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-random-lower29-upper29]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-random-lower30-upper30]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-random-lower31-upper31]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-random-lower32-upper32]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-random-lower33-upper33]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-random-lower34-upper34]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[uniform-random-lower35-upper35]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-sobol-lower36-upper36]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-sobol-lower37-upper37]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-sobol-lower38-upper38]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-sobol-lower39-upper39]",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-sobol-lower40-upper40]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-sobol-lower41-upper41]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-sobol-lower42-upper42]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-sobol-lower43-upper43]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-sobol-lower44-upper44]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-halton-lower45-upper45]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-halton-lower46-upper46]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-halton-lower47-upper47]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-halton-lower48-upper48]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-halton-lower49-upper49]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-halton-lower50-upper50]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-halton-lower51-upper51]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-halton-lower52-upper52]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-halton-lower53-upper53]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-latin_hypercube-lower54-upper54]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-latin_hypercube-lower55-upper55]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-latin_hypercube-lower56-upper56]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-latin_hypercube-lower57-upper57]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-latin_hypercube-lower58-upper58]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-latin_hypercube-lower59-upper59]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-latin_hypercube-lower60-upper60]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-latin_hypercube-lower61-upper61]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-latin_hypercube-lower62-upper62]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-random-lower63-upper63]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-random-lower64-upper64]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-random-lower65-upper65]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-random-lower66-upper66]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-random-lower67-upper67]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-random-lower68-upper68]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-random-lower69-upper69]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-random-lower70-upper70]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_draw_exploration_sample[triangular-random-lower71-upper71]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_run_explorations",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_get_batched_optimization_sample",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_linear_weights",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_tiktak_weights",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_update_state_converged",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_tiktak",
                "name": "test_update_state_not_converged",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_useful_exceptions",
                "name": "test_missing_criterion_kwargs",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_useful_exceptions",
                "name": "test_missing_derivative_kwargs",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_useful_exceptions",
                "name": "test_missing_criterion_and_derivative_kwargs",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_useful_exceptions",
                "name": "test_typo_in_criterion_kwarg",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_useful_exceptions",
                "name": "test_criterion_with_runtime_error_derivative_free",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_useful_exceptions",
                "name": "test_criterion_with_runtime_error_during_numerical_derivative",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_useful_exceptions",
                "name": "test_criterion_fails_at_start_values",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_advanced_constraints",
                "name": "test_with_covariance_constraint_bounds_distance[sos_gradient-cov_bounds_distance]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_advanced_constraints",
                "name": "test_with_covariance_constraint_bounds_distance[sos_gradient-sdcorr_bounds_distance]",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_advanced_constraints",
                "name": "test_with_covariance_constraint_bounds_distance[sos_gradient-fixed_and_decreasing]",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_advanced_constraints",
                "name": "test_with_covariance_constraint_bounds_distance[sos_gradient-fixed_and_increasing]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_advanced_constraints",
                "name": "test_with_covariance_constraint_bounds_distance[None-cov_bounds_distance]",
                "time": 0.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_advanced_constraints",
                "name": "test_with_covariance_constraint_bounds_distance[None-sdcorr_bounds_distance]",
                "time": 0.121,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_advanced_constraints",
                "name": "test_with_covariance_constraint_bounds_distance[None-fixed_and_decreasing]",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_advanced_constraints",
                "name": "test_with_covariance_constraint_bounds_distance[None-fixed_and_increasing]",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-fixed-numpy]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-fixed-numpy]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-fixed-numpy]",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-fixed-numpy]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-fixed-pandas]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-fixed-pandas]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-fixed-pandas]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-fixed-pandas]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-equality-numpy]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-equality-numpy]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-equality-numpy]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-equality-numpy]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-equality-pandas]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-equality-pandas]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-equality-pandas]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-equality-pandas]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-pairwise_equality-numpy]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-pairwise_equality-numpy]",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-pairwise_equality-numpy]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-pairwise_equality-numpy]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-pairwise_equality-pandas]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-pairwise_equality-pandas]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-pairwise_equality-pandas]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-pairwise_equality-pandas]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-increasing-numpy]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-increasing-numpy]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-increasing-numpy]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-increasing-numpy]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-increasing-pandas]",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-increasing-pandas]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-increasing-pandas]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-increasing-pandas]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-decreasing-numpy]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-decreasing-numpy]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-decreasing-numpy]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-decreasing-numpy]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-decreasing-pandas]",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-decreasing-pandas]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-decreasing-pandas]",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-decreasing-pandas]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-linear-numpy]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-linear-numpy]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-linear-numpy]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-linear-numpy]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-linear-pandas]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-linear-pandas]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-linear-pandas]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-linear-pandas]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-probability-numpy]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-probability-numpy]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-probability-numpy]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-probability-numpy]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-probability-pandas]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-probability-pandas]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-probability-pandas]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-probability-pandas]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-covariance-numpy]",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-covariance-numpy]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-covariance-numpy]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-covariance-numpy]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-covariance-pandas]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-covariance-pandas]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-covariance-pandas]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-covariance-pandas]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-sdcorr-numpy]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-sdcorr-numpy]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-sdcorr-numpy]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-sdcorr-numpy]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-None-sdcorr-pandas]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_lbfgsb-sos_gradient-sdcorr-pandas]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-sos_ls_jacobian-sdcorr-pandas]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[sos-scipy_ls_dogbox-None-sdcorr-pandas]",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-fixed-numpy]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-fixed-numpy]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-fixed-numpy0]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-fixed-numpy1]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-fixed-pandas]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-fixed-pandas]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-fixed-pandas0]",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-fixed-pandas1]",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-equality-numpy]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-equality-numpy]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-equality-numpy0]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-equality-numpy1]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-equality-pandas]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-equality-pandas]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-equality-pandas0]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-equality-pandas1]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-pairwise_equality-numpy]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-pairwise_equality-numpy]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-pairwise_equality-numpy0]",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-pairwise_equality-numpy1]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-pairwise_equality-pandas]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-pairwise_equality-pandas]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-pairwise_equality-pandas0]",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-pairwise_equality-pandas1]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-increasing-numpy]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-increasing-numpy]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-increasing-numpy0]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-increasing-numpy1]",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-increasing-pandas]",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-increasing-pandas]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-increasing-pandas0]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-increasing-pandas1]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-decreasing-numpy]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-decreasing-numpy]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-decreasing-numpy0]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-decreasing-numpy1]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-decreasing-pandas]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-decreasing-pandas]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-decreasing-pandas0]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-decreasing-pandas1]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-linear-numpy]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-linear-numpy]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-linear-numpy0]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-linear-numpy1]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-linear-pandas]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-linear-pandas]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-linear-pandas0]",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-linear-pandas1]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-probability-numpy]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-probability-numpy]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-probability-numpy0]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-probability-numpy1]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-probability-pandas]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-probability-pandas]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-probability-pandas0]",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-probability-pandas1]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-covariance-numpy]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-covariance-numpy]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-covariance-numpy0]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-covariance-numpy1]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-covariance-pandas]",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-covariance-pandas]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-covariance-pandas0]",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-covariance-pandas1]",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-sdcorr-numpy]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-sdcorr-numpy]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-sdcorr-numpy0]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-sdcorr-numpy1]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-None-sdcorr-pandas]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_lbfgsb-rotated_hyper_ellipsoid_gradient-sdcorr-pandas]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-sdcorr-pandas0]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rotated_hyper_ellipsoid-scipy_ls_dogbox-None-sdcorr-pandas1]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-None-fixed-numpy]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-rosenbrock_gradient-fixed-numpy]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-None-fixed-pandas]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-rosenbrock_gradient-fixed-pandas]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-None-pairwise_equality-numpy]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-rosenbrock_gradient-pairwise_equality-numpy]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-None-pairwise_equality-pandas]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-rosenbrock_gradient-pairwise_equality-pandas]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-None-increasing-numpy]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-rosenbrock_gradient-increasing-numpy]",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-None-increasing-pandas]",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-rosenbrock_gradient-increasing-pandas]",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-None-covariance-numpy]",
                "time": 0.126,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-rosenbrock_gradient-covariance-numpy]",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-None-covariance-pandas]",
                "time": 0.181,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-rosenbrock_gradient-covariance-pandas]",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-None-sdcorr-numpy]",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-rosenbrock_gradient-sdcorr-numpy]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-None-sdcorr-pandas]",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[rosenbrock-scipy_lbfgsb-rosenbrock_gradient-sdcorr-pandas]",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-None-fixed-numpy]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-trid_gradient-fixed-numpy]",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-None-fixed-pandas]",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-trid_gradient-fixed-pandas]",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-None-equality-numpy]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-trid_gradient-equality-numpy]",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-None-equality-pandas]",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-trid_gradient-equality-pandas]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-None-pairwise_equality-numpy]",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-trid_gradient-pairwise_equality-numpy]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-None-pairwise_equality-pandas]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-trid_gradient-pairwise_equality-pandas]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-None-increasing-numpy]",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-trid_gradient-increasing-numpy]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-None-increasing-pandas]",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-trid_gradient-increasing-pandas]",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-None-linear-numpy]",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-trid_gradient-linear-numpy]",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-None-linear-pandas]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-trid_gradient-linear-pandas]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-None-probability-numpy]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-trid_gradient-probability-numpy]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-None-probability-pandas]",
                "time": 0.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constrained_minimization[trid-scipy_lbfgsb-trid_gradient-probability-pandas]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_fix_that_differs_from_start_value_raises_an_error",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_three_independent_constraints",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_incompatible_constraints_raise_errors[constraints0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_incompatible_constraints_raise_errors[constraints1]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_bug_from_copenhagen_presentation",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_constraint_inheritance",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_invalid_start_params",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_constraints",
                "name": "test_covariance_constraint_in_2_by_2_case",
                "time": 0.232,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_logging",
                "name": "test_optimization_with_valid_logging[scipy_lbfgsb-params0]",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_logging",
                "name": "test_optimization_with_valid_logging[scipy_lbfgsb-params1]",
                "time": 0.153,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_logging",
                "name": "test_optimization_with_valid_logging[scipy_lbfgsb-params2]",
                "time": 0.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_logging",
                "name": "test_optimization_with_valid_logging[scipy_ls_dogbox-params3]",
                "time": 0.129,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_logging",
                "name": "test_optimization_with_valid_logging[scipy_ls_dogbox-params4]",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_logging",
                "name": "test_optimization_with_valid_logging[scipy_ls_dogbox-params5]",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_logging",
                "name": "test_optimization_with_existing_exsting_database",
                "time": 0.157,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_logging",
                "name": "test_optimization_with_existing_exsting_table",
                "time": 0.161,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_cobyla-flat]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_cobyla-long]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_cobyla-equality]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_cobyla-equality_and_inequality]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_isres-flat]",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_isres-long]",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_isres-equality]",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_isres-equality_and_inequality]",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_mma-flat]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_mma-long]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_mma-equality]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Very slow and low accuracy.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_mma-equality_and_inequality]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Very slow and low accuracy.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_slsqp-flat]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_slsqp-long]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_slsqp-equality]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[nlopt_slsqp-equality_and_inequality]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_cobyla-flat]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_cobyla-long]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_cobyla-equality]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_cobyla-equality_and_inequality]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_differential_evolution-flat]",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_differential_evolution-long]",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_differential_evolution-equality]",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_differential_evolution-equality_and_inequality]",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_shgo-flat]",
                "time": 0.685,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_shgo-long]",
                "time": 0.205,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_shgo-equality]",
                "time": 0.186,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_shgo-equality_and_inequality]",
                "time": 0.25,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_slsqp-flat]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_slsqp-long]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_slsqp-equality]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_slsqp-equality_and_inequality]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_trust_constr-flat]",
                "time": 0.114,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_trust_constr-long]",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_trust_constr-equality]",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_nonlinear_optimization[scipy_trust_constr-equality_and_inequality]",
                "time": 0.15,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_documentation_example[nlopt_cobyla]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_documentation_example[nlopt_isres]",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_documentation_example[nlopt_mma]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Slow.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_documentation_example[nlopt_slsqp]",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_documentation_example[scipy_cobyla]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_documentation_example[scipy_differential_evolution]",
                "time": 0.748,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_documentation_example[scipy_shgo]",
                "time": 1.438,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_documentation_example[scipy_slsqp]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_documentation_example[scipy_trust_constr]",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_general_example[ipopt-True]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Needs ipopt",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.optimization.test_with_nonlinear_constraints",
                "name": "test_general_example[ipopt-False]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Needs ipopt",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_block_trees",
                "name": "test_matrix_to_block_tree_array_and_scalar",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_block_trees",
                "name": "test_matrix_to_block_tree_only_params_dfs",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_block_trees",
                "name": "test_matrix_to_block_tree_single_element",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_block_trees",
                "name": "test_block_tree_to_matrix_array_and_scalar",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_block_trees",
                "name": "test_block_tree_to_matrix_only_params_dfs",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_block_trees",
                "name": "test_block_tree_to_hessian_bijection",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_block_trees",
                "name": "test_hessian_to_block_tree_bijection",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_block_trees",
                "name": "test_block_tree_to_matrix_valueerror",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_constraint_tools",
                "name": "test_count_free_params_no_constraints",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_constraint_tools",
                "name": "test_count_free_params_with_constraints",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_constraint_tools",
                "name": "test_check_constraints",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_get_converter_fast_case",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_get_converter_with_constraints_and_bounds",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_get_converter_with_scaling",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_get_converter_with_trees",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_path_when_true[params-value0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_path_when_true[constraints-value1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_path_when_true[func_eval-value2]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_path_when_true[derivative_eval-value3]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_path_when_false[params-value0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_path_when_false[params-value1]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_path_when_false[constraints-value2]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_path_when_false[func_eval-value3]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_path_when_false[func_eval-value4]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_path_when_false[scaling-True]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_path_when_false[derivative_eval-value6]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_path_when_false[derivative_eval-value7]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_path_when_false[add_soft_bounds-True]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_func_eval_true[contributions-f0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_func_eval_true[contributions-f1]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_func_eval_true[root_contributions-f2]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_func_eval_true[root_contributions-f3]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_deriv_eval_true[contributions-f0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_deriv_eval_true[contributions-f1]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_deriv_eval_true[root_contributions-f2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_deriv_eval_true[root_contributions-f3]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_deriv_eval_true[value-None]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_deriv_eval_true[contributions-None]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_deriv_eval_true[root_contributions-None]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_func_eval_false[contributions-f0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_func_eval_false[contributions-f1]",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_func_eval_false[root_contributions-f2]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_func_eval_false[root_contributions-f3]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_deriv_eval_false[contributions-f0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_deriv_eval_false[contributions-f1]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_deriv_eval_false[root_contributions-f2]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_conversion",
                "name": "test_is_fast_deriv_eval_false[root_contributions-f3]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_from_internal_jacobian[10-1234]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_from_internal_jacobian[10-5471]",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_from_internal_jacobian[15-1234]",
                "time": 0.123,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_from_internal_jacobian[15-5471]",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_from_internal_jacobian[20-1234]",
                "time": 0.397,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_from_internal_jacobian[20-5471]",
                "time": 0.377,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_from_internal_jacobian[25-1234]",
                "time": 0.578,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_from_internal_jacobian[25-5471]",
                "time": 0.472,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_to_internal_jacobian[10-1234]",
                "time": 0.188,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_to_internal_jacobian[10-5471]",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_to_internal_jacobian[15-1234]",
                "time": 0.608,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_to_internal_jacobian[15-5471]",
                "time": 0.715,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_to_internal_jacobian[20-1234]",
                "time": 2.138,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_to_internal_jacobian[20-5471]",
                "time": 0.757,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_to_internal_jacobian[25-1234]",
                "time": 3.554,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_covariance_to_internal_jacobian[25-5471]",
                "time": 4.471,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_from_internal_jacobian[10-1234]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_from_internal_jacobian[10-5471]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_from_internal_jacobian[15-1234]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_from_internal_jacobian[15-5471]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_from_internal_jacobian[20-1234]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_from_internal_jacobian[20-5471]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_from_internal_jacobian[25-1234]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_from_internal_jacobian[25-5471]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_to_internal_jacobian[10-1234]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_to_internal_jacobian[10-5471]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_to_internal_jacobian[15-1234]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_to_internal_jacobian[15-5471]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_to_internal_jacobian[20-1234]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_to_internal_jacobian[20-5471]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_to_internal_jacobian[25-1234]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_probability_to_internal_jacobian[25-5471]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_from_internal_jacobian[10-1234]",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_from_internal_jacobian[10-5471]",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_from_internal_jacobian[15-1234]",
                "time": 0.19,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_from_internal_jacobian[15-5471]",
                "time": 0.529,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_from_internal_jacobian[20-1234]",
                "time": 0.661,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_from_internal_jacobian[20-5471]",
                "time": 0.798,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_from_internal_jacobian[25-1234]",
                "time": 1.745,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_from_internal_jacobian[25-5471]",
                "time": 1.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_to_internal_jacobian[10-1234]",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_to_internal_jacobian[10-5471]",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_to_internal_jacobian[15-1234]",
                "time": 0.869,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_to_internal_jacobian[15-5471]",
                "time": 0.714,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_to_internal_jacobian[20-1234]",
                "time": 1.818,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_to_internal_jacobian[20-5471]",
                "time": 2.108,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_to_internal_jacobian[25-1234]",
                "time": 2.785,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_kernel_transformations",
                "name": "test_sdcorr_to_internal_jacobian[25-5471]",
                "time": 2.797,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_get_transformation_type[0-inf-identity]",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_get_transformation_type[-1-2-stack]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_get_transformation_type[lower_bounds2-upper_bounds2-stack]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_get_transformation_type[lower_bounds3-upper_bounds3-identity]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_get_transformation_type[lower_bounds4-upper_bounds4-subtract_lb]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_get_positivity_transform[0-0-func-expected0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_get_positivity_transform[1-1-func-expected1]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_get_positivity_transform[0-0-derivative-expected2]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_get_positivity_transform[1-1-derivative-expected3]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_get_positivity_transform[1-inf-func-expected4]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_get_positivity_transform[0-inf-derivative-expected5]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_get_selection_indices",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_process_selector[constraint0-10-100]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_process_selector[constraint1-params1-0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_process_selector[constraint2-params2-expected2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint0-params0]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint1-params1]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint2-params2]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint3-params3]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint4-params4]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint5-params5]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint6-params6]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint7-params7]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint8-params8]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint9-params9]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint10-params10]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint11-params11]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint12-params12]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint13-params13]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint14-params14]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint15-params15]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint16-params16]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint17-params17]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint18-params18]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint19-params19]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint20-params20]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint[constraint21-params21]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_check_validity_nonlinear_constraint_correct_example",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_equality_as_inequality_constraints[constraints0-same]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_equality_as_inequality_constraints[constraints1-expected1]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_process_nonlinear_constraints",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_get_components",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_vector_to_list_of_scalar",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_nonlinear_constraints",
                "name": "test_vector_as_list_of_scalar_constraints",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_bounds",
                "name": "test_get_bounds_subdataframe",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_bounds",
                "name": "test_get_bounds_error[lower_bounds0-None]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_bounds",
                "name": "test_get_bounds_error[lower_bounds1-None]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_bounds",
                "name": "test_get_bounds_error[lower_bounds2-None]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_bounds",
                "name": "test_get_bounds_error[lower_bounds3-None]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_bounds",
                "name": "test_get_bounds_error[None-upper_bounds4]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_bounds",
                "name": "test_get_bounds_no_arguments",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_bounds",
                "name": "test_get_bounds_with_lower_bounds",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_bounds",
                "name": "test_get_bounds_with_upper_bounds",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_bounds",
                "name": "test_get_bounds_numpy",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_bounds",
                "name": "test_get_bounds_numpy_error",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_groups",
                "name": "test_get_params_groups_and_short_names_dict",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_groups",
                "name": "test_get_params_groups_and_short_names_numpy",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_groups",
                "name": "test_get_params_groups_and_short_names_dataframe",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_groups",
                "name": "test_get_group_and_name_not_free",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_groups",
                "name": "test_get_group_and_name_free",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_groups",
                "name": "test_get_group_and_name_just_one",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_groups",
                "name": "test_split_long_group_short",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_groups",
                "name": "test_split_long_group_very_short",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_groups",
                "name": "test_split_long_group_20",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_groups",
                "name": "test_split_long_group_23",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_parameter_groups",
                "name": "test_replace_too_common_groups",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_constraints",
                "name": "test_replace_pairwise_equality_by_equality",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_constraints",
                "name": "test_empty_constraints_work",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_constraints",
                "name": "test_to_many_bounds_in_increasing_constraint_raise_good_error",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_no_constraint[None]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_no_constraint[constraints1]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_tree_selector",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_tree_selectors",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_numpy_array_loc",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_numpy_array_locs",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_dataframe_loc",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_dataframe_query",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_dataframe_locs",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_dataframe_queries",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_numpy_array_invalid_fields[selectors]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_numpy_array_invalid_fields[queries]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_numpy_array_invalid_fields[query]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_numpy_array_invalid_fields[locs]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_dataframe_invalid_fields[selectors]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_dataframe_invalid_fields[queries]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_dataframe_invalid_fields[locs]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_tree_invalid_fields[selectors]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_tree_invalid_fields[queries]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_tree_invalid_fields[query]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_tree_invalid_fields[locs]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_tree_invalid_fields[loc]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_duplicates",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_process_selectors",
                "name": "test_process_selectors_differen_length_in_multiple_selectors",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_scale_conversion",
                "name": "test_get_scale_converter_active[start_values]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_scale_conversion",
                "name": "test_get_scale_converter_active[bounds]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_scale_conversion",
                "name": "test_scale_conversion_fast_path",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[no_constraints]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[fixed_at_start]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[fixed_at_value]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[one_increasing]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[overlapping_increasing]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[one_decreasing]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[overlapping_decreasing]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[one_equality]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[everlapping_equality]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[probability]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[uncorrelated_covariance]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[covariance]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[normalized_covariance]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_space_converter_with_params[sdcorr]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_multiply_from_left_and_right[0]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_multiply_from_left_and_right[1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_multiply_from_left_and_right[2]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_multiply_from_left_and_right[3]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_space_conversion",
                "name": "test_multiply_from_left_and_right[4]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_conversion",
                "name": "test_tree_converter_primary_key_is_value[5.0]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_conversion",
                "name": "test_tree_converter_primary_key_is_value[func_eval1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_conversion",
                "name": "test_tree_converter_primary_key_is_value[func_eval2]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_conversion",
                "name": "test_tree_converter_primary_key_is_value[func_eval3]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_conversion",
                "name": "test_tree_converter_primary_key_is_value[func_eval4]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_conversion",
                "name": "test_tree_converter_primary_key_is_value[func_eval5]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_conversion",
                "name": "test_tree_converter_primary_key_is_value[func_eval6]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_conversion",
                "name": "test_tree_conversion_fast_path[value]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_conversion",
                "name": "test_tree_conversion_fast_path[contributions]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_conversion",
                "name": "test_tree_conversion_fast_path[root_contributions]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_registry",
                "name": "test_flatten_df_with_value_column",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_registry",
                "name": "test_unflatten_df_with_value_column",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_registry",
                "name": "test_leaf_names_df_with_value_column",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_registry",
                "name": "test_flatten_partially_numeric_df",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_registry",
                "name": "test_unflatten_partially_numeric_df",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.parameters.test_tree_registry",
                "name": "test_leaf_names_partially_numeric_df",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sensitivity.test_msm_sensitivity",
                "name": "test_sensitivity_to_bias",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sensitivity.test_msm_sensitivity",
                "name": "test_fundamental_sensitivity_to_noise",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sensitivity.test_msm_sensitivity",
                "name": "test_actual_sensitivity_to_noise",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sensitivity.test_msm_sensitivity",
                "name": "test_actual_sensitivity_to_removal",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sensitivity.test_msm_sensitivity",
                "name": "test_fundamental_sensitivity_to_removal",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sensitivity.test_msm_sensitivity",
                "name": "test_sensitivity_to_weighting",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sensitivity.test_msm_sensitivity_via_estimate_msm",
                "name": "test_sensitivity_to_bias",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sensitivity.test_msm_sensitivity_via_estimate_msm",
                "name": "test_fundamental_sensitivity_to_noise",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sensitivity.test_msm_sensitivity_via_estimate_msm",
                "name": "test_actual_sensitivity_to_noise",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sensitivity.test_msm_sensitivity_via_estimate_msm",
                "name": "test_actual_sensitivity_to_removal",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sensitivity.test_msm_sensitivity_via_estimate_msm",
                "name": "test_fundamental_sensitivity_to_removal",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sensitivity.test_msm_sensitivity_via_estimate_msm",
                "name": "test_sensitivity_to_weighting",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_convergence_plot",
                "name": "test_convergence_plot_options[options0-True]",
                "time": 1.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_convergence_plot",
                "name": "test_convergence_plot_options[options1-False]",
                "time": 0.21,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_convergence_plot",
                "name": "test_check_only_allowed_subset_provided_none",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_convergence_plot",
                "name": "test_check_only_allowed_subset_provided_all_included",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_convergence_plot",
                "name": "test_check_only_allowed_subset_provided_missing",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test__select_derivative_with_minimal_error",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test__select_derivative_with_minimal_error_given",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test__select_eval_with_lowest_and_highest_step",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[True-2-func_and_params0]",
                "time": 0.255,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[True-2-func_and_params1]",
                "time": 0.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[True-2-func_and_params2]",
                "time": 0.239,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[True-3-func_and_params0]",
                "time": 0.263,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[True-3-func_and_params1]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[True-3-func_and_params2]",
                "time": 0.215,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[True-4-func_and_params0]",
                "time": 0.27,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[True-4-func_and_params1]",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[True-4-func_and_params2]",
                "time": 0.221,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[False-2-func_and_params0]",
                "time": 0.238,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[False-2-func_and_params1]",
                "time": 0.309,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[False-2-func_and_params2]",
                "time": 0.191,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[False-3-func_and_params0]",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[False-3-func_and_params1]",
                "time": 0.316,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[False-3-func_and_params2]",
                "time": 0.203,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[False-4-func_and_params0]",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[False-4-func_and_params1]",
                "time": 0.324,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_derivative_plot",
                "name": "test_derivative_plot[False-4-func_and_params2]",
                "time": 0.217,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_deviation_plot",
                "name": "test_convergence_plot_options[options0]",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_deviation_plot",
                "name": "test_convergence_plot_options[options1]",
                "time": 0.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_deviation_plot",
                "name": "test_convergence_plot_options[options2]",
                "time": 0.272,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_deviation_plot",
                "name": "test_convergence_plot_options[options3]",
                "time": 0.268,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_deviation_plot",
                "name": "test_convergence_plot_options[options4]",
                "time": 0.262,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_deviation_plot",
                "name": "test_convergence_plot_options[options5]",
                "time": 0.253,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_estimation_table",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_one_and_stage_rendering_are_equal[latex-render_latex-models0]",
                "time": 0.207,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_one_and_stage_rendering_are_equal[latex-render_latex-models1]",
                "time": 0.118,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_one_and_stage_rendering_are_equal[latex-render_latex-models2]",
                "time": 0.203,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_one_and_stage_rendering_are_equal[html-render_html-models3]",
                "time": 0.126,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_one_and_stage_rendering_are_equal[html-render_html-models4]",
                "time": 0.135,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_one_and_stage_rendering_are_equal[html-render_html-models5]",
                "time": 0.205,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_process_model_stats_model",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_convert_model_to_series_with_ci",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_convert_model_to_series_with_se",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_convert_model_to_series_without_inference",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_create_statistics_sr",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_process_frame_indices_index",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_process_frame_indices_columns",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_apply_number_format_tuple",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_apply_number_format_int",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_apply_number_format_callable",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_get_digits_after_decimal",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_create_group_to_col_position",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_get_model_names",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_get_default_column_names_and_groups",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_get_default_column_names_and_groups_undefined_groups",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_customize_col_groups",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_customize_col_names_dict",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_customize_col_names_list",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_get_params_frames_with_common_index",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_get_params_frames_with_common_index_multiindex",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_check_order_of_model_names_raises_error",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_estimation_table",
                "name": "test_manual_extra_info",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[True-None-None-True]",
                "time": 0.814,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[True-None-None-False]",
                "time": 0.715,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[True-None-50-True]",
                "time": 0.773,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[True-None-50-False]",
                "time": 1.18,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[True-<lambda>-None-True]",
                "time": 0.781,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[True-<lambda>-None-False]",
                "time": 0.75,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[True-<lambda>-50-True]",
                "time": 0.738,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[True-<lambda>-50-False]",
                "time": 0.736,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[False-None-None-True]",
                "time": 0.679,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[False-None-None-False]",
                "time": 0.676,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[False-None-50-True]",
                "time": 0.687,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[False-None-50-False]",
                "time": 0.695,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[False-<lambda>-None-True]",
                "time": 0.703,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[False-<lambda>-None-False]",
                "time": 0.693,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[False-<lambda>-50-True]",
                "time": 0.725,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_params_plot_multistart[False-<lambda>-50-False]",
                "time": 0.719,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[True-True-True-True]",
                "time": 0.673,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[True-True-True-False]",
                "time": 0.691,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[True-True-False-True]",
                "time": 0.659,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[True-True-False-False]",
                "time": 0.693,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[True-False-True-True]",
                "time": 0.67,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[True-False-True-False]",
                "time": 0.759,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[True-False-False-True]",
                "time": 0.734,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[True-False-False-False]",
                "time": 0.664,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[False-True-True-True]",
                "time": 0.635,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[False-True-True-False]",
                "time": 0.682,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[False-True-False-True]",
                "time": 0.635,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[False-True-False-False]",
                "time": 0.66,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[False-False-True-True]",
                "time": 0.664,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[False-False-True-False]",
                "time": 0.649,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[False-False-False-True]",
                "time": 0.631,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_list_input[False-False-False-False]",
                "time": 0.624,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_name_input",
                "time": 0.613,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_wrong_results",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_different_input_types",
                "time": 2.386,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_history_plots",
                "name": "test_criterion_plot_wrong_inputs",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_lollipop_plot",
                "name": "test_lollipop_plot_runs",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_profile_plot",
                "name": "test_find_switch_points",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_profile_plot",
                "name": "test_determine_alpha_grid",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_profile_plot",
                "name": "test_create_solution_times_n_evaluations",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_profile_plot",
                "name": "test_create_solution_times_n_batches",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_profile_plot",
                "name": "test_create_solution_times_walltime",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_profile_plot",
                "name": "test_profile_plot_options[options0]",
                "time": 0.301,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_profile_plot",
                "name": "test_profile_plot_options[options1]",
                "time": 0.264,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_profile_plot",
                "name": "test_profile_plot_options[options2]",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere_with_contributions-kwargs0]",
                "time": 0.601,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere_with_contributions-kwargs1]",
                "time": 0.622,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere_with_contributions-kwargs2]",
                "time": 0.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere_with_contributions-kwargs3]",
                "time": 0.684,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere_with_contributions-kwargs4]",
                "time": 0.64,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere_with_contributions-kwargs5]",
                "time": 0.735,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere_with_contributions-kwargs6]",
                "time": 0.418,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere-kwargs7]",
                "time": 0.587,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere-kwargs8]",
                "time": 0.601,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere-kwargs9]",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere-kwargs10]",
                "time": 0.616,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere-kwargs11]",
                "time": 0.596,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere-kwargs12]",
                "time": 1.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.visualization.test_slice_plot",
                "name": "test_slice_plot[sphere-kwargs13]",
                "time": 0.477,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9] \ud83d\ude80  Start image=crawlergpt:latest\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9] \ud83d\ude80  Start image=crawlergpt:latest\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation] \ud83d\ude80  Start image=crawlergpt:latest\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic] user=0 workdir=\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic] user=0 workdir=\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2601  git clone 'https://github.com/mamba-org/provision-with-micromamba' # ref=main\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2601  git clone 'https://github.com/mamba-org/provision-with-micromamba' # ref=main\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation] \u2b50 Run Main actions/checkout@v3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2705  Success - Main actions/checkout@v3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation] \u2b50 Run Main create build environment\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udc33  docker cp src=/tmp/act-cache/ab83c715-7927-49da-adb8-802442097f95/act/mamba-org-provision-with-micromamba@main/ dst=/var/run/act/actions/mamba-org-provision-with-micromamba@main/\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/mamba-org-provision-with-micromamba@main/] user=0 workdir=\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/mamba-org-provision-with-micromamba@main/dist/main/index.js] user= workdir=\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udea7  ::warning::This action is deprecated and no longer maintained. Please use mamba-org/setup-micromamba instead. See `https://github.com/mamba-org/provision-with-micromamba#migration-to-setup-micromamba` for a migration guide.\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Contents of /home/runneradmin/.condarc%0Achannel_priority: strict%0Achannels:%0A  - conda-forge%0A  - nodefaults%0A\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2753  ::group::Install micromamba ...\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Resolved Keys:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::[\"micromamba-bin https://micro.mamba.pm/api/micromamba/linux-64/latest Sat Jul 01 2023 YYY\"]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Checking zstd --version\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:37437/_apis/artifactcache/cache?keys=micromamba-bin%2520https%253A%252F%252Fmicro.mamba.pm%252Fapi%252Fmicromamba%252Flinux-64%252Flatest%2520Sat%2520Jul%252001%25202023%2520YYY&version=40cd471e258f8d42c1b6f93422de32dc9780571a713394832b85a5dd2c8cc2a6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Cache miss for key 'micromamba-bin https://micro.mamba.pm/api/micromamba/linux-64/latest Sat Jul 01 2023 YYY'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Running shell command [\"bash\",[\"-eo\",\"pipefail\",\"-c\",\"curl https://micro.mamba.pm/api/micromamba/linux-64/latest -Ls --retry 5 --retry-delay 1 | tar -xj -O bin/micromamba > /home/runneradmin/micromamba-bin/micromamba\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | [command]/usr/bin/bash -eo pipefail -c curl https://micro.mamba.pm/api/micromamba/linux-64/latest -Ls --retry 5 --retry-delay 1 | tar -xj -O bin/micromamba > /home/runneradmin/micromamba-bin/micromamba\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Will save to cache with key micromamba-bin https://micro.mamba.pm/api/micromamba/linux-64/latest Sat Jul 01 2023 YYY\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Running shell command [\"/home/runneradmin/micromamba-bin/micromamba\",[\"shell\",\"init\",\"-s\",\"zsh\",\"-p\",\"/home/runneradmin/micromamba-root\",\"-y\",\"--log-level\",\"warning\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | [command]/home/runneradmin/micromamba-bin/micromamba shell init -s zsh -p /home/runneradmin/micromamba-root -y --log-level warning\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Modifying RC file \"/home/runneradmin/.zshrc\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Generating config for root prefix \u001b[1m\"/home/runneradmin/micromamba-root\"\u001b[0m\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Setting mamba executable to: \u001b[1m\"/home/runneradmin/micromamba-bin/micromamba\"\u001b[0m\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Adding (or replacing) the following in your \"/home/runneradmin/.zshrc\" file\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | # >>> mamba initialize >>>\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | # !! Contents within this block are managed by 'mamba init' !!\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | export MAMBA_EXE=\"/home/runneradmin/micromamba-bin/micromamba\";\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | export MAMBA_ROOT_PREFIX=\"/home/runneradmin/micromamba-root\";\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | __mamba_setup=\"$(\"$MAMBA_EXE\" shell hook --shell zsh --root-prefix \"$MAMBA_ROOT_PREFIX\" 2> /dev/null)\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | if [ $? -eq 0 ]; then\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     eval \"$__mamba_setup\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | else\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     if [ -f \"/home/runneradmin/micromamba-root/etc/profile.d/micromamba.sh\" ]; then\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         . \"/home/runneradmin/micromamba-root/etc/profile.d/micromamba.sh\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     else\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         export  PATH=\"/home/runneradmin/micromamba-root/bin:$PATH\"  # extra space after export prevents interference from conda init\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     fi\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | fi\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | unset __mamba_setup\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | # <<< mamba initialize <<<\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Running shell command [\"/home/runneradmin/micromamba-bin/micromamba\",[\"shell\",\"init\",\"-s\",\"bash\",\"-p\",\"/home/runneradmin/micromamba-root\",\"-y\",\"--log-level\",\"warning\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | [command]/home/runneradmin/micromamba-bin/micromamba shell init -s bash -p /home/runneradmin/micromamba-root -y --log-level warning\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Modifying RC file \"/tmp/micromamba-WtSIGt/.bashrc\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Generating config for root prefix \u001b[1m\"/home/runneradmin/micromamba-root\"\u001b[0m\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Setting mamba executable to: \u001b[1m\"/home/runneradmin/micromamba-bin/micromamba\"\u001b[0m\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Adding (or replacing) the following in your \"/tmp/micromamba-WtSIGt/.bashrc\" file\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | # >>> mamba initialize >>>\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | # !! Contents within this block are managed by 'mamba init' !!\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | export MAMBA_EXE=\"/home/runneradmin/micromamba-bin/micromamba\";\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | export MAMBA_ROOT_PREFIX=\"/home/runneradmin/micromamba-root\";\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | __mamba_setup=\"$(\"$MAMBA_EXE\" shell hook --shell bash --root-prefix \"$MAMBA_ROOT_PREFIX\" 2> /dev/null)\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | if [ $? -eq 0 ]; then\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     eval \"$__mamba_setup\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | else\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     if [ -f \"/home/runneradmin/micromamba-root/etc/profile.d/micromamba.sh\" ]; then\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         . \"/home/runneradmin/micromamba-root/etc/profile.d/micromamba.sh\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     else\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         export  PATH=\"/home/runneradmin/micromamba-root/bin:$PATH\"  # extra space after export prevents interference from conda init\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     fi\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | fi\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | unset __mamba_setup\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | # <<< mamba initialize <<<\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2753  ::endgroup::\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2753  ::group::Install environment estimagic from /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/testenv-linux.yml python=3.10...\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Resolved Keys:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::[\"micromamba-env linux-64 Sat Jul 01 2023 file: 539faf43 extra: e0a578e9\"]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Checking zstd --version\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:37437/_apis/artifactcache/cache?keys=micromamba-env%2520linux-64%2520Sat%2520Jul%252001%25202023%2520file%253A%2520539faf43%2520extra%253A%2520e0a578e9&version=78933710b7028ea982d2bced244d92a8c567b9caa94b54a1e7cc57707e357eb4\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Cache miss for key 'micromamba-env linux-64 Sat Jul 01 2023 file: 539faf43 extra: e0a578e9'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | create env estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Running shell command [\"/home/runneradmin/micromamba-bin/micromamba create -n estimagic -y --log-level warning \\\"python=3.10\\\" -f /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/testenv-linux.yml\"]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | [command]/home/runneradmin/micromamba-bin/micromamba create -n estimagic -y --log-level warning python=3.10 -f /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/testenv-linux.yml\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.9]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9] \u2b50 Run Main actions/checkout@v3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2705  Success - Main actions/checkout@v3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9] \u2b50 Run Main create build environment\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Transaction\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Prefix: /home/runneradmin/micromamba-root/envs/estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Updating specs:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - python=3.10\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - jax\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - pygmo\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - nlopt\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - pip\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - pytest\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - pytest-cov\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - pytest-xdist\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - statsmodels\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - bokeh[version='<=2.4.3']\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - click\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - cloudpickle\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - joblib\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - numpy[version='>=1.17.0']\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - pandas\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - plotly\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - pybaum[version='>=',build=0.1.2]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - scipy[version='>=1.2.1']\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - sqlalchemy\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |    - tranquilo[version='>=0.0.4']\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Package                               Version  Build                Channel          Size\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Install:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + _libgcc_mutex                           0.1  conda_forge          conda-forge       3kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + _openmp_mutex                           4.5  2_gnu                conda-forge      24kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + ampl-mp                               3.1.0  h2cc385e_1006        conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + asttokens                             2.2.1  pyhd8ed1ab_0         conda-forge      28kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + backcall                              0.2.0  pyh9f0ad1d_0         conda-forge      14kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + backports                               1.0  pyhd8ed1ab_3         conda-forge       6kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + backports.functools_lru_cache         1.6.5  pyhd8ed1ab_0         conda-forge      12kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + bokeh                                 2.4.3  pyhd8ed1ab_3         conda-forge      14MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + boost-cpp                            1.78.0  h6582d0a_3           conda-forge      16MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + brotli-python                         1.0.9  py310hd8f1fbe_9      conda-forge     326kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + bzip2                                 1.0.8  h7f98852_4           conda-forge     496kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + c-ares                               1.19.1  hd590300_0           conda-forge     113kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + ca-certificates                    2023.5.7  hbcca054_0           conda-forge     148kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + certifi                            2023.5.7  pyhd8ed1ab_0         conda-forge     152kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + charset-normalizer                    3.1.0  pyhd8ed1ab_0         conda-forge      45kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + click                                 8.1.3  unix_pyhd8ed1ab_2    conda-forge      76kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + cloudpickle                           2.2.1  pyhd8ed1ab_0         conda-forge      28kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + colorama                              0.4.6  pyhd8ed1ab_0         conda-forge      25kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + comm                                  0.1.3  pyhd8ed1ab_0         conda-forge      11kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + coverage                              7.2.7  py310h2372a71_0      conda-forge     281kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + debugpy                               1.6.7  py310heca2aa9_0      conda-forge       2MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + decorator                             5.1.1  pyhd8ed1ab_0         conda-forge      12kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + entrypoints                             0.4  pyhd8ed1ab_0         conda-forge       9kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + estimagic                             0.4.6  pyhd8ed1ab_0         conda-forge     272kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + exceptiongroup                        1.1.1  pyhd8ed1ab_0         conda-forge      19kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + execnet                               1.9.0  pyhd8ed1ab_0         conda-forge      33kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + executing                             1.2.0  pyhd8ed1ab_0         conda-forge      25kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + freetype                             2.12.1  hca18f0e_1           conda-forge     626kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + greenlet                              2.0.2  py310hc6cd4ac_1      conda-forge     191kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + icu                                    72.1  hcb278e6_0           conda-forge      12MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + idna                                    3.4  pyhd8ed1ab_0         conda-forge      57kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + importlib-metadata                    6.7.0  pyha770c72_0         conda-forge      26kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + importlib_metadata                    6.7.0  hd8ed1ab_0           conda-forge       9kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + iniconfig                             2.0.0  pyhd8ed1ab_0         conda-forge      11kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + ipopt                               3.14.12  hf9e1ecf_0           conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + ipykernel                            6.23.3  pyh71e2992_0         conda-forge     114kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + ipyparallel                           8.6.1  pyhd8ed1ab_0         conda-forge     208kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + ipython                              8.14.0  pyh41d4057_0         conda-forge     583kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + jax                                  0.4.13  pyhd8ed1ab_0         conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + jaxlib                               0.4.12  cpu_py310hc0ddb09_1  conda-forge      46MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + jedi                                 0.18.2  pyhd8ed1ab_0         conda-forge     804kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + jinja2                                3.1.2  pyhd8ed1ab_1         conda-forge     101kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + joblib                                1.3.0  pyhd8ed1ab_1         conda-forge     221kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + jupyter_client                        8.3.0  pyhd8ed1ab_0         conda-forge     104kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + jupyter_core                          5.3.1  py310hff52083_0      conda-forge      92kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + lcms2                                  2.15  haa2dc70_1           conda-forge     242kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + ld_impl_linux-64                       2.40  h41732ed_0           conda-forge     705kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + lerc                                  4.0.0  h27087fc_0           conda-forge     282kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libabseil                        20230125.3  cxx17_h59595ed_0     conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libblas                               3.9.0  17_linux64_openblas  conda-forge      14kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libcblas                              3.9.0  17_linux64_openblas  conda-forge      14kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libdeflate                             1.18  h0b41bf4_0           conda-forge      65kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libedit                        3.1.20191231  he28a2e2_2           conda-forge     124kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libffi                                3.4.2  h7f98852_5           conda-forge      58kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libgcc-ng                            13.1.0  he5830b7_0           conda-forge     776kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libgfortran-ng                       13.1.0  h69a702a_0           conda-forge      23kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libgfortran5                         13.1.0  h15d22d2_0           conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libgomp                              13.1.0  he5830b7_0           conda-forge     419kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libgrpc                              1.54.2  hb20ce57_2           conda-forge       6MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libhwloc                              2.9.1  nocuda_h7313eea_6    conda-forge       3MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libiconv                               1.17  h166bdaf_0           conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libjpeg-turbo                       2.1.5.1  h0b41bf4_0           conda-forge     491kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + liblapack                             3.9.0  17_linux64_openblas  conda-forge      14kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libllvm14                            14.0.6  hcd5def8_3           conda-forge      31MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libnsl                                2.0.0  h7f98852_0           conda-forge      31kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libopenblas                          0.3.23  pthreads_h80387f5_0  conda-forge       5MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libpng                               1.6.39  h753d276_0           conda-forge     283kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libprotobuf                         3.21.12  h3eb15da_0           conda-forge       2MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libsodium                            1.0.18  h36c2ea0_1           conda-forge     375kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libsqlite                            3.42.0  h2797004_0           conda-forge     829kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libstdcxx-ng                         13.1.0  hfd8a6a1_0           conda-forge       4MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libtiff                               4.5.1  h8b53f26_0           conda-forge     418kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libuuid                              2.38.1  h0b41bf4_0           conda-forge      34kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libwebp-base                          1.3.1  hd590300_0           conda-forge     400kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libxcb                                 1.15  h0b41bf4_0           conda-forge     384kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libxml2                              2.11.4  h0d562d8_0           conda-forge     704kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + libzlib                              1.2.13  hd590300_5           conda-forge      62kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + llvmlite                             0.40.1  py310h1b8f574_0      conda-forge       3MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + markupsafe                            2.1.3  py310h2372a71_0      conda-forge      24kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + matplotlib-inline                     0.1.6  pyhd8ed1ab_0         conda-forge      12kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + metis                                 5.1.0  h58526e2_1006        conda-forge       4MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + ml_dtypes                             0.2.0  py310h7cbd5c2_1      conda-forge     691kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + mumps-include                         5.2.1  ha770c72_11          conda-forge      24kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + mumps-seq                             5.2.1  h2104b81_11          conda-forge       3MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + ncurses                                 6.4  hcb278e6_0           conda-forge     881kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + nest-asyncio                          1.5.6  pyhd8ed1ab_0         conda-forge      10kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + networkx                                3.1  pyhd8ed1ab_0         conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + nlopt                                 2.7.1  py310h3342525_3      conda-forge     425kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + numba                                0.57.1  py310h0f6aa51_0      conda-forge       4MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + numpy                                1.24.4  py310ha4c1d20_0      conda-forge       7MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + openjpeg                              2.5.0  hfec8fc6_2           conda-forge     352kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + openssl                               3.1.1  hd590300_1           conda-forge       3MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + opt_einsum                            3.3.0  pyhd8ed1ab_1         conda-forge      54kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + packaging                              23.1  pyhd8ed1ab_0         conda-forge      46kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pagmo                                2.19.0  h848105d_2           conda-forge       5MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pandas                                2.0.3  py310h7cbd5c2_0      conda-forge      12MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + parso                                 0.8.3  pyhd8ed1ab_0         conda-forge      71kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + patsy                                 0.5.3  pyhd8ed1ab_0         conda-forge     194kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pexpect                               4.8.0  pyh1a96a4e_2         conda-forge      49kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pickleshare                           0.7.5  py_1003              conda-forge       9kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pillow                                9.5.0  py310h582fbeb_1      conda-forge      46MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pip                                  23.1.2  pyhd8ed1ab_0         conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + platformdirs                          3.8.0  pyhd8ed1ab_0         conda-forge      19kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + plotly                               5.15.0  pyhd8ed1ab_0         conda-forge       5MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pluggy                                1.2.0  pyhd8ed1ab_0         conda-forge      22kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pooch                                 1.7.0  pyha770c72_3         conda-forge      51kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + prompt-toolkit                       3.0.38  pyha770c72_0         conda-forge     269kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + prompt_toolkit                       3.0.38  hd8ed1ab_0           conda-forge       6kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + psutil                                5.9.5  py310h1fa729e_0      conda-forge     362kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pthread-stubs                           0.4  h36c2ea0_1001        conda-forge       6kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + ptyprocess                            0.7.0  pyhd3deb0d_0         conda-forge      17kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pure_eval                             0.2.2  pyhd8ed1ab_0         conda-forge      15kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pybaum                                0.1.3  pyhd8ed1ab_0         conda-forge      15kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pybind11-abi                              4  hd8ed1ab_3           conda-forge      10kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pygments                             2.15.1  pyhd8ed1ab_0         conda-forge     841kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pygmo                                2.19.5  py310h917f6ee_1      conda-forge     885kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pysocks                               1.7.1  pyha2e5f31_6         conda-forge      19kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pytest                                7.4.0  pyhd8ed1ab_0         conda-forge     244kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pytest-cov                            4.1.0  pyhd8ed1ab_0         conda-forge      25kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pytest-xdist                          3.3.1  pyhd8ed1ab_0         conda-forge      36kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + python                              3.10.12  hd12c33a_0_cpython   conda-forge      26MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + python-dateutil                       2.8.2  pyhd8ed1ab_0         conda-forge     246kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + python-tzdata                        2023.3  pyhd8ed1ab_0         conda-forge     143kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + python_abi                             3.10  3_cp310              conda-forge       6kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pytz                                 2023.3  pyhd8ed1ab_0         conda-forge     187kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pyyaml                                  6.0  py310h5764c6d_5      conda-forge     176kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + pyzmq                                25.1.0  py310h5bbb5d0_0      conda-forge     453kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + re2                              2023.03.02  h8c504da_0           conda-forge     201kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + readline                                8.2  h8228510_1           conda-forge     281kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + requests                             2.31.0  pyhd8ed1ab_0         conda-forge      57kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + scipy                                1.11.1  py310ha4c1d20_0      conda-forge      15MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + scotch                                6.0.9  hb2e6521_2           conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + setuptools                           68.0.0  pyhd8ed1ab_0         conda-forge     464kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + six                                  1.16.0  pyh6c4a22f_0         conda-forge      14kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + sqlalchemy                           2.0.17  py310h2372a71_0      conda-forge       3MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + stack_data                            0.6.2  pyhd8ed1ab_0         conda-forge      26kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + statsmodels                          0.14.0  py310h278f3c1_1      conda-forge      11MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + tbb                                2021.9.0  hf52228f_0           conda-forge       2MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + tenacity                              8.2.2  pyhd8ed1ab_0         conda-forge      22kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + tk                                   8.6.12  h27826a3_0           conda-forge       3MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + toml                                 0.10.2  pyhd8ed1ab_0         conda-forge      18kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + tomli                                 2.0.1  pyhd8ed1ab_0         conda-forge      16kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + tornado                               6.3.2  py310h2372a71_0      conda-forge     639kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + tqdm                                 4.65.0  pyhd8ed1ab_1         conda-forge      88kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + traitlets                             5.9.0  pyhd8ed1ab_0         conda-forge      98kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + tranquilo                             0.0.4  pyhd8ed1ab_0         conda-forge      71kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + typing-extensions                     4.7.0  hd8ed1ab_0           conda-forge      10kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + typing_extensions                     4.7.0  pyha770c72_0         conda-forge      36kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + tzdata                                2023c  h71feb2d_0           conda-forge     118kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + unixodbc                             2.3.10  h583eb01_0           conda-forge     303kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + urllib3                               2.0.3  pyhd8ed1ab_1         conda-forge      98kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + wcwidth                               0.2.6  pyhd8ed1ab_0         conda-forge      29kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + wheel                                0.40.0  pyhd8ed1ab_0         conda-forge      56kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + xorg-libxau                          1.0.11  hd590300_0           conda-forge      14kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + xorg-libxdmcp                         1.1.3  h7f98852_0           conda-forge      19kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + xz                                    5.2.6  h166bdaf_0           conda-forge     418kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + yaml                                  0.2.5  h7f98852_2           conda-forge      89kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + zeromq                                4.3.4  h9c3ff4c_1           conda-forge     360kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + zipp                                 3.15.0  pyhd8ed1ab_0         conda-forge      17kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + zlib                                 1.2.13  hd590300_5           conda-forge      93kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   + zstd                                  1.5.2  h3eb15da_6           conda-forge     420kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Summary:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Install: 161 packages\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Total download: 326MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Transaction starting\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udc33  docker cp src=/tmp/act-cache/ab83c715-7927-49da-adb8-802442097f95/act/mamba-org-provision-with-micromamba@main/ dst=/var/run/act/actions/mamba-org-provision-with-micromamba@main/\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/mamba-org-provision-with-micromamba@main/] user=0 workdir=\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/mamba-org-provision-with-micromamba@main/dist/main/index.js] user= workdir=\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udea7  ::warning::This action is deprecated and no longer maintained. Please use mamba-org/setup-micromamba instead. See `https://github.com/mamba-org/provision-with-micromamba#migration-to-setup-micromamba` for a migration guide.\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Contents of /home/runneradmin/.condarc%0Achannel_priority: strict%0Achannels:%0A  - conda-forge%0A  - nodefaults%0A\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2753  ::group::Install micromamba ...\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Resolved Keys:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::[\"micromamba-bin https://micro.mamba.pm/api/micromamba/linux-64/latest Sat Jul 01 2023 YYY\"]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Checking zstd --version\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:37437/_apis/artifactcache/cache?keys=micromamba-bin%2520https%253A%252F%252Fmicro.mamba.pm%252Fapi%252Fmicromamba%252Flinux-64%252Flatest%2520Sat%2520Jul%252001%25202023%2520YYY&version=40cd471e258f8d42c1b6f93422de32dc9780571a713394832b85a5dd2c8cc2a6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Cache miss for key 'micromamba-bin https://micro.mamba.pm/api/micromamba/linux-64/latest Sat Jul 01 2023 YYY'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Running shell command [\"bash\",[\"-eo\",\"pipefail\",\"-c\",\"curl https://micro.mamba.pm/api/micromamba/linux-64/latest -Ls --retry 5 --retry-delay 1 | tar -xj -O bin/micromamba > /home/runneradmin/micromamba-bin/micromamba\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | [command]/usr/bin/bash -eo pipefail -c curl https://micro.mamba.pm/api/micromamba/linux-64/latest -Ls --retry 5 --retry-delay 1 | tar -xj -O bin/micromamba > /home/runneradmin/micromamba-bin/micromamba\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Will save to cache with key micromamba-bin https://micro.mamba.pm/api/micromamba/linux-64/latest Sat Jul 01 2023 YYY\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Running shell command [\"/home/runneradmin/micromamba-bin/micromamba\",[\"shell\",\"init\",\"-s\",\"zsh\",\"-p\",\"/home/runneradmin/micromamba-root\",\"-y\",\"--log-level\",\"warning\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | [command]/home/runneradmin/micromamba-bin/micromamba shell init -s zsh -p /home/runneradmin/micromamba-root -y --log-level warning\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Modifying RC file \"/home/runneradmin/.zshrc\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Generating config for root prefix \u001b[1m\"/home/runneradmin/micromamba-root\"\u001b[0m\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Setting mamba executable to: \u001b[1m\"/home/runneradmin/micromamba-bin/micromamba\"\u001b[0m\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Adding (or replacing) the following in your \"/home/runneradmin/.zshrc\" file\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | # >>> mamba initialize >>>\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | # !! Contents within this block are managed by 'mamba init' !!\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | export MAMBA_EXE=\"/home/runneradmin/micromamba-bin/micromamba\";\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | export MAMBA_ROOT_PREFIX=\"/home/runneradmin/micromamba-root\";\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | __mamba_setup=\"$(\"$MAMBA_EXE\" shell hook --shell zsh --root-prefix \"$MAMBA_ROOT_PREFIX\" 2> /dev/null)\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | if [ $? -eq 0 ]; then\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     eval \"$__mamba_setup\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | else\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     if [ -f \"/home/runneradmin/micromamba-root/etc/profile.d/micromamba.sh\" ]; then\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         . \"/home/runneradmin/micromamba-root/etc/profile.d/micromamba.sh\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     else\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         export  PATH=\"/home/runneradmin/micromamba-root/bin:$PATH\"  # extra space after export prevents interference from conda init\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     fi\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | fi\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | unset __mamba_setup\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | # <<< mamba initialize <<<\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Running shell command [\"/home/runneradmin/micromamba-bin/micromamba\",[\"shell\",\"init\",\"-s\",\"bash\",\"-p\",\"/home/runneradmin/micromamba-root\",\"-y\",\"--log-level\",\"warning\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | [command]/home/runneradmin/micromamba-bin/micromamba shell init -s bash -p /home/runneradmin/micromamba-root -y --log-level warning\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Modifying RC file \"/tmp/micromamba-qZeq6y/.bashrc\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Generating config for root prefix \u001b[1m\"/home/runneradmin/micromamba-root\"\u001b[0m\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Setting mamba executable to: \u001b[1m\"/home/runneradmin/micromamba-bin/micromamba\"\u001b[0m\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Adding (or replacing) the following in your \"/tmp/micromamba-qZeq6y/.bashrc\" file\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | # >>> mamba initialize >>>\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | # !! Contents within this block are managed by 'mamba init' !!\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | export MAMBA_EXE=\"/home/runneradmin/micromamba-bin/micromamba\";\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | export MAMBA_ROOT_PREFIX=\"/home/runneradmin/micromamba-root\";\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | __mamba_setup=\"$(\"$MAMBA_EXE\" shell hook --shell bash --root-prefix \"$MAMBA_ROOT_PREFIX\" 2> /dev/null)\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | if [ $? -eq 0 ]; then\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     eval \"$__mamba_setup\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | else\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     if [ -f \"/home/runneradmin/micromamba-root/etc/profile.d/micromamba.sh\" ]; then\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         . \"/home/runneradmin/micromamba-root/etc/profile.d/micromamba.sh\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     else\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         export  PATH=\"/home/runneradmin/micromamba-root/bin:$PATH\"  # extra space after export prevents interference from conda init\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     fi\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | fi\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | unset __mamba_setup\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | # <<< mamba initialize <<<\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2753  ::endgroup::\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2753  ::group::Install environment estimagic from /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/testenv-linux.yml python=3.9...\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Resolved Keys:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::[\"micromamba-env linux-64 Sat Jul 01 2023 file: 539faf43 extra: 321072b1\"]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Checking zstd --version\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:37437/_apis/artifactcache/cache?keys=micromamba-env%2520linux-64%2520Sat%2520Jul%252001%25202023%2520file%253A%2520539faf43%2520extra%253A%2520321072b1&version=78933710b7028ea982d2bced244d92a8c567b9caa94b54a1e7cc57707e357eb4\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Cache miss for key 'micromamba-env linux-64 Sat Jul 01 2023 file: 539faf43 extra: 321072b1'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | create env estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Running shell command [\"/home/runneradmin/micromamba-bin/micromamba create -n estimagic -y --log-level warning \\\"python=3.9\\\" -f /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/testenv-linux.yml\"]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | [command]/home/runneradmin/micromamba-bin/micromamba create -n estimagic -y --log-level warning python=3.9 -f /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/testenv-linux.yml\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking _libgcc_mutex-0.1-conda_forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking python_abi-3.10-3_cp310\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libgfortran5-13.1.0-h15d22d2_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libstdcxx-ng-13.1.0-hfd8a6a1_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking ld_impl_linux-64-2.40-h41732ed_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking ca-certificates-2023.5.7-hbcca054_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking mumps-include-5.2.1-ha770c72_11\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libgomp-13.1.0-he5830b7_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libgfortran-ng-13.1.0-h69a702a_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking _openmp_mutex-4.5-2_gnu\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libgcc-ng-13.1.0-he5830b7_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libsodium-1.0.18-h36c2ea0_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking metis-5.1.0-h58526e2_1006\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking xorg-libxdmcp-1.1.3-h7f98852_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pthread-stubs-0.4-h36c2ea0_1001\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking c-ares-1.19.1-hd590300_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libiconv-1.17-h166bdaf_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking yaml-0.2.5-h7f98852_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking re2-2023.03.02-h8c504da_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libabseil-20230125.3-cxx17_h59595ed_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libopenblas-0.3.23-pthreads_h80387f5_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking xorg-libxau-1.0.11-hd590300_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libwebp-base-1.3.1-hd590300_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libdeflate-1.18-h0b41bf4_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking lerc-4.0.0-h27087fc_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking icu-72.1-hcb278e6_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking openssl-3.1.1-hd590300_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libzlib-1.2.13-hd590300_5\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libffi-3.4.2-h7f98852_5\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking bzip2-1.0.8-h7f98852_4\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libjpeg-turbo-2.1.5.1-h0b41bf4_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking ncurses-6.4-hcb278e6_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libuuid-2.38.1-h0b41bf4_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking xz-5.2.6-h166bdaf_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libnsl-2.0.0-h7f98852_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking zeromq-4.3.4-h9c3ff4c_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libblas-3.9.0-17_linux64_openblas\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libxcb-1.15-h0b41bf4_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libprotobuf-3.21.12-h3eb15da_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking zlib-1.2.13-hd590300_5\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking zstd-1.5.2-h3eb15da_6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libllvm14-14.0.6-hcd5def8_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libpng-1.6.39-h753d276_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libsqlite-3.42.0-h2797004_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking tk-8.6.12-h27826a3_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libedit-3.1.20191231-he28a2e2_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking readline-8.2-h8228510_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libxml2-2.11.4-h0d562d8_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libcblas-3.9.0-17_linux64_openblas\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking liblapack-3.9.0-17_linux64_openblas\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking scotch-6.0.9-hb2e6521_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libgrpc-1.54.2-hb20ce57_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libtiff-4.5.1-h8b53f26_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking boost-cpp-1.78.0-h6582d0a_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking freetype-2.12.1-hca18f0e_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking unixodbc-2.3.10-h583eb01_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking libhwloc-2.9.1-nocuda_h7313eea_6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking mumps-seq-5.2.1-h2104b81_11\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking openjpeg-2.5.0-hfec8fc6_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking lcms2-2.15-haa2dc70_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking ampl-mp-3.1.0-h2cc385e_1006\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking tbb-2021.9.0-hf52228f_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking ipopt-3.14.12-hf9e1ecf_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking tzdata-2023c-h71feb2d_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pybind11-abi-4-hd8ed1ab_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking python-3.10.12-hd12c33a_0_cpython\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking wheel-0.40.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking setuptools-68.0.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pip-23.1.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking ptyprocess-0.7.0-pyhd3deb0d_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking backports-1.0-pyhd8ed1ab_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking parso-0.8.3-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pure_eval-0.2.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking executing-1.2.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pysocks-1.7.1-pyha2e5f31_6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pygments-2.15.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking backcall-0.2.0-pyh9f0ad1d_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking charset-normalizer-3.1.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking idna-3.4-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking certifi-2023.5.7-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking six-1.16.0-pyh6c4a22f_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking nest-asyncio-1.5.6-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking traitlets-5.9.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pickleshare-0.7.5-py_1003\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking entrypoints-0.4-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking decorator-5.1.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pytz-2023.3-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking python-tzdata-2023.3-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking networkx-3.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking typing_extensions-4.7.0-pyha770c72_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking zipp-3.15.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking tenacity-8.2.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking tomli-2.0.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking iniconfig-2.0.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking exceptiongroup-1.1.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pluggy-1.2.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking packaging-23.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking colorama-0.4.6-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking toml-0.10.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking execnet-1.9.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pybaum-0.1.3-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking joblib-1.3.0-pyhd8ed1ab_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking cloudpickle-2.2.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking click-8.1.3-unix_pyhd8ed1ab_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pexpect-4.8.0-pyh1a96a4e_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking backports.functools_lru_cache-1.6.5-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking jedi-0.18.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking asttokens-2.2.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking python-dateutil-2.8.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking comm-0.1.3-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking matplotlib-inline-0.1.6-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking typing-extensions-4.7.0-hd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking importlib-metadata-6.7.0-pyha770c72_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking plotly-5.15.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking tqdm-4.65.0-pyhd8ed1ab_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pytest-7.4.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking wcwidth-0.2.6-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking stack_data-0.6.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking platformdirs-3.8.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking importlib_metadata-6.7.0-hd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pytest-xdist-3.3.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking prompt-toolkit-3.0.38-pyha770c72_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking prompt_toolkit-3.0.38-hd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking ipython-8.14.0-pyh41d4057_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking brotli-python-1.0.9-py310hd8f1fbe_9\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking markupsafe-2.1.3-py310h2372a71_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking debugpy-1.6.7-py310heca2aa9_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pyzmq-25.1.0-py310h5bbb5d0_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking psutil-5.9.5-py310h1fa729e_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking llvmlite-0.40.1-py310h1b8f574_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking greenlet-2.0.2-py310hc6cd4ac_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking tornado-6.3.2-py310h2372a71_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pyyaml-6.0-py310h5764c6d_5\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pillow-9.5.0-py310h582fbeb_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking numpy-1.24.4-py310ha4c1d20_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking coverage-7.2.7-py310h2372a71_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking jupyter_core-5.3.1-py310hff52083_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking sqlalchemy-2.0.17-py310h2372a71_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking ml_dtypes-0.2.0-py310h7cbd5c2_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking numba-0.57.1-py310h0f6aa51_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pandas-2.0.3-py310h7cbd5c2_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking nlopt-2.7.1-py310h3342525_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pagmo-2.19.0-h848105d_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking urllib3-2.0.3-pyhd8ed1ab_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking jinja2-3.1.2-pyhd8ed1ab_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking opt_einsum-3.3.0-pyhd8ed1ab_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pytest-cov-4.1.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking jupyter_client-8.3.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking requests-2.31.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking bokeh-2.4.3-pyhd8ed1ab_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking ipykernel-6.23.3-pyh71e2992_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pooch-1.7.0-pyha770c72_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking ipyparallel-8.6.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking scipy-1.11.1-py310ha4c1d20_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking jaxlib-0.4.12-cpu_py310hc0ddb09_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking pygmo-2.19.5-py310h917f6ee_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking patsy-0.5.3-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking estimagic-0.4.6-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking jax-0.4.13-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking tranquilo-0.0.4-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Linking statsmodels-0.14.0-py310h278f3c1_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Transaction\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Prefix: /home/runneradmin/micromamba-root/envs/estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Updating specs:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - python=3.9\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - jax\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - pygmo\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - nlopt\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - pip\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - pytest\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - pytest-cov\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - pytest-xdist\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - statsmodels\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - bokeh[version='<=2.4.3']\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - click\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - cloudpickle\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - joblib\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - numpy[version='>=1.17.0']\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - pandas\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - plotly\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - pybaum[version='>=',build=0.1.2]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - scipy[version='>=1.2.1']\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - sqlalchemy\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |    - tranquilo[version='>=0.0.4']\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Package                               Version  Build                Channel          Size\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Install:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + _libgcc_mutex                           0.1  conda_forge          conda-forge       3kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + _openmp_mutex                           4.5  2_gnu                conda-forge      24kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + ampl-mp                               3.1.0  h2cc385e_1006        conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + asttokens                             2.2.1  pyhd8ed1ab_0         conda-forge      28kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + backcall                              0.2.0  pyh9f0ad1d_0         conda-forge      14kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + backports                               1.0  pyhd8ed1ab_3         conda-forge       6kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + backports.functools_lru_cache         1.6.5  pyhd8ed1ab_0         conda-forge      12kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + bokeh                                 2.4.3  pyhd8ed1ab_3         conda-forge      14MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + boost-cpp                            1.78.0  h6582d0a_3           conda-forge      16MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + brotli-python                         1.0.9  py39h5a03fae_9       conda-forge     327kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + bzip2                                 1.0.8  h7f98852_4           conda-forge     496kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + c-ares                               1.19.1  hd590300_0           conda-forge     113kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + ca-certificates                    2023.5.7  hbcca054_0           conda-forge     148kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + certifi                            2023.5.7  pyhd8ed1ab_0         conda-forge     152kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + charset-normalizer                    3.1.0  pyhd8ed1ab_0         conda-forge      45kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + click                                 8.1.3  unix_pyhd8ed1ab_2    conda-forge      76kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + cloudpickle                           2.2.1  pyhd8ed1ab_0         conda-forge      28kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + colorama                              0.4.6  pyhd8ed1ab_0         conda-forge      25kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + comm                                  0.1.3  pyhd8ed1ab_0         conda-forge      11kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + coverage                              7.2.7  py39hd1e30aa_0       conda-forge     279kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + debugpy                               1.6.7  py39h227be39_0       conda-forge       2MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + decorator                             5.1.1  pyhd8ed1ab_0         conda-forge      12kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + entrypoints                             0.4  pyhd8ed1ab_0         conda-forge       9kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + estimagic                             0.4.6  pyhd8ed1ab_0         conda-forge     272kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + exceptiongroup                        1.1.1  pyhd8ed1ab_0         conda-forge      19kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + execnet                               1.9.0  pyhd8ed1ab_0         conda-forge      33kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + executing                             1.2.0  pyhd8ed1ab_0         conda-forge      25kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + freetype                             2.12.1  hca18f0e_1           conda-forge     626kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + greenlet                              2.0.2  py39h3d6467e_1       conda-forge     190kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + icu                                    72.1  hcb278e6_0           conda-forge      12MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + idna                                    3.4  pyhd8ed1ab_0         conda-forge      57kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + importlib-metadata                    6.7.0  pyha770c72_0         conda-forge      26kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + importlib_metadata                    6.7.0  hd8ed1ab_0           conda-forge       9kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + iniconfig                             2.0.0  pyhd8ed1ab_0         conda-forge      11kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + ipopt                               3.14.12  hf9e1ecf_0           conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + ipykernel                            6.23.3  pyh71e2992_0         conda-forge     114kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + ipyparallel                           8.6.1  pyhd8ed1ab_0         conda-forge     208kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + ipython                              8.14.0  pyh41d4057_0         conda-forge     583kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + jax                                  0.4.13  pyhd8ed1ab_0         conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + jaxlib                               0.4.12  cpu_py39h4646849_1   conda-forge      46MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + jedi                                 0.18.2  pyhd8ed1ab_0         conda-forge     804kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + jinja2                                3.1.2  pyhd8ed1ab_1         conda-forge     101kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + joblib                                1.3.0  pyhd8ed1ab_1         conda-forge     221kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + jupyter_client                        8.3.0  pyhd8ed1ab_0         conda-forge     104kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + jupyter_core                          5.3.1  py39hf3d152e_0       conda-forge      92kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + lcms2                                  2.15  haa2dc70_1           conda-forge     242kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + ld_impl_linux-64                       2.40  h41732ed_0           conda-forge     705kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + lerc                                  4.0.0  h27087fc_0           conda-forge     282kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libabseil                        20230125.3  cxx17_h59595ed_0     conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libblas                               3.9.0  17_linux64_openblas  conda-forge      14kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libcblas                              3.9.0  17_linux64_openblas  conda-forge      14kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libdeflate                             1.18  h0b41bf4_0           conda-forge      65kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libedit                        3.1.20191231  he28a2e2_2           conda-forge     124kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libffi                                3.4.2  h7f98852_5           conda-forge      58kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libgcc-ng                            13.1.0  he5830b7_0           conda-forge     776kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libgfortran-ng                       13.1.0  h69a702a_0           conda-forge      23kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libgfortran5                         13.1.0  h15d22d2_0           conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libgomp                              13.1.0  he5830b7_0           conda-forge     419kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libgrpc                              1.54.2  hb20ce57_2           conda-forge       6MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libhwloc                              2.9.1  nocuda_h7313eea_6    conda-forge       3MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libiconv                               1.17  h166bdaf_0           conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libjpeg-turbo                       2.1.5.1  h0b41bf4_0           conda-forge     491kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + liblapack                             3.9.0  17_linux64_openblas  conda-forge      14kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libllvm14                            14.0.6  hcd5def8_3           conda-forge      31MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libnsl                                2.0.0  h7f98852_0           conda-forge      31kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libopenblas                          0.3.23  pthreads_h80387f5_0  conda-forge       5MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libpng                               1.6.39  h753d276_0           conda-forge     283kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libprotobuf                         3.21.12  h3eb15da_0           conda-forge       2MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libsodium                            1.0.18  h36c2ea0_1           conda-forge     375kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libsqlite                            3.42.0  h2797004_0           conda-forge     829kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libstdcxx-ng                         13.1.0  hfd8a6a1_0           conda-forge       4MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libtiff                               4.5.1  h8b53f26_0           conda-forge     418kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libuuid                              2.38.1  h0b41bf4_0           conda-forge      34kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libwebp-base                          1.3.1  hd590300_0           conda-forge     400kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libxcb                                 1.15  h0b41bf4_0           conda-forge     384kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libxml2                              2.11.4  h0d562d8_0           conda-forge     704kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + libzlib                              1.2.13  hd590300_5           conda-forge      62kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + llvmlite                             0.40.1  py39h174d805_0       conda-forge       3MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + markupsafe                            2.1.3  py39hd1e30aa_0       conda-forge      24kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + matplotlib-inline                     0.1.6  pyhd8ed1ab_0         conda-forge      12kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + metis                                 5.1.0  h58526e2_1006        conda-forge       4MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + ml_dtypes                             0.2.0  py39h40cae4c_1       conda-forge     691kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + mumps-include                         5.2.1  ha770c72_11          conda-forge      24kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + mumps-seq                             5.2.1  h2104b81_11          conda-forge       3MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + ncurses                                 6.4  hcb278e6_0           conda-forge     881kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + nest-asyncio                          1.5.6  pyhd8ed1ab_0         conda-forge      10kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + networkx                                3.1  pyhd8ed1ab_0         conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + nlopt                                 2.7.1  py39h863de18_3       conda-forge     427kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + numba                                0.57.1  py39hb75a051_0       conda-forge       4MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + numpy                                1.24.4  py39h6183b62_0       conda-forge       7MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + openjpeg                              2.5.0  hfec8fc6_2           conda-forge     352kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + openssl                               3.1.1  hd590300_1           conda-forge       3MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + opt_einsum                            3.3.0  pyhd8ed1ab_1         conda-forge      54kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + packaging                              23.1  pyhd8ed1ab_0         conda-forge      46kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pagmo                                2.19.0  h848105d_2           conda-forge       5MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pandas                                2.0.3  py39h40cae4c_0       conda-forge      12MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + parso                                 0.8.3  pyhd8ed1ab_0         conda-forge      71kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + patsy                                 0.5.3  pyhd8ed1ab_0         conda-forge     194kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pexpect                               4.8.0  pyh1a96a4e_2         conda-forge      49kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pickleshare                           0.7.5  py_1003              conda-forge       9kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pillow                                9.5.0  py39haaeba84_1       conda-forge      46MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pip                                  23.1.2  pyhd8ed1ab_0         conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + platformdirs                          3.8.0  pyhd8ed1ab_0         conda-forge      19kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + plotly                               5.15.0  pyhd8ed1ab_0         conda-forge       5MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pluggy                                1.2.0  pyhd8ed1ab_0         conda-forge      22kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pooch                                 1.7.0  pyha770c72_3         conda-forge      51kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + prompt-toolkit                       3.0.38  pyha770c72_0         conda-forge     269kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + prompt_toolkit                       3.0.38  hd8ed1ab_0           conda-forge       6kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + psutil                                5.9.5  py39h72bdee0_0       conda-forge     359kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pthread-stubs                           0.4  h36c2ea0_1001        conda-forge       6kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + ptyprocess                            0.7.0  pyhd3deb0d_0         conda-forge      17kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pure_eval                             0.2.2  pyhd8ed1ab_0         conda-forge      15kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pybaum                                0.1.3  pyhd8ed1ab_0         conda-forge      15kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pybind11-abi                              4  hd8ed1ab_3           conda-forge      10kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pygments                             2.15.1  pyhd8ed1ab_0         conda-forge     841kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pygmo                                2.19.5  py39hca2169e_1       conda-forge     883kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pysocks                               1.7.1  pyha2e5f31_6         conda-forge      19kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pytest                                7.4.0  pyhd8ed1ab_0         conda-forge     244kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pytest-cov                            4.1.0  pyhd8ed1ab_0         conda-forge      25kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pytest-xdist                          3.3.1  pyhd8ed1ab_0         conda-forge      36kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + python                               3.9.16  h2782a2a_0_cpython   conda-forge      24MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + python-dateutil                       2.8.2  pyhd8ed1ab_0         conda-forge     246kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + python-tzdata                        2023.3  pyhd8ed1ab_0         conda-forge     143kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + python_abi                              3.9  3_cp39               conda-forge       6kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pytz                                 2023.3  pyhd8ed1ab_0         conda-forge     187kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pyyaml                                  6.0  py39hb9d737c_5       conda-forge     184kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + pyzmq                                25.1.0  py39hb257651_0       conda-forge     450kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + re2                              2023.03.02  h8c504da_0           conda-forge     201kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + readline                                8.2  h8228510_1           conda-forge     281kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + requests                             2.31.0  pyhd8ed1ab_0         conda-forge      57kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + scipy                                1.11.1  py39h6183b62_0       conda-forge      15MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + scotch                                6.0.9  hb2e6521_2           conda-forge       1MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + setuptools                           68.0.0  pyhd8ed1ab_0         conda-forge     464kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + six                                  1.16.0  pyh6c4a22f_0         conda-forge      14kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + sqlalchemy                           2.0.17  py39hd1e30aa_0       conda-forge       3MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + stack_data                            0.6.2  pyhd8ed1ab_0         conda-forge      26kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + statsmodels                          0.14.0  py39h0f8d45d_1       conda-forge      11MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + tbb                                2021.9.0  hf52228f_0           conda-forge       2MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + tenacity                              8.2.2  pyhd8ed1ab_0         conda-forge      22kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + tk                                   8.6.12  h27826a3_0           conda-forge       3MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + toml                                 0.10.2  pyhd8ed1ab_0         conda-forge      18kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + tomli                                 2.0.1  pyhd8ed1ab_0         conda-forge      16kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + tornado                               6.3.2  py39hd1e30aa_0       conda-forge     629kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + tqdm                                 4.65.0  pyhd8ed1ab_1         conda-forge      88kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + traitlets                             5.9.0  pyhd8ed1ab_0         conda-forge      98kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + tranquilo                             0.0.4  pyhd8ed1ab_0         conda-forge      71kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + typing-extensions                     4.7.0  hd8ed1ab_0           conda-forge      10kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + typing_extensions                     4.7.0  pyha770c72_0         conda-forge      36kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + tzdata                                2023c  h71feb2d_0           conda-forge     118kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + unixodbc                             2.3.10  h583eb01_0           conda-forge     303kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + urllib3                               2.0.3  pyhd8ed1ab_1         conda-forge      98kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + wcwidth                               0.2.6  pyhd8ed1ab_0         conda-forge      29kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + wheel                                0.40.0  pyhd8ed1ab_0         conda-forge      56kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + xorg-libxau                          1.0.11  hd590300_0           conda-forge      14kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + xorg-libxdmcp                         1.1.3  h7f98852_0           conda-forge      19kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + xz                                    5.2.6  h166bdaf_0           conda-forge     418kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + yaml                                  0.2.5  h7f98852_2           conda-forge      89kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + zeromq                                4.3.4  h9c3ff4c_1           conda-forge     360kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + zipp                                 3.15.0  pyhd8ed1ab_0         conda-forge      17kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + zlib                                 1.2.13  hd590300_5           conda-forge      93kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   + zstd                                  1.5.2  h3eb15da_6           conda-forge     420kB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Summary:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Install: 161 packages\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Total download: 324MB\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Transaction starting\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Transaction finished\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | To activate this environment, use:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     micromamba activate estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Or to execute a single command in this environment, use:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     micromamba run -n estimagic mycommand\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Installing pip packages: DFO-LS, Py-BOBYQA, fides==0.7.4, kaleido, simoptlib==1.0.1, -e ../\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic (from -r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Installing build dependencies: started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking _libgcc_mutex-0.1-conda_forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking python_abi-3.9-3_cp39\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libgfortran5-13.1.0-h15d22d2_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libstdcxx-ng-13.1.0-hfd8a6a1_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking ld_impl_linux-64-2.40-h41732ed_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking ca-certificates-2023.5.7-hbcca054_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking mumps-include-5.2.1-ha770c72_11\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libgomp-13.1.0-he5830b7_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libgfortran-ng-13.1.0-h69a702a_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking _openmp_mutex-4.5-2_gnu\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libgcc-ng-13.1.0-he5830b7_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libsodium-1.0.18-h36c2ea0_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking metis-5.1.0-h58526e2_1006\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking xorg-libxdmcp-1.1.3-h7f98852_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pthread-stubs-0.4-h36c2ea0_1001\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking c-ares-1.19.1-hd590300_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libiconv-1.17-h166bdaf_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking yaml-0.2.5-h7f98852_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking re2-2023.03.02-h8c504da_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libabseil-20230125.3-cxx17_h59595ed_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libopenblas-0.3.23-pthreads_h80387f5_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking xorg-libxau-1.0.11-hd590300_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libwebp-base-1.3.1-hd590300_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libdeflate-1.18-h0b41bf4_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking lerc-4.0.0-h27087fc_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking icu-72.1-hcb278e6_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking openssl-3.1.1-hd590300_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking ncurses-6.4-hcb278e6_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Installing build dependencies: finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Checking if build backend supports build_editable: started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Checking if build backend supports build_editable: finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Getting requirements to build editable: started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libzlib-1.2.13-hd590300_5\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libuuid-2.38.1-h0b41bf4_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libffi-3.4.2-h7f98852_5\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking bzip2-1.0.8-h7f98852_4\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libjpeg-turbo-2.1.5.1-h0b41bf4_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking xz-5.2.6-h166bdaf_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Getting requirements to build editable: finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Preparing editable metadata (pyproject.toml): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libnsl-2.0.0-h7f98852_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking zeromq-4.3.4-h9c3ff4c_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libblas-3.9.0-17_linux64_openblas\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libxcb-1.15-h0b41bf4_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libedit-3.1.20191231-he28a2e2_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking readline-8.2-h8228510_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libprotobuf-3.21.12-h3eb15da_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking zlib-1.2.13-hd590300_5\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking zstd-1.5.2-h3eb15da_6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libllvm14-14.0.6-hcd5def8_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libsqlite-3.42.0-h2797004_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libpng-1.6.39-h753d276_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking tk-8.6.12-h27826a3_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libxml2-2.11.4-h0d562d8_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libcblas-3.9.0-17_linux64_openblas\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking liblapack-3.9.0-17_linux64_openblas\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking unixodbc-2.3.10-h583eb01_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking scotch-6.0.9-hb2e6521_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libgrpc-1.54.2-hb20ce57_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libtiff-4.5.1-h8b53f26_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking boost-cpp-1.78.0-h6582d0a_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting DFO-LS (from -r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 1))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading DFO-LS-1.3.0.tar.gz (41 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.9/41.9 kB 648.5 kB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Preparing metadata (setup.py): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Preparing metadata (setup.py): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting Py-BOBYQA (from -r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 2))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading Py-BOBYQA-1.4.tar.gz (38 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Preparing metadata (setup.py): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Preparing metadata (setup.py): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting fides==0.7.4 (from -r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 3))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading fides-0.7.4.tar.gz (24 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Preparing metadata (setup.py): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Preparing metadata (setup.py): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting kaleido (from -r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 4))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading kaleido-0.2.1-py2.py3-none-manylinux1_x86_64.whl (79.9 MB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking freetype-2.12.1-hca18f0e_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking libhwloc-2.9.1-nocuda_h7313eea_6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking ampl-mp-3.1.0-h2cc385e_1006\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking mumps-seq-5.2.1-h2104b81_11\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking openjpeg-2.5.0-hfec8fc6_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking lcms2-2.15-haa2dc70_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking tbb-2021.9.0-hf52228f_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking ipopt-3.14.12-hf9e1ecf_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking tzdata-2023c-h71feb2d_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pybind11-abi-4-hd8ed1ab_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking python-3.9.16-h2782a2a_0_cpython\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 79.9/79.9 MB 13.4 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking wheel-0.40.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting simoptlib==1.0.1 (from -r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading simoptlib-1.0.1-py3-none-any.whl (161 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking setuptools-68.0.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 161.0/161.0 kB 7.9 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: numpy>=1.19.2 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from fides==0.7.4->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 3)) (1.24.4)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: scipy>=1.5.2 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from fides==0.7.4->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 3)) (1.11.1)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pip-23.1.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking ptyprocess-0.7.0-pyhd3deb0d_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking backports-1.0-pyhd8ed1ab_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking parso-0.8.3-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pure_eval-0.2.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking executing-1.2.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pysocks-1.7.1-pyha2e5f31_6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pygments-2.15.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting h5py>=3.5.0 (from fides==0.7.4->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 3))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading h5py-3.9.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.8 MB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking backcall-0.2.0-pyh9f0ad1d_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pickleshare-0.7.5-py_1003\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking charset-normalizer-3.1.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking idna-3.4-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking certifi-2023.5.7-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking six-1.16.0-pyh6c4a22f_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking nest-asyncio-1.5.6-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking traitlets-5.9.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking entrypoints-0.4-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking decorator-5.1.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pytz-2023.3-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking python-tzdata-2023.3-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.8/4.8 MB 19.5 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking networkx-3.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking typing_extensions-4.7.0-pyha770c72_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking zipp-3.15.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking tenacity-8.2.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking tomli-2.0.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking iniconfig-2.0.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking exceptiongroup-1.1.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pluggy-1.2.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking packaging-23.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking colorama-0.4.6-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking toml-0.10.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking execnet-1.9.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pybaum-0.1.3-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking joblib-1.3.0-pyhd8ed1ab_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking cloudpickle-2.2.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking click-8.1.3-unix_pyhd8ed1ab_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pexpect-4.8.0-pyh1a96a4e_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking backports.functools_lru_cache-1.6.5-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking jedi-0.18.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting matplotlib>=3.2.2 (from simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading matplotlib-3.7.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.6 MB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking asttokens-2.2.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking python-dateutil-2.8.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking comm-0.1.3-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking matplotlib-inline-0.1.6-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking typing-extensions-4.7.0-hd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking importlib-metadata-6.7.0-pyha770c72_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking plotly-5.15.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.6/11.6 MB 28.6 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: pandas>=1.3.5 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5)) (2.0.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting seaborn>=0.11.2 (from simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading seaborn-0.12.2-py3-none-any.whl (293 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 293.3/293.3 kB 16.2 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting mrg32k3a>=1.0.0 (from simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading mrg32k3a-1.0.0-py3-none-any.whl (11 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: bokeh<=2.4.3 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (2.4.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: click in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (8.1.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: cloudpickle in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (2.2.1)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: joblib in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (1.3.0)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: plotly in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (5.15.0)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: pybaum>=0.1.2 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (0.1.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: sqlalchemy>=1.3 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (2.0.17)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: Jinja2>=2.9 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (3.1.2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: packaging>=16.8 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (23.1)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: pillow>=7.1.0 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (9.5.0)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: PyYAML>=3.10 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (6.0)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: tornado>=5.1 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (6.3.2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: typing-extensions>=3.10.0 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (4.7.0)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting contourpy>=1.0.1 (from matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading contourpy-1.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (300 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 300.7/300.7 kB 2.2 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting cycler>=0.10 (from matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading cycler-0.11.0-py3-none-any.whl (6.4 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting fonttools>=4.22.0 (from matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading fonttools-4.40.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.2 MB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.2/4.2 MB 24.3 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting kiwisolver>=1.0.1 (from matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading kiwisolver-1.4.4-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.6/1.6 MB 23.9 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Collecting pyparsing>=2.3.1 (from matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 102.6/102.6 kB 5.0 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: python-dateutil>=2.7 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5)) (2.8.2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: pytz>=2020.1 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from pandas>=1.3.5->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5)) (2023.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: tzdata>=2022.1 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from pandas>=1.3.5->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5)) (2023.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: greenlet!=0.4.17 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from sqlalchemy>=1.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (2.0.2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: tenacity>=6.2.0 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from plotly->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (8.2.2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: MarkupSafe>=2.0 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from Jinja2>=2.9->bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 6)) (2.1.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Requirement already satisfied: six>=1.5 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.10/site-packages (from python-dateutil>=2.7->matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambafA1jSrJILMq (line 5)) (1.16.0)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Building wheels for collected packages: fides, DFO-LS, Py-BOBYQA, estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Building wheel for fides (setup.py): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Building wheel for fides (setup.py): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Created wheel for fides: filename=fides-0.7.4-py3-none-any.whl size=27338 sha256=ca23f2145eabf7d8bea9ce7afee025c76b7de8f0374bfc9d8b28aa660d799fed\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/8d/b8/6b/5b3457da54a6bd749cff3a831be235210346dcbdf476b25b10\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Building wheel for DFO-LS (setup.py): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Building wheel for DFO-LS (setup.py): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Created wheel for DFO-LS: filename=DFO_LS-1.3.0-py3-none-any.whl size=49128 sha256=885d4b331c6e1506ff6cdfc4661ac9ee915db94aec668a90a15a8a84c58f916b\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/03/17/9f/45df4cdcc5f3792b5215ceb961631259d26889fdb90247ae51\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Building wheel for Py-BOBYQA (setup.py): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking tqdm-4.65.0-pyhd8ed1ab_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pytest-7.4.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking wcwidth-0.2.6-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking stack_data-0.6.2-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking platformdirs-3.8.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking importlib_metadata-6.7.0-hd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pytest-xdist-3.3.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking prompt-toolkit-3.0.38-pyha770c72_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking prompt_toolkit-3.0.38-hd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking ipython-8.14.0-pyh41d4057_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking brotli-python-1.0.9-py39h5a03fae_9\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking markupsafe-2.1.3-py39hd1e30aa_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking debugpy-1.6.7-py39h227be39_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pyzmq-25.1.0-py39hb257651_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking psutil-5.9.5-py39h72bdee0_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Building wheel for Py-BOBYQA (setup.py): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Created wheel for Py-BOBYQA: filename=Py_BOBYQA-1.4-py3-none-any.whl size=43293 sha256=b7d7b102b891b0229061780c73090907525f2134d2bcb539fc6d3d6bdfa270b3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/15/95/87/07ebd66ef9a50c600e4f8c7fc8e8932ba2f17bba71255ac3bb\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Building editable for estimagic (pyproject.toml): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking llvmlite-0.40.1-py39h174d805_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking greenlet-2.0.2-py39h3d6467e_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking tornado-6.3.2-py39hd1e30aa_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pyyaml-6.0-py39hb9d737c_5\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pillow-9.5.0-py39haaeba84_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking numpy-1.24.4-py39h6183b62_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking coverage-7.2.7-py39hd1e30aa_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking jupyter_core-5.3.1-py39hf3d152e_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking sqlalchemy-2.0.17-py39hd1e30aa_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking ml_dtypes-0.2.0-py39h40cae4c_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking numba-0.57.1-py39hb75a051_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pandas-2.0.3-py39h40cae4c_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Building editable for estimagic (pyproject.toml): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Created wheel for estimagic: filename=estimagic-0.4.7.dev1+gfcd95f1-0.editable-py3-none-any.whl size=4760 sha256=7114a20488e068f285686f8b31a2743c36e0afe89b5fc6907f4d83505851fc9a\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-wmzokdlc/wheels/78/eb/15/228043046bd7a2343dcdc2eb7f27a85714993af14b007b0e5f\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Successfully built fides DFO-LS Py-BOBYQA estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking nlopt-2.7.1-py39h863de18_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pagmo-2.19.0-h848105d_2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking urllib3-2.0.3-pyhd8ed1ab_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking jinja2-3.1.2-pyhd8ed1ab_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking opt_einsum-3.3.0-pyhd8ed1ab_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pytest-cov-4.1.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking jupyter_client-8.3.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking requests-2.31.0-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking bokeh-2.4.3-pyhd8ed1ab_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking ipykernel-6.23.3-pyh71e2992_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pooch-1.7.0-pyha770c72_3\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking ipyparallel-8.6.1-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Installing collected packages: kaleido, pyparsing, mrg32k3a, kiwisolver, h5py, fonttools, cycler, contourpy, matplotlib, fides, seaborn, Py-BOBYQA, estimagic, DFO-LS, simoptlib\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking scipy-1.11.1-py39h6183b62_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking jaxlib-0.4.12-cpu_py39h4646849_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking pygmo-2.19.5-py39hca2169e_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking patsy-0.5.3-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking estimagic-0.4.6-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking jax-0.4.13-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking tranquilo-0.0.4-pyhd8ed1ab_0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Linking statsmodels-0.14.0-py39h0f8d45d_1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Transaction finished\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | To activate this environment, use:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     micromamba activate estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Or to execute a single command in this environment, use:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     micromamba run -n estimagic mycommand\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Installing pip packages: DFO-LS, Py-BOBYQA, fides==0.7.4, kaleido, simoptlib==1.0.1, -e ../\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic (from -r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Installing build dependencies: started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Attempting uninstall: estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     Found existing installation: estimagic 0.4.6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     Uninstalling estimagic-0.4.6:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |       Successfully uninstalled estimagic-0.4.6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Successfully installed DFO-LS-1.3.0 Py-BOBYQA-1.4 contourpy-1.1.0 cycler-0.11.0 estimagic-0.4.7.dev1+gfcd95f1 fides-0.7.4 fonttools-4.40.0 h5py-3.9.0 kaleido-0.2.1 kiwisolver-1.4.4 matplotlib-3.7.1 mrg32k3a-1.0.0 pyparsing-3.1.0 seaborn-0.12.2 simoptlib-1.0.1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | --- Contents of /home/runneradmin/.bash_profile ---\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | # >>> mamba initialize >>>\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | # !! Contents within this block are managed by 'mamba init' !!\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | export MAMBA_EXE=\"/home/runneradmin/micromamba-bin/micromamba\";\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | export MAMBA_ROOT_PREFIX=\"/home/runneradmin/micromamba-root\";\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | __mamba_setup=\"$(\"$MAMBA_EXE\" shell hook --shell bash --root-prefix \"$MAMBA_ROOT_PREFIX\" 2> /dev/null)\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | if [ $? -eq 0 ]; then\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     eval \"$__mamba_setup\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | else\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     if [ -f \"/home/runneradmin/micromamba-root/etc/profile.d/micromamba.sh\" ]; then\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         . \"/home/runneradmin/micromamba-root/etc/profile.d/micromamba.sh\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     else\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         export  PATH=\"/home/runneradmin/micromamba-root/bin:$PATH\"  # extra space after export prevents interference from conda init\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     fi\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | fi\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | unset __mamba_setup\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | # <<< mamba initialize <<<\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | set -eo pipefail; micromamba activate estimagic;\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | --- End contents of /home/runneradmin/.bash_profile ---\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Running shell command [\"bash\",[\"-eo\",\"pipefail\",\"-l\",\"-c\",\"micromamba info --json\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | [command]/usr/bin/bash -eo pipefail -l -c micromamba info --json\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | {\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"base environment\": \"/home/runneradmin/micromamba-root\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"channels\": [\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         \"https://conda.anaconda.org/conda-forge/linux-64\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         \"https://conda.anaconda.org/conda-forge/noarch\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         \"https://conda.anaconda.org/nodefaults/linux-64\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         \"https://conda.anaconda.org/nodefaults/noarch\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     ],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"curl version\": \"libcurl/7.88.1 OpenSSL/3.1.1 zlib/1.2.13 zstd/1.5.2 libssh2/1.11.0 nghttp2/1.52.0\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"env location\": \"/home/runneradmin/micromamba-root/envs/estimagic\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"environment\": \"estimagic (active)\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"envs directories\": [\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         \"/home/runneradmin/micromamba-root/envs\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     ],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"libarchive version\": \"libarchive 3.6.2 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.2\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"libmamba version\": \"1.4.6\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"micromamba version\": \"1.4.6\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"package cache\": [\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         \"/home/runneradmin/micromamba-root/pkgs\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         \"/home/runneradmin/.mamba/pkgs\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     ],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"platform\": \"linux-64\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"populated config files\": [\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         \"/home/runneradmin/.condarc\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     ],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"user config files\": [\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         \"/home/runneradmin/.mambarc\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     ],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     \"virtual packages\": [\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         \"__unix=0=0\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         \"__linux=5.4.0=0\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         \"__glibc=2.31=0\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         \"__archspec=1=x86_64\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     ]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | }\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Will save to cache with key micromamba-env linux-64 Sat Jul 01 2023 file: 539faf43 extra: e0a578e9\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2753  ::endgroup::\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2753  ::group::Environment info\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Running shell command [\"bash\",[\"-eo\",\"pipefail\",\"-l\",\"-c\",\"micromamba info --log-level warning\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | [command]/usr/bin/bash -eo pipefail -l -c micromamba info --log-level warning\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        libmamba version : 1.4.6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |      micromamba version : 1.4.6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |            curl version : libcurl/7.88.1 OpenSSL/3.1.1 zlib/1.2.13 zstd/1.5.2 libssh2/1.11.0 nghttp2/1.52.0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |      libarchive version : libarchive 3.6.2 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        envs directories : /home/runneradmin/micromamba-root/envs\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |           package cache : /home/runneradmin/micromamba-root/pkgs\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |                           /home/runneradmin/.mamba/pkgs\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |             environment : estimagic (active)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |            env location : /home/runneradmin/micromamba-root/envs/estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |       user config files : /home/runneradmin/.mambarc\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |  populated config files : /home/runneradmin/.condarc\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        virtual packages : __unix=0=0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |                           __linux=5.4.0=0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |                           __glibc=2.31=0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |                           __archspec=1=x86_64\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |                channels : https://conda.anaconda.org/conda-forge/linux-64\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |                           https://conda.anaconda.org/conda-forge/noarch\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |                           https://conda.anaconda.org/nodefaults/linux-64\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |                           https://conda.anaconda.org/nodefaults/noarch\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        base environment : /home/runneradmin/micromamba-root\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |                platform : linux-64\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Running shell command [\"bash\",[\"-eo\",\"pipefail\",\"-l\",\"-c\",\"micromamba list --log-level warning\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | [command]/usr/bin/bash -eo pipefail -l -c micromamba list --log-level warning\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | List of packages in environment: \"/home/runneradmin/micromamba-root/envs/estimagic\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   Name                           Version       Build                Channel    \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   _libgcc_mutex                  0.1           conda_forge          conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   _openmp_mutex                  4.5           2_gnu                conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   ampl-mp                        3.1.0         h2cc385e_1006        conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   asttokens                      2.2.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   backcall                       0.2.0         pyh9f0ad1d_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   backports                      1.0           pyhd8ed1ab_3         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   backports.functools_lru_cache  1.6.5         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   bokeh                          2.4.3         pyhd8ed1ab_3         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   boost-cpp                      1.78.0        h6582d0a_3           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   brotli-python                  1.0.9         py310hd8f1fbe_9      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   bzip2                          1.0.8         h7f98852_4           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   c-ares                         1.19.1        hd590300_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   ca-certificates                2023.5.7      hbcca054_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   certifi                        2023.5.7      pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   charset-normalizer             3.1.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   click                          8.1.3         unix_pyhd8ed1ab_2    conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   cloudpickle                    2.2.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   colorama                       0.4.6         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   comm                           0.1.3         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   coverage                       7.2.7         py310h2372a71_0      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   debugpy                        1.6.7         py310heca2aa9_0      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   decorator                      5.1.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   entrypoints                    0.4           pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   estimagic                      0.4.6         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   exceptiongroup                 1.1.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   execnet                        1.9.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   executing                      1.2.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   freetype                       2.12.1        hca18f0e_1           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   greenlet                       2.0.2         py310hc6cd4ac_1      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   icu                            72.1          hcb278e6_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   idna                           3.4           pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   importlib-metadata             6.7.0         pyha770c72_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   importlib_metadata             6.7.0         hd8ed1ab_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   iniconfig                      2.0.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   ipopt                          3.14.12       hf9e1ecf_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   ipykernel                      6.23.3        pyh71e2992_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   ipyparallel                    8.6.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   ipython                        8.14.0        pyh41d4057_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   jax                            0.4.13        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   jaxlib                         0.4.12        cpu_py310hc0ddb09_1  conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   jedi                           0.18.2        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   jinja2                         3.1.2         pyhd8ed1ab_1         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   joblib                         1.3.0         pyhd8ed1ab_1         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   jupyter_client                 8.3.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   jupyter_core                   5.3.1         py310hff52083_0      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   lcms2                          2.15          haa2dc70_1           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   ld_impl_linux-64               2.40          h41732ed_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   lerc                           4.0.0         h27087fc_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libabseil                      20230125.3    cxx17_h59595ed_0     conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libblas                        3.9.0         17_linux64_openblas  conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libcblas                       3.9.0         17_linux64_openblas  conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libdeflate                     1.18          h0b41bf4_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libedit                        3.1.20191231  he28a2e2_2           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libffi                         3.4.2         h7f98852_5           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libgcc-ng                      13.1.0        he5830b7_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libgfortran-ng                 13.1.0        h69a702a_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libgfortran5                   13.1.0        h15d22d2_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libgomp                        13.1.0        he5830b7_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libgrpc                        1.54.2        hb20ce57_2           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libhwloc                       2.9.1         nocuda_h7313eea_6    conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libiconv                       1.17          h166bdaf_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libjpeg-turbo                  2.1.5.1       h0b41bf4_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   liblapack                      3.9.0         17_linux64_openblas  conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libllvm14                      14.0.6        hcd5def8_3           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libnsl                         2.0.0         h7f98852_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libopenblas                    0.3.23        pthreads_h80387f5_0  conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libpng                         1.6.39        h753d276_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libprotobuf                    3.21.12       h3eb15da_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libsodium                      1.0.18        h36c2ea0_1           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libsqlite                      3.42.0        h2797004_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libstdcxx-ng                   13.1.0        hfd8a6a1_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libtiff                        4.5.1         h8b53f26_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libuuid                        2.38.1        h0b41bf4_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libwebp-base                   1.3.1         hd590300_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libxcb                         1.15          h0b41bf4_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libxml2                        2.11.4        h0d562d8_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   libzlib                        1.2.13        hd590300_5           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   llvmlite                       0.40.1        py310h1b8f574_0      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   markupsafe                     2.1.3         py310h2372a71_0      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   matplotlib-inline              0.1.6         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   metis                          5.1.0         h58526e2_1006        conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   ml_dtypes                      0.2.0         py310h7cbd5c2_1      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   mumps-include                  5.2.1         ha770c72_11          conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   mumps-seq                      5.2.1         h2104b81_11          conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   ncurses                        6.4           hcb278e6_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   nest-asyncio                   1.5.6         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   networkx                       3.1           pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   nlopt                          2.7.1         py310h3342525_3      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   numba                          0.57.1        py310h0f6aa51_0      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   numpy                          1.24.4        py310ha4c1d20_0      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   openjpeg                       2.5.0         hfec8fc6_2           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   openssl                        3.1.1         hd590300_1           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   opt_einsum                     3.3.0         pyhd8ed1ab_1         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   packaging                      23.1          pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pagmo                          2.19.0        h848105d_2           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pandas                         2.0.3         py310h7cbd5c2_0      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   parso                          0.8.3         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   patsy                          0.5.3         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pexpect                        4.8.0         pyh1a96a4e_2         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pickleshare                    0.7.5         py_1003              conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pillow                         9.5.0         py310h582fbeb_1      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pip                            23.1.2        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   platformdirs                   3.8.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   plotly                         5.15.0        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pluggy                         1.2.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pooch                          1.7.0         pyha770c72_3         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   prompt-toolkit                 3.0.38        pyha770c72_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   prompt_toolkit                 3.0.38        hd8ed1ab_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   psutil                         5.9.5         py310h1fa729e_0      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pthread-stubs                  0.4           h36c2ea0_1001        conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   ptyprocess                     0.7.0         pyhd3deb0d_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pure_eval                      0.2.2         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pybaum                         0.1.3         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pybind11-abi                   4             hd8ed1ab_3           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pygments                       2.15.1        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pygmo                          2.19.5        py310h917f6ee_1      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pysocks                        1.7.1         pyha2e5f31_6         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pytest                         7.4.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pytest-cov                     4.1.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pytest-xdist                   3.3.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   python                         3.10.12       hd12c33a_0_cpython   conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   python-dateutil                2.8.2         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   python-tzdata                  2023.3        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   python_abi                     3.10          3_cp310              conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pytz                           2023.3        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pyyaml                         6.0           py310h5764c6d_5      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   pyzmq                          25.1.0        py310h5bbb5d0_0      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   re2                            2023.03.02    h8c504da_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   readline                       8.2           h8228510_1           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   requests                       2.31.0        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   scipy                          1.11.1        py310ha4c1d20_0      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   scotch                         6.0.9         hb2e6521_2           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   setuptools                     68.0.0        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   six                            1.16.0        pyh6c4a22f_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   sqlalchemy                     2.0.17        py310h2372a71_0      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   stack_data                     0.6.2         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   statsmodels                    0.14.0        py310h278f3c1_1      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   tbb                            2021.9.0      hf52228f_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   tenacity                       8.2.2         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   tk                             8.6.12        h27826a3_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   toml                           0.10.2        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   tomli                          2.0.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   tornado                        6.3.2         py310h2372a71_0      conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   tqdm                           4.65.0        pyhd8ed1ab_1         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   traitlets                      5.9.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   tranquilo                      0.0.4         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   typing-extensions              4.7.0         hd8ed1ab_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   typing_extensions              4.7.0         pyha770c72_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   tzdata                         2023c         h71feb2d_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   unixodbc                       2.3.10        h583eb01_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   urllib3                        2.0.3         pyhd8ed1ab_1         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   wcwidth                        0.2.6         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   wheel                          0.40.0        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   xorg-libxau                    1.0.11        hd590300_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   xorg-libxdmcp                  1.1.3         h7f98852_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   xz                             5.2.6         h166bdaf_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   yaml                           0.2.5         h7f98852_2           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   zeromq                         4.3.4         h9c3ff4c_1           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   zipp                           3.15.0        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   zlib                           1.2.13        hd590300_5           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   zstd                           1.5.2         h3eb15da_6           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2753  ::endgroup::\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2705  Success - Main create build environment\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2699  ::set-env:: MSYS=winsymlinks:nativestrict\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2699  ::set-env:: MAMBA_ROOT_PREFIX=/home/runneradmin/micromamba-root\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2699  ::set-env:: MAMBA_EXE=/home/runneradmin/micromamba-bin/micromamba\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2699  ::add-path:: /home/runneradmin/micromamba-bin\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation] \u2b50 Run Main run sphinx\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udc33  docker exec cmd=[bash -l /var/run/act/workflow/2] user= workdir=\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Installing build dependencies: finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Checking if build backend supports build_editable: started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Checking if build backend supports build_editable: finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Getting requirements to build editable: started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Getting requirements to build editable: finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Preparing editable metadata (pyproject.toml): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting DFO-LS (from -r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 1))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading DFO-LS-1.3.0.tar.gz (41 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.9/41.9 kB 4.8 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Preparing metadata (setup.py): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Preparing metadata (setup.py): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting Py-BOBYQA (from -r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 2))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading Py-BOBYQA-1.4.tar.gz (38 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Preparing metadata (setup.py): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Preparing metadata (setup.py): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting fides==0.7.4 (from -r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 3))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading fides-0.7.4.tar.gz (24 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Preparing metadata (setup.py): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Preparing metadata (setup.py): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting kaleido (from -r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 4))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading kaleido-0.2.1-py2.py3-none-manylinux1_x86_64.whl (79.9 MB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 79.9/79.9 MB 14.6 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting simoptlib==1.0.1 (from -r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading simoptlib-1.0.1-py3-none-any.whl (161 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 161.0/161.0 kB 12.0 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: numpy>=1.19.2 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from fides==0.7.4->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 3)) (1.24.4)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: scipy>=1.5.2 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from fides==0.7.4->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 3)) (1.11.1)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting h5py>=3.5.0 (from fides==0.7.4->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 3))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading h5py-3.9.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.8 MB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.8/4.8 MB 25.5 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting matplotlib>=3.2.2 (from simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading matplotlib-3.7.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.6 MB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.6/11.6 MB 17.2 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: pandas>=1.3.5 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5)) (2.0.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting seaborn>=0.11.2 (from simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading seaborn-0.12.2-py3-none-any.whl (293 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     import numpy as np\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     import estimagic as em\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     def criterion(params):\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         offset = np.linspace(1, 0, len(params))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         x = params - offset\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |         return x @ x\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res = em.minimize(\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        criterion=criterion,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        params=np.array([2.5, 1, 1, 1, 1, -2.5]),\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        algorithm=\"scipy_lbfgsb\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        )\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res.params.round(3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([1. , 0.8, 0.6, 0.4, 0.2, 0. ])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res = em.minimize(\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        criterion=criterion,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        params=np.array([2.5, 1, 1, 1, 1, -2.5]),\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        algorithm=\"scipy_lbfgsb\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        constraints={\"loc\": [0, 5], \"type\": \"fixed\"},\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        )\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res.params.round(3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([ 2.5,  0.8,  0.6,  0.4,  0.2, -2.5])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res = em.minimize(\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        criterion=criterion,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        params=np.array([1, 1, 1, 1, 1, 1]),\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        algorithm=\"scipy_lbfgsb\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        constraints={\"loc\": [1, 2, 3], \"type\": \"increasing\"},\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        )\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res.params.round(3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([1. , 0.6, 0.6, 0.6, 0.2, 0. ])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res = em.minimize(\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        criterion=criterion,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        params=np.array([1, 1, 1, 1, 1, 1]),\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        algorithm=\"scipy_lbfgsb\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        constraints={\"loc\": [3, 0, 4], \"type\": \"decreasing\"},\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        )\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res.params.round(3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([ 0.7,  0.8,  0.6,  0.7,  0.2, -0. ])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res = em.minimize(\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        criterion=criterion,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        params=np.array([1, 1, 1, 1, 1, 1]),\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        algorithm=\"scipy_lbfgsb\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        constraints={\"loc\": [0, 5], \"type\": \"equality\"},\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        )\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res.params.round(3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([0.5, 0.8, 0.6, 0.4, 0.2, 0.5])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res = em.minimize(\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        criterion=criterion,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        params=np.array([1, 1, 1, 1, 1, 1]),\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        algorithm=\"scipy_lbfgsb\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        constraints={\"locs\": [[0, 1], [2, 3]], \"type\": \"pairwise_equality\"},\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        )\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res.params.round(3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([ 0.8,  0.6,  0.8,  0.6,  0.2, -0. ])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res = em.minimize(\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        criterion=criterion,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        params=np.array([0.3, 0.2, 0.25, 0.25, 1, 1]),\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        algorithm=\"scipy_lbfgsb\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        constraints={\"loc\": [0, 1, 2, 3], \"type\": \"probability\"},\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        )\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res = em.minimize(\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        criterion=criterion,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        params=np.ones(6),\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        algorithm=\"scipy_lbfgsb\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        constraints={\"loc\": [0, 1, 2], \"type\": \"covariance\"},\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        )\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res.params.round(3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([ 1.006,  0.784,  0.61 ,  0.4  ,  0.2  , -0.   ])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     from estimagic.utilities import cov_params_to_matrix\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     cov_params_to_matrix(res.params[:3]).round(2) # doctest: +NORMALIZE_WHITESPACE\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([[1.01, 0.78],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |            [0.78, 0.61]])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res = em.minimize(\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        criterion=criterion,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        params=np.ones(6),\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        algorithm=\"scipy_lbfgsb\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        constraints={\"loc\": [0, 1, 2], \"type\": \"sdcorr\"},\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        )\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res.params.round(3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([ 1. ,  0.8,  0.6,  0.4,  0.2, -0. ])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     from estimagic.utilities import sdcorr_params_to_sds_and_corr\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     sd, corr = sdcorr_params_to_sds_and_corr(res.params[:3])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     sd.round(2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([1. , 0.8])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     corr.round(2) # doctest: +NORMALIZE_WHITESPACE\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([[1. , 0.6],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |            [0.6, 1. ]])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res = em.minimize(\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        criterion=criterion,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        params=np.ones(6),\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        algorithm=\"scipy_lbfgsb\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        constraints={\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        \"loc\": [0, 1, 2, 3],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        \"type\": \"linear\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        \"lower_bound\": 0.95,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        \"weights\": 0.25,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        },\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        )\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res.params.round(2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([ 1.25,  1.05,  0.85,  0.65,  0.2 , -0.  ])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res = em.minimize(\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        criterion=criterion,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        params=np.ones(6),\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        algorithm=\"scipy_slsqp\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        constraints={\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        \"type\": \"nonlinear\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        \"selector\": lambda x: x[:-1],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        \"func\": lambda x: np.prod(x),\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        \"value\": 1.0,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        },\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        )\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res.params.round(2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([ 1.31,  1.16,  1.01,  0.87,  0.75, -0.  ])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res = em.minimize(\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        criterion=criterion,\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        params=np.ones(6),\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        algorithm=\"scipy_lbfgsb\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        constraints=[\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        {\"loc\": [0, 1], \"type\": \"equality\"},\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        {\"loc\": [2, 3, 4], \"type\": \"linear\", \"weights\": 1, \"value\": 3},\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        ],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |        )\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting nothing\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Trying:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     res.params.round(2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Expecting:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |     array([0.9, 0.9, 1.2, 1. , 0.8, 0. ])\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ok\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | 1 items passed all tests:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   |   32 tests in how_to_specify_constraints.md\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | 32 tests in 1 items.\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | 32 passed and 0 failed.\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Test passed.\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 293.3/293.3 kB 9.9 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting mrg32k3a>=1.0.0 (from simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading mrg32k3a-1.0.0-py3-none-any.whl (11 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: bokeh<=2.4.3 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (2.4.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: click in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (8.1.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: cloudpickle in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (2.2.1)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: joblib in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (1.3.0)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: plotly in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (5.15.0)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: pybaum>=0.1.2 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (0.1.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: sqlalchemy>=1.3 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (2.0.17)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: Jinja2>=2.9 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (3.1.2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: packaging>=16.8 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (23.1)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: pillow>=7.1.0 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (9.5.0)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: PyYAML>=3.10 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (6.0)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: tornado>=5.1 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (6.3.2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: typing-extensions>=3.10.0 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (4.7.0)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting contourpy>=1.0.1 (from matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading contourpy-1.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (300 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 300.4/300.4 kB 19.7 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2705  Success - Main run sphinx\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting cycler>=0.10 (from matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading cycler-0.11.0-py3-none-any.whl (6.4 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting fonttools>=4.22.0 (from matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading fonttools-4.40.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.4 MB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation] \u2b50 Run Post create build environment\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/mamba-org-provision-with-micromamba@main/dist/post/index.js] user= workdir=\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.4/4.4 MB 10.9 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting kiwisolver>=1.0.1 (from matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading kiwisolver-1.4.4-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.6/1.6 MB 4.2 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting pyparsing>=2.3.1 (from matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 102.6/102.6 kB 3.9 MB/s eta 0:00:00\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: python-dateutil>=2.7 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5)) (2.8.2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Collecting importlib-resources>=3.2.0 (from matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5))\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: pytz>=2020.1 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from pandas>=1.3.5->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5)) (2023.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: tzdata>=2022.1 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from pandas>=1.3.5->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5)) (2023.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: greenlet!=0.4.17 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from sqlalchemy>=1.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (2.0.2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: tenacity>=6.2.0 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from plotly->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (8.2.2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: zipp>=3.1.0 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from importlib-resources>=3.2.0->matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5)) (3.15.0)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: MarkupSafe>=2.0 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from Jinja2>=2.9->bokeh<=2.4.3->estimagic==0.4.7.dev1+gfcd95f1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 6)) (2.1.3)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Requirement already satisfied: six>=1.5 in /home/runneradmin/micromamba-root/envs/estimagic/lib/python3.9/site-packages (from python-dateutil>=2.7->matplotlib>=3.2.2->simoptlib==1.0.1->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.envs/mambaftQ9CLfTuhq (line 5)) (1.16.0)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Building wheels for collected packages: fides, DFO-LS, Py-BOBYQA, estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Building wheel for fides (setup.py): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Building wheel for fides (setup.py): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Created wheel for fides: filename=fides-0.7.4-py3-none-any.whl size=27338 sha256=9aa5f95ba06f6dd455eb9b17ef0e31ae3bf9e09162348b86b59ec41c41eb175f\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/88/7b/ec/31c84ec06a4f035c81061fa2020e35fd539d0588ea52126b71\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Building wheel for DFO-LS (setup.py): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Building wheel for DFO-LS (setup.py): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Created wheel for DFO-LS: filename=DFO_LS-1.3.0-py3-none-any.whl size=49128 sha256=b705f91cf67c2796f2e5662c6b02ac70b6f407afe7ec38474604779d0261d6d7\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/1c/e0/b0/5ec4672c27c544e290cd81a6307720fab5b0486eaf8201c9a4\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Building wheel for Py-BOBYQA (setup.py): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Building wheel for Py-BOBYQA (setup.py): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Created wheel for Py-BOBYQA: filename=Py_BOBYQA-1.4-py3-none-any.whl size=43293 sha256=3c7cc0ce347f7ec1a243c06c01526df02069397d531876ee17d929e99a69fe20\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/e2/82/ba/de574d5a65d8dcbdf57853fabc8165b2781df6a3065f6e6d14\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Building editable for estimagic (pyproject.toml): started\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Building editable for estimagic (pyproject.toml): finished with status 'done'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Created wheel for estimagic: filename=estimagic-0.4.7.dev1+gfcd95f1-0.editable-py3-none-any.whl size=4760 sha256=54a0fe762b96abac67dce069fe0ede0b2e3bf551e7607c32dd12d7b4507ca3f8\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-b1014zvs/wheels/2f/60/b3/0645d83b90dff763d616c09750f59acf53737f278715d3d330\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Successfully built fides DFO-LS Py-BOBYQA estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Installing collected packages: kaleido, pyparsing, mrg32k3a, kiwisolver, importlib-resources, h5py, fonttools, cycler, contourpy, matplotlib, fides, seaborn, Py-BOBYQA, estimagic, DFO-LS, simoptlib\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Attempting uninstall: estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     Found existing installation: estimagic 0.4.6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     Uninstalling estimagic-0.4.6:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |       Successfully uninstalled estimagic-0.4.6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Successfully installed DFO-LS-1.3.0 Py-BOBYQA-1.4 contourpy-1.1.0 cycler-0.11.0 estimagic-0.4.7.dev1+gfcd95f1 fides-0.7.4 fonttools-4.40.0 h5py-3.9.0 importlib-resources-5.12.0 kaleido-0.2.1 kiwisolver-1.4.4 matplotlib-3.7.1 mrg32k3a-1.0.0 pyparsing-3.1.0 seaborn-0.12.2 simoptlib-1.0.1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | --- Contents of /home/runneradmin/.bash_profile ---\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | # >>> mamba initialize >>>\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | # !! Contents within this block are managed by 'mamba init' !!\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | export MAMBA_EXE=\"/home/runneradmin/micromamba-bin/micromamba\";\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | export MAMBA_ROOT_PREFIX=\"/home/runneradmin/micromamba-root\";\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | __mamba_setup=\"$(\"$MAMBA_EXE\" shell hook --shell bash --root-prefix \"$MAMBA_ROOT_PREFIX\" 2> /dev/null)\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | if [ $? -eq 0 ]; then\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     eval \"$__mamba_setup\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | else\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     if [ -f \"/home/runneradmin/micromamba-root/etc/profile.d/micromamba.sh\" ]; then\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         . \"/home/runneradmin/micromamba-root/etc/profile.d/micromamba.sh\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     else\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         export  PATH=\"/home/runneradmin/micromamba-root/bin:$PATH\"  # extra space after export prevents interference from conda init\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     fi\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | fi\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | unset __mamba_setup\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | # <<< mamba initialize <<<\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | set -eo pipefail; micromamba activate estimagic;\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | --- End contents of /home/runneradmin/.bash_profile ---\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Running shell command [\"bash\",[\"-eo\",\"pipefail\",\"-l\",\"-c\",\"micromamba info --json\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | [command]/usr/bin/bash -eo pipefail -l -c micromamba info --json\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | {\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"base environment\": \"/home/runneradmin/micromamba-root\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"channels\": [\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         \"https://conda.anaconda.org/conda-forge/linux-64\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         \"https://conda.anaconda.org/conda-forge/noarch\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         \"https://conda.anaconda.org/nodefaults/linux-64\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         \"https://conda.anaconda.org/nodefaults/noarch\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     ],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"curl version\": \"libcurl/7.88.1 OpenSSL/3.1.1 zlib/1.2.13 zstd/1.5.2 libssh2/1.11.0 nghttp2/1.52.0\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"env location\": \"/home/runneradmin/micromamba-root/envs/estimagic\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"environment\": \"estimagic (active)\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"envs directories\": [\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         \"/home/runneradmin/micromamba-root/envs\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     ],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"libarchive version\": \"libarchive 3.6.2 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.2\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"libmamba version\": \"1.4.6\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"micromamba version\": \"1.4.6\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"package cache\": [\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         \"/home/runneradmin/micromamba-root/pkgs\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         \"/home/runneradmin/.mamba/pkgs\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     ],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"platform\": \"linux-64\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"populated config files\": [\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         \"/home/runneradmin/.condarc\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     ],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"user config files\": [\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         \"/home/runneradmin/.mambarc\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     ],\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     \"virtual packages\": [\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         \"__unix=0=0\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         \"__linux=5.4.0=0\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         \"__glibc=2.31=0\",\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |         \"__archspec=1=x86_64\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     ]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | }\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Will save to cache with key micromamba-env linux-64 Sat Jul 01 2023 file: 539faf43 extra: 321072b1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2753  ::endgroup::\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2753  ::group::Environment info\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Running shell command [\"bash\",[\"-eo\",\"pipefail\",\"-l\",\"-c\",\"micromamba info --log-level warning\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | [command]/usr/bin/bash -eo pipefail -l -c micromamba info --log-level warning\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |        libmamba version : 1.4.6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |      micromamba version : 1.4.6\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |            curl version : libcurl/7.88.1 OpenSSL/3.1.1 zlib/1.2.13 zstd/1.5.2 libssh2/1.11.0 nghttp2/1.52.0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |      libarchive version : libarchive 3.6.2 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |        envs directories : /home/runneradmin/micromamba-root/envs\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |           package cache : /home/runneradmin/micromamba-root/pkgs\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |                           /home/runneradmin/.mamba/pkgs\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |             environment : estimagic (active)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |            env location : /home/runneradmin/micromamba-root/envs/estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |       user config files : /home/runneradmin/.mambarc\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |  populated config files : /home/runneradmin/.condarc\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |        virtual packages : __unix=0=0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |                           __linux=5.4.0=0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |                           __glibc=2.31=0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |                           __archspec=1=x86_64\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |                channels : https://conda.anaconda.org/conda-forge/linux-64\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |                           https://conda.anaconda.org/conda-forge/noarch\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |                           https://conda.anaconda.org/nodefaults/linux-64\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |                           https://conda.anaconda.org/nodefaults/noarch\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |        base environment : /home/runneradmin/micromamba-root\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |                platform : linux-64\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Running shell command [\"bash\",[\"-eo\",\"pipefail\",\"-l\",\"-c\",\"micromamba list --log-level warning\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | [command]/usr/bin/bash -eo pipefail -l -c micromamba list --log-level warning\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | List of packages in environment: \"/home/runneradmin/micromamba-root/envs/estimagic\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   Name                           Version       Build                Channel    \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   _libgcc_mutex                  0.1           conda_forge          conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   _openmp_mutex                  4.5           2_gnu                conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   ampl-mp                        3.1.0         h2cc385e_1006        conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   asttokens                      2.2.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   backcall                       0.2.0         pyh9f0ad1d_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   backports                      1.0           pyhd8ed1ab_3         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   backports.functools_lru_cache  1.6.5         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   bokeh                          2.4.3         pyhd8ed1ab_3         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   boost-cpp                      1.78.0        h6582d0a_3           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   brotli-python                  1.0.9         py39h5a03fae_9       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   bzip2                          1.0.8         h7f98852_4           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   c-ares                         1.19.1        hd590300_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   ca-certificates                2023.5.7      hbcca054_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   certifi                        2023.5.7      pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   charset-normalizer             3.1.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   click                          8.1.3         unix_pyhd8ed1ab_2    conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   cloudpickle                    2.2.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   colorama                       0.4.6         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   comm                           0.1.3         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   coverage                       7.2.7         py39hd1e30aa_0       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   debugpy                        1.6.7         py39h227be39_0       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   decorator                      5.1.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   entrypoints                    0.4           pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   estimagic                      0.4.6         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   exceptiongroup                 1.1.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   execnet                        1.9.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   executing                      1.2.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   freetype                       2.12.1        hca18f0e_1           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   greenlet                       2.0.2         py39h3d6467e_1       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   icu                            72.1          hcb278e6_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   idna                           3.4           pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   importlib-metadata             6.7.0         pyha770c72_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   importlib_metadata             6.7.0         hd8ed1ab_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   iniconfig                      2.0.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   ipopt                          3.14.12       hf9e1ecf_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   ipykernel                      6.23.3        pyh71e2992_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   ipyparallel                    8.6.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   ipython                        8.14.0        pyh41d4057_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   jax                            0.4.13        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   jaxlib                         0.4.12        cpu_py39h4646849_1   conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   jedi                           0.18.2        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   jinja2                         3.1.2         pyhd8ed1ab_1         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   joblib                         1.3.0         pyhd8ed1ab_1         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   jupyter_client                 8.3.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   jupyter_core                   5.3.1         py39hf3d152e_0       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   lcms2                          2.15          haa2dc70_1           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   ld_impl_linux-64               2.40          h41732ed_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   lerc                           4.0.0         h27087fc_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libabseil                      20230125.3    cxx17_h59595ed_0     conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libblas                        3.9.0         17_linux64_openblas  conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libcblas                       3.9.0         17_linux64_openblas  conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libdeflate                     1.18          h0b41bf4_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libedit                        3.1.20191231  he28a2e2_2           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libffi                         3.4.2         h7f98852_5           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libgcc-ng                      13.1.0        he5830b7_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libgfortran-ng                 13.1.0        h69a702a_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libgfortran5                   13.1.0        h15d22d2_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libgomp                        13.1.0        he5830b7_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libgrpc                        1.54.2        hb20ce57_2           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libhwloc                       2.9.1         nocuda_h7313eea_6    conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libiconv                       1.17          h166bdaf_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libjpeg-turbo                  2.1.5.1       h0b41bf4_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   liblapack                      3.9.0         17_linux64_openblas  conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libllvm14                      14.0.6        hcd5def8_3           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libnsl                         2.0.0         h7f98852_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libopenblas                    0.3.23        pthreads_h80387f5_0  conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libpng                         1.6.39        h753d276_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libprotobuf                    3.21.12       h3eb15da_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libsodium                      1.0.18        h36c2ea0_1           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libsqlite                      3.42.0        h2797004_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libstdcxx-ng                   13.1.0        hfd8a6a1_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libtiff                        4.5.1         h8b53f26_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libuuid                        2.38.1        h0b41bf4_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libwebp-base                   1.3.1         hd590300_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libxcb                         1.15          h0b41bf4_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libxml2                        2.11.4        h0d562d8_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   libzlib                        1.2.13        hd590300_5           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   llvmlite                       0.40.1        py39h174d805_0       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   markupsafe                     2.1.3         py39hd1e30aa_0       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   matplotlib-inline              0.1.6         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   metis                          5.1.0         h58526e2_1006        conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   ml_dtypes                      0.2.0         py39h40cae4c_1       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   mumps-include                  5.2.1         ha770c72_11          conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   mumps-seq                      5.2.1         h2104b81_11          conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   ncurses                        6.4           hcb278e6_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   nest-asyncio                   1.5.6         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   networkx                       3.1           pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   nlopt                          2.7.1         py39h863de18_3       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   numba                          0.57.1        py39hb75a051_0       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   numpy                          1.24.4        py39h6183b62_0       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   openjpeg                       2.5.0         hfec8fc6_2           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   openssl                        3.1.1         hd590300_1           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   opt_einsum                     3.3.0         pyhd8ed1ab_1         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   packaging                      23.1          pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pagmo                          2.19.0        h848105d_2           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pandas                         2.0.3         py39h40cae4c_0       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   parso                          0.8.3         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   patsy                          0.5.3         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pexpect                        4.8.0         pyh1a96a4e_2         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pickleshare                    0.7.5         py_1003              conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pillow                         9.5.0         py39haaeba84_1       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pip                            23.1.2        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   platformdirs                   3.8.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   plotly                         5.15.0        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pluggy                         1.2.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pooch                          1.7.0         pyha770c72_3         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   prompt-toolkit                 3.0.38        pyha770c72_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   prompt_toolkit                 3.0.38        hd8ed1ab_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   psutil                         5.9.5         py39h72bdee0_0       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pthread-stubs                  0.4           h36c2ea0_1001        conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   ptyprocess                     0.7.0         pyhd3deb0d_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pure_eval                      0.2.2         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pybaum                         0.1.3         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pybind11-abi                   4             hd8ed1ab_3           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pygments                       2.15.1        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pygmo                          2.19.5        py39hca2169e_1       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pysocks                        1.7.1         pyha2e5f31_6         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pytest                         7.4.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pytest-cov                     4.1.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pytest-xdist                   3.3.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   python                         3.9.16        h2782a2a_0_cpython   conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   python-dateutil                2.8.2         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   python-tzdata                  2023.3        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   python_abi                     3.9           3_cp39               conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pytz                           2023.3        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pyyaml                         6.0           py39hb9d737c_5       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   pyzmq                          25.1.0        py39hb257651_0       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   re2                            2023.03.02    h8c504da_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   readline                       8.2           h8228510_1           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   requests                       2.31.0        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   scipy                          1.11.1        py39h6183b62_0       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   scotch                         6.0.9         hb2e6521_2           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   setuptools                     68.0.0        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   six                            1.16.0        pyh6c4a22f_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   sqlalchemy                     2.0.17        py39hd1e30aa_0       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   stack_data                     0.6.2         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   statsmodels                    0.14.0        py39h0f8d45d_1       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   tbb                            2021.9.0      hf52228f_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   tenacity                       8.2.2         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   tk                             8.6.12        h27826a3_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   toml                           0.10.2        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   tomli                          2.0.1         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   tornado                        6.3.2         py39hd1e30aa_0       conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   tqdm                           4.65.0        pyhd8ed1ab_1         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   traitlets                      5.9.0         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   tranquilo                      0.0.4         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   typing-extensions              4.7.0         hd8ed1ab_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   typing_extensions              4.7.0         pyha770c72_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   tzdata                         2023c         h71feb2d_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   unixodbc                       2.3.10        h583eb01_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   urllib3                        2.0.3         pyhd8ed1ab_1         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   wcwidth                        0.2.6         pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   wheel                          0.40.0        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   xorg-libxau                    1.0.11        hd590300_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   xorg-libxdmcp                  1.1.3         h7f98852_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   xz                             5.2.6         h166bdaf_0           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   yaml                           0.2.5         h7f98852_2           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   zeromq                         4.3.4         h9c3ff4c_1           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   zipp                           3.15.0        pyhd8ed1ab_0         conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   zlib                           1.2.13        hd590300_5           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   zstd                           1.5.2         h3eb15da_6           conda-forge\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2753  ::endgroup::\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2705  Success - Main create build environment\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2699  ::set-env:: MSYS=winsymlinks:nativestrict\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2699  ::set-env:: MAMBA_ROOT_PREFIX=/home/runneradmin/micromamba-root\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2699  ::set-env:: MAMBA_EXE=/home/runneradmin/micromamba-bin/micromamba\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2699  ::add-path:: /home/runneradmin/micromamba-bin\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9] \u2b50 Run Main run pytest\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udc33  docker exec cmd=[bash -l /var/run/act/workflow/2] user= workdir=\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::inputs.postDeinit: auto\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::inputs.micromambaVersion: latest\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2753  ::group::Deinitializing micromamba ...\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Running shell command [\"/home/runneradmin/micromamba-bin/micromamba\",[\"shell\",\"deinit\",\"-s\",\"zsh\",\"-p\",\"/home/runneradmin/micromamba-root\",\"-y\",\"--log-level\",\"warning\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | [command]/home/runneradmin/micromamba-bin/micromamba shell deinit -s zsh -p /home/runneradmin/micromamba-root -y --log-level warning\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Resetting RC file \"/home/runneradmin/.zshrc\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Deleting config for root prefix \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Clearing mamba executable environment variable\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Removing the following in your \"/home/runneradmin/.zshrc\" file\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | # >>> mamba initialize >>>\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ...\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | # <<< mamba initialize <<<\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Running shell command [\"/home/runneradmin/micromamba-bin/micromamba\",[\"shell\",\"deinit\",\"-s\",\"bash\",\"-p\",\"/home/runneradmin/micromamba-root\",\"-y\",\"--log-level\",\"warning\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | [command]/home/runneradmin/micromamba-bin/micromamba shell deinit -s bash -p /home/runneradmin/micromamba-root -y --log-level warning\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Resetting RC file \"/home/runneradmin/.bashrc\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Deleting config for root prefix \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Clearing mamba executable environment variable\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Removing the following in your \"/home/runneradmin/.bashrc\" file\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | # >>> mamba initialize >>>\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | ...\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | # <<< mamba initialize <<<\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2753  ::endgroup::\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Checking zstd --version\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/micromamba-root/envs/estimagic'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/micromamba-root/envs/estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Cache Paths:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/micromamba-root/envs/estimagic\"]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Archive Path: /tmp/75789ff4-433d-4ece-94fc-1a212702933e/cache.tzst\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic --files-from manifest.txt --use-compress-program zstdmt\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ============================= test session starts ==============================\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | platform linux -- Python 3.9.16, pytest-7.4.0, pluggy-1.2.0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | configfile: pyproject.toml\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | plugins: xdist-3.3.1, cov-4.1.0\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | collected 1946 items\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | src/estimagic/utilities.py ..                                            [  0%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | src/estimagic/differentiation/derivatives.py .                           [  0%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | src/estimagic/differentiation/richardson_extrapolation.py ...            [  0%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | src/estimagic/logging/read_from_database.py ...                          [  0%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | src/estimagic/parameters/kernel_transformations.py .....                 [  0%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | src/estimagic/parameters/space_conversion.py ....                        [  0%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::File Size: 465486838\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Reserving Cache\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:37437/_apis/artifactcache/caches\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Saving Cache (ID: 1)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Upload cache\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:37437/_apis/artifactcache/caches/1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Upload concurrency: 4\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Upload chunk size: 33554432\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Awaiting all uploads\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 0 with content range: bytes 0-33554431/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 33554432 with content range: bytes 33554432-67108863/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 67108864 with content range: bytes 67108864-100663295/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 100663296 with content range: bytes 100663296-134217727/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 134217728 with content range: bytes 134217728-167772159/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 167772160 with content range: bytes 167772160-201326591/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 201326592 with content range: bytes 201326592-234881023/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 234881024 with content range: bytes 234881024-268435455/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 268435456 with content range: bytes 268435456-301989887/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 301989888 with content range: bytes 301989888-335544319/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 335544320 with content range: bytes 335544320-369098751/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 369098752 with content range: bytes 369098752-402653183/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 402653184 with content range: bytes 402653184-436207615/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Uploading chunk of size 29279222 bytes at offset 436207616 with content range: bytes 436207616-465486837/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Commiting cache\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Cache Size: ~444 MB (465486838 B)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:37437/_apis/artifactcache/caches/1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Cache saved successfully\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   | Cache saved with key: micromamba-env linux-64 Sat Jul 01 2023 file: 539faf43 extra: e0a578e9\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2705  Success - Post create build environment\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation]   \u2699  ::set-env:: MSYS=winsymlinks:nativestrict\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/test_batch_evaluators.py .............                             [  1%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/test_decorators.py .............                                   [  2%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/test_process_function.py ...                                       [  2%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/test_utilities.py ................................................ [  4%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ..                                                                       [  4%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/benchmarking/test_benchmark_reports.py ........................... [  6%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | .....                                                                    [  6%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/benchmarking/test_cartis_roberts.py .............................. [  8%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run code snippets in documentation] \ud83c\udfc1  Job succeeded\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ........................................................................ [ 11%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ....................                                                     [ 12%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/benchmarking/test_get_benchmark_problems.py ...................... [ 14%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ...........                                                              [ 14%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/benchmarking/test_more_wild.py ................................... [ 16%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ....................                                                     [ 17%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/benchmarking/test_noise_distributions.py .....                     [ 17%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/benchmarking/test_run_benchmark.py .....                           [ 17%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/dashboard/test_callbacks.py ..                                     [ 18%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/dashboard/test_colors.py ..                                        [ 18%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/dashboard/test_dashboard_app.py .............                      [ 18%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/dashboard/test_run_dashboard.py .                                  [ 18%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/differentiation/test_compare_derivatives_with_jax.py .......       [ 19%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/differentiation/test_derivatives.py .............................. [ 20%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ......                                                                   [ 21%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/differentiation/test_finite_differences.py ...                     [ 21%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/differentiation/test_generate_steps.py ...............             [ 21%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/estimation/test_estimate_ml.py .........x........x........x....... [ 23%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ...                                                                      [ 23%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/estimation/test_estimate_msm.py .................................. [ 25%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ...                                                                      [ 25%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/estimation/test_estimate_msm_dict_params_and_moments.py .          [ 25%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/estimation/test_msm_weighting.py .......                           [ 26%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/examples/test_criterion_functions.py ............                  [ 26%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/examples/test_logit.py ...                                         [ 27%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/inference/test_bootstrap.py ................                       [ 27%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/inference/test_bootstrap_ci.py ...................                 [ 28%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/inference/test_bootstrap_outcomes.py ........                      [ 29%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/inference/test_bootstrap_samples.py ......                         [ 29%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/inference/test_ml_covs.py ..............                           [ 30%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/inference/test_msm_covs.py ....                                    [ 30%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/inference/test_shared.py .............                             [ 31%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/logging/test_database_utilities.py ...........                     [ 31%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/logging/test_read_log.py ........                                  [ 32%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_bhhh.py ..                                       [ 32%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_convergence_report.py ...                        [ 32%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_criterion_versions.py .........                  [ 32%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_derivative_versions.py ......................... [ 34%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ......                                                                   [ 34%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_error_penalty.py .......................         [ 35%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_fides_options.py ........................        [ 36%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_history_collection.py ..........                 [ 37%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_history_tools.py ..                              [ 37%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_internal_criterion_and_derivative_template.py .. [ 37%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ....................................                                     [ 39%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_ipopt_options.py sssssssssssssssssssssssssssssss [ 41%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 44%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 48%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | sss                                                                      [ 48%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_jax_derivatives.py .....                         [ 48%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_linear_subsolvers.py ..............              [ 49%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_many_algorithms.py ............................. [ 51%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ............................................................             [ 54%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_multistart.py ...............                    [ 54%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_nag_optimizers.py .........                      [ 55%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_neldermead.py ............                       [ 55%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_optimization_helpers.py ......                   [ 56%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_optimizations_with_scaling.py ....               [ 56%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_optimize.py ...                                  [ 56%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_optimize_result.py ...                           [ 56%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_params_versions.py ............................. [ 58%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ...............                                                          [ 59%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_pounders_history.py ...............              [ 59%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_pounders_integration.py ......                   [ 60%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_pounders_unit.py s...x.............              [ 61%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_process_multistart_sample.py ..                  [ 61%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_process_result.py .                              [ 61%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_quadratic_subsolvers.py ........................ [ 62%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ......................                                                   [ 63%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_tao_optimizers.py sssssss                        [ 63%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_tiktak.py ...................................... [ 65%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ........................................                                 [ 67%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_useful_exceptions.py .......                     [ 68%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_with_advanced_constraints.py ........            [ 68%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_with_constraints.py ............................ [ 70%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ........................................................................ [ 73%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ........................................................................ [ 77%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ........................                                                 [ 78%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_with_logging.py ........                         [ 79%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_with_nonlinear_constraints.py ..........ss...... [ 80%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ....................s......ss                                            [ 81%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/parameters/test_block_trees.py ........                            [ 82%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/parameters/test_constraint_tools.py ...                            [ 82%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/parameters/test_conversion.py .................................... [ 84%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |                                                                          [ 84%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/parameters/test_kernel_transformations.py ........................ [ 85%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ........................                                                 [ 86%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/parameters/test_nonlinear_constraints.py ......................... [ 87%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ...................                                                      [ 88%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/parameters/test_parameter_bounds.py ...........                    [ 89%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/parameters/test_parameter_groups.py ...........                    [ 89%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/parameters/test_process_constraints.py ...                         [ 90%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/parameters/test_process_selectors.py ........................      [ 91%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/parameters/test_scale_conversion.py ...                            [ 91%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/parameters/test_space_conversion.py ...................            [ 92%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/parameters/test_tree_conversion.py ..........                      [ 92%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/parameters/test_tree_registry.py ......                            [ 93%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/sensitivity/test_msm_sensitivity.py ......                         [ 93%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/sensitivity/test_msm_sensitivity_via_estimate_msm.py ......        [ 93%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/visualization/test_convergence_plot.py .....                       [ 94%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/visualization/test_derivative_plot.py .....................        [ 95%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/visualization/test_deviation_plot.py ......                        [ 95%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/visualization/test_estimation_table.py ........................... [ 96%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ..                                                                       [ 96%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/visualization/test_history_plots.py .............................. [ 98%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ......                                                                   [ 98%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/visualization/test_lollipop_plot.py .                              [ 98%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/visualization/test_profile_plot.py ........                        [ 99%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/visualization/test_slice_plot.py ..............                    [100%]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | =============================== warnings summary ===============================\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_many_algorithms.py::test_algorithm_on_sum_of_squares[scipy_truncated_newton]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | tests/optimization/test_many_algorithms.py::test_algorithm_on_sum_of_squares_with_binding_bounds[scipy_truncated_newton]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/src/estimagic/optimization/scipy_optimizers.py:392: OptimizeWarning: Unknown solver options: maxiter\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   |     res = scipy.optimize.minimize(\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/report.xml -\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ---------- coverage: platform linux, python 3.9.16-final-0 -----------\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Coverage XML written to file coverage.xml\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ===== 1751 passed, 191 skipped, 4 xfailed, 2 warnings in 316.96s (0:05:16) =====\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2705  Success - Main run pytest\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9] \u2b50 Run Post create build environment\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/mamba-org-provision-with-micromamba@main/dist/post/index.js] user= workdir=\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::inputs.postDeinit: auto\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::inputs.micromambaVersion: latest\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2753  ::group::Deinitializing micromamba ...\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Running shell command [\"/home/runneradmin/micromamba-bin/micromamba\",[\"shell\",\"deinit\",\"-s\",\"zsh\",\"-p\",\"/home/runneradmin/micromamba-root\",\"-y\",\"--log-level\",\"warning\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | [command]/home/runneradmin/micromamba-bin/micromamba shell deinit -s zsh -p /home/runneradmin/micromamba-root -y --log-level warning\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Resetting RC file \"/home/runneradmin/.zshrc\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Deleting config for root prefix \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Clearing mamba executable environment variable\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Removing the following in your \"/home/runneradmin/.zshrc\" file\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | # >>> mamba initialize >>>\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ...\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | # <<< mamba initialize <<<\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Running shell command [\"/home/runneradmin/micromamba-bin/micromamba\",[\"shell\",\"deinit\",\"-s\",\"bash\",\"-p\",\"/home/runneradmin/micromamba-root\",\"-y\",\"--log-level\",\"warning\"]]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | [command]/home/runneradmin/micromamba-bin/micromamba shell deinit -s bash -p /home/runneradmin/micromamba-root -y --log-level warning\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Resetting RC file \"/home/runneradmin/.bashrc\"\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Deleting config for root prefix \n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Clearing mamba executable environment variable\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Removing the following in your \"/home/runneradmin/.bashrc\" file\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | # >>> mamba initialize >>>\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | ...\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | # <<< mamba initialize <<<\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2753  ::endgroup::\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Checking zstd --version\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/micromamba-root/envs/estimagic'\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/micromamba-root/envs/estimagic\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Cache Paths:\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/micromamba-root/envs/estimagic\"]\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Archive Path: /tmp/5a5b0618-928a-4ed5-bb86-3b2426e0b42a/cache.tzst\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic --files-from manifest.txt --use-compress-program zstdmt\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::File Size: 463146921\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Reserving Cache\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:37437/_apis/artifactcache/caches\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Saving Cache (ID: 2)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Upload cache\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:37437/_apis/artifactcache/caches/2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Upload concurrency: 4\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Upload chunk size: 33554432\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Awaiting all uploads\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 0 with content range: bytes 0-33554431/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 33554432 with content range: bytes 33554432-67108863/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 67108864 with content range: bytes 67108864-100663295/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 100663296 with content range: bytes 100663296-134217727/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 134217728 with content range: bytes 134217728-167772159/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 167772160 with content range: bytes 167772160-201326591/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 201326592 with content range: bytes 201326592-234881023/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 234881024 with content range: bytes 234881024-268435455/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 268435456 with content range: bytes 268435456-301989887/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 301989888 with content range: bytes 301989888-335544319/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 335544320 with content range: bytes 335544320-369098751/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 369098752 with content range: bytes 369098752-402653183/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 402653184 with content range: bytes 402653184-436207615/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Uploading chunk of size 26939305 bytes at offset 436207616 with content range: bytes 436207616-463146920/*\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Commiting cache\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Cache Size: ~442 MB (463146921 B)\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:37437/_apis/artifactcache/caches/2\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Cache saved successfully\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   | Cache saved with key: micromamba-env linux-64 Sat Jul 01 2023 file: 539faf43 extra: 321072b1\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2705  Success - Post create build environment\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9]   \u2699  ::set-env:: MSYS=winsymlinks:nativestrict\n[59b55ec5-3684-4f92-9e22-f0932361d524/Run tests for ubuntu-latest on 3.9] \ud83c\udfc1  Job succeeded\n",
        "stderr": "Error: failed to create container: 'Error response from daemon: Conflict. The container name \"/act-59b55ec5-3684-4f92-9e22-f0932361d524-Run-tests-for-ubuntu-l-6ebc56efe8011d9d13e6e6f6fa813a9a904012e7890d84d81e2b31fa089fec7e\" is already in use by container \"48fbf35e0650c692c6f89dd67c96821d736d0eb18944a5a9def6a84314aefa45\". You have to remove (or rename) that container to be able to reuse that name.'\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenSourceEconomics-estimagic/.github/workflows/main-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "59b55ec5-3684-4f92-9e22-f0932361d524",
        "build_tool": "pytest",
        "elapsed_time": 563.4706981182098
    }
}