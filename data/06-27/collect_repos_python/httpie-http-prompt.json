{
    "repository": "httpie/http-prompt",
    "stars": 8732,
    "language": "python",
    "size": 736,
    "clone_url": "https://github.com/httpie/http-prompt.git",
    "timestamp": "2023-07-01T10:49:05.518090Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_cli_args_bypasses_persistent_context",
                "time": 0.166,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_cli_arguments_with_spaces",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_config_file",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_env_only",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_env_with_options",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_env_with_url",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_httpie_oprions",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_incomplete_url1",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_incomplete_url2",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_incomplete_url3",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_persistent_context",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_press_ctrl_d",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_spec_basePath",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_spec_from_http",
                "time": 2.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_spec_from_http_only",
                "time": 0.218,
                "results": [
                    {
                        "result": "Failure",
                        "message": "TypeError: 'NoneType' object is not subscriptable",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_spec_from_local",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_spec_with_trailing_slash",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestCli",
                "name": "test_without_args",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestExecutionListenerSetCookies",
                "name": "test_ask_and_no",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestExecutionListenerSetCookies",
                "name": "test_ask_and_yes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestExecutionListenerSetCookies",
                "name": "test_auto",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli.TestExecutionListenerSetCookies",
                "name": "test_off",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_cd_absolute_path",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_cd_absolute_path_substring",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_cd_no_path",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_cd_no_path_substring",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_cd_relative_path",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_header_name",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_header_value",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_header_with_spanish",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_ls_absolute_path",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_ls_absolute_path_substring",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_ls_no_path",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_ls_no_path_substring",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_ls_relative_path",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_options_method",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_preview_then_action",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_querystring_with_chinese",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_rm_body_json_param",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_rm_body_param",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_rm_header",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_rm_option",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_rm_querystring_param",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_completer.TestCompleter",
                "name": "test_verify_option",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config.TestConfig",
                "name": "test_initialize",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config.TestConfig",
                "name": "test_load",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config.TestConfig",
                "name": "test_load_default",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config.TestConfig",
                "name": "test_load_user",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextio.TestContextIO",
                "name": "test_save_and_load_context_non_ascii",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_noop",
                "name": "test_empty_string",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_noop",
                "name": "test_spaces",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_env",
                "name": "test_env",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_env",
                "name": "test_env_append_to_file",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_env",
                "name": "test_env_non_ascii",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_env",
                "name": "test_env_non_ascii_and_write_to_file",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_env",
                "name": "test_env_with_spaces",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_env",
                "name": "test_env_write_to_file",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_env",
                "name": "test_env_write_to_file_with_env_vars",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_env",
                "name": "test_env_write_to_quoted_filename",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_source_and_exec",
                "name": "test_exec",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_source_and_exec",
                "name": "test_exec_escaped_filename",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_source_and_exec",
                "name": "test_exec_non_existing_file",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_source_and_exec",
                "name": "test_exec_quoted_filename",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_source_and_exec",
                "name": "test_exec_with_spaces",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_source_and_exec",
                "name": "test_source",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_source_and_exec",
                "name": "test_source_escaped_filename",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_source_and_exec",
                "name": "test_source_non_existing_file",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_source_and_exec",
                "name": "test_source_quoted_filename",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_source_and_exec",
                "name": "test_source_with_spaces",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_env_and_source",
                "name": "test_env_and_source",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_env_and_source",
                "name": "test_env_and_source_non_ascii",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_help",
                "name": "test_help",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_help",
                "name": "test_help_with_spaces",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_exit",
                "name": "test_exit",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_exit",
                "name": "test_exit_with_spaces",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_cd",
                "name": "test_change_base",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_cd",
                "name": "test_dot_dot",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_cd",
                "name": "test_many_levels",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_cd",
                "name": "test_path_with_trailing_slash",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_cd",
                "name": "test_root",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_cd",
                "name": "test_single_level",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_cd",
                "name": "test_url_with_trailing_slash",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_cd",
                "name": "test_without_url",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_body_json_param",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_body_json_param_escaped_colon",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_body_param",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_body_param_double_quoted",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_body_param_escaped",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_body_param_escaped_equal",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_body_reset",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_header",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_header_single_quoted",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_headers_reset",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_non_existing_key",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_non_existing_key_unicode",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_option",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_option_double_quoted",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_options_reset",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_querystring",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_querystring_double_quoted",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_querystring_reset",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_rm",
                "name": "test_reset",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_ls",
                "name": "test_absolute_path",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_ls",
                "name": "test_grep",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_ls",
                "name": "test_redirect_append",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_ls",
                "name": "test_redirect_write",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_ls",
                "name": "test_relative_path",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestExecution_ls",
                "name": "test_root",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_body_param_escaped_chars",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_body_param_key_escaped_quote",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_body_param_value_escaped_quote",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_body_param_value_with_double_quotes",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_body_param_value_with_single_quotes",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_body_param_with_double_quotes",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_body_param_with_spanish",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_escape_colon",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_escape_equal",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_header_escaped_chars",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_header_value_escaped_quote",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_header_value_with_double_quotes",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_header_value_with_single_quotes",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_header_with_double_quotes",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_header_with_single_quotes",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_long_option_names",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_long_option_names_with_its_prefix",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_long_short_option_names_mixed",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_mixed",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_multi_querystring",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_option_and_body_param",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_querystring_escaped_chars",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_querystring_key_escaped_quote",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_querystring_with_chinese",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_querystring_with_double_quotes",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_querystring_with_single_quotes",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_querytstring_value_escaped_quote",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_raw_json_array",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_raw_json_array_quoted",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_raw_json_integer",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_raw_json_object",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_raw_json_object_quoted",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_raw_json_string",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_simple_body_params",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_simple_headers",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestMutation",
                "name": "test_simple_querystring",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_delete",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_delete_uppercase",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_get",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_get_multi_querystring",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_get_uppercase",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_head",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_head_uppercase",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_options",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_patch",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_patch_uppercase",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_post",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_post_raw_json_array",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_post_raw_json_array_quoted",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_post_raw_json_boolean",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_post_raw_json_integer",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_post_raw_json_object",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_post_raw_json_object_quoted",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_post_uppercase",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_post_with_absolute_path",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_post_with_full_https_url",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_post_with_full_url",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpAction",
                "name": "test_post_with_relative_path",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpActionRedirection",
                "name": "test_get",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpBin",
                "name": "test_get_and_tee",
                "time": 1.912,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpBin",
                "name": "test_get_image",
                "time": 2.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpBin",
                "name": "test_get_querystring",
                "time": 10.258,
                "results": [
                    {
                        "result": "Failure",
                        "message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpBin",
                "name": "test_post_form",
                "time": 2.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHttpBin",
                "name": "test_post_json",
                "time": 2.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreview",
                "name": "test_httpie_with_absolute_path",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreview",
                "name": "test_httpie_with_full_https_url",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreview",
                "name": "test_httpie_with_full_url",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreview",
                "name": "test_httpie_with_multi_querystring",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreview",
                "name": "test_httpie_with_post",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreview",
                "name": "test_httpie_with_quotes",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreview",
                "name": "test_httpie_without_args",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestPipe",
                "name": "test_env_grep",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestPipe",
                "name": "test_httpie_sed",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestPipe",
                "name": "test_httpie_sed_with_echo",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_bad_command",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_full_dquoted_body_param",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_full_dquoted_header",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_full_squoted_body_param",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_full_squoted_header",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_full_squoted_querystring",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_partial_dquoted_option",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_partial_full_dquoted_header",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_partial_squoted_option",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_partial_unquoted_option",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_partial_value_dquoted_header",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_pipe_and_grep",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_unquoted_body_param",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_unquoted_header",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_unquoted_option",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_unquoted_querystring",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_value_dquoted_header",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_value_dquoted_querystring",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_value_squoted_body_param",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_value_squoted_header",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestShellSubstitution",
                "name": "test_value_squoted_querystring",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreviewRedirection",
                "name": "test_httpie_redirect_append",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreviewRedirection",
                "name": "test_httpie_redirect_append_quoted_filename",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreviewRedirection",
                "name": "test_httpie_redirect_append_without_spaces",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreviewRedirection",
                "name": "test_httpie_redirect_write",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreviewRedirection",
                "name": "test_httpie_redirect_write_escaped_filename",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreviewRedirection",
                "name": "test_httpie_redirect_write_quoted_filename",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestCommandPreviewRedirection",
                "name": "test_httpie_redirect_write_with_args",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_installation",
                "name": "test_help",
                "time": 1.623,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_installation",
                "name": "test_version",
                "time": 1.58,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interaction.TestInteraction",
                "name": "test_interaction",
                "time": 3.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_interaction.TestInteraction",
                "name": "test_vi_mode",
                "time": 32.077,
                "results": [
                    {
                        "result": "Failure",
                        "message": "pexpect.exceptions.TIMEOUT: Timeout exceeded.\n<pexpect.pty_spawn.spawn object at 0x7fdcff67edd8>\ncommand: /opt/hostedtoolcache/Python/3.6.14/x64/bin/http-prompt\nargs: ['/opt/hostedtoolcache/Python/3.6.14/x64/bin/http-prompt']\nbuffer (last 100 chars): b'\\x1b[23C\\x1b[?7h\\x1b[0m\\x1b[?12l\\x1b[?25h'\nbefore (last 100 chars): b'                                                              \\r\\x1b[79C \\r\\x1b[7A\\x1b[23C\\x1b[?7h\\x1b[0m\\x1b[?12l\\x1b[?25h'\nafter: <class 'pexpect.exceptions.TIMEOUT'>\nmatch: None\nmatch_index: None\nexitstatus: None\nflag_eof: False\npid: 158\nchild_fd: 13\nclosed: False\ntimeout: 30\ndelimiter: <class 'pexpect.exceptions.EOF'>\nlogfile: None\nlogfile_read: None\nlogfile_send: None\nmaxread: 2000\nignorecase: False\nsearchwindowsize: None\ndelaybeforesend: 0.05\ndelayafterclose: 0.1\ndelayafterterminate: 0.1\nsearcher: searcher_string:\n    0: b'http http://localhost:8000'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_mutation",
                "name": "test_body_param",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_mutation",
                "name": "test_body_param_escaped_equal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_mutation",
                "name": "test_header",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_mutation",
                "name": "test_json_array",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_mutation",
                "name": "test_json_array_quoted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_mutation",
                "name": "test_json_boolean",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_mutation",
                "name": "test_json_escaped_colon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_mutation",
                "name": "test_json_integer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_mutation",
                "name": "test_json_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_mutation",
                "name": "test_json_object_quoted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_mutation",
                "name": "test_json_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_mutation",
                "name": "test_parameter_name_including_http_method_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_mutation",
                "name": "test_querystring",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_cd",
                "name": "test_double_quoted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_cd",
                "name": "test_escape",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_cd",
                "name": "test_leading_trailing_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_cd",
                "name": "test_second_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_cd",
                "name": "test_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_cd",
                "name": "test_single_quoted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_ls",
                "name": "test_leading_trailing_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_ls",
                "name": "test_no_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_ls",
                "name": "test_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_ls",
                "name": "test_redirect",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_ls",
                "name": "test_second_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_env",
                "name": "test_env_append",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_env",
                "name": "test_env_append_escaped_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_env",
                "name": "test_env_pipe",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_env",
                "name": "test_env_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_env",
                "name": "test_env_with_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_env",
                "name": "test_env_write",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_env",
                "name": "test_env_write_quoted_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_rm",
                "name": "test_body_param",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_rm",
                "name": "test_body_param_single_quoted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_rm",
                "name": "test_header",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_rm",
                "name": "test_header_escaped",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_rm",
                "name": "test_invalid_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_rm",
                "name": "test_option",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_rm",
                "name": "test_option_leading_trailing_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_rm",
                "name": "test_querystring",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_rm",
                "name": "test_querystring_double_quoted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_rm",
                "name": "test_reset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_help",
                "name": "test_help_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_help",
                "name": "test_help_with_spaces",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_source",
                "name": "test_source_escaped_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_source",
                "name": "test_source_quoted_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_source",
                "name": "test_source_simple_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_source",
                "name": "test_source_with_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_exec",
                "name": "test_exec_escaped_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_exec",
                "name": "test_exec_quoted_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_exec",
                "name": "test_exec_simple_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_exec",
                "name": "test_exec_with_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_exit",
                "name": "test_exit_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexer_exit",
                "name": "test_exit_with_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreview",
                "name": "test_httpie_absolute_url",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreview",
                "name": "test_httpie_body_param_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreview",
                "name": "test_httpie_option_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreview",
                "name": "test_httpie_options",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreview",
                "name": "test_httpie_relative_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreview",
                "name": "test_httpie_without_action",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreview",
                "name": "test_httpie_without_action_and_url",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestShellCode",
                "name": "test_header_option_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestShellCode",
                "name": "test_httpie_body_param",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestShellCode",
                "name": "test_httpie_post_pipe",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestShellCode",
                "name": "test_post_pipe",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestShellCode",
                "name": "test_unquoted_bodystring",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestShellCode",
                "name": "test_unquoted_querystring",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_curl_append",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_curl_append_quoted_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_curl_append_with_many_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_curl_append_with_post_param",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_curl_append_without_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_curl_write",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_curl_write_quoted_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_curl_write_with_post_param",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_curl_write_without_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_httpie_append",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_httpie_append_quoted_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_httpie_append_with_many_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_httpie_append_with_post_param",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_httpie_append_without_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_httpie_write",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_httpie_write_quoted_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_httpie_write_with_post_param",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerPreviewRedirection",
                "name": "test_httpie_write_without_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerAction",
                "name": "test_capital_get_with_querystring_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerAction",
                "name": "test_capital_head",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerAction",
                "name": "test_delete_random_capitals",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerAction",
                "name": "test_get",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerAction",
                "name": "test_get_with_querystring_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerAction",
                "name": "test_options",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerAction",
                "name": "test_patch",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerAction",
                "name": "test_post_relative_path",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerAction",
                "name": "test_post_with_body_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerAction",
                "name": "test_post_with_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerAction",
                "name": "test_post_with_spaces_and_body_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerActionRedirection",
                "name": "test_capital_head_write",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerActionRedirection",
                "name": "test_get_append",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerActionRedirection",
                "name": "test_get_append_escaped_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerActionRedirection",
                "name": "test_get_append_with_querystring_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerActionRedirection",
                "name": "test_get_write",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerActionRedirection",
                "name": "test_get_write_quoted_filename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerActionRedirection",
                "name": "test_post_append_with_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerActionRedirection",
                "name": "test_post_append_with_spaces_and_body_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexer.TestLexerActionRedirection",
                "name": "test_post_write_escaped_filename_with_body_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tree.TestNode",
                "name": "test_add_path_and_find_child",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tree.TestNode",
                "name": "test_cmp_different_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tree.TestNode",
                "name": "test_cmp_same_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tree.TestNode",
                "name": "test_eq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tree.TestNode",
                "name": "test_find_child_wildcard",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tree.TestNode",
                "name": "test_illegal_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tree.TestNode",
                "name": "test_ls",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tree.TestNode",
                "name": "test_ls_dot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tree.TestNode",
                "name": "test_ls_non_existing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tree.TestNode",
                "name": "test_ls_parent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tree.TestNode",
                "name": "test_ls_root",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tree.TestNode",
                "name": "test_ls_sort_by_types",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tree.TestNode",
                "name": "test_str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_colformat_zero_items",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_colformat_one_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_colformat_single_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_colformat_single_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_colformat_multi_columns_no_remainder",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_colformat_multi_columns_remainder_1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_colformat_multi_columns_remainder_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_colformat_wider_than_terminal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_colformat_long_short_mixed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_colformat_github_top_endpoints",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xdg.TestXDG",
                "name": "test_get_app_config_home",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xdg.TestXDG",
                "name": "test_get_app_data_home",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xdg.TestXDG",
                "name": "test_get_resource_config_dir",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xdg.TestXDG",
                "name": "test_get_resource_data_dir",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_context",
                "name": "test_creation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_context",
                "name": "test_creation_with_longer_url",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_context",
                "name": "test_eq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_context",
                "name": "test_copy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_context",
                "name": "test_update",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_context",
                "name": "test_spec",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_context",
                "name": "test_override",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_transform",
                "name": "test_extract_args_for_httpie_main_get",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_transform",
                "name": "test_extract_args_for_httpie_main_post",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_transform",
                "name": "test_extract_raw_json_args_for_httpie_main_post",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_transform",
                "name": "test_format_to_httpie_get",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_transform",
                "name": "test_format_to_httpie_post",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_transform",
                "name": "test_format_to_http_prompt_1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_transform",
                "name": "test_format_to_http_prompt_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_transform",
                "name": "test_format_raw_json_string_to_http_prompt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.context.test_transform",
                "name": "test_extract_httpie_options",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test] \ud83d\ude80  Start image=crawlergpt:latest\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/httpie-http-prompt] user=0 workdir=\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.6]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test] \u2b50 Run Main actions/checkout@v1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \u2705  Success - Main actions/checkout@v1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test] \u2b50 Run Main actions/setup-python@v1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/fd35d9af-000d-4008-9b49-7edf90822c99/act/actions-setup-python@v1/ dst=/var/run/act/actions/actions-setup-python@v1/\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v1/] user=0 workdir=\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v1/dist/index.js] user= workdir=\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::isExplicit: \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::explicit? false\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::explicit? true\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::explicit? true\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::explicit? true\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::explicit? true\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::explicit? true\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::explicit? true\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::matched: 3.6.14\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Successfully setup CPython (3.6.14)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v1/.github/python.json\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \u2705  Success - Main actions/setup-python@v1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \u2699  ::set-output:: python-version=3.6.14\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test] \u2b50 Run Main python -m pip install -U pip setuptools wheel\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (21.2.4)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting pip\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading pip-21.3.1-py3-none-any.whl (1.7 MB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (40.6.2)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting setuptools\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading setuptools-59.6.0-py3-none-any.whl (952 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting wheel\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading wheel-0.37.1-py2.py3-none-any.whl (35 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Installing collected packages: wheel, setuptools, pip\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Attempting uninstall: setuptools\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     Found existing installation: setuptools 40.6.2\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     Uninstalling setuptools-40.6.2:\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |       Successfully uninstalled setuptools-40.6.2\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Attempting uninstall: pip\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     Found existing installation: pip 21.2.4\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     Uninstalling pip-21.2.4:\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |       Successfully uninstalled pip-21.2.4\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Successfully installed pip-21.3.1 setuptools-59.6.0 wheel-0.37.1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \u2705  Success - Main python -m pip install -U pip setuptools wheel\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test] \u2b50 Run Main python -m pip install -r requirements-test.txt\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting pexpect>=4.2.1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting pytest>=3.0.6\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading pytest-7.0.1-py3-none-any.whl (296 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting pytest-cov>=2.4.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading pytest_cov-4.0.0-py3-none-any.whl (21 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: wheel in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from -r requirements-test.txt (line 4)) (0.37.1)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting twine\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading twine-3.8.0-py3-none-any.whl (36 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting ptyprocess>=0.5\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting importlib-metadata>=0.12\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading importlib_metadata-4.8.3-py3-none-any.whl (17 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting attrs>=19.2.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading attrs-22.2.0-py3-none-any.whl (60 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting iniconfig\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading iniconfig-1.1.1-py2.py3-none-any.whl (5.0 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting pluggy<2.0,>=0.12\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting packaging\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading packaging-21.3-py3-none-any.whl (40 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting py>=1.8.2\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting tomli>=1.0.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading tomli-1.2.3-py3-none-any.whl (12 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting coverage[toml]>=5.2.1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading coverage-6.2-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (212 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting tqdm>=4.14\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading tqdm-4.64.1-py2.py3-none-any.whl (78 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting keyring>=15.1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading keyring-23.4.1-py3-none-any.whl (33 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting requests>=2.20\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting pkginfo>=1.8.1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting requests-toolbelt!=0.9.0,>=0.8.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting rfc3986>=1.4.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading rfc3986-1.5.0-py2.py3-none-any.whl (31 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting colorama>=0.4.3\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading colorama-0.4.5-py2.py3-none-any.whl (16 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting readme-renderer>=21.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading readme_renderer-34.0-py3-none-any.whl (16 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting urllib3>=1.26.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting typing-extensions>=3.6.4\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading typing_extensions-4.1.1-py3-none-any.whl (26 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting zipp>=0.5\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading zipp-3.6.0-py3-none-any.whl (5.3 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting jeepney>=0.4.2\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading jeepney-0.7.1-py3-none-any.whl (54 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting SecretStorage>=3.2\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting docutils>=0.13.1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading docutils-0.18.1-py2.py3-none-any.whl (570 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting bleach>=2.1.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading bleach-4.1.0-py2.py3-none-any.whl (157 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting Pygments>=2.5.1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading Pygments-2.14.0-py3-none-any.whl (1.1 MB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting charset-normalizer~=2.0.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading charset_normalizer-2.0.12-py3-none-any.whl (39 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting idna<4,>=2.5\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting certifi>=2017.4.17\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting importlib-resources\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading importlib_resources-5.4.0-py3-none-any.whl (28 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting pyparsing!=3.0.5,>=2.0.2\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting six>=1.9.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting webencodings\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting cryptography>=2.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading cryptography-40.0.2-cp36-abi3-manylinux_2_28_x86_64.whl (3.7 MB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting cffi>=1.12\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading cffi-1.15.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.whl (402 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting pycparser\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Installing collected packages: pycparser, zipp, typing-extensions, pyparsing, cffi, webencodings, urllib3, six, packaging, jeepney, importlib-metadata, idna, cryptography, charset-normalizer, certifi, tomli, SecretStorage, requests, Pygments, py, pluggy, iniconfig, importlib-resources, docutils, coverage, bleach, attrs, tqdm, rfc3986, requests-toolbelt, readme-renderer, pytest, ptyprocess, pkginfo, keyring, colorama, twine, pytest-cov, pexpect\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Successfully installed Pygments-2.14.0 SecretStorage-3.3.3 attrs-22.2.0 bleach-4.1.0 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-2.0.12 colorama-0.4.5 coverage-6.2 cryptography-40.0.2 docutils-0.18.1 idna-3.4 importlib-metadata-4.8.3 importlib-resources-5.4.0 iniconfig-1.1.1 jeepney-0.7.1 keyring-23.4.1 packaging-21.3 pexpect-4.8.0 pkginfo-1.9.6 pluggy-1.0.0 ptyprocess-0.7.0 py-1.11.0 pycparser-2.21 pyparsing-3.1.0 pytest-7.0.1 pytest-cov-4.0.0 readme-renderer-34.0 requests-2.27.1 requests-toolbelt-1.0.0 rfc3986-1.5.0 six-1.16.0 tomli-1.2.3 tqdm-4.64.1 twine-3.8.0 typing-extensions-4.1.1 urllib3-1.26.16 webencodings-0.5.1 zipp-3.6.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \u2705  Success - Main python -m pip install -r requirements-test.txt\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test] \u2b50 Run Main python -m pip install -e .\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/httpie-http-prompt\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Preparing metadata (setup.py): started\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Preparing metadata (setup.py): finished with status 'done'\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting click>=5.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading click-8.0.4-py3-none-any.whl (97 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting httpie>=2.5.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading httpie-2.6.0-py3-none-any.whl (63 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting parsimonious>=0.6.2\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading parsimonious-0.10.0-py3-none-any.whl (48 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting prompt-toolkit<3.0.0,>=2.0.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading prompt_toolkit-2.0.10-py3-none-any.whl (340 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: Pygments>=2.1.0 in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from http-prompt==2.1.0) (2.14.0)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting PyYAML>=3.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading PyYAML-6.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (603 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: importlib-metadata in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from click>=5.0->http-prompt==2.1.0) (4.8.3)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: requests[socks]>=2.22.0 in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from httpie>=2.5.0->http-prompt==2.1.0) (2.27.1)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from httpie>=2.5.0->http-prompt==2.1.0) (59.6.0)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: charset-normalizer>=2.0.0 in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from httpie>=2.5.0->http-prompt==2.1.0) (2.0.12)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting defusedxml>=0.6.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading defusedxml-0.7.1-py2.py3-none-any.whl (25 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: requests-toolbelt>=0.9.1 in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from httpie>=2.5.0->http-prompt==2.1.0) (1.0.0)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting regex>=2022.3.15\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading regex-2023.6.3-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (756 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: six>=1.9.0 in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from prompt-toolkit<3.0.0,>=2.0.0->http-prompt==2.1.0) (1.16.0)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting wcwidth\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading wcwidth-0.2.6-py2.py3-none-any.whl (29 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: urllib3<1.27,>=1.21.1 in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from requests[socks]>=2.22.0->httpie>=2.5.0->http-prompt==2.1.0) (1.26.16)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from requests[socks]>=2.22.0->httpie>=2.5.0->http-prompt==2.1.0) (2023.5.7)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from requests[socks]>=2.22.0->httpie>=2.5.0->http-prompt==2.1.0) (3.4)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Collecting PySocks!=1.5.7,>=1.5.6\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Downloading PySocks-1.7.1-py3-none-any.whl (16 kB)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: zipp>=0.5 in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from importlib-metadata->click>=5.0->http-prompt==2.1.0) (3.6.0)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Requirement already satisfied: typing-extensions>=3.6.4 in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from importlib-metadata->click>=5.0->http-prompt==2.1.0) (4.1.1)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Installing collected packages: PySocks, wcwidth, regex, defusedxml, PyYAML, prompt-toolkit, parsimonious, httpie, click, http-prompt\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   Running setup.py develop for http-prompt\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Successfully installed PySocks-1.7.1 PyYAML-6.0 click-8.0.4 defusedxml-0.7.1 http-prompt-2.1.0 httpie-2.6.0 parsimonious-0.10.0 prompt-toolkit-2.0.10 regex-2023.6.3 wcwidth-0.2.6\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \u2705  Success - Main python -m pip install -e .\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test] \u2b50 Run Main python -m pytest --junitxml=report.xml\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | ============================= test session starts ==============================\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | platform linux -- Python 3.6.14, pytest-7.0.1, pluggy-1.0.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/httpie-http-prompt, configfile: tox.ini, testpaths: tests\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | plugins: cov-4.0.0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | collected 361 items\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_cli.py ..............F.......                                 [  6%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_completer.py ......................                           [ 12%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_config.py ....                                                [ 13%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_contextio.py .                                                [ 13%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_execution.py ................................................ [ 26%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | ........................................................................ [ 46%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | F........................................                                [ 58%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_installation.py ..                                            [ 58%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_interaction.py .F                                             [ 59%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_lexer.py .................................................... [ 73%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | ....................................................                     [ 88%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_tree.py .............                                         [ 91%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_utils.py ..........                                           [ 94%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_xdg.py ....                                                   [ 95%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/context/test_context.py .......                                    [ 97%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/context/test_transform.py .........                                [100%]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | =================================== FAILURES ===================================\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | _______________________ TestCli.test_spec_from_http_only _______________________\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | self = <tests.test_cli.TestCli testMethod=test_spec_from_http_only>\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     def test_spec_from_http_only(self):\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         spec_url = (\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             'https://api.apis.guru/v2/specs/medium.com/1.0.0/swagger.json')\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | >       result, context = run_and_exit(['--spec', spec_url])\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_cli.py:202: \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | cli_args = ['--spec', 'https://api.apis.guru/v2/specs/medium.com/1.0.0/swagger.json']\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | prompt_commands = ['exit']\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     def run_and_exit(cli_args=None, prompt_commands=None):\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         \"\"\"Run http-prompt executable, execute some prompt commands, and exit.\"\"\"\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         if cli_args is None:\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             cli_args = []\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             # Make sure last command is 'exit'\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         if prompt_commands is None:\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             prompt_commands = ['exit']\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         else:\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             prompt_commands += ['exit']\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         # Fool cli() so that it believes we're running from CLI instead of pytest.\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         # We will restore it at the end of the function.\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         orig_argv = sys.argv\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         sys.argv = ['http-prompt'] + cli_args\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         try:\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             with patch.multiple('http_prompt.cli',\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |                                 prompt=DEFAULT, execute=DEFAULT) as mocks:\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |                 mocks['execute'].side_effect = execute\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |                 # prompt() is mocked to return the command in 'prompt_commands' in\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |                 # sequence, i.e., prompt() returns prompt_commands[i-1] when it is\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |                 # called for the ith time\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |                 mocks['prompt'].side_effect = prompt_commands\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |                 result = CliRunner().invoke(cli, cli_args)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | >               context = mocks['execute'].call_args[0][1]\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E               TypeError: 'NoneType' object is not subscriptable\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_cli.py:43: TypeError\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | _______________________ TestHttpBin.test_get_querystring _______________________\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | self = <tests.test_execution.TestHttpBin testMethod=test_get_querystring>\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     def test_get_querystring(self):\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         data = self.execute_redirection(\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             'get /get id==1234 X-Custom-Header:5678')\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | >       data = json.loads(data.decode())\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_execution.py:1286: \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/json/__init__.py:354: in loads\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     return _default_decoder.decode(s)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/json/decoder.py:339: in decode\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | self = <json.decoder.JSONDecoder object at 0x7fdd01749940>\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | s = '<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | idx = 0\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     def raw_decode(self, s, idx=0):\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         a JSON document) and return a 2-tuple of the Python\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         representation and the index in ``s`` where the document ended.\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         This can be used to decode a JSON document from a string that may\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         have extraneous data at the end.\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         \"\"\"\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         try:\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             obj, end = self.scan_once(s, idx)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         except StopIteration as err:\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | >           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/json/decoder.py:357: JSONDecodeError\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | _________________________ TestInteraction.test_vi_mode _________________________\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | self = <tests.test_interaction.TestInteraction testMethod=test_vi_mode>\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     @pytest.mark.skipif(sys.platform == 'win32',\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |                         reason=\"pexpect doesn't work well on Windows\")\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     @pytest.mark.slow\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     def test_vi_mode(self):\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         self.write_config('vi = True\\n')\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         bin_path = get_http_prompt_path()\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         child = pexpect.spawn(bin_path, env=os.environ)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         child.expect_exact('http://localhost:8000>')\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         # Enter 'htpie', switch to command mode (ESC),\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         # move two chars left (hh), and insert (i) a 't'\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         child.send('htpie')\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         child.send('\\x1b')\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         child.sendline('hhit')\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | >       child.expect_exact('http http://localhost:8000')\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_interaction.py:71: \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages/pexpect/spawnbase.py:421: in expect_exact\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     return exp.expect_loop(timeout)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages/pexpect/expect.py:181: in expect_loop\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     return self.timeout(e)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | self = <pexpect.expect.Expecter object at 0x7fdcff67ef98>\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | err = TIMEOUT('Timeout exceeded.',)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     def timeout(self, err=None):\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         spawn = self.spawn\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         spawn.before = spawn._before.getvalue()\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         spawn.after = TIMEOUT\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         index = self.searcher.timeout_index\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         if index >= 0:\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             spawn.match = TIMEOUT\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             spawn.match_index = index\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             return index\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |         else:\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             spawn.match = None\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             spawn.match_index = None\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             msg = str(spawn)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             msg += '\\nsearcher: %s' % self.searcher\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             if err is not None:\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |                 msg = str(err) + '\\n' + msg\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             exc = TIMEOUT(msg)\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |             exc.__cause__ = None    # in Python 3.x we can use \"raise exc from None\"\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | >           raise exc\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           pexpect.exceptions.TIMEOUT: Timeout exceeded.\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           <pexpect.pty_spawn.spawn object at 0x7fdcff67edd8>\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           command: /opt/hostedtoolcache/Python/3.6.14/x64/bin/http-prompt\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           args: ['/opt/hostedtoolcache/Python/3.6.14/x64/bin/http-prompt']\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           buffer (last 100 chars): b'\\x1b[23C\\x1b[?7h\\x1b[0m\\x1b[?12l\\x1b[?25h'\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           before (last 100 chars): b'                                                              \\r\\x1b[79C \\r\\x1b[7A\\x1b[23C\\x1b[?7h\\x1b[0m\\x1b[?12l\\x1b[?25h'\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           after: <class 'pexpect.exceptions.TIMEOUT'>\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           match: None\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           match_index: None\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           exitstatus: None\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           flag_eof: False\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           pid: 158\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           child_fd: 13\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           closed: False\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           timeout: 30\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           delimiter: <class 'pexpect.exceptions.EOF'>\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           logfile: None\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           logfile_read: None\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           logfile_send: None\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           maxread: 2000\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           ignorecase: False\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           searchwindowsize: None\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           delaybeforesend: 0.05\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           delayafterclose: 0.1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           delayafterterminate: 0.1\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E           searcher: searcher_string:\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | E               0: b'http http://localhost:8000'\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages/pexpect/expect.py:144: TIMEOUT\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | =============================== warnings summary ===============================\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_execution.py:1222\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/httpie-http-prompt/tests/test_execution.py:1222: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     @pytest.mark.slow\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_installation.py:20\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/httpie-http-prompt/tests/test_installation.py:20: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     @pytest.mark.slow\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_installation.py:26\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/httpie-http-prompt/tests/test_installation.py:26: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     @pytest.mark.slow\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_interaction.py:43\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/httpie-http-prompt/tests/test_interaction.py:43: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     @pytest.mark.slow\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | tests/test_interaction.py:56\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/httpie-http-prompt/tests/test_interaction.py:56: PytestUnknownMarkWarning: Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   |     @pytest.mark.slow\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/httpie-http-prompt/report.xml -\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | ---------- coverage: platform linux, python 3.6.14-final-0 -----------\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | Name                               Stmts   Miss  Cover   Missing\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | ----------------------------------------------------------------\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/__init__.py                1      0   100%\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/cli.py                   120      9    92%   61, 109-115, 125, 161\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/completer.py             101      2    98%   52, 154\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/completion.py              9      0   100%\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/config.py                 38      0   100%\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/context/__init__.py       68      3    96%   19-21\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/context/transform.py      63     12    81%   9, 55-58, 85, 90, 95-101\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/contextio.py              22      0   100%\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/defaultconfig.py           5      0   100%\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/execution.py             333     39    88%   123, 144, 187, 334-336, 365-366, 440, 446, 449, 461, 471-472, 485-490, 519-526, 530-532, 535-537, 553-556, 578-580\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/lexer.py                  15      0   100%\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/options.py                 7      0   100%\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/output.py                 32      5    84%   18, 27, 30, 47, 56\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/tree.py                   59     10    83%   8, 16, 19, 25, 29, 65, 67-68, 74-75\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/utils.py                  56      5    91%   19, 22, 35, 48, 69\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | http_prompt/xdg.py                    15      3    80%   20-22\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | ----------------------------------------------------------------\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | TOTAL                                944     88    91%\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | \n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | =========================== short test summary info ============================\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | FAILED tests/test_cli.py::TestCli::test_spec_from_http_only - TypeError: 'Non...\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | FAILED tests/test_execution.py::TestHttpBin::test_get_querystring - json.deco...\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | FAILED tests/test_interaction.py::TestInteraction::test_vi_mode - pexpect.exc...\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   | ============= 3 failed, 358 passed, 5 warnings in 65.34s (0:01:05) =============\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test]   \u274c  Failure - Main python -m pytest --junitxml=report.xml\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test] exitcode '1': failure\n[9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c/test] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'test' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/httpie-http-prompt/.github/workflows/build-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "9f736b5a-4d4c-4c4a-9a4a-71efd55d1d0c",
        "build_tool": "pytest",
        "elapsed_time": 336.862642288208
    }
}