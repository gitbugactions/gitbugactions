{
    "repository": "supabase/vecs",
    "stars": 99,
    "language": "python",
    "size": 6601,
    "clone_url": "https://github.com/supabase/vecs.git",
    "timestamp": "2023-07-01T18:28:18.804140Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "src.tests.test_client",
                "name": "test_create_collection",
                "time": 0.074,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_client",
                "name": "test_get_collection",
                "time": 0.003,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_client",
                "name": "test_list_collections",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_client",
                "name": "test_delete_collection",
                "time": 0.003,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_client",
                "name": "test_dispose",
                "time": 0.004,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_upsert",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_fetch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_delete",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_repr",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_getitem",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_query",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_query_filters",
                "time": 0.003,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_filters_eq",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_access_index",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_create_index",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_cosine_index_query",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_l2_index_query",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_max_inner_product_index_query",
                "time": 0.003,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_mismatch_measure",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "src.tests.test_collection",
                "name": "test_is_indexed_for_measure",
                "time": 0.003,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[4b2c0882-8954-40d2-a58e-6941df27959b/build] \ud83d\ude80  Start image=crawlergpt:latest\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/supabase-vecs] user=0 workdir=\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[4b2c0882-8954-40d2-a58e-6941df27959b/build] \ud83e\uddea  Matrix: map[postgres-version:15.1.0.87 python-version:3.7]\n[4b2c0882-8954-40d2-a58e-6941df27959b/build] \u2b50 Run Main actions/checkout@v3\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2705  Success - Main actions/checkout@v3\n[4b2c0882-8954-40d2-a58e-6941df27959b/build] \u2b50 Run Main Set up Python 3.7\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/2a57e392-346f-4196-af9b-0922ab54c130/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2753  ::group::Installed versions\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::isExplicit: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::explicit? false\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::explicit? true\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::explicit? true\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::explicit? true\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::explicit? true\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::explicit? true\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::explicit? true\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::matched: 3.7.11\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Successfully set up CPython (3.7.11)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2753  ::endgroup::\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2705  Success - Main Set up Python 3.7\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2699  ::set-output:: python-version=3.7.11\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build] \u2b50 Run Main install\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting pip\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Installing collected packages: pip\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Attempting uninstall: pip\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     Found existing installation: pip 21.2.4\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     Uninstalling pip-21.2.4:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |       Successfully uninstalled pip-21.2.4\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Successfully installed pip-23.1.2\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting wheel\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading wheel-0.40.0-py3-none-any.whl (64 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 64.5/64.5 kB 981.7 kB/s eta 0:00:00\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Installing collected packages: wheel\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Successfully installed wheel-0.40.0\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | [notice] To update, run: pip install --upgrade pip\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/supabase-vecs\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Installing build dependencies: started\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Installing build dependencies: finished with status 'done'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Checking if build backend supports build_editable: started\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Checking if build backend supports build_editable: finished with status 'done'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Getting requirements to build editable: started\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Getting requirements to build editable: finished with status 'done'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Preparing editable metadata (pyproject.toml): started\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting pgvector==0.1.* (from vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading pgvector-0.1.8-py2.py3-none-any.whl (7.6 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting sqlalchemy==2.* (from vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading SQLAlchemy-2.0.17-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.7 MB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.7/2.7 MB 22.7 MB/s eta 0:00:00\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting psycopg2-binary==2.9.* (from vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading psycopg2_binary-2.9.6-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.0/3.0 MB 16.6 MB/s eta 0:00:00\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting flupy==1.* (from vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading flupy-1.2.0.tar.gz (12 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Installing build dependencies: started\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Installing build dependencies: finished with status 'done'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Getting requirements to build wheel: started\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Getting requirements to build wheel: finished with status 'done'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Preparing metadata (pyproject.toml): started\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting pytest (from vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 4.8 MB/s eta 0:00:00\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting parse (from vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading parse-1.19.1-py2.py3-none-any.whl (18 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting numpy (from vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading numpy-1.21.6-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (15.7 MB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 15.7/15.7 MB 12.7 MB/s eta 0:00:00\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting pytest-cov (from vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting typing-extensions (from flupy==1.*->vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting greenlet!=0.4.17 (from sqlalchemy==2.*->vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading greenlet-2.0.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (566 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 566.1/566.1 kB 6.0 MB/s eta 0:00:00\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting importlib-metadata (from sqlalchemy==2.*->vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting iniconfig (from pytest->vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting packaging (from pytest->vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 1.4 MB/s eta 0:00:00\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting pluggy<2.0,>=0.12 (from pytest->vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest->vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting tomli>=1.0.0 (from pytest->vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov->vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading coverage-7.2.7-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (225 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 225.6/225.6 kB 1.5 MB/s eta 0:00:00\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Collecting zipp>=0.5 (from importlib-metadata->sqlalchemy==2.*->vecs==0.2.7)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Building wheels for collected packages: flupy, vecs\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Building wheel for flupy (pyproject.toml): started\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Building wheel for flupy (pyproject.toml): finished with status 'done'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Created wheel for flupy: filename=flupy-1.2.0-py3-none-any.whl size=11021 sha256=828326f9551014ab638e45910217b3a6ab16a6ed4c2a8a0af0dbf84f97720381\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/ca/d4/c5/3d131adcf02a379e03aadddfa1ec5618e418b260a9be405b3f\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Building editable for vecs (pyproject.toml): started\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Building editable for vecs (pyproject.toml): finished with status 'done'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Created wheel for vecs: filename=vecs-0.2.7-0.editable-py3-none-any.whl size=1496 sha256=bb24d0fed4036cd7d1f961249b3e35a0ba971890431480fe1a7e8d65c9ad23c3\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-5s6ox3ih/wheels/7a/9c/9e/3aa3337f68a531a230a5cf66c013fc90565247db54e57f9416\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Successfully built flupy vecs\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Installing collected packages: parse, zipp, typing-extensions, tomli, psycopg2-binary, packaging, numpy, iniconfig, greenlet, exceptiongroup, coverage, pgvector, importlib-metadata, flupy, sqlalchemy, pluggy, vecs, pytest, pytest-cov\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Successfully installed coverage-7.2.7 exceptiongroup-1.1.1 flupy-1.2.0 greenlet-2.0.2 importlib-metadata-6.7.0 iniconfig-2.0.0 numpy-1.21.6 packaging-23.1 parse-1.19.1 pgvector-0.1.8 pluggy-1.2.0 psycopg2-binary-2.9.6 pytest-7.4.0 pytest-cov-4.1.0 sqlalchemy-2.0.17 tomli-2.0.1 typing-extensions-4.7.0 vecs-0.2.7 zipp-3.15.0\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | [notice] To update, run: pip install --upgrade pip\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u2705  Success - Main install\n[4b2c0882-8954-40d2-a58e-6941df27959b/build] \u2b50 Run Main test with coverage\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ============================= test session starts ==============================\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | platform linux -- Python 3.7.11, pytest-7.4.0, pluggy-1.2.0\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/supabase-vecs\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | configfile: pytest.ini\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | plugins: cov-4.1.0\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | collected 20 items\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/test_client.py EEEEE                                           [ 25%]\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/test_collection.py EEEEEEEEEEEEEEE                             [100%]\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ==================================== ERRORS ====================================\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ___________________ ERROR at setup of test_create_collection ___________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f2621db2710>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ____________________ ERROR at setup of test_get_collection _____________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f26200d1410>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ___________________ ERROR at setup of test_list_collections ____________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f2621ddd210>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ___________________ ERROR at setup of test_delete_collection ___________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f262017c790>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ________________________ ERROR at setup of test_dispose ________________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f2621e6d950>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ________________________ ERROR at setup of test_upsert _________________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f26201f56d0>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _________________________ ERROR at setup of test_fetch _________________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f2620557ad0>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ________________________ ERROR at setup of test_delete _________________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f26202c74d0>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _________________________ ERROR at setup of test_repr __________________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f2620381810>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ________________________ ERROR at setup of test_getitem ________________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f262057e410>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _________________________ ERROR at setup of test_query _________________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f26201f6390>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _____________________ ERROR at setup of test_query_filters _____________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f262036d110>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ______________________ ERROR at setup of test_filters_eq _______________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f261fe05390>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _____________________ ERROR at setup of test_access_index ______________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f26203832d0>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _____________________ ERROR at setup of test_create_index ______________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f26201afb10>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | __________________ ERROR at setup of test_cosine_index_query ___________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f26203679d0>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ____________________ ERROR at setup of test_l2_index_query _____________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f261fd15610>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _____________ ERROR at setup of test_max_inner_product_index_query _____________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f261feda810>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ___________________ ERROR at setup of test_mismatch_measure ____________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f2621f28290>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ________________ ERROR at setup of test_is_indexed_for_measure _________________\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f261fedabd0>\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | engine = Engine(postgresql://postgres:***@localhost:5611/vecs_db)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _allow_autobegin = True\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def __init__(\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         engine: Engine,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _has_events: Optional[bool] = None,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_revalidate: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         _allow_autobegin: bool = True,\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     ):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.engine = engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         self.dialect = dialect = engine.dialect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if connection is None:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             try:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >               self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | The above exception was the direct cause of the following exception:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | maybe_start_pg = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     @pytest.fixture(scope=\"function\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def clean_db(maybe_start_pg: None) -> Generator[str, None, None]:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         eng = create_engine(PYTEST_DB)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       with eng.begin() as connection:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/tests/conftest.py:96: \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/contextlib.py:112: in __enter__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return next(self.gen)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     with self.connect() as conn:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._connection_cls(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:148: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     err, dialect, engine\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dbapi_connection = engine.raw_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.pool.connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:452: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionFairy._checkout(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     rec = pool._do_get()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:170: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self._dec_overflow()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self._create_connection()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return _ConnectionRecord(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.__connect()\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:903: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     pool.logger.debug(\"Error on connect(): %s\", e)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     raise exc_value.with_traceback(exc_tb)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/create.py:637: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return dialect.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/sqlalchemy/engine/default.py:615: in connect\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | dsn = 'host=localhost dbname=vecs_db user=postgres password=password port=5611'\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | connection_factory = None, cursor_factory = None\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwargs = {'dbname': 'vecs_db', 'host': 'localhost', 'password': 'password', 'port': 5611, ...}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Create a new database connection.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         The connection parameters can be specified as a string:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         or using a set of keyword arguments:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Or as a mix of both. The basic connection parameters are:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *dbname*: the database name\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *database*: the database name (only as keyword argument)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *user*: user name used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *password*: password used to authenticate\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *connection_factory* parameter a different class or connections\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         factory can be specified. It should be a callable object taking a dsn\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         argument.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         used by cursor().\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         Any other keyword parameter will be passed to the underlying client\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         library: the list of supported parameters depends on the library version.\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         \"\"\"\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         kwasync = {}\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async'] = kwargs.pop('async')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         if 'async_' in kwargs:\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |     \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/psycopg2/__init__.py:122: OperationalError\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/supabase-vecs/report.xml -\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | Name                     Stmts   Miss  Cover\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | --------------------------------------------\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/vecs/__init__.py         8      1    88%\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/vecs/client.py          41     27    34%\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/vecs/collection.py     224    184    18%\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | src/vecs/exc.py             12      0   100%\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | --------------------------------------------\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | TOTAL                      285    212    26%\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | =========================== short test summary info ============================\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_client.py::test_create_collection - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_client.py::test_get_collection - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_client.py::test_list_collections - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_client.py::test_delete_collection - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_client.py::test_dispose - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_upsert - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_fetch - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_delete - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_repr - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_getitem - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_query - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_query_filters - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_filters_eq - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_access_index - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_create_index - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_cosine_index_query - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_l2_index_query - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_max_inner_product_index_query - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_mismatch_measure - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ERROR src/tests/test_collection.py::test_is_indexed_for_measure - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5611 failed: Connection refused\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | \n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   | ============================= 20 errors in 20.59s ==============================\n[4b2c0882-8954-40d2-a58e-6941df27959b/build]   \u274c  Failure - Main test with coverage\n[4b2c0882-8954-40d2-a58e-6941df27959b/build] exitcode '1': failure\n[4b2c0882-8954-40d2-a58e-6941df27959b/build] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/supabase-vecs/.github/workflows/tests-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "4b2c0882-8954-40d2-a58e-6941df27959b",
        "build_tool": "pytest",
        "elapsed_time": 217.0637366771698
    }
}