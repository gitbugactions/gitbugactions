{
    "repository": "braindecode/braindecode",
    "stars": 529,
    "language": "python",
    "size": 2744,
    "clone_url": "https://github.com/braindecode/braindecode.git",
    "timestamp": "2023-07-01T14:16:58.632028Z",
    "clone_success": true,
    "number_of_actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest",
        "unknown",
        "unknown",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode] \ud83d\ude80  Start image=crawlergpt:latest\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/braindecode-braindecode] user=0 workdir=\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2601  git clone 'https://github.com/conda-incubator/setup-miniconda' # ref=v2\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2601  git clone 'https://github.com/peaceiris/actions-gh-pages' # ref=v3\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode] \ud83e\uddea  Matrix: map[skorch_version:main]\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode] \u2b50 Run Main Checking Out Repository\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2705  Success - Main Checking Out Repository\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode] \u2b50 Run Main Create/Restore MNE Data Cache\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udc33  docker cp src=/tmp/act-cache/37ed8b51-a4c8-42a9-823a-c1a824a28cf8/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udcac  ::debug::Resolved Keys:\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udcac  ::debug::[\"Linux-v3\"]\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udcac  ::debug::Checking zstd --version\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:39743/_apis/artifactcache/cache?keys=Linux-v3&version=d286e0bf0d69039e50e5b4c6331a6df0f8ea7ba137a78f3e01b5f9e863fa3ca5\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   | Cache not found for input keys: Linux-v3\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2705  Success - Main Create/Restore MNE Data Cache\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode] \u2b50 Run Main Setting Up Conda Braindecode Environment\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udc33  docker cp src=/tmp/act-cache/37ed8b51-a4c8-42a9-823a-c1a824a28cf8/act/conda-incubator-setup-miniconda@v2/ dst=/var/run/act/actions/conda-incubator-setup-miniconda@v2/\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/conda-incubator-setup-miniconda@v2/] user=0 workdir=\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/conda-incubator-setup-miniconda@v2/dist/setup/index.js] user= workdir=\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2753  ::group::Gathering Inputs...\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2753  ::endgroup::\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2753  ::group::Creating bootstrap condarc file in /home/runneradmin/.condarc...\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2753  ::endgroup::\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2753  ::group::Ensuring installer...\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   | Can we use bundled Miniconda?\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   | ... will use bundled Miniconda.\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2753  ::endgroup::\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2757  ::error::No installed conda 'base' environment found at !If you are using this action in a self-hosted runner that already provides its own Miniconda installation, please specify its location with a `CONDA` environment variable. If you want us to download and install Miniconda or Miniforge for you, add `miniconda-version: \"latest\"` or `miniforge-version: \"latest\"`, respectively, to the parameters for this action.\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u274c  Failure - Main Setting Up Conda Braindecode Environment\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode]   \u2699  ::set-env:: INPUT_RUN_POST=true\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode] exitcode '1': failure\n[aab73dca-f289-4346-87d9-2b5356d2a41c/Install-Test-Doc-Braindecode] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Install-Test-Doc-Braindecode' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/braindecode-braindecode/.github/workflows/tests-and-docs-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "aab73dca-f289-4346-87d9-2b5356d2a41c",
        "build_tool": "pytest",
        "elapsed_time": 197.50157284736633
    }
}