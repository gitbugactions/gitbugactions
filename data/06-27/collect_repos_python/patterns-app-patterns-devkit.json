{
    "repository": "patterns-app/patterns-devkit",
    "stars": 105,
    "language": "python",
    "size": 1839,
    "clone_url": "https://github.com/patterns-app/patterns-devkit.git",
    "timestamp": "2023-06-28T15:28:39.067119Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_metadata",
                "name": "test_pyproject_and_package_versions_are_in_sync",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_config",
                "name": "test_config_org_and_env",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_create",
                "name": "test_create_graph",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_create",
                "name": "test_create_graph_explicit",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_create",
                "name": "test_create_node",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_create",
                "name": "test_create_subgraph",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_create",
                "name": "test_create_node_explicit",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_create",
                "name": "test_create_node_invalid_py_name",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_create",
                "name": "test_create_webhook",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_create",
                "name": "test_create_component",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_create",
                "name": "test_create_webhook_deprecated",
                "time": 0.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_create",
                "name": "test_create_component_deprecated",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_create",
                "name": "test_create_table",
                "time": 0.151,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_delete",
                "name": "test_delete",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_diffs",
                "name": "test_diffs",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_download",
                "name": "test_download",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_file_ignore",
                "name": "test_ignore_file",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_list",
                "name": "test_list_graphs",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_trigger",
                "name": "test_trigger_node_in_subgraph",
                "time": 0.11,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_update",
                "name": "test_update",
                "time": 0.106,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_upload",
                "name": "test_upload",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_upload",
                "name": "test_upload_component",
                "time": 0.114,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_upload",
                "name": "test_upload_custom_yaml_name",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_config_editor",
                "name": "test_round_trip",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_config_editor",
                "name": "test_round_trip_no_indent",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_config_editor",
                "name": "test_add_node_to_existing_nodes",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_config_editor",
                "name": "test_add_node_to_empty_graph",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_config_editor",
                "name": "test_add_webhook_with_all_fields",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_config_editor",
                "name": "test_add_store_with_all_fields",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_config_editor",
                "name": "test_add_node_with_all_fields",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_config_editor",
                "name": "test_add_component_with_all_fields",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_config_editor",
                "name": "test_add_missing_node_ids",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_directory_editor",
                "name": "test_add_new_node",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_directory_editor",
                "name": "test_add_unchanged_node",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_directory_editor",
                "name": "test_err_add_changed_node",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_directory_editor",
                "name": "test_overwrite_node",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_directory_editor",
                "name": "test_full_clone",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_directory_editor",
                "name": "test_add_subgraph",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_directory_editor",
                "name": "test_add_single_file",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.configuration.test_directory_editor",
                "name": "test_add_missing_node_ids",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.graph.test_lookup",
                "name": "test_find_graph_from_node",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build] \ud83d\ude80  Start image=crawlergpt:latest\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/patterns-app-patterns-devkit] user=0 workdir=\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build] \u2b50 Run Pre Install Poetry\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2705  Success - Pre Install Poetry\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build] \ud83e\uddea  Matrix: map[python-version:3.8]\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build] \u2b50 Run Main actions/checkout@v3\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2705  Success - Main actions/checkout@v3\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build] \u2b50 Run Main Set up Python 3.8\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/de6323f7-29e9-45c7-9c83-69d19e5a0344/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2753  ::group::Installed versions\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::isExplicit: \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::explicit? false\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::explicit? true\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::explicit? true\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::explicit? true\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::explicit? true\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::explicit? true\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::explicit? true\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::matched: 3.8.11\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Successfully set up CPython (3.8.11)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2753  ::endgroup::\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2705  Success - Main Set up Python 3.8\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::set-output:: python-version=3.8.11\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build] \u2b50 Run Main Install Poetry\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/de6323f7-29e9-45c7-9c83-69d19e5a0344/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build] \u2b50 Run Main Install and configure Poetry\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Retrieving Poetry metadata\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | # Welcome to Poetry!\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | This will download and install the latest version of Poetry,\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | a dependency and package manager for Python.\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | /home/runneradmin/.local/bin\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | You can uninstall at any time by executing this script with the --uninstall option,\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | and these changes will be reverted.\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Installing Poetry (1.5.1)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Installing Poetry (1.5.1): Creating environment\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Installing Poetry (1.5.1): Installing Poetry\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Installing Poetry (1.5.1): Creating script\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Installing Poetry (1.5.1): Done\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Poetry (1.5.1) is installed now. Great!\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | environment variable.\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | You can test that everything is set up by executing:\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | `poetry --version`\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \u001b[33mDone \u2705\u001b[0m\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2705  Success - Main Install and configure Poetry\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2705  Success - Main Install Poetry\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build] \u2b50 Run Main Install dependencies\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Creating virtualenv patterns-devkit in /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/patterns-app-patterns-devkit/.venv\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Updating dependencies\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Resolving dependencies...\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Package operations: 33 installs, 1 update, 0 removals\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing certifi (2023.5.7)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing charset-normalizer (3.1.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing commonmark (0.9.1)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing idna (3.4)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing pygments (2.15.1)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing typing-extensions (4.6.3)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing urllib3 (2.0.3)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing click (8.1.3)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing colorama (0.4.6)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing exceptiongroup (1.1.1)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing distro (1.8.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing mccabe (0.7.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing packaging (23.1)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing pathspec (0.11.1)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing mypy-extensions (1.0.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing pluggy (1.2.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing platformdirs (2.6.2)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing pycodestyle (2.10.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing requests (2.31.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing pyflakes (3.0.1)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing iniconfig (2.0.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing rich (12.6.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Updating setuptools (67.8.0 -> 68.0.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing tomli (2.0.1)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing six (1.16.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing shellingham (1.5.0.post1)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing black (22.12.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing flake8 (6.0.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing pydantic (1.10.9)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing pytest (7.4.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing pyyaml (6.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing requests-mock (1.11.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing ruyaml (0.91.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   |   \u2022 Installing typer (0.7.0)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | \n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | Writing lock file\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2705  Success - Main Install dependencies\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build] \u2b50 Run Main Lint with flake8\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | 0\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | ./patterns/cli/main.py:103:13: E741 ambiguous variable name 'l'\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | ./patterns/cli/services/auth.py:106:13: E713 test for membership should be 'not in'\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | ./patterns/cli/services/diffs.py:28:1: C901 'get_diffs_between_zip_and_dir' is too complex (11)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | ./patterns/cli/services/graph_path.py:4:1: C901 'resolve_graph_path' is too complex (12)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | ./patterns/cli/services/lookup.py:157:9: F841 local variable 'e' is assigned to but never used\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | ./patterns/cli/services/output.py:80:1: C901 'abort_on_error' is too complex (14)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | ./patterns/cli/services/versions.py:11:1: E302 expected 2 blank lines, found 1\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | ./patterns/cli/services/versions.py:34:1: E302 expected 2 blank lines, found 1\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | ./patterns/node/node.py:544:1: E302 expected 2 blank lines, found 1\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | 3     C901 'get_diffs_between_zip_and_dir' is too complex (11)\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | 3     E302 expected 2 blank lines, found 1\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | 1     E713 test for membership should be 'not in'\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | 1     E741 ambiguous variable name 'l'\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | 1     F841 local variable 'e' is assigned to but never used\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | 9\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2705  Success - Main Lint with flake8\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build] \u2b50 Run Main Test with pytest\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | .........................................                                [100%]\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/patterns-app-patterns-devkit/report.xml -\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   | 41 passed in 3.73s\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2705  Success - Main Test with pytest\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build] \u2b50 Run Post Install Poetry\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/de6323f7-29e9-45c7-9c83-69d19e5a0344/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2705  Success - Post Install Poetry\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build] \u2b50 Run Post Set up Python 3.8\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build]   \u2705  Success - Post Set up Python 3.8\n[1b4716ca-8e59-4531-8b31-7e5810d50cdf/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/patterns-app-patterns-devkit/.github/workflows/test-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 308.81876492500305
    }
}