{
    "repository": "OpenRarity/open-rarity",
    "stars": 203,
    "language": "python",
    "size": 10389,
    "clone_url": "https://github.com/OpenRarity/open-rarity.git",
    "timestamp": "2023-07-01T17:36:52.048453Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] \ud83d\ude80  Start image=crawlergpt:latest\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenRarity-open-rarity] user=0 workdir=\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2601  git clone 'https://github.com/psf/black' # ref=stable\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] \u2b50 Run Pre Code Formatting\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2705  Success - Pre Code Formatting\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] \ud83e\uddea  Matrix: map[python-version:3.10]\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] \u2b50 Run Main actions/checkout@v2\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2705  Success - Main actions/checkout@v2\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] \u2b50 Run Main Setup Python\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] \u2b50 Run Main actions/setup-python@v3\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/465433ca-c36f-438d-ac7f-efe908cf6d48/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2705  Success - Main actions/setup-python@v3\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] \u2b50 Run Main Install Poetry\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/465433ca-c36f-438d-ac7f-efe908cf6d48/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] \u2b50 Run Main Install and configure Poetry\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1-composite-0.sh] user= workdir=\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | Retrieving Poetry metadata\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | # Welcome to Poetry!\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | This will download and install the latest version of Poetry,\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | a dependency and package manager for Python.\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | /home/runneradmin/.local/bin\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | You can uninstall at any time by executing this script with the --uninstall option,\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | and these changes will be reverted.\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | Installing Poetry (1.5.1)\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | Installing Poetry (1.5.1): Creating environment\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | Installing Poetry (1.5.1): Installing Poetry\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | Installing Poetry (1.5.1): Creating script\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | Installing Poetry (1.5.1): Done\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | Poetry (1.5.1) is installed now. Great!\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | environment variable.\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | You can test that everything is set up by executing:\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | `poetry --version`\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \u001b[33mDone \u2705\u001b[0m\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u274c  Failure - Main Install and configure Poetry\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] failed to inspect exec: Error response from daemon: No such exec instance: 2696f739565888584064ecf1b2472b4629b384780e4769643452474996b059ef\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u274c  Failure - Main Install Poetry\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] failed to inspect exec: Error response from daemon: No such exec instance: 2696f739565888584064ecf1b2472b4629b384780e4769643452474996b059ef\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u274c  Failure - Main Setup Python\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] failed to inspect exec: Error response from daemon: No such exec instance: 2696f739565888584064ecf1b2472b4629b384780e4769643452474996b059ef\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] \u2b50 Run Post Setup Python\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] \u2b50 Run Post Install Poetry\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/465433ca-c36f-438d-ac7f-efe908cf6d48/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] context canceled\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2705  Success - Post Install Poetry\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] context canceled\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/fee62b9b21aaf302ec33b492eca4c232cd86e218b0b41a18290882a2ff3ba2e3/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] context canceled\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] context canceled\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests]   \u2705  Success - Post Setup Python\n[add61dea-6e42-4df0-ad26-f074645a64e9/unit-tests] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: context canceled\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/OpenRarity-open-rarity/.github/workflows/tests-crawler.yaml",
            "type": "pytest"
        },
        "workflow_name": "add61dea-6e42-4df0-ad26-f074645a64e9",
        "build_tool": "pytest",
        "elapsed_time": 621.2589972019196
    }
}