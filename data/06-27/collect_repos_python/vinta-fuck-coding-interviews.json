{
    "repository": "vinta/fuck-coding-interviews",
    "stars": 631,
    "language": "python",
    "size": 450,
    "clone_url": "https://github.com/vinta/fuck-coding-interviews.git",
    "timestamp": "2023-06-28T15:31:13.865880Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "algorithms.math.tests.test_factorial.TestCase",
                "name": "test",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.math.tests.test_factorial.TestCase",
                "name": "test_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.math.tests.test_factorial.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.math.tests.test_factorial.TestCase2",
                "name": "test_2",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.math.tests.test_fibonacci.TestCase",
                "name": "test",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.math.tests.test_fibonacci.TestCase2",
                "name": "test",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.searching.tests.test_binary_search.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.searching.tests.test_binary_search.TestCase",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.searching.tests.test_binary_search.TestCase",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.searching.tests.test_binary_search.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.searching.tests.test_binary_search.TestCase2",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.searching.tests.test_binary_search.TestCase2",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.searching.tests.test_binary_search.TestCase3",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.searching.tests.test_binary_search.TestCase3",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.searching.tests.test_binary_search.TestCase3",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.searching.tests.test_linear_search.TestCase",
                "name": "test",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.searching.tests.test_linear_search.TestCase",
                "name": "test2",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.searching.tests.test_linear_search.TestCase",
                "name": "test3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.sorting.tests.benchmark_quicksort",
                "name": "test_benchmark_quicksort",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Benchmarks are skipped (--benchmark-skip was used).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.sorting.tests.benchmark_quicksort",
                "name": "test_benchmark_quicksort_in_place",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Benchmarks are skipped (--benchmark-skip was used).",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.sorting.tests.test_bubble_sort.TestCase",
                "name": "test",
                "time": 0.518,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.sorting.tests.test_counting_sort.TestCase",
                "name": "test",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.sorting.tests.test_heapsort.TestCase",
                "name": "test",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.sorting.tests.test_heapsort.TestCase2",
                "name": "test",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.sorting.tests.test_insertion_sort.TestCase",
                "name": "test",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.sorting.tests.test_mergesort.TestCase",
                "name": "test",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.sorting.tests.test_quicksort.TestCase",
                "name": "test",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.sorting.tests.test_quicksort.TestCase2",
                "name": "test",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.sorting.tests.test_selection_sort.TestCase",
                "name": "test",
                "time": 0.154,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "algorithms.sorting.tests.test_selection_sort.TestCase2",
                "name": "test",
                "time": 0.163,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.arrays.tests.test_circular_array.TestCase",
                "name": "test__getitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.arrays.tests.test_circular_array.TestCase",
                "name": "test__setitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.arrays.tests.test_circular_array.TestCase",
                "name": "test_append",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.arrays.tests.test_circular_array.TestCase",
                "name": "test_pop",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.arrays.tests.test_dynamic_array.TestCase",
                "name": "test__getitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.arrays.tests.test_dynamic_array.TestCase",
                "name": "test__setitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.arrays.tests.test_dynamic_array.TestCase",
                "name": "test_append",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.arrays.tests.test_dynamic_array.TestCase",
                "name": "test_extend",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.arrays.tests.test_dynamic_array.TestCase",
                "name": "test_insert_before",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.arrays.tests.test_dynamic_array.TestCase",
                "name": "test_pop",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_plus_tree.BPlusTreeTest",
                "name": "test__iter__",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_plus_tree.BPlusTreeTest",
                "name": "test__len__",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_plus_tree.BPlusTreeTest",
                "name": "test_check_validation",
                "time": 26.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_plus_tree.BPlusTreeTest",
                "name": "test_delete",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_plus_tree.BPlusTreeTest",
                "name": "test_get",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_plus_tree.BPlusTreeTest",
                "name": "test_insert",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_plus_tree.BPlusTreeTest",
                "name": "test_max",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_plus_tree.BPlusTreeTest",
                "name": "test_min",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_tree.BTreeTest",
                "name": "test__iter__",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_tree.BTreeTest",
                "name": "test__len__",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_tree.BTreeTest",
                "name": "test_check_validation",
                "time": 10.554,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_tree.BTreeTest",
                "name": "test_delete",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_tree.BTreeTest",
                "name": "test_get",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_tree.BTreeTest",
                "name": "test_insert",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_tree.BTreeTest",
                "name": "test_max",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.b_trees.tests.test_b_tree.BTreeTest",
                "name": "test_min",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_add_edge",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_add_vertex",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_breadth_first_search",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_depth_first_search",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_edge_count",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_edge_weight",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_edges",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_find_minimum_spanning_tree_kruskal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_find_minimum_spanning_tree_prim_jarnik",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_find_shortest_path_bellman_ford",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_find_shortest_path_dijkstra",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_find_shortest_paths_bfs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_has_cycles_dfs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_incident_edges",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_remove_edge",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_remove_vertex",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_vertex_count",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_directed_weighted_graph.TestCase",
                "name": "test_vertices",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_undirected_weighted_graph.TestCase",
                "name": "test_add_edge",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_undirected_weighted_graph.TestCase",
                "name": "test_add_vertex",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_undirected_weighted_graph.TestCase",
                "name": "test_breadth_first_search",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_undirected_weighted_graph.TestCase",
                "name": "test_depth_first_search",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_undirected_weighted_graph.TestCase",
                "name": "test_edge_count",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_undirected_weighted_graph.TestCase",
                "name": "test_edge_weight",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_undirected_weighted_graph.TestCase",
                "name": "test_edges",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_undirected_weighted_graph.TestCase",
                "name": "test_incident_edges",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_undirected_weighted_graph.TestCase",
                "name": "test_remove_edge",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_undirected_weighted_graph.TestCase",
                "name": "test_remove_vertex",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_undirected_weighted_graph.TestCase",
                "name": "test_vertex_count",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.graphs.tests.test_adjacency_map_undirected_weighted_graph.TestCase",
                "name": "test_vertices",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_chain_hash_map.TestCase",
                "name": "test__delitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_chain_hash_map.TestCase",
                "name": "test__getitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_chain_hash_map.TestCase",
                "name": "test__iter__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_chain_hash_map.TestCase",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_chain_hash_map.TestCase",
                "name": "test__setitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_chain_hash_map.TestCase",
                "name": "test_distribution_mean",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_chain_hash_map.TestCase",
                "name": "test_integration",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_chain_hash_map.TestCase",
                "name": "test_load_factor",
                "time": 0.257,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_linear_probing_hash_map.TestCase",
                "name": "test__delitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_linear_probing_hash_map.TestCase",
                "name": "test__getitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_linear_probing_hash_map.TestCase",
                "name": "test__iter__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_linear_probing_hash_map.TestCase",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_linear_probing_hash_map.TestCase",
                "name": "test__setitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_linear_probing_hash_map.TestCase",
                "name": "test_integration",
                "time": 0.251,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_linear_probing_hash_map.TestCase",
                "name": "test_load_factor",
                "time": 0.196,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_sorted_table_map.TestCase",
                "name": "test__delitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_sorted_table_map.TestCase",
                "name": "test__getitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_sorted_table_map.TestCase",
                "name": "test__iter__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_sorted_table_map.TestCase",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_sorted_table_map.TestCase",
                "name": "test__setitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_sorted_table_map.TestCase",
                "name": "test_find_ge",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_sorted_table_map.TestCase",
                "name": "test_find_gt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_sorted_table_map.TestCase",
                "name": "test_find_le",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_sorted_table_map.TestCase",
                "name": "test_find_lt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_sorted_table_map.TestCase",
                "name": "test_find_max",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_sorted_table_map.TestCase",
                "name": "test_find_min",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_sorted_table_map.TestCase",
                "name": "test_find_range",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_sorted_table_map.TestCase",
                "name": "test_integration",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_unsorted_table_map.TestCase",
                "name": "test__delitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_unsorted_table_map.TestCase",
                "name": "test__getitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_unsorted_table_map.TestCase",
                "name": "test__iter__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_unsorted_table_map.TestCase",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_unsorted_table_map.TestCase",
                "name": "test__setitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.hash_maps.tests.test_unsorted_table_map.TestCase",
                "name": "test_integration",
                "time": 0.19,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.heaps.tests.test_array_based_binary_heap.TestCase",
                "name": "test__iter__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.heaps.tests.test_array_based_binary_heap.TestCase",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.heaps.tests.test_array_based_binary_heap.TestCase",
                "name": "test_peek_min",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.heaps.tests.test_array_based_binary_heap.TestCase",
                "name": "test_pop_min",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.heaps.tests.test_array_based_binary_heap.TestCase",
                "name": "test_push",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_doubly_linked_list.TestCase",
                "name": "test__reversed__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_doubly_linked_list.TestCase",
                "name": "test_append",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_doubly_linked_list.TestCase",
                "name": "test_insert_before",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_doubly_linked_list.TestCase",
                "name": "test_insert_before_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_doubly_linked_list.TestCase",
                "name": "test_pop",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_doubly_linked_list.TestCase",
                "name": "test_pop_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_doubly_linked_list.TestCase",
                "name": "test_reverse",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_singly_linked_list.TestCase",
                "name": "test__getitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_singly_linked_list.TestCase",
                "name": "test__iter__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_singly_linked_list.TestCase",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_singly_linked_list.TestCase",
                "name": "test__setitem__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_singly_linked_list.TestCase",
                "name": "test_append",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_singly_linked_list.TestCase",
                "name": "test_index",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_singly_linked_list.TestCase",
                "name": "test_insert",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_singly_linked_list.TestCase",
                "name": "test_pop",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.linked_lists.tests.test_singly_linked_list.TestCase",
                "name": "test_reverse",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.queues.tests.test_array_based_queue.TestCase",
                "name": "test_dequeue",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.queues.tests.test_array_based_queue.TestCase",
                "name": "test_enqueue",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.queues.tests.test_circular_array_based_queue.TestCase",
                "name": "test_dequeue",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.queues.tests.test_circular_array_based_queue.TestCase",
                "name": "test_enqueue",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.queues.tests.test_doubly_linked_list_based_deque.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.queues.tests.test_doubly_linked_list_based_deque.TestCase",
                "name": "test_append",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.queues.tests.test_doubly_linked_list_based_deque.TestCase",
                "name": "test_append_left",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.queues.tests.test_doubly_linked_list_based_deque.TestCase",
                "name": "test_pop",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.queues.tests.test_doubly_linked_list_based_deque.TestCase",
                "name": "test_pop_left",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.queues.tests.test_heap_based_priority_queue.TestCase",
                "name": "test_dequeue",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.queues.tests.test_heap_based_priority_queue.TestCase",
                "name": "test_enqueue",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.queues.tests.test_linked_list_based_queue.TestCase",
                "name": "test_dequeue",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.queues.tests.test_linked_list_based_queue.TestCase",
                "name": "test_enqueue",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_hash_map_based_multiset.TestCase",
                "name": "test__contains__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_hash_map_based_multiset.TestCase",
                "name": "test__iter__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_hash_map_based_multiset.TestCase",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_hash_map_based_multiset.TestCase",
                "name": "test_add",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_hash_map_based_multiset.TestCase",
                "name": "test_discard",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_hash_map_based_multiset.TestCase",
                "name": "test_num_unique_elements",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_hash_map_based_set.TestCase",
                "name": "test__contains__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_hash_map_based_set.TestCase",
                "name": "test__iter__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_hash_map_based_set.TestCase",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_hash_map_based_set.TestCase",
                "name": "test_add",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_hash_map_based_set.TestCase",
                "name": "test_discard",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_hash_map_based_set.TestCase",
                "name": "test_integration",
                "time": 0.168,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_quick_find_union_find.TestCase",
                "name": "test__init__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_quick_find_union_find.TestCase",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_quick_find_union_find.TestCase",
                "name": "test_find",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_quick_find_union_find.TestCase",
                "name": "test_is_connected",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_quick_find_union_find.TestCase",
                "name": "test_make_group",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_quick_find_union_find.TestCase",
                "name": "test_union",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_weighted_quick_union_union_find.TestCase",
                "name": "test__init__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_weighted_quick_union_union_find.TestCase",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_weighted_quick_union_union_find.TestCase",
                "name": "test_find",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_weighted_quick_union_union_find.TestCase",
                "name": "test_is_connected",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_weighted_quick_union_union_find.TestCase",
                "name": "test_make_group",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.sets.tests.test_weighted_quick_union_union_find.TestCase",
                "name": "test_union",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.stacks.tests.test_array_based_stack.TestCase",
                "name": "test_peek",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.stacks.tests.test_array_based_stack.TestCase",
                "name": "test_pop",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.stacks.tests.test_array_based_stack.TestCase",
                "name": "test_push",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.stacks.tests.test_linked_list_based_stack.TestCase",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.stacks.tests.test_linked_list_based_stack.TestCase",
                "name": "test_peek",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.stacks.tests.test_linked_list_based_stack.TestCase",
                "name": "test_pop",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.stacks.tests.test_linked_list_based_stack.TestCase",
                "name": "test_push",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.TreeNodeTest",
                "name": "test__eq__",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.TreeNodeTest",
                "name": "test__repr__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.TreeNodeTest",
                "name": "test__str__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test__contains__",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test__eq__",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test__iter__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_children",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_delete",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_depth",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_from_array_representation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_get_k_th_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_get_max_node",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_get_min_node",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_height",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_inorder_traverse",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_insert",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_invert",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_is_balanced",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_is_complate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_is_external",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_is_full",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_is_internal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_is_leaf",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_is_perfect",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_is_root",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_is_valid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_level",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_levelorder_traverse",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_num_children",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_num_edges",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_postorder_traverse",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_preorder_traverse",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_search",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_to_array_representation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_search_tree.BinarySearchTreeTest",
                "name": "test_traverse",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_tree_serialization.LevelorderCodecTest",
                "name": "test",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_binary_tree_serialization.PreorderCodecTest",
                "name": "test",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_treap.TestCase",
                "name": "test__iter__",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_treap.TestCase",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_treap.TestCase",
                "name": "test_check_validation",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_treap.TestCase",
                "name": "test_delete",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_treap.TestCase",
                "name": "test_insert",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_treap.TestCase",
                "name": "test_search",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_trie.TrieNodeTest",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_trie.TrieNodeTest",
                "name": "test_insert",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_trie.TrieNodeTest",
                "name": "test_integration",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_trie.TrieNodeTest",
                "name": "test_search",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "data_structures.trees.tests.test_trie.TrieNodeTest",
                "name": "test_startsWith",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_add_two_numbers.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_add_two_numbers.TestCase",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_array_intersection",
                "name": "test_intersection",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_balanced_binary_tree.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_best_time_to_buy_and_sell_stock.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_best_time_to_buy_and_sell_stock.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_best_time_to_buy_and_sell_stock.TestCase3",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_binary_search_tree_iterator.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_binary_tree_inorder_traversal.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_binary_tree_level_order_traversal.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_binary_tree_maximum_path_sum.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_binary_tree_postorder_traversal.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_binary_tree_preorder_traversal.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_camel_case.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_check_completeness_of_a_binary_tree.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_coin_change.TestCase",
                "name": "test",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_coin_change.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_coin_change.TestCase3",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_combinations.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_combinations.TestCase",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_combinations.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_combinations.TestCase2",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_container_with_most_water.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_container_with_most_water.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_contains_duplicate.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_contains_duplicate.TestCase",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_contains_duplicate.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_contains_duplicate.TestCase2",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_counting_valleys.TestCase",
                "name": "test",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_equality_in_a_array.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_fibonacci_number.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_fibonacci_number.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_find_minimum_in_rotated_sorted_array.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_find_minimum_in_rotated_sorted_array.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_find_mode_in_binary_search_tree.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_find_the_duplicate_number.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_fizz_buzz.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_group_anagrams.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_hackerrank_in_a_string.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_strstr.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_strstr.TestCase",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_strstr.TestCase",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_strstr.TestCase",
                "name": "test4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_strstr.TestCase",
                "name": "test5",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_strstr.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_strstr.TestCase2",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_strstr.TestCase2",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_strstr.TestCase2",
                "name": "test4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_strstr.TestCase2",
                "name": "test5",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_trie_prefix_tree.TrieNodeTest",
                "name": "test__len__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_trie_prefix_tree.TrieNodeTest",
                "name": "test_insert",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_trie_prefix_tree.TrieNodeTest",
                "name": "test_integration",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_trie_prefix_tree.TrieNodeTest",
                "name": "test_search",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_implement_trie_prefix_tree.TrieNodeTest",
                "name": "test_startsWith",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_invert_binary_tree.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_invert_binary_tree.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_is_subsequence.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_is_subsequence.TestCase",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_is_subsequence.TestCase",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_jumping_on_the_clouds.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_kth_largest_element_in_an_array.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_kth_largest_element_in_an_array.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_kth_largest_element_in_an_array.TestCase3",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_kth_smallest_element_in_a_bst.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_mars_exploration.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_maximum_depth_of_binary_tree.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_maximum_depth_of_binary_tree.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_maximum_product_subarray.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_maximum_product_subarray.TestCase",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_maximum_product_subarray.TestCase",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_maximum_product_subarray.TestCase",
                "name": "test4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_maximum_subarray.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_median_of_two_sorted_arrays.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_median_of_two_sorted_arrays.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_median_of_two_sorted_arrays.TestCase3",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_merge_intervals.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_merge_intervals.TestCase",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_merge_intervals.TestCase",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_merge_k_sorted_lists.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_merge_two_sorted_lists.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_merge_two_sorted_lists.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_merge_two_sorted_lists.TestCase3",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_middle_of_the_linked_list.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_middle_of_the_linked_list.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_min_stack.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_min_stack.TestCase",
                "name": "test_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_min_stack.TestCase2",
                "name": "test_1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_min_stack.TestCase2",
                "name": "test_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_min_stack.TestCase3",
                "name": "test_1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_min_stack.TestCase3",
                "name": "test_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_minimum_depth_of_binary_tree.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_missing_number.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_missing_number.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_pangrams.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_path_sum.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_permutations.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_permutations.TestCase2",
                "name": "test",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_permutations.TestCase3",
                "name": "test",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_power_of_two.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_power_of_two.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_power_of_two.TestCase3",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_product_of_array_except_self.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_product_of_array_except_self.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_remove_nth_node_from_end_of_list.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_remove_nth_node_from_end_of_list.TestCase",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_remove_nth_node_from_end_of_list.TestCase",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_remove_nth_node_from_end_of_list.TestCase",
                "name": "test4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_remove_nth_node_from_end_of_list.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_remove_nth_node_from_end_of_list.TestCase2",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_remove_nth_node_from_end_of_list.TestCase2",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_remove_nth_node_from_end_of_list.TestCase2",
                "name": "test4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_repeated_string.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_reverse_integer.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_reverse_linked_list.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_reverse_linked_list.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_reverse_only_alphabetical",
                "name": "test_reverse_only_alpha",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_reverse_string.TestCase",
                "name": "test",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_same_tree.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_search_in_a_binary_search_tree.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_search_in_a_binary_search_tree.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_search_in_rotated_sorted_array.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_search_in_rotated_sorted_array.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_serialize_and_deserialize_binary_tree.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_shuffle_the_array.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_shuffle_the_array.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_single_number.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_sock_merchant.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_sort_colors.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_sort_list.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_sort_list.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_sort_list.TestCase3",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_subsets.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_subsets.TestCase",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_subsets.TestCase",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_subsets.TestCase",
                "name": "test4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_subsets.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_subsets.TestCase2",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_subsets.TestCase2",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_subsets.TestCase2",
                "name": "test4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_subsets.TestCase3",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_subsets.TestCase3",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_subsets.TestCase3",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_subsets.TestCase3",
                "name": "test4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_task_scheduler.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_task_scheduler.TestCase",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_task_scheduler.TestCase",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_task_scheduler.TestCase",
                "name": "test4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_task_scheduler.TestCase",
                "name": "test5",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_task_scheduler.TestCase",
                "name": "test6",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_task_scheduler.TestCase",
                "name": "test7",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_third_maximum_number.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_third_maximum_number.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_third_maximum_number.TestCase3",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_three_sum.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_three_sum.TestCase",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_three_sum.TestCase",
                "name": "test3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_top_k_frequent_elements.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_top_k_frequent_elements.TestCase",
                "name": "test2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_trapping_rain_water.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_two_characters.TestCase",
                "name": "test",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_two_sum.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_two_sum.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_two_sum.TestCase3",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_two_sum_ii_input_array_is_sorted.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_univalued_binary_tree.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_valid_anagram.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_valid_anagram.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_valid_anagram.TestCase3",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_valid_anagram.TestCase4",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_valid_palindrome.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_valid_palindrome.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_valid_parentheses.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_validate_binary_search_tree.TestCase",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_validate_binary_search_tree.TestCase2",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "problems.tests.test_validate_binary_search_tree.TestCase3",
                "name": "test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[01c45fbd-bcde-4997-89da-5a9f97279786/build] \ud83d\ude80  Start image=crawlergpt:latest\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/vinta-fuck-coding-interviews] user=0 workdir=\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[01c45fbd-bcde-4997-89da-5a9f97279786/build] \ud83e\uddea  Matrix: map[python-version:3.6]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build] \u2b50 Run Main Checkout code\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \u2705  Success - Main Checkout code\n[01c45fbd-bcde-4997-89da-5a9f97279786/build] \u2b50 Run Main Set up Python 3.6\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/6fe79807-9b55-4bed-8f37-0c98851bb20d/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::isExplicit: \n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::explicit? false\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::explicit? true\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::explicit? true\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::explicit? true\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::explicit? true\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::explicit? true\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::explicit? true\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::matched: 3.6.14\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Successfully setup CPython (3.6.14)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \u2705  Success - Main Set up Python 3.6\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \u2699  ::set-output:: python-version=3.6.14\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[01c45fbd-bcde-4997-89da-5a9f97279786/build] \u2b50 Run Main Install dependencies\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (21.2.4)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting pip\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading pip-21.3.1-py3-none-any.whl (1.7 MB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Installing collected packages: pip\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Attempting uninstall: pip\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     Found existing installation: pip 21.2.4\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     Uninstalling pip-21.2.4:\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |       Successfully uninstalled pip-21.2.4\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Successfully installed pip-21.3.1\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting binarytree==5.1.0\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading binarytree-5.1.0-py2.py3-none-any.whl (14 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting networkx==2.5\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading networkx-2.5-py3-none-any.whl (1.6 MB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting pytest==6.1.1\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading pytest-6.1.1-py3-none-any.whl (272 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting pytest-benchmark==3.2.3\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading pytest_benchmark-3.2.3-py2.py3-none-any.whl (49 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting pytest-cov==2.10.1\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading pytest_cov-2.10.1-py2.py3-none-any.whl (19 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting pythonds3==3.0.3\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading pythonds3-3.0.3-py3-none-any.whl (30 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting decorator>=4.3.0\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading decorator-5.1.1-py3-none-any.whl (9.1 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting packaging\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading packaging-21.3-py3-none-any.whl (40 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting importlib-metadata>=0.12\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading importlib_metadata-4.8.3-py3-none-any.whl (17 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting pluggy<1.0,>=0.12\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading pluggy-0.13.1-py2.py3-none-any.whl (18 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting attrs>=17.4.0\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading attrs-22.2.0-py3-none-any.whl (60 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting iniconfig\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading iniconfig-1.1.1-py2.py3-none-any.whl (5.0 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting py>=1.8.2\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting toml\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting py-cpuinfo\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading py_cpuinfo-9.0.0-py3-none-any.whl (22 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting coverage>=4.4\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading coverage-6.2-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (212 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting typing-extensions>=3.6.4\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading typing_extensions-4.1.1-py3-none-any.whl (26 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting zipp>=0.5\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading zipp-3.6.0-py3-none-any.whl (5.3 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Collecting pyparsing!=3.0.5,>=2.0.2\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Installing collected packages: zipp, typing-extensions, pyparsing, importlib-metadata, toml, py, pluggy, packaging, iniconfig, attrs, pytest, py-cpuinfo, decorator, coverage, pythonds3, pytest-cov, pytest-benchmark, networkx, binarytree\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Successfully installed attrs-22.2.0 binarytree-5.1.0 coverage-6.2 decorator-5.1.1 importlib-metadata-4.8.3 iniconfig-1.1.1 networkx-2.5 packaging-21.3 pluggy-0.13.1 py-1.11.0 py-cpuinfo-9.0.0 pyparsing-3.1.0 pytest-6.1.1 pytest-benchmark-3.2.3 pytest-cov-2.10.1 pythonds3-3.0.3 toml-0.10.2 typing-extensions-4.1.1 zipp-3.6.0\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \u2705  Success - Main Install dependencies\n[01c45fbd-bcde-4997-89da-5a9f97279786/build] \u2b50 Run Main Run tests\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | ============================= test session starts ==============================\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | platform linux -- Python 3.6.14, pytest-6.1.1, py-1.11.0, pluggy-0.13.1\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | benchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/vinta-fuck-coding-interviews, configfile: pytest.ini\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | plugins: benchmark-3.2.3, cov-2.10.1\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | collected 409 items\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/math/tests/test_factorial.py ....                             [  0%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/math/tests/test_fibonacci.py ..                               [  1%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/searching/tests/test_binary_search.py .........               [  3%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/searching/tests/test_linear_search.py ...                     [  4%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/tests/benchmark_quicksort.py ss                       [  4%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/tests/test_bubble_sort.py .                           [  5%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/tests/test_counting_sort.py .                         [  5%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/tests/test_heapsort.py ..                             [  5%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/tests/test_insertion_sort.py .                        [  6%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/tests/test_mergesort.py .                             [  6%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/tests/test_quicksort.py ..                            [  6%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/tests/test_selection_sort.py ..                       [  7%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/arrays/tests/test_circular_array.py ....                 [  8%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/arrays/tests/test_dynamic_array.py ......                [  9%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/b_trees/tests/test_b_plus_tree.py ........               [ 11%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/b_trees/tests/test_b_tree.py ........                    [ 13%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/graphs/tests/test_adjacency_map_directed_weighted_graph.py . [ 13%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | .................                                                        [ 18%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/graphs/tests/test_adjacency_map_undirected_weighted_graph.py . [ 18%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | ...........                                                              [ 21%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/hash_maps/tests/test_chain_hash_map.py ........          [ 22%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/hash_maps/tests/test_linear_probing_hash_map.py .......  [ 24%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/hash_maps/tests/test_sorted_table_map.py .............   [ 27%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/hash_maps/tests/test_unsorted_table_map.py ......        [ 29%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/heaps/tests/test_array_based_binary_heap.py .....        [ 30%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/linked_lists/tests/test_doubly_linked_list.py .......    [ 32%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/linked_lists/tests/test_singly_linked_list.py .........  [ 34%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/queues/tests/test_array_based_queue.py ..                [ 34%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/queues/tests/test_circular_array_based_queue.py ..       [ 35%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/queues/tests/test_doubly_linked_list_based_deque.py .... [ 36%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | .                                                                        [ 36%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/queues/tests/test_heap_based_priority_queue.py ..        [ 37%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/queues/tests/test_linked_list_based_queue.py ..          [ 37%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/sets/tests/test_hash_map_based_multiset.py ......        [ 39%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/sets/tests/test_hash_map_based_set.py ......             [ 40%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/sets/tests/test_quick_find_union_find.py ......          [ 42%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/sets/tests/test_weighted_quick_union_union_find.py ..... [ 43%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | .                                                                        [ 43%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/stacks/tests/test_array_based_stack.py ...               [ 44%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/stacks/tests/test_linked_list_based_stack.py ....        [ 45%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/trees/tests/test_binary_search_tree.py ................. [ 49%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | ...................                                                      [ 54%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/trees/tests/test_binary_tree_serialization.py ..         [ 54%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/trees/tests/test_treap.py ......                         [ 55%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/trees/tests/test_trie.py .....                           [ 57%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_add_two_numbers.py ..                                [ 57%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_array_intersection.py .                              [ 57%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_balanced_binary_tree.py .                            [ 58%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_best_time_to_buy_and_sell_stock.py ...               [ 58%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_binary_search_tree_iterator.py .                     [ 59%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_binary_tree_inorder_traversal.py .                   [ 59%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_binary_tree_level_order_traversal.py .               [ 59%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_binary_tree_maximum_path_sum.py .                    [ 59%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_binary_tree_postorder_traversal.py .                 [ 60%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_binary_tree_preorder_traversal.py .                  [ 60%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_camel_case.py .                                      [ 60%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_check_completeness_of_a_binary_tree.py .             [ 60%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_coin_change.py ...                                   [ 61%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_combinations.py ....                                 [ 62%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_container_with_most_water.py ..                      [ 63%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_contains_duplicate.py ....                           [ 64%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_counting_valleys.py .                                [ 64%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_equality_in_a_array.py .                             [ 64%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_fibonacci_number.py ..                               [ 65%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_find_minimum_in_rotated_sorted_array.py ..           [ 65%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_find_mode_in_binary_search_tree.py .                 [ 65%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_find_the_duplicate_number.py .                       [ 66%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_fizz_buzz.py .                                       [ 66%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_group_anagrams.py .                                  [ 66%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_hackerrank_in_a_string.py .                          [ 66%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_implement_strstr.py ..........                       [ 69%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_implement_trie_prefix_tree.py .....                  [ 70%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_invert_binary_tree.py ..                             [ 70%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_is_subsequence.py ...                                [ 71%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_jumping_on_the_clouds.py .                           [ 71%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_kth_largest_element_in_an_array.py ...               [ 72%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_kth_smallest_element_in_a_bst.py .                   [ 72%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_mars_exploration.py .                                [ 73%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_maximum_depth_of_binary_tree.py ..                   [ 73%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_maximum_product_subarray.py ....                     [ 74%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_maximum_subarray.py .                                [ 74%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_median_of_two_sorted_arrays.py ...                   [ 75%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_merge_intervals.py ...                               [ 76%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_merge_k_sorted_lists.py .                            [ 76%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_merge_two_sorted_lists.py ...                        [ 77%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_middle_of_the_linked_list.py ..                      [ 77%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_min_stack.py ......                                  [ 79%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_minimum_depth_of_binary_tree.py .                    [ 79%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_missing_number.py ..                                 [ 79%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_pangrams.py .                                        [ 80%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_path_sum.py .                                        [ 80%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_permutations.py ...                                  [ 81%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_power_of_two.py ...                                  [ 81%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_product_of_array_except_self.py ..                   [ 82%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_remove_nth_node_from_end_of_list.py ........         [ 84%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_repeated_string.py .                                 [ 84%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_reverse_integer.py .                                 [ 84%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_reverse_linked_list.py ..                            [ 85%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_reverse_only_alphabetical.py .                       [ 85%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_reverse_string.py .                                  [ 85%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_same_tree.py .                                       [ 86%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_search_in_a_binary_search_tree.py ..                 [ 86%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_search_in_rotated_sorted_array.py ..                 [ 87%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_serialize_and_deserialize_binary_tree.py .           [ 87%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_shuffle_the_array.py ..                              [ 87%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_single_number.py .                                   [ 88%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_sock_merchant.py .                                   [ 88%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_sort_colors.py .                                     [ 88%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_sort_list.py ...                                     [ 89%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_subsets.py ............                              [ 92%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_task_scheduler.py .......                            [ 93%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_third_maximum_number.py ...                          [ 94%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_three_sum.py ...                                     [ 95%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_top_k_frequent_elements.py ..                        [ 95%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_trapping_rain_water.py .                             [ 96%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_two_characters.py .                                  [ 96%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_two_sum.py ...                                       [ 97%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_two_sum_ii_input_array_is_sorted.py .                [ 97%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_univalued_binary_tree.py .                           [ 97%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_valid_anagram.py ....                                [ 98%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_valid_palindrome.py ..                               [ 99%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_valid_parentheses.py .                               [ 99%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/tests/test_validate_binary_search_tree.py ...                   [100%]\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/vinta-fuck-coding-interviews/report.xml -\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | ---------- coverage: platform linux, python 3.6.14-final-0 -----------\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Name                                                                Stmts   Miss Branch BrPart  Cover\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | -----------------------------------------------------------------------------------------------------\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/__init__.py                                                  0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/hashing/__init__.py                                          0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/hashing/mad_compression.py                                   6      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/math/__init__.py                                             0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/math/factorial.py                                           11      0      6      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/math/fibonacci.py                                           13      0      6      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/searching/__init__.py                                        0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/searching/binary_search.py                                  41      1     24      3    94%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/searching/linear_search.py                                   6      0      4      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/__init__.py                                          0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/bubble_sort.py                                      12      0      6      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/counting_sort.py                                    15      0     10      1    96%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/heapsort.py                                         61      2     26      2    95%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/insertion_sort.py                                    7      0      4      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/mergesort.py                                        29      0      4      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/quicksort.py                                        42      0     20      1    98%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | algorithms/sorting/selection_sort.py                                   25      1     16      1    95%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/__init__.py                                             0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/arrays/__init__.py                                      0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/arrays/circular_array.py                               69      2     26      2    96%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/arrays/dynamic_array.py                                63      0     24      1    99%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/b_trees/__init__.py                                     0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/b_trees/b_plus_tree.py                                239      6     94      3    97%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/b_trees/b_tree.py                                     250      3     98      4    98%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/graphs/__init__.py                                      0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/graphs/adjacency_map_directed_weighted_graph.py       195      0    106      1    99%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/graphs/adjacency_map_undirected_weighted_graph.py      32      0     10      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/hash_maps/__init__.py                                   0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/hash_maps/base_map.py                                  35      0     10      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/hash_maps/chain_hash_map.py                            34      0     18      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/hash_maps/linear_probing_hash_map.py                   45      0     22      2    97%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/hash_maps/sorted_table_map.py                          79      0     34      1    99%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/hash_maps/unsorted_table_map.py                        26      0     16      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/heaps/__init__.py                                       0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/heaps/array_based_binary_heap.py                       59      1     20      1    97%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/linked_lists/__init__.py                                0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/linked_lists/doubly_linked_list.py                     87      0     44      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/linked_lists/singly_linked_list.py                    111      4     50      4    95%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/queues/__init__.py                                      0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/queues/array_based_queue.py                            15      0      4      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/queues/circular_array_based_queue.py                   48      0     12      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/queues/doubly_linked_list_based_deque.py               79      0     24      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/queues/heap_based_priority_queue.py                    15      0      2      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/queues/linked_list_based_queue.py                      48      0     14      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/sets/__init__.py                                        0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/sets/hash_map_based_multiset.py                        32      4     12      2    86%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/sets/hash_map_based_set.py                             77      0     36      1    99%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/sets/quick_find_union_find.py                          33      0     12      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/sets/weighted_quick_union_union_find.py                42      0     12      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/stacks/__init__.py                                      0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/stacks/array_based_stack.py                            20      0      4      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/stacks/linked_list_based_stack.py                      50      0     16      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/trees/__init__.py                                       0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/trees/base_tree.py                                     33      0      8      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/trees/binary_search_tree.py                           282      5    158     18    95%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/trees/binary_tree_serialization.py                     63      0     30      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/trees/treap.py                                        110      0     54      5    97%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | data_structures/trees/trie.py                                          33      0     12      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/__init__.py                                                    0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/add_two_numbers.py                                            30      2     12      1    93%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/array_intersection.py                                          2      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/balanced_binary_tree.py                                       14      0      6      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/best_time_to_buy_and_sell_stock.py                            39      0     26      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/binary_search_tree_iterator.py                                24      2      4      0    93%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/binary_tree_inorder_traversal.py                              11      0      4      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/binary_tree_level_order_traversal.py                          17      0     10      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/binary_tree_maximum_path_sum.py                               16      0      6      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/binary_tree_postorder_traversal.py                            11      0      4      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/binary_tree_preorder_traversal.py                             11      0      4      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/camel_case.py                                                 10      0      6      1    94%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/check_completeness_of_a_binary_tree.py                        14      0      8      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/coin_change.py                                                53      1     36      2    97%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/combinations.py                                               22      0      8      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/container_with_most_water.py                                  27      0     14      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/contains_duplicate.py                                         16      0     10      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/counting_valleys.py                                           15      0      4      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/equality_in_a_array.py                                        16      0      4      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/fibonacci_number.py                                           18      0     12      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/find_minimum_in_rotated_sorted_array.py                       32      0     22      1    98%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/find_mode_in_binary_search_tree.py                            20      0     10      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/find_the_duplicate_number.py                                  10      0      6      1    94%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/fizz_buzz.py                                                  14      0     10      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/group_anagrams.py                                             13      0      6      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/hackerrank_in_a_string.py                                     20      0     12      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/implement_strstr.py                                           22      0     18      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/implement_trie_prefix_tree.py                                 44      0     16      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/invert_binary_tree.py                                         20      0     10      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/is_subsequence.py                                             17      0     12      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/jumping_on_the_clouds.py                                      19      0      6      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/kth_largest_element_in_an_array.py                            20      0     10      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/kth_smallest_element_in_a_bst.py                              14      0      8      1    95%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/mars_exploration.py                                           12      1      8      1    90%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/maximum_depth_of_binary_tree.py                               19      0     14      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/maximum_product_subarray.py                                   18      0     10      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/maximum_subarray.py                                           12      0      8      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/median_of_two_sorted_arrays.py                                70      3     24      1    96%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/merge_intervals.py                                            17      1     12      1    93%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/merge_k_sorted_lists.py                                       16      0     10      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/merge_two_sorted_lists.py                                     56      2     26      1    96%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/middle_of_the_linked_list.py                                  25      0     10      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/min_stack.py                                                  52      2     16      3    93%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/minimum_depth_of_binary_tree.py                               15      0     12      2    93%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/missing_number.py                                             14      0     10      1    96%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/pangrams.py                                                   14      0      6      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/path_sum.py                                                   21      1      8      0    97%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/permutations.py                                               31      0     16      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/power_of_two.py                                               20      0     16      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/product_of_array_except_self.py                               23      0     12      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/remove_nth_node_from_end_of_list.py                           39      1     16      1    96%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/repeated_string.py                                            18      0      8      1    96%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/reverse_integer.py                                            13      0      8      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/reverse_linked_list.py                                        20      0      8      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/reverse_only_alphabetical.py                                  16      0      6      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/reverse_string.py                                             11      0      6      1    94%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/same_tree.py                                                  10      0      6      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/search_in_a_binary_search_tree.py                             30      0     24      3    94%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/search_in_rotated_sorted_array.py                             25      1     20      2    93%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/serialize_and_deserialize_binary_tree.py                      38      2     22      0    97%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/shuffle_the_array.py                                          22      2     12      2    88%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/single_number.py                                              12      0     10      1    95%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/sock_merchant.py                                              11      1      4      1    87%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/sort_colors.py                                                14      0      8      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/sort_list.py                                                  63      0     24      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/subsets.py                                                    30      0     16      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/task_scheduler.py                                             27      0     18      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/third_maximum_number.py                                       42      0     24      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/three_sum.py                                                  39      0     22      1    98%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/top_k_frequent_elements.py                                    10      0      4      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/trapping_rain_water.py                                        18      0     14      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/two_characters.py                                             23      0     12      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/two_sum.py                                                    32      0     22      3    94%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/two_sum_ii_input_array_is_sorted.py                           14      0     10      2    92%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/univalued_binary_tree.py                                      15      0     10      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/utils/__init__.py                                              0      0      0      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/utils/leetcode.py                                             66      0     32      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/valid_anagram.py                                              34      1     26      1    97%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/valid_palindrome.py                                           17      0     12      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/valid_parentheses.py                                          20      1     14      2    91%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | problems/validate_binary_search_tree.py                                35      0     16      0   100%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | -----------------------------------------------------------------------------------------------------\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | TOTAL                                                                4402     53   2084     91    98%\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | ======================= 407 passed, 2 skipped in 43.35s ========================\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \u2705  Success - Main Run tests\n[01c45fbd-bcde-4997-89da-5a9f97279786/build] \u2b50 Run Main Upload test reports\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   _____          _\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |  / ____|        | |\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | | |     ___   __| | ___  ___ _____   __\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |  \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |                               Bash-1.0.6\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;36m==>\u001b[0m git version 2.33.0 found\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;36m==>\u001b[0m curl 7.68.0 (x86_64-pc-linux-gnu) libcurl/7.68.0 OpenSSL/1.1.1f zlib/1.2.11 brotli/1.0.7 libidn2/2.2.0 libpsl/0.21.0 (+libidn2/2.2.0) libssh/0.9.3/openssl/zlib nghttp2/1.40.0 librtmp/2.3\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Release-Date: 2020-01-08\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp \n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | Features: AsynchDNS brotli GSS-API HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;90m==>\u001b[0m GitHub Actions detected.\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     Env vars used:\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |       -> GITHUB_ACTIONS:    true\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |       -> GITHUB_HEAD_REF:   \n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |       -> GITHUB_REF:        refs/heads/master\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |       -> GITHUB_REPOSITORY: vinta/fuck-coding-interviews\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |       -> GITHUB_RUN_ID:     1\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |       -> GITHUB_SHA:        dfff746353781cf0fe8adbc886ff2dfd65e66d37\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |       -> GITHUB_WORKFLOW:   01c45fbd-bcde-4997-89da-5a9f97279786\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     \u001b[0;90mcurrent dir: \u001b[0m /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/vinta-fuck-coding-interviews\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     \u001b[0;90mproject root:\u001b[0m .\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     \u001b[0;90mYaml found at:\u001b[0m codecov.yml\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;90m==>\u001b[0m Running gcov in . \u001b[0;90m(disable via -X gcov)\u001b[0m\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;90m==>\u001b[0m Python coveragepy exists \u001b[0;90mdisable via -X coveragepy\u001b[0m\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     \u001b[0;90m->\u001b[0m Running coverage xml\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;90m==>\u001b[0m Searching for coverage reports in:\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     \u001b[0;32m+\u001b[0m .\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     \u001b[0;90m->\u001b[0m Found 2 reports\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;90m==>\u001b[0m Detecting git/mercurial file structure\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;90m==>\u001b[0m Reading reports\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     \u001b[0;32m+\u001b[0m ./coverage.xml \u001b[0;90mbytes=233606\u001b[0m\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     \u001b[0;32m+\u001b[0m ./report.xml \u001b[0;90mbytes=46911\u001b[0m\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;90m==>\u001b[0m Appending adjustments\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     \u001b[0;36mhttps://docs.codecov.io/docs/fixing-reports\u001b[0m\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     \u001b[0;90m->\u001b[0m No adjustments found\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;90m==>\u001b[0m Gzipping contents\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |         20K\t/tmp/codecov.7kjxoo.gz\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;90m==>\u001b[0m Uploading reports\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     \u001b[0;90murl:\u001b[0m https://codecov.io\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     \u001b[0;90mquery:\u001b[0m branch=master&commit=dfff746353781cf0fe8adbc886ff2dfd65e66d37&build=1&build_url=https%3A%2F%2Fgithub.com%2Fvinta%2Ffuck-coding-interviews%2Factions%2Fruns%2F1&name=&tag=&slug=vinta%2Ffuck-coding-interviews&service=github-actions&flags=&pr=&job=01c45fbd-bcde-4997-89da-5a9f97279786&cmd_args=\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;90m->\u001b[0m  Pinging Codecov\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | https://codecov.io/upload/v4?package=bash-1.0.6&token=<hidden>&package=bash-1.0.6&token=&branch=master&commit=dfff746353781cf0fe8adbc886ff2dfd65e66d37&build=1&build_url=https%3A%2F%2Fgithub.com%2Fvinta%2Ffuck-coding-interviews%2Factions%2Fruns%2F1&name=&tag=&slug=vinta%2Ffuck-coding-interviews&service=github-actions&flags=&pr=&job=01c45fbd-bcde-4997-89da-5a9f97279786&cmd_args=\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;31m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | 404\u001b[0m\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \u001b[0;90m==>\u001b[0m Uploading to Codecov\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r 99 16618    0     0  100 16447      0  38427 --:--:-- --:--:-- --:--:-- 38337\r100 16618  100   171  100 16447    397  38248 --:--:-- --:--:-- --:--:-- 38646\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   |     \u001b[0;32m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\u001b[0m\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \u2705  Success - Main Upload test reports\n[01c45fbd-bcde-4997-89da-5a9f97279786/build] \u2b50 Run Post Set up Python 3.6\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[01c45fbd-bcde-4997-89da-5a9f97279786/build]   \u2705  Success - Post Set up Python 3.6\n[01c45fbd-bcde-4997-89da-5a9f97279786/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/vinta-fuck-coding-interviews/.github/workflows/main-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 312.51239681243896
    }
}