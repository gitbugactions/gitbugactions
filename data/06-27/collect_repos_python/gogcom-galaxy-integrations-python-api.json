{
    "repository": "gogcom/galaxy-integrations-python-api",
    "stars": 1209,
    "language": "python",
    "size": 292,
    "clone_url": "https://github.com/gogcom/galaxy-integrations-python-api.git",
    "timestamp": "2023-07-01T13:29:32.204694Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "",
                "name": "setup",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "setup",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "docs.make",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "docs.make",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "docs.source.conf",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "docs.source.conf",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.__init__",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.__init__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.http",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.http",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.proc_tools",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.proc_tools",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.reader",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.reader",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.registry_monitor",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.registry_monitor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.task_manager",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.task_manager",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.tools",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.tools",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.__init__",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.__init__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.consts",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.consts",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.errors",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.errors",
                "time": 0.002,
                "results": [
                    {
                        "result": "Failure",
                        "message": "3: error: Function \"UnknownError\" could always be true in boolean context  [truthy-function]",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.importer",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.importer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.jsonrpc",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.jsonrpc",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.plugin",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.plugin",
                "time": 0.001,
                "results": [
                    {
                        "result": "Failure",
                        "message": "43: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.types",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.api.types",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.unittest.__init__",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.unittest.__init__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.unittest.mock",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "src.galaxy.unittest.mock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.__init__",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.__init__",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.conftest",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.conftest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_achievements",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_achievements",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_achievements",
                "name": "test_initialization_no_unlock_time",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_achievements",
                "name": "test_initialization_no_id_nor_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_achievements",
                "name": "test_get_unlocked_achievements_success",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_achievements",
                "name": "test_get_unlocked_achievements_error[BackendError-4-Backend error-BackendError]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_achievements",
                "name": "test_get_unlocked_achievements_error[KeyError-0-Unknown error-UnknownError]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_achievements",
                "name": "test_prepare_get_unlocked_achievements_context_error",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_achievements",
                "name": "test_import_in_progress",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_achievements",
                "name": "test_unlock_achievement",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_authenticate",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_authenticate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_success",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_failure[UnknownError-0-Unknown error-UnknownError]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_failure[BackendNotAvailable-2-Backend not available-BackendNotAvailable]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_failure[BackendTimeout-3-Backend timed out-BackendTimeout]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_failure[BackendError-4-Backend error-BackendError]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_failure[InvalidCredentials-100-Invalid credentials-InvalidCredentials]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_failure[NetworkError-101-Network error-NetworkError]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_failure[ProtocolError-103-Protocol error-ProtocolError]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_failure[TemporaryBlocked-104-Temporary blocked-TemporaryBlocked]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_failure[Banned-105-Banned-Banned]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_failure[AccessDenied-106-Access denied-AccessDenied]",
                "time": 0.488,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_stored_credentials",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_store_credentials",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_authenticate",
                "name": "test_lost_authentication",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_chunk_messages",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_chunk_messages",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_chunk_messages",
                "name": "test_chunked_messages",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_chunk_messages",
                "name": "test_joined_messages",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_chunk_messages",
                "name": "test_not_finished",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_errors",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_errors",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_valid_error_data[data0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_valid_error_data[data1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_valid_error_data[data2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_valid_error_data[data3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_data",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_invalid_error_data[123]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_invalid_error_data[data1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_invalid_error_data[nor is this]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_override_internal_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[AuthenticationRequired-Authentication required]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[BackendNotAvailable-Backend not available]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[BackendTimeout-Backend timed out]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[BackendError-Backend error]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[UnknownBackendResponse-Backend responded in unknown way]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[TooManyRequests-Too many requests. Try again later]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[InvalidCredentials-Invalid credentials]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[NetworkError-Network error]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[ProtocolError-Protocol error]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[TemporaryBlocked-Temporary blocked]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[Banned-Banned]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[AccessDenied-Access denied]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[FailedParsingManifest-Failed parsing manifest]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[TooManyMessagesSent-Too many messages sent]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[IncoherentLastMessage-Different last message id on backend]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[MessageNotFound-Message not found]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[ImportInProgress-Import already in progress]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[UnknownError-Unknown error]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[ParseError-Parse error]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[InvalidRequest-Invalid Request]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[MethodNotFound-Method not found]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[InvalidParams-Invalid params]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[Timeout-Method timed out]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_error_default_message[Aborted-Method aborted]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[AuthenticationRequired]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[BackendNotAvailable]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[BackendTimeout]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[BackendError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[UnknownBackendResponse]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[TooManyRequests]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[InvalidCredentials]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[NetworkError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[ProtocolError]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[TemporaryBlocked]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[Banned]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[AccessDenied]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[FailedParsingManifest]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[TooManyMessagesSent]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[IncoherentLastMessage]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[MessageNotFound]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[ImportInProgress]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[UnknownError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[ParseError]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[InvalidRequest]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[MethodNotFound]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[InvalidParams]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[Timeout]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_error_custom_message[Aborted]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[AuthenticationRequired]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[BackendNotAvailable]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[BackendTimeout]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[BackendError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[UnknownBackendResponse]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[TooManyRequests]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[InvalidCredentials]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[NetworkError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[ProtocolError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[TemporaryBlocked]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[Banned]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[AccessDenied]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[FailedParsingManifest]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[TooManyMessagesSent]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[IncoherentLastMessage]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[MessageNotFound]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[ImportInProgress]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[UnknownError]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[ParseError]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[InvalidRequest]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[MethodNotFound]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[InvalidParams]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[Timeout]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_errors",
                "name": "test_set_arbitrary_error_message[Aborted]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_features",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_features",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_features",
                "name": "test_base_class",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_features",
                "name": "test_no_overloads",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_features",
                "name": "test_one_method_feature",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_features",
                "name": "test_multi_features",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_friends",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_friends",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_friends",
                "name": "test_get_friends_success",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_friends",
                "name": "test_get_friends_failure",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_friends",
                "name": "test_add_friend",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_friends",
                "name": "test_remove_friend",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_friends",
                "name": "test_update_friend_info",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_game_library_settings",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_game_library_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_game_library_settings",
                "name": "test_get_library_settings_success",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_game_library_settings",
                "name": "test_get_game_library_settings_error[BackendError-4-Backend error-BackendError]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_game_library_settings",
                "name": "test_get_game_library_settings_error[KeyError-0-Unknown error-UnknownError]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_game_library_settings",
                "name": "test_prepare_get_game_library_settings_context_error",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_game_library_settings",
                "name": "test_import_in_progress",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_game_times",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_game_times",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_game_times",
                "name": "test_get_game_time_success",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_game_times",
                "name": "test_get_game_time_error[BackendError-4-Backend error-BackendError]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_game_times",
                "name": "test_get_game_time_error[KeyError-0-Unknown error-UnknownError]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_game_times",
                "name": "test_prepare_get_game_time_context_error",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_game_times",
                "name": "test_import_in_progress",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_game_times",
                "name": "test_update_game",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_http",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_http",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_handle_exception[aiohttp_exception0-BackendTimeout]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_handle_exception[aiohttp_exception1-BackendNotAvailable]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_handle_exception[aiohttp_exception2-NetworkError]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_handle_exception[aiohttp_exception3-UnknownBackendResponse]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_handle_exception[aiohttp_exception4-AuthenticationRequired]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_handle_exception[aiohttp_exception5-AccessDenied]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_handle_exception[aiohttp_exception6-BackendNotAvailable]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_handle_exception[aiohttp_exception7-TooManyRequests]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_handle_exception[aiohttp_exception8-BackendError]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_handle_exception[aiohttp_exception9-BackendError]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_handle_exception[aiohttp_exception10-UnknownError]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_handle_exception[aiohttp_exception11-UnknownError]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_http",
                "name": "test_handle_exception[aiohttp_exception12-UnknownError]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_install_game",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_install_game",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_install_game",
                "name": "test_success",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_internal",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_internal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal",
                "name": "test_get_capabilities",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal",
                "name": "test_shutdown",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal",
                "name": "test_ping",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal",
                "name": "test_tick_before_handshake",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_internal",
                "name": "test_tick_after_handshake",
                "time": 1.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_launch_game",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_launch_game",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_launch_game",
                "name": "test_success",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_launch_platform_client",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_launch_platform_client",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_launch_platform_client",
                "name": "test_success",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_local_games",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_local_games",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_local_games",
                "name": "test_success",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_local_games",
                "name": "test_failure[unknown_error]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_local_games",
                "name": "test_failure[failed_parsing]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_local_games",
                "name": "test_local_game_state_update",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_local_size",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_local_size",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_local_size",
                "name": "test_get_local_size_success",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_local_size",
                "name": "test_get_local_size_error[FailedParsingManifest-200-Failed parsing manifest-FailedParsingManifest]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_local_size",
                "name": "test_get_local_size_error[KeyError-0-Unknown error-UnknownError]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_local_size",
                "name": "test_prepare_get_local_size_context_error",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_local_size",
                "name": "test_import_already_in_progress_error",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_os_compatibility",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_os_compatibility",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_compatibility",
                "name": "test_get_os_compatibility_success",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_compatibility",
                "name": "test_get_os_compatibility_error[BackendError-4-Backend error-BackendError]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_compatibility",
                "name": "test_get_os_compatibility_error[KeyError-0-Unknown error-UnknownError]",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_compatibility",
                "name": "test_prepare_get_os_compatibility_context_error",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_os_compatibility",
                "name": "test_import_already_in_progress_error",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_owned_games",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_owned_games",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_owned_games",
                "name": "test_success",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_owned_games",
                "name": "test_failure",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_owned_games",
                "name": "test_add_game",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_owned_games",
                "name": "test_remove_game",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_owned_games",
                "name": "test_update_game",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_persistent_cache",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_persistent_cache",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_persistent_cache",
                "name": "test_initialize_cache",
                "time": 1.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_persistent_cache",
                "name": "test_set_cache",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_persistent_cache",
                "name": "test_clear_cache",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_refresh_credentials",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_refresh_credentials",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_refresh_credentials",
                "name": "test_refresh_credentials_success",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_refresh_credentials",
                "name": "test_refresh_credentials_failure[BackendNotAvailable]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_refresh_credentials",
                "name": "test_refresh_credentials_failure[BackendTimeout]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_refresh_credentials",
                "name": "test_refresh_credentials_failure[BackendError]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_refresh_credentials",
                "name": "test_refresh_credentials_failure[InvalidCredentials]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_refresh_credentials",
                "name": "test_refresh_credentials_failure[NetworkError]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_refresh_credentials",
                "name": "test_refresh_credentials_failure[AccessDenied]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_refresh_credentials",
                "name": "test_refresh_credentials_failure[UnknownError]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_shutdown_platform_client",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_shutdown_platform_client",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_shutdown_platform_client",
                "name": "test_success",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_stream_line_reader",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_stream_line_reader",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stream_line_reader",
                "name": "test_message",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stream_line_reader",
                "name": "test_separate_messages",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stream_line_reader",
                "name": "test_connected_messages",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stream_line_reader",
                "name": "test_cut_message",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stream_line_reader",
                "name": "test_half_message",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_subscriptions",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_subscriptions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subscriptions",
                "name": "test_get_subscriptions_success",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subscriptions",
                "name": "test_get_subscriptions_failure_generic[unknown_error]",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subscriptions",
                "name": "test_get_subscriptions_failure_generic[failed_parsing]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subscriptions",
                "name": "test_get_subscription_games_success",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subscriptions",
                "name": "test_get_subscription_games_success_empty",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subscriptions",
                "name": "test_get_subscription_games_error[BackendError-4-Backend error-BackendError]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subscriptions",
                "name": "test_get_subscription_games_error[KeyError-0-Unknown error-UnknownError]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subscriptions",
                "name": "test_prepare_get_subscription_games_context_error",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subscriptions",
                "name": "test_import_already_in_progress_error",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_uninstall_game",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_uninstall_game",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_uninstall_game",
                "name": "test_success",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_user_presence",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_user_presence",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_user_presence",
                "name": "test_get_user_presence_success",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_user_presence",
                "name": "test_get_user_presence_error[BackendError-4-Backend error-BackendError]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_user_presence",
                "name": "test_get_user_presence_error[KeyError-0-Unknown error-UnknownError]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_user_presence",
                "name": "test_prepare_get_user_presence_context_error",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_user_presence",
                "name": "test_import_already_in_progress_error",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_user_presence",
                "name": "test_update_user_presence",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[3650d26c-6896-4b68-bdfd-d77947e5ce45/test] \ud83d\ude80  Start image=crawlergpt:latest\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/gogcom-galaxy-integrations-python-api] user=0 workdir=\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test] \u2b50 Run Main actions/checkout@v2\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \u2705  Success - Main actions/checkout@v2\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test] \u2b50 Run Main Set up Python\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/699a63dd-7d3a-481c-bab0-dd55eef58064/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::isExplicit: \n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::explicit? false\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::explicit? true\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::explicit? true\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::explicit? true\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::explicit? true\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::explicit? true\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::explicit? true\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::matched: 3.7.11\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Successfully setup CPython (3.7.11)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \u2705  Success - Main Set up Python\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \u2699  ::set-output:: python-version=3.7.11\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test] \u2b50 Run Main Install dependencies\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting pip\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Installing collected packages: pip\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Attempting uninstall: pip\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |     Found existing installation: pip 21.2.4\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |     Uninstalling pip-21.2.4:\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |       Successfully uninstalled pip-21.2.4\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Successfully installed pip-23.1.2\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/gogcom-galaxy-integrations-python-api (from -r requirements.txt (line 1))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Installing build dependencies: started\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Installing build dependencies: finished with status 'done'\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Checking if build backend supports build_editable: started\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Checking if build backend supports build_editable: finished with status 'done'\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Getting requirements to build editable: started\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Getting requirements to build editable: finished with status 'done'\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Preparing editable metadata (pyproject.toml): started\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Ignoring psutil: markers 'sys_platform == \"darwin\"' don't match your environment\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting aiohttp==3.5.4 (from -r requirements.txt (line 4))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading aiohttp-3.5.4-cp37-cp37m-manylinux1_x86_64.whl (1.2 MB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.2/1.2 MB 8.3 MB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting certifi==2019.3.9 (from -r requirements.txt (line 5))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading certifi-2019.3.9-py2.py3-none-any.whl (158 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 158.6/158.6 kB 3.6 MB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting pytest==5.2.2 (from -r requirements-dev.txt (line 2))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading pytest-5.2.2-py3-none-any.whl (227 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 227.3/227.3 kB 5.8 MB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting pytest-asyncio==0.10.0 (from -r requirements-dev.txt (line 3))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading pytest_asyncio-0.10.0-py3-none-any.whl (11 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting pytest-mock==1.10.3 (from -r requirements-dev.txt (line 4))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading pytest_mock-1.10.3-py2.py3-none-any.whl (9.7 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting pytest-mypy==0.4.1 (from -r requirements-dev.txt (line 5))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading pytest_mypy-0.4.1-py3-none-any.whl (5.1 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting pytest-flakes==4.0.0 (from -r requirements-dev.txt (line 6))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading pytest_flakes-4.0.0-py2.py3-none-any.whl (5.5 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting types-certifi==2020.4.0 (from -r requirements-dev.txt (line 7))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading types_certifi-2020.4.0-py3-none-any.whl (1.9 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting attrs>=17.3.0 (from aiohttp==3.5.4->-r requirements.txt (line 4))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 1.8 MB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting chardet<4.0,>=2.0 (from aiohttp==3.5.4->-r requirements.txt (line 4))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading chardet-3.0.4-py2.py3-none-any.whl (133 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.4/133.4 kB 763.1 kB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting multidict<5.0,>=4.0 (from aiohttp==3.5.4->-r requirements.txt (line 4))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading multidict-4.7.6-cp37-cp37m-manylinux1_x86_64.whl (149 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 149.9/149.9 kB 2.3 MB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting async-timeout<4.0,>=3.0 (from aiohttp==3.5.4->-r requirements.txt (line 4))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading async_timeout-3.0.1-py3-none-any.whl (8.2 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting yarl<2.0,>=1.0 (from aiohttp==3.5.4->-r requirements.txt (line 4))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading yarl-1.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (236 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 236.2/236.2 kB 5.2 MB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting py>=1.5.0 (from pytest==5.2.2->-r requirements-dev.txt (line 2))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 98.7/98.7 kB 1.5 MB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting packaging (from pytest==5.2.2->-r requirements-dev.txt (line 2))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 2.8 MB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting more-itertools>=4.0.0 (from pytest==5.2.2->-r requirements-dev.txt (line 2))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 54.2/54.2 kB 951.0 kB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting atomicwrites>=1.0 (from pytest==5.2.2->-r requirements-dev.txt (line 2))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading atomicwrites-1.4.1.tar.gz (14 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Installing build dependencies: started\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Installing build dependencies: finished with status 'done'\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Getting requirements to build wheel: started\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Getting requirements to build wheel: finished with status 'done'\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Preparing metadata (pyproject.toml): started\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting pluggy<1.0,>=0.12 (from pytest==5.2.2->-r requirements-dev.txt (line 2))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading pluggy-0.13.1-py2.py3-none-any.whl (18 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting wcwidth (from pytest==5.2.2->-r requirements-dev.txt (line 2))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading wcwidth-0.2.6-py2.py3-none-any.whl (29 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting importlib-metadata>=0.12 (from pytest==5.2.2->-r requirements-dev.txt (line 2))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting mypy>=0.570 (from pytest-mypy==0.4.1->-r requirements-dev.txt (line 5))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading mypy-1.4.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.6 MB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.6/11.6 MB 16.0 MB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting pyflakes (from pytest-flakes==4.0.0->-r requirements-dev.txt (line 6))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading pyflakes-3.0.1-py2.py3-none-any.whl (62 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 1.8 MB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting zipp>=0.5 (from importlib-metadata>=0.12->pytest==5.2.2->-r requirements-dev.txt (line 2))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting typing-extensions>=3.6.4 (from importlib-metadata>=0.12->pytest==5.2.2->-r requirements-dev.txt (line 2))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting mypy-extensions>=1.0.0 (from mypy>=0.570->pytest-mypy==0.4.1->-r requirements-dev.txt (line 5))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting tomli>=1.1.0 (from mypy>=0.570->pytest-mypy==0.4.1->-r requirements-dev.txt (line 5))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting typed-ast<2,>=1.4.0 (from mypy>=0.570->pytest-mypy==0.4.1->-r requirements-dev.txt (line 5))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading typed_ast-1.5.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (843 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 843.7/843.7 kB 7.5 MB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Collecting idna>=2.0 (from yarl<2.0,>=1.0->aiohttp==3.5.4->-r requirements.txt (line 4))\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 1.0 MB/s eta 0:00:00\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Building wheels for collected packages: galaxy.plugin.api, atomicwrites\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Building editable for galaxy.plugin.api (pyproject.toml): started\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Building editable for galaxy.plugin.api (pyproject.toml): finished with status 'done'\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Created wheel for galaxy.plugin.api: filename=galaxy.plugin.api-0.69-0.editable-py3-none-any.whl size=2302 sha256=df93a30261f53ca5b6bce3bd4c91b0edb755e50adc6c33a97d801b6a5c877080\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-3bx75bso/wheels/ee/d4/2d/cab186d0be569ec8d4e05c50ff7b6c2f353c3e5c133eaf56f5\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Building wheel for atomicwrites (pyproject.toml): started\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Building wheel for atomicwrites (pyproject.toml): finished with status 'done'\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Created wheel for atomicwrites: filename=atomicwrites-1.4.1-py2.py3-none-any.whl size=6943 sha256=ceaf816dd13793a85cdcc0ba440e2b1f331b7f0936f9e0565d7add009d7a71ab\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/0d/a9/a0/39edfadae620db443c05b5df0f6d5caad7411cf86b821790a6\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Successfully built galaxy.plugin.api atomicwrites\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Installing collected packages: wcwidth, types-certifi, chardet, certifi, zipp, typing-extensions, typed-ast, tomli, pyflakes, py, packaging, mypy-extensions, multidict, more-itertools, idna, atomicwrites, async-timeout, yarl, mypy, importlib-metadata, pluggy, attrs, pytest, aiohttp, pytest-mypy, pytest-mock, pytest-flakes, pytest-asyncio, galaxy.plugin.api\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Successfully installed aiohttp-3.5.4 async-timeout-3.0.1 atomicwrites-1.4.1 attrs-23.1.0 certifi-2019.3.9 chardet-3.0.4 galaxy.plugin.api-0.69 idna-3.4 importlib-metadata-6.7.0 more-itertools-9.1.0 multidict-4.7.6 mypy-1.4.1 mypy-extensions-1.0.0 packaging-23.1 pluggy-0.13.1 py-1.11.0 pyflakes-3.0.1 pytest-5.2.2 pytest-asyncio-0.10.0 pytest-flakes-4.0.0 pytest-mock-1.10.3 pytest-mypy-0.4.1 tomli-2.0.1 typed-ast-1.5.4 types-certifi-2020.4.0 typing-extensions-4.7.0 wcwidth-0.2.6 yarl-1.9.2 zipp-3.15.0\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | \n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | [notice] To update, run: pip install --upgrade pip\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \u2705  Success - Main Install dependencies\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test] \u2b50 Run Main Run tests\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | ============================= test session starts ==============================\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | platform linux -- Python 3.7.11, pytest-5.2.2, py-1.11.0, pluggy-0.13.1\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/gogcom-galaxy-integrations-python-api, inifile: pytest.ini\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | plugins: mock-1.10.3, flakes-4.0.0, asyncio-0.10.0, mypy-0.4.1\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | collected 289 items\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | \n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Running mypy on 45 files... done with status 1\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | Found 1 error in 1 file (checked 45 source files)\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | \n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | setup.py ..                                                              [  0%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | docs/make.py ..                                                          [  0%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | docs/source/conf.py ..                                                   [  1%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/__init__.py ..                                                [  1%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/http.py ..                                                    [  1%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/proc_tools.py ..                                              [  2%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/reader.py ..                                                  [  2%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/registry_monitor.py ..                                        [  2%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/task_manager.py ..                                            [  3%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/tools.py ..                                                   [  3%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/api/__init__.py ..                                            [  3%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/api/consts.py ..                                              [  4%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/api/errors.py .F                                              [  4%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/api/importer.py ..                                            [  4%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/api/jsonrpc.py ..                                             [  5%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/api/plugin.py .F                                              [  5%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/api/types.py ..                                               [  5%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/unittest/__init__.py ..                                       [  6%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | src/galaxy/unittest/mock.py ..                                           [  6%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/__init__.py ..                                                     [  6%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/conftest.py ..                                                     [  7%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_achievements.py ..........                                    [ 10%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_authenticate.py ................                              [ 15%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_chunk_messages.py .....                                       [ 16%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_errors.py ................................................... [ 34%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | ................................                                         [ 45%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_features.py ......                                            [ 47%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_friends.py .......                                            [ 49%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_game_library_settings.py .......                              [ 51%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_game_times.py ........                                        [ 53%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_http.py ...............                                       [ 58%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_install_game.py ...                                           [ 59%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_internal.py .......                                           [ 61%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_launch_game.py ...                                            [ 61%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_launch_platform_client.py ...                                 [ 62%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_local_games.py ......                                         [ 64%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_local_size.py .......                                         [ 66%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_os_compatibility.py .......                                   [ 68%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_owned_games.py .......                                        [ 70%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_persistent_cache.py .....                                     [ 71%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_refresh_credentials.py ..........                             [ 75%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_shutdown_platform_client.py ...                               [ 75%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_stream_line_reader.py .......                                 [ 77%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_subscriptions.py ...........                                  [ 81%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_uninstall_game.py ...                                         [ 82%]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | tests/test_user_presence.py ........\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | \n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | =================================== FAILURES ===================================\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | ___________________________ src/galaxy/api/errors.py ___________________________\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | 3: error: Function \"UnknownError\" could always be true in boolean context  [truthy-function]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | ___________________________ src/galaxy/api/plugin.py ___________________________\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | 43: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/gogcom-galaxy-integrations-python-api/report.xml -\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   | ======================== 2 failed, 287 passed in 13.43s ========================\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test]   \u274c  Failure - Main Run tests\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test] exitcode '1': failure\n[3650d26c-6896-4b68-bdfd-d77947e5ce45/test] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'test' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/gogcom-galaxy-integrations-python-api/.github/workflows/ci-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "3650d26c-6896-4b68-bdfd-d77947e5ce45",
        "build_tool": "pytest",
        "elapsed_time": 119.67886590957642
    }
}