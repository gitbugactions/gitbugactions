{
    "repository": "powerapi-ng/powerapi",
    "stars": 137,
    "language": "python",
    "size": 4519,
    "clone_url": "https://github.com/powerapi-ng/powerapi.git",
    "timestamp": "2023-07-01T13:15:21.233768Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.unit.actor.test_socket_interface",
                "name": "test_close",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_socket_interface",
                "name": "test_setup",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_socket_interface",
                "name": "test_push_connection",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_socket_interface",
                "name": "test_push_disconnection",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_socket_interface",
                "name": "test_push_receive",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_socket_interface",
                "name": "test_control_connection",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_socket_interface",
                "name": "test_control_disconnection",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_socket_interface",
                "name": "test_control_receive",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_socket_interface",
                "name": "test_multiple_receive",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_launch_actor_increase_supervisor_supervised_actor_list_by_one[supervisor0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_launch_actor_increase_supervisor_supervised_actor_list_by_one[supervisor1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_launch_actor_put_actor_in_supervisor_supervised_actor_list[supervisor0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_launch_actor_put_actor_in_supervisor_supervised_actor_list[supervisor1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_launch_actor_send_to_it_a_start_message[supervisor0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_launch_actor_send_to_it_a_start_message[supervisor1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_launch_an_actor_that_crash_dont_increase_supervised_actor_list[supervisor0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_launch_an_actor_that_crash_dont_increase_supervised_actor_list[supervisor1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_launch_an_actor_that_crash_with_ZMQError_raise_ZMQError_exception[supervisor0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_launch_an_actor_that_crash_with_ZMQError_raise_ZMQError_exception[supervisor1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_launch_an_actor_that_crash_with_ActorInitError_raise_ActorInitError_exception[supervisor0]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_launch_an_actor_that_crash_with_ActorInitError_raise_ActorInitError_exception[supervisor1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_kill_actors_methods_all_actor_in_supervised_list_not_alive[supervisor0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.actor.test_supervisor",
                "name": "test_kill_actors_methods_all_actor_in_supervised_list_not_alive[supervisor1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_add_argument_that_already_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_get_arguments_returns_all_stored_arguments",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_get_mandatory_arguments_return_all_mandatory_argument",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_get_mandatory_arguments_return_empty_list_with_no_mandatory_args",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_validate_check_mandatory_arguments_on_configuration",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_validate_accept_configuration_when_no_mandatory_arguments_exist",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_validate_adds_default_values_for_no_arguments_defined_in_configuration_that_have_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_get_arguments_str_return_str_with_all_information",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parser_return_correct_values_for_each_argument",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parser_raise_an_exception_with_an_unknown_argument",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_add_short_argument",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_add_flag_argument_with_short_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_add_several_arguments_with_short_names",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_add_argument_with_two_short_names_raise_an_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_add_argument_with_long_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_add_flag_argument_with_long",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_add_argument_with_more_than_two_names_raise_an_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parsing_of_config_of_empty_parser",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parsing_of_config_of_a_parser",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parsing_of_config_of_a_parser_with_a_subgroup_parser",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parsing_of_config_with_several_subgroups_with_the_same_name_in_a_parser_with_a_subgroup_parser",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parsing_of_several_subgroups_with_different_name_in_a_parser_with_several_subgroup_parsers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parsing_of_config_with_repeated_subgroups_names_raise_an_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parsing_of_argument_with_val",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parsing_of_argument_with_long_short_names_and_val",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_add_argument_with_two_long_names_with_same_length_raise_an_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parsing_arguments_with_val_has_correct_default_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parsing_arguments_with_val_has_correct_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parsing_argument_with_wrong_type_raise_an_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_add_subgroup_parser_that_already_exist_raise_an_exception",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_add_subgroup_parser_with_argument_name_work",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_add_subgroup_parser_without_argument_name_raise_an_exception",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parsing_empty_string_return_default_value_of_arguments",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_parsing_dict_return_configuration_with_arguments_long_name",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_subgroup_parser_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_subgroup_parser_parsing_an_argument",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_subgroup_parsing_parser_several_arguments",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_parser",
                "name": "test_subgroup_parser_parsing_empty_argument_list_return_default_values",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_validator",
                "name": "test_config_in_stream_mode_with_csv_input_raise_an_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_validator",
                "name": "test_config_in_postmortem_mode_with_csv_input_is_validated",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_validator",
                "name": "test_valid_config_postmortem_csv_input_without_optional_arguments_is_validated",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_validator",
                "name": "test_config_with_csv_input_with_files_that_do_not_exist_raise_an_exception",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_validator",
                "name": "test_config_without_inputs_raise_an_exception",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_config_validator",
                "name": "test_config_without_outputs_raise_an_exception",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_puller_from_empty_config_dict_raise_an_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_puller_from_mongo_basic_config",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_several_pullers_from_config",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_puller_raise_exception_when_missing_arguments_in_mongo_input",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_puller_when_missing_arguments_in_csv_input_generate_related_actors",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_puller_raise_exception_when_missing_arguments_in_socket_input",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_remove_model_factory_that_does_not_exist_on_a_DBActorGenerator_must_raise_ModelNameDoesNotExist",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_remove_HWPCReport_model_and_generate_puller_from_a_config_with_hwpc_report_model_raise_an_exception",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_remove_mongodb_factory_and_generate_puller_from_a_config_with_mongodb_input_must_call_sys_exit_",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_pusher_from_empty_config_dict_raise_an_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_pusher_from_mongo_basic_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_several_pushers_from_config",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_pusher_raise_exception_when_missing_arguments_in_mongo_output",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_pusher_raise_exception_when_missing_arguments_in_influx_output",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_pusher_raise_exception_when_missing_arguments_in_prometheus_output",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_pusher_raise_exception_when_missing_arguments_in_opentsdb_output",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_pusher_raise_exception_when_missing_arguments_in_virtiofs_output",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_pusher_raise_exception_when_missing_arguments_in_filedb_output",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_generator",
                "name": "test_generate_pusher_when_missing_arguments_in_csv_output_generate_related_actors",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_add_argument_to_cli_parser_that_already_exist_raise_an_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_add_flag_arguments_with_short_name_to_cli_parser",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_add_flag_arguments_and_no_flag_arguments_with_short_name_to_cli_parser",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_add_arguments_with_long_name_to_cli_parser",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_add_flag_arguments_with_long_name_to_cli_parser",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_arguments_string_parsing_with_empty_parsing_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_arguments_dict_validation_with_empty_parsing_manager",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_arguments_dict_validation_with_parsing_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_arguments_string_parsing_with_subgroup_parser_in_parsing_manager",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_arguments_dict_validation_with_subgroup_parser_in_parsing_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_of_two_subgroups_of_the_same_type_with_parsing_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_validation_of_two_subgroups_of_the_same_type_in_parsing_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_of_two_subgroups_of_different_type_in_parsing_manager",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_of_repeated_subgroups_in_parsing_manager_raise_an_exception",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_arguments_string_parsing_with_and_without_val_in_parsing_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_validation_of_arguments_dict_parsing_with_val_in_parsing_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_arguments_string_parsing_type_checking_in_parsing_manager",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_validation_of_arguments_dict_type_checking_in_parsing_manager",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_arguments_string_parsing_with_long_and_short_names_in_parsing_manager",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_add_arguments_with_two_short_names_raise_an_exception_in_parsing_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_add_arguments_with_two_long_names_raise_an_exception_in_parsing_manager",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_add_argument_with_default_type_in_parsing_manager",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_add_argument_with_type_in_parsing_manager",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_of_arguments_string_with_wrong_type_raise_an_exception_in_parsing_manager",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_add_subgroup_parser_that_already_exists_raises_an_exception_in_parsing_manager",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_of_arguments_string_with_subgroup_parser_with_long_and_short_arguments_names_in_parsing_manager",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_add_subgroup_parser_without_name_argument_raise_an_exception_in_parsing_manager",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_empty_string_return_default_values_of_arguments_in_parsing_manager",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_validate_empty_dict_return_default_values_of_arguments_in_parsing_manager",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_configuration_file_in_parsing_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_configuration_file_with_long_and_short_names_for_arguments_in_parsing_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_configuration_file_with_no_argument_with_default_value_in_parsing_manager",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_configuration_file_with_unknown_argument_terminate_execution_in_parsing_manager",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_configuration_file_with_wrong_argument_terminate_execution_in_parsing_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_cli_configuration_in_parsing_manager",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_cli_configuration_with_long_and_short_names_for_arguments_in_parsing_manager",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_cli_configuration_with_no_argument_with_default_value_in_parsing_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.cli.test_parsing_manager",
                "name": "test_parsing_cli_configuration_with_unknown_argument_terminate_execution_in_parsing_manager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_init_fields_name_test",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_sensor_rule[report0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_sensor_rule[report1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_sensor_rule[report2]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_sensor_rule[report3]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_sensor_rule[report4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_sensor_rule[report5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_target_rule[report0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_target_rule[report1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_target_rule[report2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_target_rule[report3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_target_rule[report4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_target_rule[report5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_socket_rule_report_1[report_10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_socket_rule_report_1[report_11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_socket_rule_report_2[report_20]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_socket_rule_report_2[report_21]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_socket_rule_report_3[report_30]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_socket_rule_report_3[report_31]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_cpu_rule_report_1[report_10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_cpu_rule_report_1[report_11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_cpu_rule_report_2[report_20]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_cpu_rule_report_2[report_21]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_cpu_rule_report_3[report_30]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_hwpc_dispatch_rule",
                "name": "test_get_formula_id_cpu_rule_report_3[report_31]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_power_dispatch_rule",
                "name": "test_get_formula_id_with_sensor_rule_must_return_good_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_power_dispatch_rule",
                "name": "test_get_formula_id_with_target_rule_must_return_good_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_power_dispatch_rule",
                "name": "test_get_formula_id_with_socket_rule_must_return_good_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatch_rule.test_power_dispatch_rule",
                "name": "test_get_formula_id_with_core_rule_must_return_good_id",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_dont_make_blocked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_and_B_dont_make_blocked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_B_and_C_make_blocked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_B_C_and_D_dont_make_blocked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_B_C_D_and_E_dont_make_blocked",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_B_C_D_E_and_F_dont_make_blocked",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_and_C_dont_make_blocked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_C_and_D_dont_make_blocked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_C_D_and_E_make_blocked",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_C_D_E_and_F_dont_make_blocked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_B_and_D_dont_make_blocked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_B_D_and_E_dont_make_blocked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_B_D_E_and_F_make_blocked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_B_D_E_F_and_G_dont_make_blocked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_blocking_detector",
                "name": "test_receive_poison_A_B_and_C_with_B_sup_to_max_id_make_blocked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_new_actor_is_alive[dispatch_rules0]",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_send_PoisonPillMessage_set_actor_alive_to_False[dispatch_rules0]",
                "time": 0.171,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_send_StartMessage_answer_OkMessage[dispatch_rules0]",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_send_StartMessage_to_already_started_actor_answer_ErrorMessage[dispatch_rules0]",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_send_message_on_data_canal_to_non_initialized_actor_raise_NotConnectedException[dispatch_rules0]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_send_message_on_control_canal_to_non_initialized_actor_raise_NotConnectedException[dispatch_rules0]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_if_actor_behaviour_raise_low_exception_the_actor_must_stay_alive[dispatch_rules0]",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_if_actor_behaviour_raise_low_exception_the_actor_must_answer_to_ping_message[dispatch_rules0]",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_if_actor_behaviour_raise_fatal_exception_the_actor_must_be_killed[dispatch_rules0]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_starting_actor_with_a_no_StartMessage_does_no_change_initialized[dispatch_rules0]",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_send_Report1_without_dispatch_rule_for_Report1_stop_dispatcher[dispatch_rules0]",
                "time": 0.128,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_send_Report1_without_dispatch_rule_for_Report1_dont_create_formula[dispatch_rules0]",
                "time": 0.595,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_send_Report1_with_dispatch_rule_for_Report1_and_no_formula_created_must_create_a_new_formula[dispatch_rules0]",
                "time": 10.128,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_send_Report1_with_dispatch_rule_for_Report1_and_one_formula_send_report_to_formula[dispatch_rules0]",
                "time": 1.145,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_send_Report2_with_dispatch_rule_for_Report1_Primary_and_two_formula_send_report_to_all_formula[dispatch_rules0]",
                "time": 11.621,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_send_REPORT1_B2_with_dispatch_rule_1AB_must_create_two_formula[dispatch_rules0]",
                "time": 10.164,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_send_REPORT3_on_dispatcher_with_two_formula_and_dispatch_rule_1AB_send_report_to_one_formula[dispatch_rules0]",
                "time": 11.628,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor.TestDispatcher",
                "name": "test_send_PoisonPillMessage_make_dispatcher_forward_it_to_formula[dispatch_rules0]",
                "time": 11.192,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor",
                "name": "test_extract_formula_id_with_pgb_DispatchRule1A_on_REPORT_1_must_return_good_formula_id",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor",
                "name": "test_extract_formula_id_with_pgb_DispatchRule1A_gb_DispatchRule2A_on_REPORT_2_must_return_good_formula_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor",
                "name": "test_extract_formula_id_with_pgb_DispatchRule1A_gb_DispatchRule2AC_on_REPORT_2_must_return_good_formula_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor",
                "name": "test_extract_formula_id_with_pgb_DispatchRule1AB_on_REPORT_1_must_return_good_formula_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor",
                "name": "test_extract_formula_id_with_pgb_DispatchRule1AB_gb_DispatchRule2A_on_REPORT_2_must_return_good_formula_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.dispatcher.test_dispatcher_actor",
                "name": "test_extract_formula_id_with_pgb_DispatchRule1AB_gb_DispatchRule2AC_on_REPORT_2_must_return_good_formula_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.formula.simple.test_simple_formula_actor.TestSimpleFormula",
                "name": "test_new_actor_is_alive",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.formula.simple.test_simple_formula_actor.TestSimpleFormula",
                "name": "test_send_PoisonPillMessage_set_actor_alive_to_False",
                "time": 0.186,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.formula.simple.test_simple_formula_actor.TestSimpleFormula",
                "name": "test_send_StartMessage_answer_OkMessage",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.formula.simple.test_simple_formula_actor.TestSimpleFormula",
                "name": "test_send_StartMessage_to_already_started_actor_answer_ErrorMessage",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.formula.simple.test_simple_formula_actor.TestSimpleFormula",
                "name": "test_send_message_on_data_canal_to_non_initialized_actor_raise_NotConnectedException",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.formula.simple.test_simple_formula_actor.TestSimpleFormula",
                "name": "test_send_message_on_control_canal_to_non_initialized_actor_raise_NotConnectedException",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.formula.simple.test_simple_formula_actor.TestSimpleFormula",
                "name": "test_if_actor_behaviour_raise_low_exception_the_actor_must_stay_alive",
                "time": 0.106,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.formula.simple.test_simple_formula_actor.TestSimpleFormula",
                "name": "test_if_actor_behaviour_raise_low_exception_the_actor_must_answer_to_ping_message",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.formula.simple.test_simple_formula_actor.TestSimpleFormula",
                "name": "test_if_actor_behaviour_raise_fatal_exception_the_actor_must_be_killed",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.formula.simple.test_simple_formula_actor.TestSimpleFormula",
                "name": "test_starting_actor_with_a_no_StartMessage_does_no_change_initialized",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.formula.simple.test_simple_formula_actor.TestSimpleFormula",
                "name": "test_send_power_report_to_simple_formula_make_formula_send_same_report_to_pusher",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.formula.simple.test_simple_formula_actor.TestSimpleFormula",
                "name": "test_send_empty_hwpc_report_to_simple_formula_make_formula_send_none_to_pusher",
                "time": 2.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.test_puller_actor",
                "name": "test_puller_start_message_empty_filter",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.test_puller_actor",
                "name": "test_puller_send_reports_to_dispatcher",
                "time": 2.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.test_puller_actor",
                "name": "test_puller_with_multiple_reports_filter",
                "time": 2.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.test_puller_actor",
                "name": "test_puller_with_stream_mode",
                "time": 5.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.simple.test_simple_puller_actor.TestSimplePuller",
                "name": "test_new_actor_is_alive",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.simple.test_simple_puller_actor.TestSimplePuller",
                "name": "test_send_PoisonPillMessage_set_actor_alive_to_False",
                "time": 0.134,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.simple.test_simple_puller_actor.TestSimplePuller",
                "name": "test_send_StartMessage_answer_OkMessage",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.simple.test_simple_puller_actor.TestSimplePuller",
                "name": "test_send_StartMessage_to_already_started_actor_answer_ErrorMessage",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.simple.test_simple_puller_actor.TestSimplePuller",
                "name": "test_send_message_on_data_canal_to_non_initialized_actor_raise_NotConnectedException",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.simple.test_simple_puller_actor.TestSimplePuller",
                "name": "test_send_message_on_control_canal_to_non_initialized_actor_raise_NotConnectedException",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.simple.test_simple_puller_actor.TestSimplePuller",
                "name": "test_if_actor_behaviour_raise_low_exception_the_actor_must_stay_alive",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.simple.test_simple_puller_actor.TestSimplePuller",
                "name": "test_if_actor_behaviour_raise_low_exception_the_actor_must_answer_to_ping_message",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.simple.test_simple_puller_actor.TestSimplePuller",
                "name": "test_if_actor_behaviour_raise_fatal_exception_the_actor_must_be_killed",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.simple.test_simple_puller_actor.TestSimplePuller",
                "name": "test_starting_actor_with_a_no_StartMessage_does_no_change_initialized",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.simple.test_simple_puller_actor.TestSimplePuller",
                "name": "test_create_simple_puller_without_rules_is_no_initialized",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.simple.test_simple_puller_actor.TestSimplePuller",
                "name": "test_start_actor_send_reports_to_dispatcher",
                "time": 100.176,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.puller.simple.test_simple_puller_actor.TestSimplePuller",
                "name": "test_starting_actor_terminate_itself_after_poison_message_reception",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_new_actor_is_alive[content0-50-100]",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_send_PoisonPillMessage_set_actor_alive_to_False[content0-50-100]",
                "time": 0.132,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_send_StartMessage_answer_OkMessage[content0-50-100]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_send_StartMessage_to_already_started_actor_answer_ErrorMessage[content0-50-100]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_send_message_on_data_canal_to_non_initialized_actor_raise_NotConnectedException[content0-50-100]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_send_message_on_control_canal_to_non_initialized_actor_raise_NotConnectedException[content0-50-100]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_if_actor_behaviour_raise_low_exception_the_actor_must_stay_alive[content0-50-100]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_if_actor_behaviour_raise_low_exception_the_actor_must_answer_to_ping_message[content0-50-100]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_if_actor_behaviour_raise_fatal_exception_the_actor_must_be_killed[content0-50-100]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_starting_actor_with_a_no_StartMessage_does_no_change_initialized[content0-50-100]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_starting_actor_make_it_connect_to_database[content0-50-100]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_send_one_report_to_pusher_with_0_sized_buffer_make_it_save_the_report[content0-0-100]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_send_one_report_to_pusher_with_1_sized_buffer_make_it_not_save_the_report[content0-1-100]",
                "time": 1.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_send_two_report_to_pusher_with_1_sized_buffer_make_it_save_the_reports_in_one_call[content0-1-100]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_send_one_report_to_pusher_with_0_delay_make_it_save_the_reports[content0-50-0]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_send_two_report_to_pusher_with_2_seconds_delay_make_it_not_save_the_reports[content0-50-2000]",
                "time": 1.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_send_two_report__with_two_second_between_messages_to_pusher_with_2_seconds_delay_make_it_save_the_report[content0-50-2000]",
                "time": 2.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.test_pusher_actor.TestPusher",
                "name": "test_send_two_report_in_wrong_time_order_to_a_pusher_make_it_save_them_in_good_order[content0-1-100]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_new_actor_is_alive",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_send_PoisonPillMessage_set_actor_alive_to_False",
                "time": 0.146,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_send_StartMessage_answer_OkMessage",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_send_StartMessage_to_already_started_actor_answer_ErrorMessage",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_send_message_on_data_canal_to_non_initialized_actor_raise_NotConnectedException",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_send_message_on_control_canal_to_non_initialized_actor_raise_NotConnectedException",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_if_actor_behaviour_raise_low_exception_the_actor_must_stay_alive",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_if_actor_behaviour_raise_low_exception_the_actor_must_answer_to_ping_message",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_if_actor_behaviour_raise_fatal_exception_the_actor_must_be_killed",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_starting_actor_with_a_no_StartMessage_does_no_change_initialized",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_send_one_hwpc_report_to_pusher_make_it_save_it",
                "time": 2.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_send_one_power_report_to_pusher_make_it_save_it",
                "time": 2.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_starting_actor_terminate_itself_after_poison_message_reception",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pusher.simple.test_simple_pusher_actor.TestSimplePusher",
                "name": "test_check_actor_still_alive_if_x_messages_are_no_still_received",
                "time": 0.563,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_formula_report",
                "name": "test_formula_report_to_csv_lines_with_empty_metadata",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_formula_report",
                "name": "test_formula_report_to_csv_lines_with_metadata",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_formula_report",
                "name": "test_formula_report_to_mongodb_with_empty_metadata",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_formula_report",
                "name": "test_formula_report_to_mongodb_with_metadata",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_formula_report",
                "name": "test_formula_report_to_influxdb_with_empty_metadata",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_formula_report",
                "name": "test_formula_report_to_influxdb_with_metadata",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_hwpc_report_from_json_wit_str_timestamp_create_a_HWPCReport",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_hwpc_report_from_json_with_datetime_timestamp_format_create_a_HWPCReport",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_hwpc_report_from_json_with_str_timestamp_with_bad_format_raise_BadInputData",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_hwpc_report_from_json_without_timestamp_field_raise_BadInputData",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_hwpc_report_from_json_without_sensor_field_raise_BadInputData",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_hwpc_report_from_json_without_groups_field_raise_BadInputData",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_hwpc_report_from_csv_with_one_lines_create_an_hwpc_report",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_hwpc_report_from_csv_with_bad_timestamp_format_raise_BadInputData",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_hwpc_report_from_csv_with_two_lines_create_an_hwpc_report",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_hwpc_report_from_csv_with_two_lines_with_different_timestamp_raise_BadInputData",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_hwpc_report_from_csv_with_two_lines_with_different_sensor_name_raise_BadInputData",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_hwpc_report_from_csv_with_two_lines_with_different_target_name_raise_BadInputData",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_hwpc_report_from_csv_without_socket_field_raise_BadInputData",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_creating_report_with_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_report_from_json_with_events",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_hwpc_report",
                "name": "test_create_report_from_csv_with_events",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_power_report",
                "name": "test_create_power_report_from_json_wit_str_timestamp_create_a_PowerReport",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_power_report",
                "name": "test_create_power_report_from_json_with_datetime_timestamp_format_create_a_PowerReport",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_power_report",
                "name": "test_create_power_report_from_json_with_str_timestamp_with_bad_format_raise_BadInputData",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_power_report",
                "name": "test_create_power_report_from_json_without_timestamp_field_raise_BadInputData",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_power_report",
                "name": "test_create_power_report_from_json_without_sensor_field_raise_BadInputData",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_power_report",
                "name": "test_create_power_report_from_csv_with_one_lines_create_an_power_report",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_power_report",
                "name": "test_create_power_report_from_csv_with_bad_timestamp_format_raise_BadInputData",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_power_report",
                "name": "test_create_power_report_from_csv_with_two_lines_raise_BadInputData",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_power_report",
                "name": "test_creating_report_with_metadata",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_power_report",
                "name": "test_create_report_from_json_with_metadata",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_power_report",
                "name": "test_create_report_from_csv_with_metadata",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_procfs_report",
                "name": "test_create_procfs_report_from_json_wit_str_timestamp_create_a_ProcfsReport",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_procfs_report",
                "name": "test_create_procfs_report_from_json_with_datetime_timestamp_format_create_a_ProcfsReport",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_procfs_report",
                "name": "test_create_procfs_report_from_json_with_str_timestamp_with_bad_format_raise_BadInputData",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_procfs_report",
                "name": "test_create_procfs_report_from_json_without_timestamp_field_raise_BadInputData",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_procfs_report",
                "name": "test_create_procfs_report_from_json_without_sensor_field_raise_BadInputData",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_procfs_report",
                "name": "test_create_procfs_report_from_csv_with_one_lines_create_an_procfs_report",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_procfs_report",
                "name": "test_create_procfs_report_from_csv_with_bad_timestamp_format_raise_BadInputData",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_procfs_report",
                "name": "test_create_procfs_report_from_csv_with_two_lines_raise_BadInputData",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_procfs_report",
                "name": "test_creating_report_with_metadata",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_procfs_report",
                "name": "test_create_report_from_json_with_metadata",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_procfs_report",
                "name": "test_create_report_from_csv_with_metadata",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_report",
                "name": "test_creating_report_with_metadata",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_report",
                "name": "test_create_two_report_without_metadata_metadata_are_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_report",
                "name": "test_to_json",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report.test_report",
                "name": "test_to_json_with_dispatcher_report_id",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report_modifier.test_libvirt_mapper",
                "name": "test_modify_report_that_not_match_regexp_musnt_modify_report",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report_modifier.test_libvirt_mapper",
                "name": "test_modify_report_that_match_regexp_must_modify_report",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.report_modifier.test_libvirt_mapper",
                "name": "test_modify_report_that_match_regexp_but_with_wrong_domain_name_musnt_modify_report",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_JsonStream",
                "name": "test_read_json_object_from_a_socket_without_data_return_None",
                "time": 0.204,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_JsonStream",
                "name": "test_read_json_object_from_a_socket_with_one_json_object_must_return_one_json_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_JsonStream",
                "name": "test_read_json_object_twice_from_a_socket_with_one_json_object_must_return_only_one_json_string",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_JsonStream",
                "name": "test_read_json_object_from_a_socket_with_an_incomplete_json_object_must_return_None",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_JsonStream",
                "name": "test_read_json_object_from_a_socket_with_an_complete_json_object_and_incomplete_json_object_must_return_only_one_json_string",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_JsonStream",
                "name": "test_read_json_object_twice_from_a_socket_with_two_json_object_must_return_two_json_string",
                "time": 0.203,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_stat_buffer",
                "name": "test_asking_if_stat_is_available_on_a_key_that_was_never_append_must_raise_KeyError",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_stat_buffer",
                "name": "test_asking_if_stat_is_available_on_a_stat_buffer_with_aggregation_periode_of_3_while_2_measure_where_append_on_2_seconds_return_false",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_stat_buffer",
                "name": "test_asking_if_stat_is_available_on_a_stat_buffer_with_aggregation_periode_of_1_while_2_measure_where_append_on_1_seconds_return_true",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_stat_buffer",
                "name": "test_asking_if_stat_is_available_on_a_stat_buffer_with_aggregation_periode_of_1_while_2_measure_where_append_on_2_seconds_return_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_stat_buffer",
                "name": "test_get_stats_on_a_stat_buffer_with_aggregation_periode_of_3_while_2_measure_where_append_on_2_seconds_return_None",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_stat_buffer",
                "name": "test_get_stats_on_a_key_that_was_never_append_must_raise_KeyError",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_stat_buffer",
                "name": "test_get_stats_on_a_stat_buffer_with_aggregation_periode_of_1_while_2_measure_where_append_on_2_seconds_return_good_results",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_stat_buffer",
                "name": "test_get_stats_on_a_stat_buffer_with_aggregation_periode_of_1_while_3_measure_where_append_on_2_seconds_return_stats_on_two_first_results",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_stat_buffer",
                "name": "test_get_stats_second_times_on_a_stat_buffer_with_aggregation_periode_of_1_while_3_measure_where_append_on_2_seconds_return_None",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_stat_buffer",
                "name": "test_get_stat_buffer_with_aggregation_periode_of_1_while_4_measure_append_good_result_for_two_last_measure",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_sync",
                "name": "test_request_while_no_pair_available_return_None",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_sync",
                "name": "test_request_while_report_missing_return_correct_data",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_sync",
                "name": "test_request_correct_use_return_correct_data",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_sync",
                "name": "test_send_timeline_of_reports_receive_right_pair",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_sync",
                "name": "test_send_report_in_special_order_receive_right_pair",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_tree.TestTree",
                "name": "test_add_child_to_empty_tree",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_tree.TestTree",
                "name": "test_get_from_root",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_tree.TestTree",
                "name": "test_add_val_at_root",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_tree.TestNode",
                "name": "test_add_child_depth1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_tree.TestNode",
                "name": "test_add_child_depth2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_tree.TestNode",
                "name": "test_add_child_depth2_node_already_exist",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_tree.TestNode",
                "name": "test_retrieve_leaf_value_depth1",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_tree.TestNode",
                "name": "test_retrieve_leaf_value_depth2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_tree.TestNode",
                "name": "test_retrieve_2_leaf_value_depth2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_tree.TestNode",
                "name": "test_retrieve_1_leaf_value_depth2_2_branch",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_tree.TestNode",
                "name": "test_get_childs_depth1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.utils.test_tree.TestNode",
                "name": "test_get_childs_depth2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests] \ud83d\ude80  Start image=crawlergpt:latest\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/powerapi-ng-powerapi] user=0 workdir=\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=eaaf4bedf32dbdc6b720b63067d99c4d77d6047d\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests] \ud83e\uddea  Matrix: map[python-version:3.8]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests] \u2b50 Run Main actions/checkout@v3\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2705  Success - Main actions/checkout@v3\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests] \u2b50 Run Main Set up Python 3.8\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/58ff7d09-54dd-4e47-ac2a-561d3b9d7b9b/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2753  ::group::Installed versions\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::isExplicit: \n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::explicit? false\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::explicit? true\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::explicit? true\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::explicit? true\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::explicit? true\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::explicit? true\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::explicit? true\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::matched: 3.8.11\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Successfully set up CPython (3.8.11)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2753  ::endgroup::\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2705  Success - Main Set up Python 3.8\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2699  ::set-output:: python-version=3.8.11\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests] \u2b50 Run Main Install dependencies\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (21.2.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting pip\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Installing collected packages: pip\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Attempting uninstall: pip\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |     Found existing installation: pip 21.2.4\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |     Uninstalling pip-21.2.4:\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |       Successfully uninstalled pip-21.2.4\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Successfully installed pip-23.1.2\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/powerapi-ng-powerapi\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Installing build dependencies: started\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Installing build dependencies: finished with status 'done'\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Checking if build backend supports build_editable: started\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Checking if build backend supports build_editable: finished with status 'done'\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Getting requirements to build editable: started\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Getting requirements to build editable: finished with status 'done'\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Preparing editable metadata (pyproject.toml): started\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting pyzmq>=18.1.0 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading pyzmq-25.1.0-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.1 MB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 9.9 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting setproctitle>=1.1.8 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading setproctitle-1.3.2-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (31 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting flake8>=3.9.2 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading flake8-6.0.0-py2.py3-none-any.whl (57 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.8/57.8 kB 1.4 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting pylint>=2.16.0 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading pylint-2.17.4-py3-none-any.whl (536 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 536.6/536.6 kB 17.6 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting sphinx>=1.8.1 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading sphinx-7.0.1-py3-none-any.whl (3.0 MB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.0/3.0 MB 17.8 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting sphinx-autodoc-typehints>=1.6.0 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading sphinx_autodoc_typehints-1.23.3-py3-none-any.whl (18 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting pytest>=7.0.1 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 4.4 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting pytest-asyncio>=0.20.1 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading pytest_asyncio-0.21.0-py3-none-any.whl (13 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting pytest-timeout>=1.4.2 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading pytest_timeout-2.1.0-py3-none-any.whl (12 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting pytest-cov>=4.0.0 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting mock>=4.0.3 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading mock-5.0.2-py3-none-any.whl (30 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting mccabe<0.8.0,>=0.7.0 (from flake8>=3.9.2->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting pycodestyle<2.11.0,>=2.10.0 (from flake8>=3.9.2->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading pycodestyle-2.10.0-py2.py3-none-any.whl (41 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.3/41.3 kB 1.9 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting pyflakes<3.1.0,>=3.0.0 (from flake8>=3.9.2->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading pyflakes-3.0.1-py2.py3-none-any.whl (62 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 3.2 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting platformdirs>=2.2.0 (from pylint>=2.16.0->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting astroid<=2.17.0-dev0,>=2.15.4 (from pylint>=2.16.0->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading astroid-2.15.5-py3-none-any.whl (278 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 278.1/278.1 kB 5.5 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting isort<6,>=4.2.5 (from pylint>=2.16.0->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading isort-5.12.0-py3-none-any.whl (91 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 91.2/91.2 kB 6.4 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting tomlkit>=0.10.1 (from pylint>=2.16.0->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting typing-extensions>=3.10.0 (from pylint>=2.16.0->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting dill>=0.2 (from pylint>=2.16.0->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading dill-0.3.6-py3-none-any.whl (110 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 110.5/110.5 kB 1.6 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting tomli>=1.1.0 (from pylint>=2.16.0->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting iniconfig (from pytest>=7.0.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting packaging (from pytest>=7.0.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 2.9 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting pluggy<2.0,>=0.12 (from pytest>=7.0.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest>=7.0.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov>=4.0.0->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading coverage-7.2.7-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (229 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 229.9/229.9 kB 6.4 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting sphinxcontrib-applehelp (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading sphinxcontrib_applehelp-1.0.4-py3-none-any.whl (120 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 120.6/120.6 kB 8.3 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting sphinxcontrib-devhelp (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading sphinxcontrib_devhelp-1.0.2-py2.py3-none-any.whl (84 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 84.7/84.7 kB 10.7 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting sphinxcontrib-jsmath (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading sphinxcontrib_jsmath-1.0.1-py2.py3-none-any.whl (5.1 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting sphinxcontrib-htmlhelp>=2.0.0 (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading sphinxcontrib_htmlhelp-2.0.1-py3-none-any.whl (99 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 99.8/99.8 kB 7.7 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting sphinxcontrib-serializinghtml>=1.1.5 (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading sphinxcontrib_serializinghtml-1.1.5-py2.py3-none-any.whl (94 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 94.0/94.0 kB 9.8 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting sphinxcontrib-qthelp (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading sphinxcontrib_qthelp-1.0.3-py2.py3-none-any.whl (90 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 90.6/90.6 kB 11.5 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting Jinja2>=3.0 (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.1/133.1 kB 9.5 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting Pygments>=2.13 (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 5.1 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting docutils<0.21,>=0.18.1 (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading docutils-0.20.1-py3-none-any.whl (572 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 572.7/572.7 kB 4.2 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting snowballstemmer>=2.0 (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading snowballstemmer-2.2.0-py2.py3-none-any.whl (93 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 93.0/93.0 kB 4.1 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting babel>=2.9 (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 10.1/10.1 MB 8.3 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting alabaster<0.8,>=0.7 (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading alabaster-0.7.13-py3-none-any.whl (13 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting imagesize>=1.3 (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading imagesize-1.4.1-py2.py3-none-any.whl (8.8 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting requests>=2.25.0 (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 1.7 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting importlib-metadata>=4.8 (from sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting lazy-object-proxy>=1.4.0 (from astroid<=2.17.0-dev0,>=2.15.4->pylint>=2.16.0->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading lazy_object_proxy-1.9.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (61 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.4/61.4 kB 4.8 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting wrapt<2,>=1.11 (from astroid<=2.17.0-dev0,>=2.15.4->pylint>=2.16.0->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading wrapt-1.15.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (81 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 81.5/81.5 kB 11.0 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting pytz>=2015.7 (from babel>=2.9->sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 13.4 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting zipp>=0.5 (from importlib-metadata>=4.8->sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting MarkupSafe>=2.0 (from Jinja2>=3.0->sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting charset-normalizer<4,>=2 (from requests>=2.25.0->sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 195.9/195.9 kB 13.7 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting idna<4,>=2.5 (from requests>=2.25.0->sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 2.4 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting urllib3<3,>=1.21.1 (from requests>=2.25.0->sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 1.5 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting certifi>=2017.4.17 (from requests>=2.25.0->sphinx>=1.8.1->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 4.1 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting pymongo>=3.7.2 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading pymongo-4.4.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (664 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 664.4/664.4 kB 13.1 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting influxdb-client>=1.30.0 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading influxdb_client-1.36.1-py3-none-any.whl (721 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 721.2/721.2 kB 9.5 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting influxdb>=2.12 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading influxdb-5.3.1-py2.py3-none-any.whl (77 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 77.9/77.9 kB 1.4 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting prometheus-client>=0.9.0 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading prometheus_client-0.17.0-py3-none-any.whl (60 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 60.6/60.6 kB 2.2 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting opentsdb-py>=0.6.0 (from powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading opentsdb_py-0.6.0-py3-none-any.whl (12 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting python-dateutil>=2.6.0 (from influxdb>=2.12->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 9.8 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting six>=1.10.0 (from influxdb>=2.12->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting msgpack (from influxdb>=2.12->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading msgpack-1.0.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (322 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 322.4/322.4 kB 13.1 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting reactivex>=4.0.4 (from influxdb-client>=1.30.0->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading reactivex-4.0.4-py3-none-any.whl (217 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 217.8/217.8 kB 26.6 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Requirement already satisfied: setuptools>=21.0.0 in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (from influxdb-client>=1.30.0->powerapi==2.0.4) (56.0.0)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Collecting dnspython<3.0.0,>=1.16.0 (from pymongo>=3.7.2->powerapi==2.0.4)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Downloading dnspython-2.3.0-py3-none-any.whl (283 kB)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 283.7/283.7 kB 5.8 MB/s eta 0:00:00\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Building wheels for collected packages: powerapi\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Building editable for powerapi (pyproject.toml): started\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Building editable for powerapi (pyproject.toml): finished with status 'done'\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Created wheel for powerapi: filename=powerapi-2.0.4-0.editable-py3-none-any.whl size=6935 sha256=4737f2f570b73ddec84e5efae82fbf7c160af7f19d6d92ea6e5bdc53823097ce\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-jfcwycpt/wheels/36/29/48/180c711123b5e59eaff94ef56b648590fd4060cc5b10c7d389\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Successfully built powerapi\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Installing collected packages: snowballstemmer, pytz, msgpack, zipp, wrapt, urllib3, typing-extensions, tomlkit, tomli, sphinxcontrib-serializinghtml, sphinxcontrib-qthelp, sphinxcontrib-jsmath, sphinxcontrib-htmlhelp, sphinxcontrib-devhelp, sphinxcontrib-applehelp, six, setproctitle, pyzmq, Pygments, pyflakes, pycodestyle, prometheus-client, pluggy, platformdirs, packaging, mock, mccabe, MarkupSafe, lazy-object-proxy, isort, iniconfig, imagesize, idna, exceptiongroup, docutils, dnspython, dill, coverage, charset-normalizer, certifi, babel, alabaster, requests, reactivex, python-dateutil, pytest, pymongo, powerapi, Jinja2, importlib-metadata, flake8, astroid, sphinx, pytest-timeout, pytest-cov, pytest-asyncio, pylint, opentsdb-py, influxdb-client, influxdb, sphinx-autodoc-typehints\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Successfully installed Jinja2-3.1.2 MarkupSafe-2.1.3 Pygments-2.15.1 alabaster-0.7.13 astroid-2.15.5 babel-2.12.1 certifi-2023.5.7 charset-normalizer-3.1.0 coverage-7.2.7 dill-0.3.6 dnspython-2.3.0 docutils-0.20.1 exceptiongroup-1.1.1 flake8-6.0.0 idna-3.4 imagesize-1.4.1 importlib-metadata-6.7.0 influxdb-5.3.1 influxdb-client-1.36.1 iniconfig-2.0.0 isort-5.12.0 lazy-object-proxy-1.9.0 mccabe-0.7.0 mock-5.0.2 msgpack-1.0.5 opentsdb-py-0.6.0 packaging-23.1 platformdirs-3.8.0 pluggy-1.2.0 powerapi-2.0.4 prometheus-client-0.17.0 pycodestyle-2.10.0 pyflakes-3.0.1 pylint-2.17.4 pymongo-4.4.0 pytest-7.4.0 pytest-asyncio-0.21.0 pytest-cov-4.1.0 pytest-timeout-2.1.0 python-dateutil-2.8.2 pytz-2023.3 pyzmq-25.1.0 reactivex-4.0.4 requests-2.31.0 setproctitle-1.3.2 six-1.16.0 snowballstemmer-2.2.0 sphinx-7.0.1 sphinx-autodoc-typehints-1.23.3 sphinxcontrib-applehelp-1.0.4 sphinxcontrib-devhelp-1.0.2 sphinxcontrib-htmlhelp-2.0.1 sphinxcontrib-jsmath-1.0.1 sphinxcontrib-qthelp-1.0.3 sphinxcontrib-serializinghtml-1.1.5 tomli-2.0.1 tomlkit-0.11.8 typing-extensions-4.7.0 urllib3-2.0.3 wrapt-1.15.0 zipp-3.15.0\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | \n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | [notice] A new release of pip is available: 21.1.1 -> 23.1.2\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | [notice] To update, run: pip install --upgrade pip\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2705  Success - Main Install dependencies\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests] \u2b50 Run Main Lint with flake8\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | 0\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2705  Success - Main Lint with flake8\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests] \u2b50 Run Main Static code analysis with pylint\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | \n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | ------------------------------------\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Your code has been rated at 10.00/10\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | \n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2705  Success - Main Static code analysis with pylint\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests] \u2b50 Run Main Test with pytest\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | ============================= test session starts ==============================\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | platform linux -- Python 3.8.11, pytest-7.4.0, pluggy-1.2.0\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/powerapi-ng-powerapi\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | plugins: cov-4.1.0, asyncio-0.21.0, timeout-2.1.0\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | asyncio: mode=strict\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | collected 337 items\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | \n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/actor/test_socket_interface.py .........                      [  2%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/actor/test_supervisor.py ..............                       [  6%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/cli/test_config_parser.py ................................... [ 17%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | ...                                                                      [ 18%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/cli/test_config_validator.py ......                           [ 19%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/cli/test_generator.py ...................                     [ 25%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/cli/test_parsing_manager.py ................................. [ 35%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | .....                                                                    [ 36%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/dispatch_rule/test_hwpc_dispatch_rule.py .................... [ 42%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | .....                                                                    [ 44%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/dispatch_rule/test_power_dispatch_rule.py ....                [ 45%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/dispatcher/test_blocking_detector.py ...............          [ 49%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/dispatcher/test_dispatcher_actor.py ........................  [ 56%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/formula/simple/test_simple_formula_actor.py ............      [ 60%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/puller/test_puller_actor.py ....                              [ 61%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/puller/simple/test_simple_puller_actor.py .............       [ 65%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/pusher/test_pusher_actor.py ..................                [ 70%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/pusher/simple/test_simple_pusher_actor.py ..............      [ 75%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/report/test_formula_report.py ......                          [ 76%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/report/test_hwpc_report.py ................                   [ 81%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/report/test_power_report.py ...........                       [ 84%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/report/test_procfs_report.py ...........                      [ 88%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/report/test_report.py ....                                    [ 89%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/report_modifier/test_libvirt_mapper.py ...                    [ 90%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/utils/test_JsonStream.py ......                               [ 91%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/utils/test_stat_buffer.py ..........                          [ 94%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/utils/test_sync.py .....                                      [ 96%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | tests/unit/utils/test_tree.py ............                               [100%]\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | \n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/powerapi-ng-powerapi/report.xml -\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | \n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | ---------- coverage: platform linux, python 3.8.11-final-0 -----------\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Name                                                       Stmts   Miss  Cover\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | ------------------------------------------------------------------------------\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/__init__.py                                           1      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/actor/__init__.py                                     5      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/actor/actor.py                                       98     47    52%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/actor/socket_interface.py                            93      4    96%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/actor/state.py                                       17      5    71%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/actor/supervisor.py                                  47     16    66%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/backend_supervisor/__init__.py                        1      1     0%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/backend_supervisor/backend_supervisor.py             45     45     0%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/cli/__init__.py                                       1      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/cli/common_cli_parsing_manager.py                   132    132     0%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/cli/config_parser.py                                226     15    93%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/cli/config_validator.py                              47      4    91%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/cli/generator.py                                    141     31    78%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/cli/parsing_manager.py                              109     22    80%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/database/__init__.py                                 12      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/database/base_db.py                                  28     10    64%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/database/csvdb.py                                   124     86    31%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/database/direct_prometheus_db.py                     48     33    31%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/database/file_db.py                                  48     27    44%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/database/influxdb2.py                                54     23    57%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/database/influxdb.py                                 44     23    48%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/database/mongodb.py                                  52     27    48%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/database/opentsdb.py                                 30     12    60%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/database/prometheus_db.py                            95     56    41%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/database/socket_db.py                                55     29    47%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/database/virtiofs_db.py                              38     20    47%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatch_rule/__init__.py                             4      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatch_rule/dispatch_rule.py                        6      1    83%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatch_rule/hwpc_dispatch_rule.py                  45      1    98%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatch_rule/power_dispatch_rule.py                 28      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatch_rule/procfs_dispatch_rule.py                22     10    55%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatch_rule/simple_dispatch_rule.py                10     10     0%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatcher/__init__.py                                2      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatcher/blocking_detector.py                      37      5    86%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatcher/dispatcher_actor.py                       50     17    66%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatcher/handlers.py                               46     14    70%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatcher/route_table.py                            17      5    71%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatcher/simple/__init__.py                         0      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatcher/simple/simple_dispatcher_actor.py         28     28     0%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/dispatcher/simple/simple_dispatcher_handlers.py      27     27     0%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/exception.py                                         74      6    92%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/filter/__init__.py                                    1      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/filter/filter.py                                     15      7    53%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/formula/__init__.py                                   4      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/formula/abstract_cpu_dram_formula.py                 14      5    64%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/formula/formula_actor.py                             29      5    83%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/formula/handlers.py                                   5      2    60%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/formula/simple/__init__.py                            1      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/formula/simple/simple_formula_actor.py               18      5    72%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/formula/simple/simple_handlers.py                    11      7    36%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/handler/__init__.py                                   3      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/handler/handler.py                                   25     13    48%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/handler/poison_pill_message_handler.py               20     13    35%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/handler/start_handler.py                             14      9    36%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/message.py                                           64     13    80%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/puller/__init__.py                                    2      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/puller/handlers.py                                  112     81    28%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/puller/puller_actor.py                               27      2    93%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/puller/simple/__init__.py                             2      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/puller/simple/simple_puller_actor.py                 21      3    86%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/puller/simple/simple_puller_handlers.py              27     17    37%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/pusher/__init__.py                                    2      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/pusher/handlers.py                                   30     19    37%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/pusher/pusher_actor.py                               20      3    85%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/pusher/simple/__init__.py                             2      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/pusher/simple/simple_pusher_actor.py                 24      6    75%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/pusher/simple/simple_pusher_handlers.py              32     17    47%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/report/__init__.py                                    6      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/report/control_report.py                             21      8    62%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/report/formula_report.py                             23      1    96%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/report/hwpc_report.py                                71      3    96%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/report/power_report.py                               80     25    69%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/report/procfs_report.py                              73     13    82%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/report/report.py                                     50      3    94%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/report_modifier/__init__.py                           2      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/report_modifier/libvirt_mapper.py                    27      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/report_modifier/report_modifier.py                    4      1    75%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/utils/__init__.py                                     4      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/utils/cli.py                                         14      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/utils/json_stream.py                                 39      1    97%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/utils/stat_buffer.py                                 36      0   100%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/utils/sync.py                                        56     14    75%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/utils/tree.py                                        78      7    91%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | powerapi/utils/utils.py                                       11      5    55%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | ------------------------------------------------------------------------------\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | TOTAL                                                       3107   1100    65%\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Coverage XML written to file coverage.xml\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | \n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | ======================= 337 passed in 186.79s (0:03:06) ========================\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u2705  Success - Main Test with pytest\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests] \u2b50 Run Main Upload coverage reports to Codecov\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/58ff7d09-54dd-4e47-ac2a-561d3b9d7b9b/act/codecov-codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d/ dst=/var/run/act/actions/codecov-codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d/\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d/] user=0 workdir=\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d/dist/index.js] user= workdir=\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Error: Cannot find module 'node:http'\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | Require stack:\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   | - /run/act/actions/codecov-codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d/dist/index.js\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:889:15)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |     at Function.Module._load (internal/modules/cjs/loader.js:745:27)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |     at Module.require (internal/modules/cjs/loader.js:961:19)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |     at require (internal/modules/cjs/helpers.js:92:18)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |     at /run/act/actions/codecov-codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d/webpack:/codecov-action/external node-commonjs \"node:http\":1:1\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |     at /run/act/actions/codecov-codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d/dist/index.js:24630:3\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |     at Object.<anonymous> (/run/act/actions/codecov-codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d/dist/index.js:24633:12)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |     at Module._compile (internal/modules/cjs/loader.js:1072:14)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |     at Object.Module._extensions..js (internal/modules/cjs/loader.js:1101:10)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   |     at Module.load (internal/modules/cjs/loader.js:937:32)\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests]   \u274c  Failure - Main Upload coverage reports to Codecov\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests] exitcode '1': failure\n[a205095c-e404-46f2-8eb4-55402e789539/Build project and run tests] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Build project and run tests' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/powerapi-ng-powerapi/.github/workflows/build-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "a205095c-e404-46f2-8eb4-55402e789539",
        "build_tool": "pytest",
        "elapsed_time": 485.10134863853455
    }
}