{
    "repository": "dopefishh/pympi",
    "stars": 81,
    "language": "python",
    "size": 2219,
    "clone_url": "https://github.com/dopefishh/pympi.git",
    "timestamp": "2023-06-28T10:16:48.655045Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_annotation",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_controlled_vocabulary",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_cv_description",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_cv_entry",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_external_ref",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_language",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_lexicon_ref",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_license",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_linguistic_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_linked_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_locale",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_nested_reference_annotations",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_property",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_ref_annotation",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_secondary_linked_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_add_tier",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_clean_time_slots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_copy_tier",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_create_gaps_and_overlaps_tier",
                "time": 0.433,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_eaf_from_chat",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_extract",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_filter_annotations",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_annotation_data_after_time",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_annotation_data_at_time",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_annotation_data_before_time",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_annotation_data_between_times",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_annotation_data_for_tier",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_child_tiers_for",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_controlled_vocabulary_names",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_cv_descriptions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_cv_entry",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_external_ref",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_external_ref_names",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_full_time_interval",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_gaps_and_overlaps2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_languages",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_lexicon_ref",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_lexicon_ref_names",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_licenses",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_linguistic_types_names",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_linked_files",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_locales",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_parameters_for_linguistic_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_parameters_for_tier",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_properties",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_ref_annotation_at_time",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_ref_annotation_data_between_times",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_ref_annotation_data_for_tier",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_secondary_linked_files",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_tier_ids_for_linguistic_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_get_tier_names",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_merge_tiers",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_parse_eaf",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_ref_get_annotation_data_after_time",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_ref_get_annotation_data_before_time",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_all_annotations_from_tier",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_annotation",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_controlled_vocabulary",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_cv_description",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_cv_entry",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_external_ref",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_language",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_lexicon_ref",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_license",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_linguistic_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_linked_files",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_locale",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_property",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_ref_annotation",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_secondary_linked_files",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_tier",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_remove_tiers",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_rename_tier",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_shift_annotations",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan.Elan",
                "name": "test_to_textgrid",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan",
                "name": "test_to_file_to_eaf[sample_2.8.eaf-EAFv2.8.xsd]",
                "time": 1.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan",
                "name": "test_to_file_to_eaf[sample_2.7.eaf-EAFv2.8.xsd]",
                "time": 1.131,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan",
                "name": "test_to_file_to_eaf[sample_3.0.eaf-EAFv3.0.xsd]",
                "time": 1.211,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_elan",
                "name": "test_to_textgrid",
                "time": 0.581,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_add_interval",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_add_point",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_add_tier",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_change_tier_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_clear_intervals",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_get_intervals",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_get_tier",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_get_tier_name_num",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_get_tiers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_remove_interval",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_remove_point",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_remove_tier",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_sort_tiers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat.PraatTest",
                "name": "test_to_eaf",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat",
                "name": "test_to_file[utf-8]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat",
                "name": "test_to_file[latin_1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_praat",
                "name": "test_to_file[mac_roman]",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build] \ud83d\ude80  Start image=crawlergpt:latest\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/dopefishh-pympi] user=0 workdir=\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build] \ud83e\uddea  Matrix: map[python-version:3.7]\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build] \u2b50 Run Main actions/checkout@v2\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \u2705  Success - Main actions/checkout@v2\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build] \u2b50 Run Main Set up Python 3.7\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/0ad88e98-ff2b-4e86-96e5-70fd8233d869/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::isExplicit: \n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::explicit? false\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::explicit? true\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::explicit? true\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::explicit? true\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::explicit? true\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::explicit? true\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::explicit? true\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::matched: 3.7.11\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Successfully setup CPython (3.7.11)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \u2705  Success - Main Set up Python 3.7\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \u2699  ::set-output:: python-version=3.7.11\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build] \u2b50 Run Main Install dependencies\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting pip\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Installing collected packages: pip\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Attempting uninstall: pip\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |     Found existing installation: pip 21.2.4\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |     Uninstalling pip-21.2.4:\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |       Successfully uninstalled pip-21.2.4\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Successfully installed pip-23.1.2\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Processing /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/dopefishh-pympi\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Installing build dependencies: started\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Installing build dependencies: finished with status 'done'\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Getting requirements to build wheel: started\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Getting requirements to build wheel: finished with status 'done'\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Preparing metadata (pyproject.toml): started\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting pytest>=5 (from pympi-ling==1.70.2)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 8.1 MB/s eta 0:00:00\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting pytest-mock (from pympi-ling==1.70.2)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading pytest_mock-3.11.1-py3-none-any.whl (9.6 kB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting pytest-cov (from pympi-ling==1.70.2)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting coverage>=4.2 (from pympi-ling==1.70.2)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading coverage-7.2.7-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (225 kB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 225.6/225.6 kB 4.5 MB/s eta 0:00:00\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting lxml (from pympi-ling==1.70.2)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading lxml-4.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.6 MB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 6.6/6.6 MB 7.7 MB/s eta 0:00:00\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting iniconfig (from pytest>=5->pympi-ling==1.70.2)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting packaging (from pytest>=5->pympi-ling==1.70.2)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 846.0 kB/s eta 0:00:00\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting pluggy<2.0,>=0.12 (from pytest>=5->pympi-ling==1.70.2)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest>=5->pympi-ling==1.70.2)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting tomli>=1.0.0 (from pytest>=5->pympi-ling==1.70.2)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting importlib-metadata>=0.12 (from pytest>=5->pympi-ling==1.70.2)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting zipp>=0.5 (from importlib-metadata>=0.12->pytest>=5->pympi-ling==1.70.2)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Collecting typing-extensions>=3.6.4 (from importlib-metadata>=0.12->pytest>=5->pympi-ling==1.70.2)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Building wheels for collected packages: pympi-ling\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Building wheel for pympi-ling (pyproject.toml): started\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Building wheel for pympi-ling (pyproject.toml): finished with status 'done'\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Created wheel for pympi-ling: filename=pympi_ling-1.70.2-py2.py3-none-any.whl size=25241 sha256=2b8fdd9711a33ec055eb952a1f12e5dcebdf0f299c6334fad1400883adb74341\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/fd/08/dc/cc89c54b5d031e7e65c4c6d644eb8c12322e4b1d1ba3ccb594\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Successfully built pympi-ling\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Installing collected packages: pympi-ling, zipp, typing-extensions, tomli, packaging, lxml, iniconfig, exceptiongroup, coverage, importlib-metadata, pluggy, pytest, pytest-mock, pytest-cov\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Successfully installed coverage-7.2.7 exceptiongroup-1.1.1 importlib-metadata-6.7.0 iniconfig-2.0.0 lxml-4.9.2 packaging-23.1 pluggy-1.2.0 pympi-ling-1.70.2 pytest-7.4.0 pytest-cov-4.1.0 pytest-mock-3.11.1 tomli-2.0.1 typing-extensions-4.6.3 zipp-3.15.0\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | \n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | [notice] To update, run: pip install --upgrade pip\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \u2705  Success - Main Install dependencies\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build] \u2b50 Run Main Test with pytest\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | ============================= test session starts ==============================\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | platform linux -- Python 3.7.11, pytest-7.4.0, pluggy-1.2.0\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/dopefishh-pympi\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | configfile: setup.cfg\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | testpaths: test\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | plugins: mock-3.11.1, cov-4.1.0\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | collected 96 items\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | \n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | test/test_elan.py ...................................................... [ 56%]\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | .........................                                                [ 82%]\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | test/test_praat.py .................                                     [100%]\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | \n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/dopefishh-pympi/report.xml -\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | \n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | Name                 Stmts   Miss  Cover   Missing\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | --------------------------------------------------\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | pympi/Elan.py          796    796     0%   1-1809\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | pympi/Praat.py         236    236     0%   1-426\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | pympi/__init__.py        3      3     0%   2-5\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | test/conftest.py         4      0   100%\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | test/test_elan.py      742      0   100%\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | test/test_praat.py     189      0   100%\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | --------------------------------------------------\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | TOTAL                 1970   1035    47%\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | \n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   | ============================== 96 passed in 5.77s ==============================\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \u2705  Success - Main Test with pytest\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build] \u2b50 Run Post Set up Python 3.7\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build]   \u2705  Success - Post Set up Python 3.7\n[a5eb5cf7-920c-4843-80e3-f631a4a01f8c/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/dopefishh-pympi/.github/workflows/python-package-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 207.11978101730347
    }
}