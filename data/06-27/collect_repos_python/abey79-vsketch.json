{
    "repository": "abey79/vsketch",
    "stars": 421,
    "language": "python",
    "size": 17130,
    "clone_url": "https://github.com/abey79/vsketch.git",
    "timestamp": "2023-06-28T15:47:29.952852Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "",
                "name": "tests.test_examples",
                "time": 0.0,
                "results": [
                    {
                        "result": "Error",
                        "message": "collection failure",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ] \ud83d\ude80  Start image=crawlergpt:latest\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint] \ud83d\ude80  Start image=crawlergpt:latest\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/abey79-vsketch] user=0 workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/abey79-vsketch] user=0 workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint] \u2b50 Run Pre Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2705  Success - Pre Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ] \u2b50 Run Pre Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2705  Success - Pre Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ] \ud83e\uddea  Matrix: map[python-version:3.9]\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ] \u2b50 Run Main actions/checkout@v2\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2705  Success - Main actions/checkout@v2\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ] \u2b50 Run Main Set up Python 3.9\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker cp src=/tmp/act-cache/1cdc802b-4aea-4b71-a2bb-70a1d4afd9f5/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.9]\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint] \u2b50 Run Main actions/checkout@v2\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2705  Success - Main actions/checkout@v2\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint] \u2b50 Run Main Set up Python 3.9\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker cp src=/tmp/act-cache/1cdc802b-4aea-4b71-a2bb-70a1d4afd9f5/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::isExplicit: \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::explicit? false\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::explicit? true\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::explicit? true\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::explicit? true\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::explicit? true\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::explicit? true\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::explicit? true\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::evaluating 6 versions\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::matched: 3.9.6\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | Successfully setup CPython (3.9.6)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2705  Success - Main Set up Python 3.9\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::isExplicit: \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::explicit? false\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::explicit? true\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::explicit? true\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::explicit? true\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::explicit? true\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::explicit? true\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::explicit? true\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::matched: 3.9.6\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Successfully setup CPython (3.9.6)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2705  Success - Main Set up Python 3.9\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2699  ::set-output:: python-version=3.9.6\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2699  ::set-output:: python-version=3.9.6\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint] \u2b50 Run Main Get full python version\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ] \u2b50 Run Main Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker cp src=/tmp/act-cache/1cdc802b-4aea-4b71-a2bb-70a1d4afd9f5/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/full-python-version.sh] user= workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2699  ::set-output:: version=3-9-6\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2705  Success - Main Get full python version\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ] \u2b50 Run Main Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint] \u2b50 Run Main Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker cp src=/tmp/act-cache/1cdc802b-4aea-4b71-a2bb-70a1d4afd9f5/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Retrieving Poetry metadata\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | # Welcome to Poetry!\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | This will download and install the latest version of Poetry,\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | a dependency and package manager for Python.\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | /home/runneradmin/.local/bin\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | You can uninstall at any time by executing this script with the --uninstall option,\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | and these changes will be reverted.\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Installing Poetry (1.5.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Installing Poetry (1.5.1): Creating environment\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Installing Poetry (1.5.1): Installing Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Installing Poetry (1.5.1): Creating script\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Installing Poetry (1.5.1): Done\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Poetry (1.5.1) is installed now. Great!\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | environment variable.\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | You can test that everything is set up by executing:\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | `poetry --version`\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \u001b[33mDone \u2705\u001b[0m\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2705  Success - Main Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2705  Success - Main Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ] \u2b50 Run Main Install dependencies\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint] \u2b50 Run Main Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3-composite-0.sh] user= workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Creating virtualenv vsketch in /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/abey79-vsketch/.venv\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Installing dependencies from lock file\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Warning: poetry.lock is not consistent with pyproject.toml. You may be getting improper dependencies. Run `poetry lock [--no-update]` to fix it.\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Package operations: 63 installs, 0 updates, 0 removals\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing shiboken6 (6.4.2)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing six (1.16.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing markupsafe (2.1.2)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing numpy (1.24.2)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing pyside6-essentials (6.4.2)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing python-dateutil (2.8.2)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing zipp (3.15.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing arrow (1.2.3)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing certifi (2022.12.7)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing charset-normalizer (3.1.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing contourpy (1.0.7)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing chardet (5.1.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing fonttools (4.39.2)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing glcontext (2.3.7)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing idna (3.4)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing importlib-resources (5.12.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing cycler (0.11.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing dill (0.3.6)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing jinja2 (3.1.2)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing kiwisolver (1.4.4)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing packaging (23.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing pillow (9.4.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing pyparsing (3.0.9)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing pyside6-addons (6.4.2)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing sniffio (1.3.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing text-unidecode (1.3)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing urllib3 (1.26.15)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing anyio (3.6.2)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing asteval (0.9.29)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing binaryornot (0.4.4)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing cachetools (5.3.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing click (8.1.3)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing exceptiongroup (1.1.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing attrs (22.2.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing jinja2-time (0.2.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing moderngl (5.8.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing multiprocess (0.70.14)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing matplotlib (3.7.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing iniconfig (2.0.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing mypy-extensions (1.0.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing pathspec (0.11.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing pnoise (0.2.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing pyside6 (6.4.2)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing platformdirs (3.1.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing python-slugify (8.0.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing pluggy (1.0.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing pyyaml (6.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing shapely (2.0.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing requests (2.28.2)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing svgwrite (1.4.3)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing types-urllib3 (1.26.25.8)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing svgelements (1.9.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing tomli (2.0.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing scipy (1.10.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing typing-extensions (4.5.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing black (23.1.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing cookiecutter (2.1.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing isort (5.12.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing mypy (1.1.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing types-requests (2.28.11.15)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing vpype (1.13.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing pytest (7.2.2)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   \u2022 Installing watchfiles (0.18.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Installing the current project: vsketch (1.0.0-alpha.0)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2705  Success - Main Install dependencies\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ] \u2b50 Run Main Pytest\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4.sh] user= workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | Retrieving Poetry metadata\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | # Welcome to Poetry!\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | This will download and install the latest version of Poetry,\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | a dependency and package manager for Python.\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | /home/runneradmin/.local/bin\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | You can uninstall at any time by executing this script with the --uninstall option,\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | and these changes will be reverted.\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | Installing Poetry (1.5.1)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | Installing Poetry (1.5.1): Creating environment\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | Installing Poetry (1.5.1): Installing Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | Installing Poetry (1.5.1): Creating script\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | Installing Poetry (1.5.1): Done\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | Poetry (1.5.1) is installed now. Great!\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | environment variable.\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | You can test that everything is set up by executing:\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | `poetry --version`\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \u001b[33mDone \u2705\u001b[0m\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2705  Success - Main Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2705  Success - Main Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint] Unable to interpolate expression 'format('venv-{0}-{1}-{2}', runner.os, steps.full-python-version.outputs.version, hashFiles('**/poetry.lock'))': Unable to filepath.Walk: lstat /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/abey79-vsketch/.venv/lib/python3.9/site-packages/matplotlib/__pycache__/mlab.cpython-39.pyc.140700953418608: no such file or directory\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint] \u2b50 Run Main Set up cache\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker cp src=/tmp/act-cache/1cdc802b-4aea-4b71-a2bb-70a1d4afd9f5/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2757  ::error::Input required and not supplied: key\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u274c  Failure - Main Set up cache\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | ============================= test session starts ==============================\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | platform linux -- Python 3.9.6, pytest-7.2.2, pluggy-1.0.0\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/abey79-vsketch, configfile: pyproject.toml, testpaths: tests\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | plugins: anyio-3.6.2\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | collected 327 items / 1 error\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | ==================================== ERRORS ====================================\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | ___________________ ERROR collecting tests/test_examples.py ____________________\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | ImportError while importing test module '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/abey79-vsketch/tests/test_examples.py'.\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Hint: make sure your test modules/packages have valid Python names.\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | Traceback:\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/importlib/__init__.py:127: in import_module\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |     return _bootstrap._gcd_import(name[level:], package, level)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | tests/test_examples.py:6: in <module>\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |     from vsketch_cli.cli import cli\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | vsketch_cli/cli.py:15: in <module>\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |     from .gui import show\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | vsketch_cli/gui.py:4: in <module>\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |     from PySide6.QtWidgets import QApplication\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | E   ImportError: libEGL.so.1: cannot open shared object file: No such file or directory\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | =============================== warnings summary ===============================\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | .venv/lib/python3.9/site-packages/shapely/set_operations.py:133\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/abey79-vsketch/.venv/lib/python3.9/site-packages/shapely/set_operations.py:133: RuntimeWarning: invalid value encountered in intersection\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   |     return lib.intersection(a, b, **kwargs)\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | \n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/abey79-vsketch/report.xml -\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | =========================== short test summary info ============================\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | ERROR tests/test_examples.py\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | !!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   | ========================= 1 warning, 1 error in 2.47s ==========================\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint] exitcode '1': failure\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u274c  Failure - Main Pytest\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ] exitcode '2': failure\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint] \u2b50 Run Post Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ] \u2b50 Run Post Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker cp src=/tmp/act-cache/1cdc802b-4aea-4b71-a2bb-70a1d4afd9f5/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker cp src=/tmp/act-cache/1cdc802b-4aea-4b71-a2bb-70a1d4afd9f5/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ]   \u2705  Success - Post Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint]   \u2705  Success - Post Install and configure Poetry\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/macOS/Linux Tests & Lint] \ud83c\udfc1  Job failed\n[eb584392-c0fd-4bbd-bf36-27c0342d4522/Windows Tests           ] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'macOS/Linux Tests & Lint' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/abey79-vsketch/.github/workflows/python-lint-tests-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 453.58436369895935
    }
}