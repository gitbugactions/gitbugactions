{
    "repository": "lingpy/lingpy",
    "stars": 111,
    "language": "python",
    "size": 26612,
    "clone_url": "https://github.com/lingpy/lingpy.git",
    "timestamp": "2023-07-01T09:30:28.382466Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_basictypes",
                "name": "test_all",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cache",
                "name": "test_cache",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_wordlist",
                "time": 0.112,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_alignments",
                "time": 1.337,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_ortho_profile",
                "time": 0.136,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_multiple",
                "time": 0.166,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_pairwise",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_settings",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_lexstat",
                "time": 1.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_profile",
                "time": 0.224,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_new_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_existing_config",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_default",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_log",
                "name": "test_Logging_context_manager",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_log",
                "name": "test_new_config",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_log",
                "name": "test_default_config",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_log",
                "name": "test_convenience",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_misc",
                "name": "test_compat",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_rc_get",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_rc[schema-ipa-<lambda>]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_rc[schema-el-<lambda>]",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_rc[custom-5-<lambda>]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_settings",
                "name": "test_rc[fn-x-<lambda>]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util",
                "name": "test_write_text_file",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util",
                "name": "test_TextFile",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util",
                "name": "test_combinations2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util",
                "name": "test_join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util",
                "name": "test_dotjoin",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util",
                "name": "test_as_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test__tree",
                "name": "test_grf",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_cluster_util",
                "name": "test_valid_cluster",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_cluster_util",
                "name": "test_generate_all_clusters",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_cluster_util",
                "name": "test_order_cluster",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_cluster_util",
                "name": "test_mutate_cluster",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_cluster_util",
                "name": "test_generate_random_clusters",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_clustering",
                "name": "test_check_taxa",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_clustering",
                "name": "test_upgma",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_clustering",
                "name": "test_neighbor",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_clustering",
                "name": "test_fuzzy",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_clustering",
                "name": "test_matrix2tree",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_clustering",
                "name": "test_matrix2groups",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_clustering",
                "name": "test_link_clustering",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_clustering",
                "name": "test_partition_density",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_clustering",
                "name": "test_best_threshold",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_clustering",
                "name": "test_find_threshold",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_clustering",
                "name": "test_check_taxon_names",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_clustering",
                "name": "test_flat_cluster",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_cython.Tests",
                "name": "test__calign",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_cython.Tests",
                "name": "test__malign",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_cython.Tests",
                "name": "test__talign",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_cython.Tests",
                "name": "test_corrdist",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_extra",
                "name": "test_clustering",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_extra",
                "name": "test_dbscan",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_extra",
                "name": "test_affinity_propagation",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.algorithm.test_extra",
                "name": "test_infomap_clustering",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test_mult_align",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test___get__",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test_prog_align",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test_lib_align",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test_get_pid",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test_swap_check",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test_iterate_all_sequences",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test_iterate_orphans",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test_iterate_similar_gap_sites",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test_iterate_clusters",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test_sum_of_pairs",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test_get_pairwise_alignments",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test_get_peaks",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_multiple",
                "name": "test_get_local_peaks",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_pairwise",
                "name": "test_basics",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_pairwise",
                "name": "test_align",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_pairwise",
                "name": "test_pw_align",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_pairwise",
                "name": "test_nw_align",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_pairwise",
                "name": "test_sw_align",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_pairwise",
                "name": "test_we_align",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_pairwise",
                "name": "test_structalign",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_pairwise",
                "name": "test_turchin",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_pairwise",
                "name": "test_editdist",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_sca",
                "name": "test_output",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_sca",
                "name": "test_output2",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_sca",
                "name": "test_ipa2tokens",
                "time": 0.355,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_sca",
                "name": "test_align",
                "time": 1.478,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_sca",
                "name": "test_get_consensus",
                "time": 0.549,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_sca",
                "name": "test_get_confidence",
                "time": 1.474,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_sca",
                "name": "test_output3",
                "time": 0.743,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_sca",
                "name": "test_get_consensus2",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.align.test_sca",
                "name": "test_partial_alignments_with_lexstat",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_ops",
                "name": "test_iter_rows",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_ops",
                "name": "test_wl2dict",
                "time": 0.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_ops",
                "name": "test_wl2dst",
                "time": 0.485,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_ops",
                "name": "test_wl2qlc",
                "time": 0.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_ops",
                "name": "test_tsv2triple",
                "time": 0.317,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_ops",
                "name": "test_calculate_data",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_ops",
                "name": "test_wl2multistate",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_ops",
                "name": "test_coverage",
                "time": 0.106,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_ops",
                "name": "test_clean_taxnames",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_ops",
                "name": "test_renumber",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_parser",
                "name": "test_init",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_parser",
                "name": "test_getitem",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_parser",
                "name": "test_get_entries",
                "time": 1.711,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_parser",
                "name": "test_getattr",
                "time": 1.398,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_parser",
                "name": "test_len",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_parser",
                "name": "test_add_entries",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_tree",
                "name": "test_star_tree",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_tree",
                "name": "test_random_tree",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_tree",
                "name": "test_basic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_tree",
                "name": "test_getDistanceToRoot",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_tree",
                "name": "test_get_LCA",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_tree",
                "name": "test_get_distance",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_tree",
                "name": "test_get_distance_unknown",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_tree",
                "name": "test_init_from_file",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_tree",
                "name": "test_init_from_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_wordlist",
                "name": "test___len__",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_wordlist",
                "name": "test_calculate",
                "time": 0.111,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_wordlist",
                "name": "test_coverage",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_wordlist",
                "name": "test_get_list",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_wordlist",
                "name": "test_get_dict",
                "time": 0.126,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_wordlist",
                "name": "test_renumber",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_wordlist",
                "name": "test_get_entries",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_wordlist",
                "name": "test_get_etymdict",
                "time": 0.134,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_wordlist",
                "name": "test_get_paps",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_wordlist",
                "name": "test_output",
                "time": 0.447,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_wordlist",
                "name": "test_export",
                "time": 0.151,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.basic.test_wordlist",
                "name": "test_get_wordlist",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test__phylogeny",
                "name": "test_convex_hull",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test__phylogeny",
                "name": "test_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test__phylogeny",
                "name": "test_seg_intersect",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test__phylogeny",
                "name": "test_get_convex_hull",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test__phylogeny",
                "name": "test_get_polygon_from_nodes",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test__phylogeny",
                "name": "test_utils",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test__structure",
                "name": "test_cv_templates",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_ldn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_ldn_swap",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_bidist1",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_tridist1",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_bidist2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_tridist2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_bidist3",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_tridist3",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_dice",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_lcs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_bisim1",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_trisim1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_bisim2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_trisim2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_bisim3",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_trisim3",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_jcd",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_jcdn",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_prefix",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_xdice",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_trigram",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_ident",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_compare_strings",
                "name": "test_xxdice",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_char_from_charstring",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_get_score_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_init",
                "time": 1.868,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_init2",
                "time": 0.81,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_init3",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_getitem",
                "time": 0.505,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_get_scorer",
                "time": 5.284,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_cluster",
                "time": 20.444,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_align_pairs",
                "time": 1.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test__get_matrices",
                "time": 0.501,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_get_subset",
                "time": 0.555,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_get_distances",
                "time": 8.849,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_get_frequencies",
                "time": 0.536,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_output",
                "time": 0.557,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_lexstat",
                "name": "test_correctness",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_partial",
                "name": "test__get_slices",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_partial",
                "name": "test_get_partial_scorer",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_partial",
                "name": "test_get_partial_matrices",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_partial",
                "name": "test_partial_cluster",
                "time": 0.252,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_partial",
                "name": "test_add_cognate_ids",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_phylogeny",
                "name": "test_get_GLS",
                "time": 5.663,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_phylogeny",
                "name": "test_plot",
                "time": 10.489,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_sanity",
                "name": "test__mutual_coverage",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_sanity",
                "name": "test__get_concepts",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_sanity",
                "name": "test_mutual_coverage",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_sanity",
                "name": "test_mutual_coverage_check",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_sanity",
                "name": "test_mutual_coverage_subset",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.compare.test_sanity",
                "name": "test_synonymy",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_cldf",
                "name": "test_from_cldf",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_cldf_methods",
                "name": "test_load_noexisting_cldf",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_cldf_methods",
                "name": "test_load_non_wordlist_cldf",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_cldf_methods",
                "name": "test_load_from_cldf_metadatafree",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_cldf_methods",
                "name": "test_load_from_cldf_metadata",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_cldf_methods",
                "name": "test_load_cldf_and_write",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_convert_tree",
                "name": "test__nwk_format",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_convert_tree",
                "name": "test_nwk2tree_matrix",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_graph",
                "name": "test_networkx2igraph",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_graph",
                "name": "test_igraph2networkx",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_html",
                "name": "test_color_range",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_html",
                "name": "test_alm2html",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_html",
                "name": "test_msa2html",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_html",
                "name": "test_strings_and_tokens2html",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_html",
                "name": "test_psa2html",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_plot",
                "name": "test_plots",
                "time": 0.783,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_scorer2str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_msa2str",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_matrix2dst",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_pap2nex",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_pap2csv",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_all_present",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_all_absent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_not_constant",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_error_on_unknown_mode",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_error_on_unknown_ref",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_mrbayes",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_splitstree",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_beast",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_beastwords",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_traitlab",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.convert.test_strings",
                "name": "test_merge_custom_statements",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_derive",
                "name": "test_compile_model",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_derive",
                "name": "test_compile_dvt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_sound_class_models",
                "name": "test_model[sca]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_sound_class_models",
                "name": "test_model[dolgo]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_sound_class_models",
                "name": "test_model[art]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_sound_class_models",
                "name": "test_model[color]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_sound_class_models",
                "name": "test_model[asjp]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_sound_class_models",
                "name": "test_model[cv]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.evaluate.test_acd",
                "name": "test_bcubes",
                "time": 0.517,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.evaluate.test_acd",
                "name": "test_partial_bcubes",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.evaluate.test_acd",
                "name": "test_pairs",
                "time": 0.739,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.evaluate.test_acd",
                "name": "test_diff",
                "time": 0.787,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.evaluate.test_acd",
                "name": "test_random_cognates",
                "time": 0.47,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.evaluate.test_acd",
                "name": "test_extreme_cognates",
                "time": 0.392,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.evaluate.test_acd",
                "name": "test_npoint_ap",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.evaluate.test_alr",
                "name": "test_med",
                "time": 0.187,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.evaluate.test_apa",
                "name": "test_EvalPSA",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.evaluate.test_apa",
                "name": "test_EvalMSA",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.meaning.test_colexification",
                "name": "test_colexification_network",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.meaning.test_colexification",
                "name": "test__get_colexifications",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.meaning.test_colexification",
                "name": "test__get_colexifications_by_taxa",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.meaning.test_colexification",
                "name": "test__get_statistics",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.meaning.test_colexification",
                "name": "test__make_matrix",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.meaning.test_colexification",
                "name": "test__make_graph",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.meaning.test_colexification",
                "name": "test_compare_colexifications",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.meaning.test_colexification",
                "name": "test_evaluate_colexifications",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.read.test_csv",
                "name": "test_read_asjp",
                "time": 0.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.read.test_csv",
                "name": "test_csv2list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.read.test_csv",
                "name": "test_csv2dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.read.test_csv",
                "name": "test_csv2multidict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.read.test_phylip",
                "name": "test_read_dst",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.read.test_phylip",
                "name": "test_read_scorer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.read.test_qlc",
                "name": "test_reduce_alignment[input0-output0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.read.test_qlc",
                "name": "test_read_msa",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.read.test_qlc",
                "name": "test_normalize_alignment",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.read.test_qlc",
                "name": "test_reduce_msa",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.read.test_qlc",
                "name": "test_read_qlc",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.read.test_qlc",
                "name": "test_read_qlc_complex",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.read.test_starling",
                "name": "test_star2qlc",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_generate",
                "name": "test_get_string",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_generate",
                "name": "test_evaluate_string",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_ngrams",
                "name": "test_get_n_grams",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_ngrams",
                "name": "test_bigrams",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_ngrams",
                "name": "test_trigrams",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_ngrams",
                "name": "test_fourgrams",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_ngrams",
                "name": "test_get_all_ngrams_by_order",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_ngrams",
                "name": "test_get_skipngrams",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_ngrams",
                "name": "test_get_posngrams",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_ngrams",
                "name": "test_get_all_posngrams",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_ngrams",
                "name": "test_ngram_class",
                "time": 0.704,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_ngrams",
                "name": "test_all_ngrams",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_profile",
                "name": "test_simple_profile",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_profile",
                "name": "test_context_profile",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_smoothing.Tests",
                "name": "test_certaintydegree_dist",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_smoothing.Tests",
                "name": "test_ele_dist",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_smoothing.Tests",
                "name": "test_laplace_dist",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_smoothing.Tests",
                "name": "test_mle_dist",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_smoothing.Tests",
                "name": "test_random_dist",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_smoothing.Tests",
                "name": "test_sgt_dist",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_smoothing.Tests",
                "name": "test_uniform_dist",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_smoothing.Tests",
                "name": "test_wittenbell_dist",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_ipa2tokens",
                "time": 0.331,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_token2class",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_tokens2class",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_prosodic_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_prosodic_weights",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_class2tokens",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_pid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_check_tokens",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_sampa2uni",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_pgrams",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_syllabify",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_tokens2morphemes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_onoparse",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_clean_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.sequence.test_sound_classes",
                "name": "test_codepoint",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.thirdparty.test_cogent",
                "name": "test_load_tree",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.thirdparty.test_cogent",
                "name": "test_Tree",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.thirdparty.test_cogent",
                "name": "test_more_trees",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.thirdparty.test_cogent",
                "name": "test_PhyloNode",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.thirdparty.test_linkcomm",
                "name": "test_hlc",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build] \ud83d\ude80  Start image=crawlergpt:latest\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/lingpy-lingpy] user=0 workdir=\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build] \ud83e\uddea  Matrix: map[python-version:3.7]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build] \u2b50 Run Main actions/checkout@v2\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2705  Success - Main actions/checkout@v2\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build] \u2b50 Run Main Set up Python 3.7\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/fd91a010-aae7-4d4c-913f-502afc99a984/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::isExplicit: \n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::explicit? false\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::explicit? true\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::explicit? true\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::explicit? true\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::explicit? true\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::explicit? true\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::explicit? true\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::matched: 3.7.11\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Successfully setup CPython (3.7.11)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2705  Success - Main Set up Python 3.7\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2699  ::set-output:: python-version=3.7.11\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build] \u2b50 Run Main Install dependencies\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting pip\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Installing collected packages: pip\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Attempting uninstall: pip\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     Found existing installation: pip 21.2.4\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     Uninstalling pip-21.2.4:\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |       Successfully uninstalled pip-21.2.4\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Successfully installed pip-23.1.2\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/lingpy-lingpy\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Installing build dependencies: started\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Installing build dependencies: finished with status 'done'\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Getting requirements to build wheel: started\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Getting requirements to build wheel: finished with status 'done'\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Preparing metadata (pyproject.toml): started\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting numpy (from lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading numpy-1.21.6-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (15.7 MB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 15.7/15.7 MB 35.6 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting appdirs (from lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading appdirs-1.4.4-py2.py3-none-any.whl (9.6 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting networkx>=2.3 (from lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading networkx-2.6.3-py3-none-any.whl (1.9 MB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.9/1.9 MB 27.7 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting tqdm (from lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading tqdm-4.65.0-py3-none-any.whl (77 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 77.1/77.1 kB 9.1 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting csvw>=1.5.6 (from lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading csvw-3.1.3-py2.py3-none-any.whl (56 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 56.7/56.7 kB 7.4 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting clldutils>=2.8.0 (from lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading clldutils-3.19.0-py2.py3-none-any.whl (1.7 MB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.7/1.7 MB 39.3 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting pycldf>=1.7.0 (from lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading pycldf-1.34.1-py2.py3-none-any.whl (81 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 81.7/81.7 kB 6.9 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting pytest (from lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 13.0 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting coverage (from lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading coverage-7.2.7-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (225 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 225.6/225.6 kB 28.5 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting pytest-mock (from lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading pytest_mock-3.11.1-py3-none-any.whl (9.6 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting pytest-cov (from lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting python-dateutil (from clldutils>=2.8.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 12.8 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting tabulate>=0.7.7 (from clldutils>=2.8.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading tabulate-0.9.0-py3-none-any.whl (35 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting colorlog (from clldutils>=2.8.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading colorlog-6.7.0-py2.py3-none-any.whl (11 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting attrs>=18.1.0 (from clldutils>=2.8.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 7.9 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting pylatexenc (from clldutils>=2.8.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading pylatexenc-2.10.tar.gz (162 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 162.6/162.6 kB 15.3 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Installing build dependencies: started\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Installing build dependencies: finished with status 'done'\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Getting requirements to build wheel: started\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Getting requirements to build wheel: finished with status 'done'\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Preparing metadata (pyproject.toml): started\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting markdown (from clldutils>=2.8.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading Markdown-3.4.3-py3-none-any.whl (93 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 93.9/93.9 kB 8.3 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting lxml (from clldutils>=2.8.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading lxml-4.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.6 MB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 6.6/6.6 MB 29.8 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting markupsafe (from clldutils>=2.8.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting importlib-metadata (from clldutils>=2.8.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting babel (from csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 10.1/10.1 MB 31.6 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting colorama (from csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting isodate (from csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading isodate-0.6.1-py2.py3-none-any.whl (41 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.7/41.7 kB 2.0 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting jsonschema (from csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 90.4/90.4 kB 2.0 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting language-tags (from csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading language_tags-1.2.0-py3-none-any.whl (213 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 213.4/213.4 kB 12.8 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting rdflib (from csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading rdflib-6.3.2-py3-none-any.whl (528 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 528.1/528.1 kB 11.1 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting requests (from csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 2.2 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting rfc3986<2 (from csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading rfc3986-1.5.0-py2.py3-none-any.whl (31 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting uritemplate>=3.0.0 (from csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading uritemplate-4.1.1-py2.py3-none-any.whl (10 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting PyYAML (from pycldf>=1.7.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 596.3/596.3 kB 4.0 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting commonnexus>=1.2.0 (from pycldf>=1.7.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading commonnexus-1.3.0-py2.py3-none-any.whl (79 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 79.6/79.6 kB 4.2 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting jmespath (from pycldf>=1.7.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting newick (from pycldf>=1.7.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading newick-1.9.0-py2.py3-none-any.whl (15 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting pybtex (from pycldf>=1.7.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading pybtex-0.24.0-py2.py3-none-any.whl (561 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 561.4/561.4 kB 27.9 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting python-frontmatter (from pycldf>=1.7.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading python_frontmatter-1.0.0-py3-none-any.whl (9.0 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting termcolor (from pycldf>=1.7.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading termcolor-2.3.0-py3-none-any.whl (6.9 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting iniconfig (from pytest->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting packaging (from pytest->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 2.1 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting pluggy<2.0,>=0.12 (from pytest->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting tomli>=1.0.0 (from pytest->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting zipp>=0.5 (from importlib-metadata->clldutils>=2.8.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting typing-extensions>=3.6.4 (from importlib-metadata->clldutils>=2.8.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting pytz>=2015.7 (from babel->csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 15.0 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting six (from isodate->csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting importlib-resources>=1.4.0 (from jsonschema->csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting pkgutil-resolve-name>=1.3.10 (from jsonschema->csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading pkgutil_resolve_name-1.3.10-py3-none-any.whl (4.7 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 (from jsonschema->csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.5/57.5 kB 5.5 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting latexcodec>=1.0.4 (from pybtex->pycldf>=1.7.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading latexcodec-2.0.1-py2.py3-none-any.whl (18 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting importlib-metadata (from clldutils>=2.8.0->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading importlib_metadata-4.13.0-py3-none-any.whl (23 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting pyparsing<4,>=2.1.0 (from rdflib->csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 102.6/102.6 kB 10.0 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting charset-normalizer<4,>=2 (from requests->csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 171.0/171.0 kB 22.9 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting idna<4,>=2.5 (from requests->csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 11.3 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting urllib3<3,>=1.21.1 (from requests->csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 11.9 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Collecting certifi>=2017.4.17 (from requests->csvw>=1.5.6->lingpy==2.6.10.dev0)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 11.6 MB/s eta 0:00:00\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Building wheels for collected packages: lingpy, pylatexenc\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Building wheel for lingpy (pyproject.toml): started\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Building wheel for lingpy (pyproject.toml): finished with status 'done'\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Created wheel for lingpy: filename=lingpy-2.6.10.dev0-py3-none-any.whl size=589681 sha256=11e99bbe4cb9e0db2321d32460443afd4482d86edd3caa20558dc269b57b29d6\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/2e/ff/d2/fe3b8fa0d3676bef78e0cf6ee573ef7ac6399f6a422ac29eb2\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Building wheel for pylatexenc (pyproject.toml): started\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Building wheel for pylatexenc (pyproject.toml): finished with status 'done'\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Created wheel for pylatexenc: filename=pylatexenc-2.10-py3-none-any.whl size=136820 sha256=ba07c185ac70fddc3a6c3254998bdf8c45f649bfe6d019ffd3e9d38aa7bae8ea\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/f1/8a/f5/33ee79d4473eb201b519fa40f989b842e373237395a3421f52\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Successfully built lingpy pylatexenc\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Installing collected packages: rfc3986, pytz, pylatexenc, language-tags, appdirs, zipp, urllib3, uritemplate, typing-extensions, tqdm, tomli, termcolor, tabulate, six, PyYAML, pyrsistent, pyparsing, pkgutil-resolve-name, packaging, numpy, newick, networkx, markupsafe, lxml, jmespath, iniconfig, idna, exceptiongroup, coverage, colorlog, colorama, charset-normalizer, certifi, babel, requests, python-frontmatter, python-dateutil, latexcodec, isodate, importlib-resources, importlib-metadata, commonnexus, rdflib, pybtex, pluggy, markdown, attrs, pytest, jsonschema, clldutils, pytest-mock, pytest-cov, csvw, pycldf, lingpy\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Successfully installed PyYAML-6.0 appdirs-1.4.4 attrs-23.1.0 babel-2.12.1 certifi-2023.5.7 charset-normalizer-3.1.0 clldutils-3.19.0 colorama-0.4.6 colorlog-6.7.0 commonnexus-1.3.0 coverage-7.2.7 csvw-3.1.3 exceptiongroup-1.1.1 idna-3.4 importlib-metadata-4.13.0 importlib-resources-5.12.0 iniconfig-2.0.0 isodate-0.6.1 jmespath-1.0.1 jsonschema-4.17.3 language-tags-1.2.0 latexcodec-2.0.1 lingpy-2.6.10.dev0 lxml-4.9.2 markdown-3.4.3 markupsafe-2.1.3 networkx-2.6.3 newick-1.9.0 numpy-1.21.6 packaging-23.1 pkgutil-resolve-name-1.3.10 pluggy-1.2.0 pybtex-0.24.0 pycldf-1.34.1 pylatexenc-2.10 pyparsing-3.1.0 pyrsistent-0.19.3 pytest-7.4.0 pytest-cov-4.1.0 pytest-mock-3.11.1 python-dateutil-2.8.2 python-frontmatter-1.0.0 pytz-2023.3 rdflib-6.3.2 requests-2.31.0 rfc3986-1.5.0 six-1.16.0 tabulate-0.9.0 termcolor-2.3.0 tomli-2.0.1 tqdm-4.65.0 typing-extensions-4.7.0 uritemplate-4.1.1 urllib3-2.0.3 zipp-3.15.0\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | [notice] To update, run: pip install --upgrade pip\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2705  Success - Main Install dependencies\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build] \u2b50 Run Main Test with pytest\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | ============================= test session starts ==============================\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | platform linux -- Python 3.7.11, pytest-7.4.0, pluggy-1.2.0\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/lingpy-lingpy\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | configfile: setup.cfg\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | testpaths: tests\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | plugins: mock-3.11.1, cov-4.1.0\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | collected 295 items\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/test_basictypes.py .                                               [  0%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/test_cache.py .                                                    [  0%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/test_cli.py ........                                               [  3%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/test_config.py ...                                                 [  4%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/test_log.py ....                                                   [  5%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/test_misc.py .                                                     [  6%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/test_settings.py .....                                             [  7%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/test_util.py ......                                                [  9%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/algorithm/test__tree.py .                                          [ 10%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/algorithm/test_cluster_util.py .....                               [ 11%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/algorithm/test_clustering.py ............                          [ 15%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/algorithm/test_cython.py ....                                      [ 17%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/algorithm/test_extra.py ....                                       [ 18%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/align/test_multiple.py ..............                              [ 23%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/align/test_pairwise.py .........                                   [ 26%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/align/test_sca.py .........                                        [ 29%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/basic/test_ops.py ..........                                       [ 32%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/basic/test_parser.py ......                                        [ 34%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/basic/test_tree.py .........                                       [ 37%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/basic/test_wordlist.py ............                                [ 42%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/compare/test__phylogeny.py ......                                  [ 44%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/compare/test__structure.py .                                       [ 44%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/compare/test_compare_strings.py .......................            [ 52%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/compare/test_lexstat.py ...............                            [ 57%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/compare/test_partial.py .....                                      [ 58%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/compare/test_phylogeny.py ..                                       [ 59%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/compare/test_sanity.py ......                                      [ 61%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/convert/test_cldf.py .                                             [ 62%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/convert/test_cldf_methods.py .....                                 [ 63%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/convert/test_convert_tree.py ..                                    [ 64%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/convert/test_graph.py ..                                           [ 65%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/convert/test_html.py .....                                         [ 66%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/convert/test_plot.py .                                             [ 67%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/convert/test_strings.py ................                           [ 72%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/data/test_derive.py ..                                             [ 73%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/data/test_sound_class_models.py ......                             [ 75%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/evaluate/test_acd.py .......                                       [ 77%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/evaluate/test_alr.py .                                             [ 77%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/evaluate/test_apa.py ..                                            [ 78%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/meaning/test_colexification.py ........                            [ 81%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/read/test_csv.py ....                                              [ 82%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/read/test_phylip.py ..                                             [ 83%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/read/test_qlc.py ......                                            [ 85%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/read/test_starling.py .                                            [ 85%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/sequence/test_generate.py ..                                       [ 86%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/sequence/test_ngrams.py ..........                                 [ 89%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/sequence/test_profile.py ..                                        [ 90%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/sequence/test_smoothing.py ........                                [ 93%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/sequence/test_sound_classes.py ...............                     [ 98%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/thirdparty/test_cogent.py ....                                     [ 99%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/thirdparty/test_linkcomm.py .                                      [100%]\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/lingpy-lingpy/report.xml -\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Name                                                                                                          Stmts   Miss  Cover   Missing\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | -------------------------------------------------------------------------------------------------------------------------------------------\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/algorithm/_tree.py                    104      4    96%   72, 108, 121, 140\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/algorithm/clustering.py               375     38    90%   86, 672-681, 709, 711-713, 715, 728-729, 817, 908, 916-924, 938-942, 1015-1025, 1103, 1118\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/algorithm/cython/_calign.py           772     16    98%   869, 1009, 1047-1049, 1056-1061, 1562, 1595-1596, 1618-1620, 2226\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/algorithm/cython/_cluster.py          235     18    92%   66-85, 274, 728-729\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/algorithm/cython/_malign.py           274     21    92%   288-290, 294-299, 448-451, 456-462, 539, 559, 570, 579, 590\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/algorithm/cython/_misc.py              40      8    80%   127-134, 137, 140\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/algorithm/cython/_talign.py           362      8    98%   379-384, 949, 1183-1184\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/algorithm/extra.py                     84     21    75%   61, 64, 82-85, 125, 128, 150, 153-154, 160-163, 198, 200, 223-226\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/align/_align/confidence.py            189     49    74%   47, 125, 198, 200, 202, 221, 223, 225, 231-232, 244-313\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/align/multiple.py                     608     91    85%   81, 88, 99-100, 108, 111-120, 139, 141, 146-164, 178, 205, 218, 231-233, 335-336, 354-357, 447, 500-501, 532, 578, 595, 656-665, 798, 917, 961, 975-981, 1070-1074, 1079, 1110, 1120-1121, 1298, 1381, 1795-1799, 1815-1817, 1897, 1912\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/align/pairwise.py                     136      8    94%   88, 92-93, 108-109, 207, 248, 554\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/align/sca.py                          606    131    78%   236-237, 294-295, 297, 299-301, 306-307, 309-310, 313-316, 373, 402-404, 429-432, 612-620, 653, 660-661, 684, 693, 728-750, 767-769, 775-780, 909, 935-966, 975-977, 980, 984-989, 992, 1085, 1093-1096, 1111, 1147-1148, 1155, 1162, 1167, 1245, 1256-1257, 1260, 1276, 1307, 1315-1316, 1349-1351, 1448, 1457-1459, 1480-1496\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/basic/ops.py                          285     20    93%   166, 191, 286, 321, 348, 354-356, 358-359, 370-372, 374, 376, 392-393, 396, 399, 445\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/basic/parser.py                       216      7    97%   68, 155, 255-259, 475-476\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/basic/wordlist.py                     433     47    89%   255, 258, 379, 388, 542, 554, 632-633, 636-637, 702, 711, 737, 739, 755-756, 778, 794, 800, 845-859, 989, 1190, 1195-1196, 1198, 1201-1202, 1212-1214, 1265-1267, 1322\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/basictypes.py                          50     14    72%   39, 43-52, 69-71\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/cli.py                                324     48    85%   28, 38, 178, 199-200, 206, 255, 262, 308, 316-317, 322, 324-329, 342-345, 409, 413-422, 429, 433, 471-474, 506-508, 546, 550, 552, 554, 556, 558, 604-605, 608, 622-625\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/compare/_phylogeny/convex_hull.py      58     14    76%   32-34, 66-67, 70, 73, 77-78, 87, 95-99, 103\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/compare/_phylogeny/polygon.py          87     41    53%   45-46, 76, 86-132\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/compare/_phylogeny/utils.py           103     64    38%   28-135, 184-194\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/compare/lexstat.py                    531     46    91%   40, 430-431, 506-507, 550, 589, 597, 601, 661-662, 682, 690-693, 764-766, 771-776, 984, 1039, 1101-1102, 1153, 1166, 1169, 1224, 1229-1235, 1278-1286, 1366, 1384, 1407-1409, 1444, 1506-1508\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/compare/partial.py                    305    113    63%   188-283, 289-373, 465, 511-586, 736-742, 843, 846\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/compare/phylogeny.py                 1742    328    81%   129, 172, 292-293, 306-308, 319-320, 382, 428-431, 451-452, 469, 502, 531-535, 628, 662, 715, 740, 743, 759, 772, 783-784, 808-809, 812-813, 875, 887-888, 933, 942, 957-958, 960-963, 983-987, 1065, 1092-1095, 1115-1118, 1125, 1244-1247, 1359, 1371, 1408, 1413-1419, 1425-1426, 1457, 1503, 1601-1605, 1617-1624, 1651-1659, 1886, 1905, 1998-1999, 2062, 2067-2106, 2173, 2179, 2189, 2209-2215, 2252-2268, 2286-2360, 2369, 2378, 2425, 2427, 2432-2433, 2492, 2511, 2525, 2535-2536, 2552, 2575-2578, 2674, 2686-2687, 2692-2693, 2755, 2757, 2765-2766, 2785, 2827, 2862-2865, 2964, 2966, 2978, 3088, 3193-3196, 3203-3204, 3210, 3220, 3240, 3277-3280, 3308, 3314, 3319, 3332-3333, 3356, 3414-3420, 3467, 3482, 3548, 3567-3574, 3607-3614, 3618-3622, 3634-3635, 3637-3663, 3698-3705, 3715, 3745, 3759-3760, 3766, 3775, 3808-3809, 3834-3841, 3856-3861, 3870-3937\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/compare/sanity.py                     104     53    49%   110, 209-214, 263-278, 289-310, 315-320, 329-352\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/compare/strings.py                    650      4    99%   692, 729, 771, 797\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/convert/graph.py                      181     32    82%   21-34, 38-44, 49-50, 93-94, 185-186, 262-263, 286-287, 383-386, 390-391\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/convert/html.py                       394     36    91%   89, 94, 128, 194-196, 208, 210, 212, 234-235, 264, 364, 374, 390, 445, 460, 475, 477, 479, 505, 511-514, 520, 565, 611, 633, 644, 646, 675, 717, 801, 803, 805\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/convert/plot.py                       417     92    78%   12, 70-74, 103, 271-272, 277, 295, 314, 366, 392, 398, 493, 499, 519, 530, 545-546, 624, 649-655, 798-813, 831, 837, 960-963, 967-968, 975, 1008-1010, 1015-1021, 1043-1072, 1078, 1098-1127, 1138, 1153-1155, 1175, 1216\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/convert/strings.py                    245      9    96%   38, 51, 72-73, 133, 248, 341-342, 398\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/data/derive.py                        197     21    89%   39, 42, 70, 130, 135, 192, 217-221, 234, 238-241, 267-268, 291-295, 469\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/data/model.py                          59      5    92%   123-126, 168\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/evaluate/apa.py                       231     25    89%   210, 247-248, 299, 313-323, 365, 367, 369-372, 439-442, 502-505, 603\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/meaning/colexification.py             107      1    99%   124\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/read/qlc.py                           256      3    99%   163, 169-170\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/sequence/generate.py                   85      5    94%   120-124, 175-178\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/sequence/ngrams.py                    220      4    98%   102, 107, 225, 887\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/sequence/profile.py                    90      6    93%   68, 170, 194-196, 217\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/sequence/smoothing.py                 165     59    64%   32, 39, 45, 50, 54-55, 59-60, 128, 478, 488, 639-767\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/sequence/sound_classes.py             515     58    89%   106, 155-156, 180-182, 229, 328, 332, 343, 483, 496-502, 535, 552, 557, 571, 697-703, 710, 931, 934, 967, 1008-1019, 1297-1302, 1343-1370, 1389-1390, 1397-1399, 1410\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/thirdparty/cogent/newick.py           139     18    87%   59, 83-86, 89, 91, 97, 103, 109, 144, 156-157, 162, 165, 171, 190, 192\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/lingpy/thirdparty/cogent/tree.py            1139    179    84%   61, 100, 111, 130, 145-147, 161, 165-167, 174-180, 191-194, 204-205, 272-275, 299, 307, 341-347, 408, 419-424, 438-441, 453-456, 491, 506-509, 523-527, 537-538, 571, 575, 586, 597-598, 616, 685, 717, 723, 732-733, 738, 789-796, 848, 852, 876, 882, 889, 953-956, 1013, 1022, 1051-1054, 1081, 1120-1122, 1223, 1229, 1234, 1315, 1325, 1375-1376, 1388, 1398, 1407, 1421, 1447, 1451, 1459-1464, 1482, 1491-1494, 1510-1514, 1519, 1534, 1554, 1572-1575, 1579, 1592, 1595-1606, 1675-1677, 1696-1701, 1713-1717, 1737, 1745, 1749-1750, 1757-1762, 1782-1789, 1883, 1918-1921, 1940, 1944, 1957\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/compare/test__phylogeny.py                                                                                 73     23    68%   18, 21, 24, 27, 30, 38, 54-57, 82-85, 96-98, 112-118\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/compare/test_lexstat.py                                                                                   141      1    99%   100\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | tests/sequence/test_smoothing.py                                                                                 95      4    96%   178-181\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | -------------------------------------------------------------------------------------------------------------------------------------------\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | TOTAL                                                                                                         16552   1793    89%\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | 88 files skipped due to complete coverage.\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | ======================== 295 passed in 85.53s (0:01:25) ========================\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2705  Success - Main Test with pytest\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build] \u2b50 Run Main Convert coverage\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Wrote XML report to coverage.xml\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2705  Success - Main Convert coverage\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build] \u2b50 Run Main Upload coverage to Codecov\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/fd91a010-aae7-4d4c-913f-502afc99a984/act/codecov-codecov-action@v1/ dst=/var/run/act/actions/codecov-codecov-action@v1/\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v1/] user=0 workdir=\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v1/dist/index.js] user= workdir=\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | [command]/usr/bin/bash codecov.sh -n  -F  -Q github-action-v1.5.2\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   _____          _\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |  / ____|        | |\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | | |     ___   __| | ___  ___ _____   __\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |  \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |                               Bash-1.0.3\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \u001b[0;36m==>\u001b[0m git version 2.33.0 found\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \u001b[0;36m==>\u001b[0m curl 7.68.0 (x86_64-pc-linux-gnu) libcurl/7.68.0 OpenSSL/1.1.1f zlib/1.2.11 brotli/1.0.7 libidn2/2.2.0 libpsl/0.21.0 (+libidn2/2.2.0) libssh/0.9.3/openssl/zlib nghttp2/1.40.0 librtmp/2.3\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Release-Date: 2020-01-08\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp \n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | Features: AsynchDNS brotli GSS-API HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \u001b[0;90m==>\u001b[0m GitHub Actions detected.\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     Env vars used:\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |       -> GITHUB_ACTIONS:    true\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |       -> GITHUB_HEAD_REF:   \n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |       -> GITHUB_REF:        refs/heads/master\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |       -> GITHUB_REPOSITORY: lingpy/lingpy\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |       -> GITHUB_RUN_ID:     1\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |       -> GITHUB_SHA:        b69f4b7f3c1f6a26384bd40c2c337172e18972d9\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |       -> GITHUB_WORKFLOW:   e3c6d31f-42b7-45b0-84ac-7676c46f283c\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     \u001b[0;90mproject root:\u001b[0m .\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     \u001b[0;32mYaml not found, that's ok! Learn more at\u001b[0m \u001b[0;36mhttp://docs.codecov.io/docs/codecov-yaml\u001b[0m\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \u001b[0;90m==>\u001b[0m Running gcov in . \u001b[0;90m(disable via -X gcov)\u001b[0m\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \u001b[0;90m==>\u001b[0m Searching for coverage reports in:\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     \u001b[0;32m+\u001b[0m .\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     \u001b[0;90m->\u001b[0m Found 2 reports\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \u001b[0;90m==>\u001b[0m Detecting git/mercurial file structure\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \u001b[0;90m==>\u001b[0m Reading reports\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     \u001b[0;32m+\u001b[0m ./coverage.xml \u001b[0;90mbytes=628659\u001b[0m\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     \u001b[0;32m+\u001b[0m ./report.xml \u001b[0;90mbytes=26243\u001b[0m\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \u001b[0;90m==>\u001b[0m Appending adjustments\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     \u001b[0;36mhttps://docs.codecov.io/docs/fixing-reports\u001b[0m\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     \u001b[0;90m->\u001b[0m No adjustments found\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \u001b[0;90m==>\u001b[0m Gzipping contents\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |         48K\t/tmp/codecov.30f8zx.gz\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \u001b[0;90m==>\u001b[0m Uploading reports\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     \u001b[0;90murl:\u001b[0m https://codecov.io\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     \u001b[0;90mquery:\u001b[0m branch=master&commit=b69f4b7f3c1f6a26384bd40c2c337172e18972d9&build=1&build_url=http%3A%2F%2Fgithub.com%2Flingpy%2Flingpy%2Factions%2Fruns%2F1&name=&tag=&slug=lingpy%2Flingpy&service=github-actions&flags=&pr=&job=e3c6d31f-42b7-45b0-84ac-7676c46f283c&cmd_args=n,F,Q\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \u001b[0;90m->\u001b[0m  Pinging Codecov\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | https://codecov.io/upload/v4?package=github-action-v1.5.2-1.0.3&token=secret&branch=master&commit=b69f4b7f3c1f6a26384bd40c2c337172e18972d9&build=1&build_url=http%3A%2F%2Fgithub.com%2Flingpy%2Flingpy%2Factions%2Fruns%2F1&name=&tag=&slug=lingpy%2Flingpy&service=github-actions&flags=&pr=&job=e3c6d31f-42b7-45b0-84ac-7676c46f283c&cmd_args=n,F,Q\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \u001b[0;31m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | 404\u001b[0m\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \u001b[0;90m==>\u001b[0m Uploading to Codecov\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100 45237  100   171  100 45066    320  84551 --:--:-- --:--:-- --:--:-- 84872\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   |     \u001b[0;32m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\u001b[0m\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2705  Success - Main Upload coverage to Codecov\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build] \u2b50 Run Post Set up Python 3.7\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build]   \u2705  Success - Post Set up Python 3.7\n[e3c6d31f-42b7-45b0-84ac-7676c46f283c/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/lingpy-lingpy/.github/workflows/python-package-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "e3c6d31f-42b7-45b0-84ac-7676c46f283c",
        "build_tool": "pytest",
        "elapsed_time": 204.6925175189972
    }
}