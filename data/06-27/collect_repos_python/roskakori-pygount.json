{
    "repository": "roskakori/pygount",
    "stars": 120,
    "language": "python",
    "size": 732,
    "clone_url": "https://github.com/roskakori/pygount.git",
    "timestamp": "2023-07-01T09:36:03.611060Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_analysis.SourceScannerTest",
                "name": "test_can_find_any_files",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.SourceScannerTest",
                "name": "test_can_find_files_from_mixed_cloned_git_remote_url_and_local",
                "time": 1.211,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.SourceScannerTest",
                "name": "test_can_find_no_files",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.SourceScannerTest",
                "name": "test_can_find_python_files",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.SourceScannerTest",
                "name": "test_can_find_python_files_in_dot",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.SourceScannerTest",
                "name": "test_can_skip_dot_folder",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.AnalysisTest",
                "name": "test_can_analyze_c",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.AnalysisTest",
                "name": "test_can_analyze_python",
                "time": 0.227,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.AnalysisTest",
                "name": "test_can_compute_python_line_parts",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.AnalysisTest",
                "name": "test_can_convert_python_strings_to_comments",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.AnalysisTest",
                "name": "test_can_deline_tokens",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.AnalysisTest",
                "name": "test_can_detect_white_text",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.FileAnalysisTest",
                "name": "test_can_analyze_bytesio",
                "time": 1.35,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.FileAnalysisTest",
                "name": "test_can_analyze_encoding_error",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.FileAnalysisTest",
                "name": "test_can_analyze_oracle_sql",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.FileAnalysisTest",
                "name": "test_can_analyze_stringio",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.FileAnalysisTest",
                "name": "test_can_analyze_unknown_language",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.FileAnalysisTest",
                "name": "test_can_analyze_webfocus",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.FileAnalysisTest",
                "name": "test_can_analyze_xml_dialect",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.FileAnalysisTest",
                "name": "test_can_detect_binary_source_code",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.FileAnalysisTest",
                "name": "test_can_detect_silent_dos_batch_remarks",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.FileAnalysisTest",
                "name": "test_fails_on_non_seekable_file_handle_with_encoding_automatic",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.FileAnalysisTest",
                "name": "test_fails_on_non_seekable_file_handle_with_encoding_chardet",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.FileAnalysisTest",
                "name": "test_fails_on_unknown_magic_encoding_comment",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis",
                "name": "test_can_repr_source_analysis_from_file",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis",
                "name": "test_can_repr_empty_source_analysis_from_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis",
                "name": "test_can_repr_error_source_analysis_from_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis",
                "name": "test_can_guess_lexer_for_python",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis",
                "name": "test_can_guess_lexer_for_plain_text",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis",
                "name": "test_can_guess_lexer_for_cmakelists",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis",
                "name": "test_can_use_deprecated_counts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.EncodingTest",
                "name": "test_can_detect_automatic_encoding_for_empty_source",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.EncodingTest",
                "name": "test_can_detect_binary_with_zero_byte",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.EncodingTest",
                "name": "test_can_detect_bom_encodings",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.EncodingTest",
                "name": "test_can_detect_chardet_encoding",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.EncodingTest",
                "name": "test_can_detect_magic_comment",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.EncodingTest",
                "name": "test_can_detect_plain_encoding",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.EncodingTest",
                "name": "test_can_detect_utf16_as_non_binary",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.EncodingTest",
                "name": "test_can_detect_utf8_when_cp1252_would_fail",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.EncodingTest",
                "name": "test_can_detect_xml_prolog",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.EncodingTest",
                "name": "test_can_use_hardcoded_ending",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.GeneratedCodeTest",
                "name": "test_can_analyze_generated_code_with_own_pattern",
                "time": 0.267,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.GeneratedCodeTest",
                "name": "test_can_detect_generated_code",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.GeneratedCodeTest",
                "name": "test_can_detect_non_generated_code",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.GeneratedCodeTest",
                "name": "test_can_not_detect_generated_code_with_late_comment",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.SizeTest",
                "name": "test_can_detect_empty_source_code",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis",
                "name": "test_can_analyze_project_markdown_files",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis",
                "name": "test_has_no_duplicate_in_pygount_source",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis",
                "name": "test_can_match_deprecated_functions",
                "time": 0.551,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.DuplicatePoolTest",
                "name": "test_can_detect_duplicate",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_analysis.DuplicatePoolTest",
                "name": "test_can_distinguish_different_files",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.CommandTest",
                "name": "test_can_execute_on_own_code",
                "time": 0.928,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.CommandTest",
                "name": "test_can_set_encoding",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.CommandTest",
                "name": "test_can_use_chardet_for_encoding",
                "time": 0.711,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.CommandTest",
                "name": "test_fails_on_broken_regex",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.CommandTest",
                "name": "test_fails_on_unknown_output_format",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_can_accept_duplicates",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_can_analyze_pygount_setup_py",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_can_analyze_pygount_source_code",
                "time": 0.702,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_can_analyze_pygount_source_code_as_cloc_xml",
                "time": 0.683,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_can_analyze_pygount_source_code_as_json",
                "time": 0.821,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_can_detect_duplicates",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_can_detect_generated_code",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_can_detect_generated_code_with_own_pattern",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_can_show_help",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_can_show_version",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_can_write_all_output_formats",
                "time": 4.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_fails_on_broken_regex_pattern",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_fails_on_unknown_encoding",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_command.PygountCommandTest",
                "name": "test_fails_on_unknown_format",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_build_str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_match_from_regex",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_match_from_regex_pattern",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_match_from_shell_pattern",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_match_single_regex_from_shell_pattern",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_match_single_regex",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_match_regex_from_multiple_regex_patterns",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_match_regex_from_multiple_default_shell_patterns",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_represent_text_as_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_represent_iterable_as_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_convert_empty_text_to_lines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_convert_single_letter_to_lines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_convert_single_letter_with_newline_to_lines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_convert_multiple_lines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_can_convert_empty_lines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_git_storage",
                "name": "test_can_extract_git_remote_url_and_revision_if_any",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_git_storage",
                "name": "test_can_extract_and_close_and_find_files_from_cloned_git_remote_url_with_revision",
                "time": 0.743,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexers",
                "name": "test_can_lex_idl",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexers",
                "name": "test_can_lex_m4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexers",
                "name": "test_can_lex_vbscript",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexers",
                "name": "test_can_lex_webfocus",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_lexers",
                "name": "test_can_lex_plain_text",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_summary",
                "name": "test_can_repr_language_summary",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_summary",
                "name": "test_can_repr_pseudo_language_summary",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_summary",
                "name": "test_can_summarize_project_with_multiple_files_of_same_language",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_summary",
                "name": "test_can_summarize_project_with_multiple_files_of_different_languages",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_summary",
                "name": "test_can_summarize_project_with_pseudo_languages",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_summary",
                "name": "test_can_repr_empty_project_summary",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_write",
                "name": "test_can_collect_totals",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_write",
                "name": "test_can_write_cloc_xml",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_write",
                "name": "test_can_compute_digit_width",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_write.SummaryWriterTest",
                "name": "test_can_write_summary",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xmldialect",
                "name": "test_can_detect_ant",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xmldialect",
                "name": "test_can_detect_maven",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xmldialect",
                "name": "test_can_ignore_broken_xml",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_xmldialect",
                "name": "test_can_detect_docbook_from_dtd",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \ud83d\ude80  Start image=crawlergpt:latest\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style] \ud83d\ude80  Start image=crawlergpt:latest\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount] user=0 workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount] user=0 workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style] \u2b50 Run Main actions/checkout@v3\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \u2705  Success - Main actions/checkout@v3\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style] \u2b50 Run Main Install pre-commit\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \u2b50 Run Pre Install Poetry\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2705  Success - Pre Install Poetry\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Reading package lists...\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Building dependency tree...\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Reading state information...\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \ud83e\uddea  Matrix: map[python-version:3.8]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \u2b50 Run Main actions/checkout@v3\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2705  Success - Main actions/checkout@v3\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | python3 is already the newest version (3.8.2-0ubuntu2).\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | python3-pip is already the newest version (20.0.2-5ubuntu1.6).\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | 0 upgraded, 0 newly installed, 0 to remove and 20 not upgraded.\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \u2b50 Run Main Set up Python 3.8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9dce04a3-8ed1-49e1-b90b-17dc4a4a39d7/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2753  ::group::Installed versions\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::isExplicit: \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::explicit? false\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::explicit? true\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::explicit? true\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::explicit? true\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::explicit? true\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::explicit? true\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::explicit? true\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::matched: 3.8.11\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Successfully set up CPython (3.8.11)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2753  ::endgroup::\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2705  Success - Main Set up Python 3.8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::set-output:: python-version=3.8.11\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Collecting pre-commit\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   Downloading pre_commit-3.3.3-py2.py3-none-any.whl (202 kB)\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Requirement already satisfied: pyyaml>=5.1 in /usr/lib/python3/dist-packages (from pre-commit) (5.3.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \u2b50 Run Main Install Poetry\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Collecting cfgv>=2.0.0\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   Downloading cfgv-3.3.1-py2.py3-none-any.whl (7.3 kB)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9dce04a3-8ed1-49e1-b90b-17dc4a4a39d7/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Collecting virtualenv>=20.10.0\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \u2b50 Run Main Install and configure Poetry\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Collecting identify>=1.0.0\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   Downloading identify-2.5.24-py2.py3-none-any.whl (98 kB)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Collecting nodeenv>=0.11.1\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   Downloading nodeenv-1.8.0-py2.py3-none-any.whl (22 kB)\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Collecting distlib<1,>=0.3.6\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Collecting platformdirs<4,>=3.5.1\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Collecting filelock<4,>=3.12\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=0.11.1->pre-commit) (45.2.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Installing collected packages: cfgv, distlib, platformdirs, filelock, virtualenv, identify, nodeenv, pre-commit\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   WARNING: The script virtualenv is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   WARNING: The script identify-cli is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   WARNING: The script nodeenv is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   WARNING: The script pre-commit is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Successfully installed cfgv-3.3.1 distlib-0.3.6 filelock-3.12.2 identify-2.5.24 nodeenv-1.8.0 platformdirs-3.8.0 pre-commit-3.3.3 virtualenv-20.23.1\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \u2705  Success - Main Install pre-commit\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style] \u2b50 Run Main Load cached pre-commit\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udc33  docker cp src=/tmp/act-cache/9dce04a3-8ed1-49e1-b90b-17dc4a4a39d7/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udcac  ::debug::Resolved Keys:\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udcac  ::debug::[\"pre-commit-Linux-0285a5f0511a7d05122492ca2d2acbaefd44934295fb1beb56e34f1b19053029\"]\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udcac  ::debug::1.5.0\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:39715/_apis/artifactcache/cache?keys=pre-commit-Linux-0285a5f0511a7d05122492ca2d2acbaefd44934295fb1beb56e34f1b19053029&version=356db49e6bae2290b5c998bce2b5407d52ba33e30aa3d911773d957b563a16ad\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | Cache not found for input keys: pre-commit-Linux-0285a5f0511a7d05122492ca2d2acbaefd44934295fb1beb56e34f1b19053029\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \u2705  Success - Main Load cached pre-commit\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style] \u2b50 Run Main Install pre-commit hooks\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   | /var/run/act/workflow/3: line 2: pre-commit: command not found\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style]   \u274c  Failure - Main Install pre-commit hooks\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[b906f616-9a0c-48da-8734-f53591e442fb/check-style] \ud83c\udfc1  Job failed\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Retrieving Poetry metadata\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | # Welcome to Poetry!\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | This will download and install the latest version of Poetry,\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | a dependency and package manager for Python.\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | /home/runneradmin/.local/bin\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | You can uninstall at any time by executing this script with the --uninstall option,\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | and these changes will be reverted.\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Installing Poetry (1.5.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Installing Poetry (1.5.1): Creating environment\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Installing Poetry (1.5.1): Installing Poetry\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Installing Poetry (1.5.1): Creating script\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Installing Poetry (1.5.1): Done\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Poetry (1.5.1) is installed now. Great!\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | environment variable.\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | You can test that everything is set up by executing:\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | `poetry --version`\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \u001b[33mDone \u2705\u001b[0m\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2705  Success - Main Install and configure Poetry\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2705  Success - Main Install Poetry\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \u2b50 Run Main Load cached venv\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9dce04a3-8ed1-49e1-b90b-17dc4a4a39d7/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::Resolved Keys:\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::[\"venv-Linux-990239000c95b37dd199395e598182210ecf0300b1bca28a5c1b0b06b626921d\"]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::1.5.0\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:39715/_apis/artifactcache/cache?keys=venv-Linux-990239000c95b37dd199395e598182210ecf0300b1bca28a5c1b0b06b626921d&version=25e65b70d167147605b4332eb57b6d34df8e0303b88c4de252efb18cf3ed148a\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Cache not found for input keys: venv-Linux-990239000c95b37dd199395e598182210ecf0300b1bca28a5c1b0b06b626921d\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2705  Success - Main Load cached venv\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \u2b50 Run Main Install dependencies\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Creating virtualenv pygount in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/.venv\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Installing dependencies from lock file\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Package operations: 55 installs, 1 update, 0 removals\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing pycparser (2.21)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing cffi (1.15.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing certifi (2023.5.7)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing charset-normalizer (3.1.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing cryptography (41.0.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing idna (3.4)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing jeepney (0.8.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing mdurl (0.1.2)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing more-itertools (9.1.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing six (1.16.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing urllib3 (2.0.3)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing webencodings (0.5.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing zipp (3.15.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing bleach (6.0.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing distlib (0.3.6)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing docutils (0.20.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing exceptiongroup (1.1.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing filelock (3.12.2)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing importlib-metadata (6.7.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing iniconfig (2.0.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing markdown-it-py (3.0.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing platformdirs (3.8.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing pygments (2.15.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing requests (2.31.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Updating setuptools (67.8.0 -> 68.0.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing packaging (23.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing pluggy (1.2.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing importlib-resources (5.12.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing jaraco-classes (3.2.3)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing smmap (5.0.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing secretstorage (3.3.3)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing tomli (2.0.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing typing-extensions (4.6.3)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing cfgv (3.3.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing click (8.1.3)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing coverage (6.5.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing docopt (0.6.2)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing gitdb (4.0.10)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing keyring (24.2.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing nodeenv (1.8.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing pytest (7.4.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing pyyaml (6.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing readme-renderer (40.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing requests-toolbelt (1.0.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing identify (2.5.24)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing pkginfo (1.9.6)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing rfc3986 (2.0.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing rich (13.4.2)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing virtualenv (20.23.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing chardet (5.1.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing coveralls (3.3.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing gitpython (3.1.31)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing pre-commit (3.3.3)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing pur (7.1.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing twine (4.0.2)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing pytest-cov (4.1.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Installing the current project: pygount (1.6.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2705  Success - Main Install dependencies\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \u2b50 Run Main Build pygount package\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Building pygount (1.6.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   - Building sdist\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   - Built pygount-1.6.1.tar.gz\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   - Building wheel\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   - Built pygount-1.6.1-py3-none-any.whl\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2705  Success - Main Build pygount package\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \u2b50 Run Main Run the test suite\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ============================= test session starts ==============================\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | platform linux -- Python 3.8.11, pytest-7.4.0, pluggy-1.2.0\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | configfile: pyproject.toml\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | testpaths: tests\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | plugins: cov-4.1.0\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | collected 106 items\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | tests/test_analysis.py ................................................. [ 46%]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ..                                                                       [ 48%]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | tests/test_command.py ...................                                [ 66%]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | tests/test_common.py ...............                                     [ 80%]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | tests/test_git_storage.py ..                                             [ 82%]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | tests/test_lexers.py .....                                               [ 86%]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | tests/test_summary.py ......                                             [ 92%]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | tests/test_write.py ....                                                 [ 96%]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | tests/test_xmldialect.py ....                                            [100%]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | =============================== warnings summary ===============================\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | tests/test_analysis.py::test_can_match_deprecated_functions\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/tests/test_analysis.py:465: DeprecationWarning: Call to deprecated function source_analysis (use SourceAnalysis.from_file).\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |     assert str(analysis.source_analysis(source_path, group)) == str(\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | tests/test_analysis.py::test_can_match_deprecated_functions\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/tests/test_analysis.py:471: DeprecationWarning: Call to deprecated function pseudo_source_analysis (use SourceAnalysis.from_state).\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |     assert str(analysis.pseudo_source_analysis(missing_path, group, analysis.SourceState.error, reason)) == str(\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ==================================== PASSES ====================================\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | _______________ FileAnalysisTest.test_can_analyze_encoding_error _______________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ------------------------------ Captured log call -------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | WARNING  pygount:analysis.py:320 cannot read /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/tests/.temp/encoding_error.py using encoding utf-8: 'utf-8' codec can't decode byte 0x80 in position 7: invalid start byte\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ________ FileAnalysisTest.test_fails_on_unknown_magic_encoding_comment _________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ------------------------------ Captured log call -------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | WARNING  pygount:analysis.py:320 cannot read /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/tests/.temp/unknown_magic_encoding_comment.py using encoding no_such_encoding: unknown encoding: no_such_encoding\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ___________________ CommandTest.test_can_execute_on_own_code ___________________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ________________ CommandTest.test_can_use_chardet_for_encoding _________________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 17\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/__init__.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 599\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/analysis.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 289\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/command.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 111\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/common.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 27\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/git_storage.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 22\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/lexers.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 169\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/summary.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 179\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/write.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 67\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/xmldialect.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ------------------------------ Captured log call -------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | WARNING  pygount:analysis.py:809 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/__init__.py: chardet cannot determine encoding, assuming fallback encoding None\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | WARNING  pygount:analysis.py:809 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/analysis.py: chardet cannot determine encoding, assuming fallback encoding None\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | WARNING  pygount:analysis.py:809 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/command.py: chardet cannot determine encoding, assuming fallback encoding None\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | WARNING  pygount:analysis.py:809 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/common.py: chardet cannot determine encoding, assuming fallback encoding None\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | WARNING  pygount:analysis.py:809 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/git_storage.py: chardet cannot determine encoding, assuming fallback encoding None\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | WARNING  pygount:analysis.py:809 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/lexers.py: chardet cannot determine encoding, assuming fallback encoding None\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | WARNING  pygount:analysis.py:809 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/summary.py: chardet cannot determine encoding, assuming fallback encoding None\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | WARNING  pygount:analysis.py:809 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/write.py: chardet cannot determine encoding, assuming fallback encoding None\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | WARNING  pygount:analysis.py:809 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/xmldialect.py: chardet cannot determine encoding, assuming fallback encoding None\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ________________ PygountCommandTest.test_can_accept_duplicates _________________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ------------------------------ Captured log call -------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/tests/.temp/duplicate.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/tests/.temp/original.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | _____________ PygountCommandTest.test_can_analyze_pygount_setup_py _____________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ___________ PygountCommandTest.test_can_analyze_pygount_source_code ____________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 17\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/__init__.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 599\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/analysis.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 289\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/command.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 111\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/common.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 27\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/git_storage.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 22\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/lexers.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 169\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/summary.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 179\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/write.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 67\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/xmldialect.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ------------------------------ Captured log call -------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/__init__.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/analysis.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/command.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/common.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/git_storage.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/lexers.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/summary.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/write.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/xmldialect.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | _____ PygountCommandTest.test_can_analyze_pygount_source_code_as_cloc_xml ______\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ------------------------------ Captured log call -------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/__init__.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/analysis.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/command.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/common.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/git_storage.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/lexers.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/summary.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/write.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/xmldialect.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | _______ PygountCommandTest.test_can_analyze_pygount_source_code_as_json ________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ------------------------------ Captured log call -------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/__init__.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/analysis.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/command.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/common.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/git_storage.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/lexers.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/summary.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/write.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/xmldialect.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ________________ PygountCommandTest.test_can_detect_duplicates _________________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ------------------------------ Captured log call -------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:340 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/tests/.temp/duplicate.py: analyze as Python using encoding utf-8\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:304 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/tests/.temp/original.py: is a duplicate of /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/tests/.temp/duplicate.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ______________ PygountCommandTest.test_can_detect_generated_code _______________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ------------------------------ Captured log call -------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:330 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/tests/.temp/generated.py: is generated code because line 1 matches re.compile('(?i).*do not edit', re.IGNORECASE)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ______ PygountCommandTest.test_can_detect_generated_code_with_own_pattern ______\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ------------------------------ Captured log call -------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | INFO     pygount:analysis.py:330 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/tests/.temp/generiert.py: is generated code because line 0 matches re.compile('(?i).*generiert', re.IGNORECASE)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ____________________ PygountCommandTest.test_can_show_help _____________________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | usage: pytest [-h] [--duplicates] [--encoding ENCODING]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |               [--folders-to-skip PATTERNS] [--format FORMAT]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |               [--generated PATTERNS] [--names-to-skip PATTERNS] [--out FILE]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |               [--suffix PATTERNS] [--verbose] [--version]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |               [SHELL-PATTERN [SHELL-PATTERN ...]]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | count source lines of code\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | positional arguments:\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   SHELL-PATTERN         source files and directories to scan; can use glob\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         patterns; default: current directory\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | optional arguments:\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   -h, --help            show this help message and exit\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   --duplicates, -d      analyze duplicate files\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   --encoding ENCODING, -e ENCODING\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         encoding to use when reading source code; use\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         \"automatic\" to take BOMs, XML prolog and magic headers\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         into account and fall back to UTF-8 or CP1252 if none\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         fits; use \"automatic;<fallback>\" to specify a\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         different fallback encoding than CP1252; use \"chardet\"\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         to let the chardet package determine the encoding;\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         default: \"automatic\"\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   --folders-to-skip PATTERNS, -F PATTERNS\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         comma separated list of glob patterns for folder names\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         not to analyze. Use \"...\" as first entry to append\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         patterns to the default patterns; default: .?*, _svn,\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         __pycache__\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   --format FORMAT, -f FORMAT\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         output format, one of: \"cloc-xml\", \"json\",\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         \"sloccount\", \"summary\"; default: \"sloccount\"\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   --generated PATTERNS, -g PATTERNS\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         comma separated list of regular expressions to detect\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         generated code; default: [regex](?i).*automatically\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         generated, (?i).*do not edit, (?i).*generated with the\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         .+ utility, (?i).*this is a generated file,\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         (?i).*generated automatically\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   --names-to-skip PATTERNS, -N PATTERNS\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         comma separated list of glob patterns for file names\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         not to analyze. Use \"...\" as first entry to append\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         patterns to the default patterns; default: .*, *~\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   --out FILE, -o FILE   file to write results to; use \"STDOUT\" for standard\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         output; default: \"STDOUT\"\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   --suffix PATTERNS, -s PATTERNS\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         limit analysis on files matching any suffix in comma\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         separated LIST; shell patterns are possible; example:\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |                         \"py,sql\"; default: \"*\"\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   --verbose, -v         explain what is being done\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   --version             show program's version number and exit\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | SHELL-PATTERN is a pattern using *, ? and ranges like [a-z] as placeholders.\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PATTERNS is a comma separated list of SHELL-PATTERN. The prefix [regex]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | indicated that the PATTERNS use regular expression syntax. If default values\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | are available, [...] indicates that the PATTERNS extend the existing default\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | values.\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ___________________ PygountCommandTest.test_can_show_version ___________________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | pytest 1.6.1\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | _____________ PygountCommandTest.test_can_write_all_output_formats _____________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | <?xml version=\"1.0\" encoding=\"utf-8\"?><results><header><cloc_url text=\"https://github.com/roskakori/pygount\" /><cloc_version text=\"1.60\" /><elapsed_seconds text=\"1\" /><n_files text=\"9\" /><n_lines text=\"2209\" /><files_per_second text=\"14\" /><lines_per_second text=\"3456\" /><report_file text=\"&lt;_io.FileIO name=6 mode='rb+' closefd=True&gt;\" /></header><files><file blank=\"4\" code=\"17\" comment=\"5\" language=\"Python\" name=\"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/__init__.py\" /><file blank=\"124\" code=\"599\" comment=\"172\" language=\"Python\" name=\"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/analysis.py\" /><file blank=\"71\" code=\"289\" comment=\"17\" language=\"Python\" name=\"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/command.py\" /><file blank=\"34\" code=\"111\" comment=\"39\" language=\"Python\" name=\"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/common.py\" /><file blank=\"11\" code=\"27\" comment=\"2\" language=\"Python\" name=\"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/git_storage.py\" /><file blank=\"17\" code=\"22\" comment=\"30\" language=\"Python\" name=\"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/lexers.py\" /><file blank=\"53\" code=\"169\" comment=\"37\" language=\"Python\" name=\"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/summary.py\" /><file blank=\"54\" code=\"179\" comment=\"27\" language=\"Python\" name=\"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/write.py\" /><file blank=\"15\" code=\"67\" comment=\"17\" language=\"Python\" name=\"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/xmldialect.py\" /><total blank=\"383\" code=\"1480\" comment=\"346\" /></files></results>\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | {\"formatVersion\": \"1.0.0\", \"pygountVersion\": \"1.6.1\", \"files\": [{\"emptyCount\": 4, \"documentationCount\": 5, \"group\": \"pygount\", \"isCountable\": true, \"language\": \"Python\", \"path\": \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/__init__.py\", \"state\": \"analyzed\", \"stateInfo\": null, \"sourceCount\": 17}, {\"emptyCount\": 124, \"documentationCount\": 172, \"group\": \"pygount\", \"isCountable\": true, \"language\": \"Python\", \"path\": \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/analysis.py\", \"state\": \"analyzed\", \"stateInfo\": null, \"sourceCount\": 599}, {\"emptyCount\": 71, \"documentationCount\": 17, \"group\": \"pygount\", \"isCountable\": true, \"language\": \"Python\", \"path\": \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/command.py\", \"state\": \"analyzed\", \"stateInfo\": null, \"sourceCount\": 289}, {\"emptyCount\": 34, \"documentationCount\": 39, \"group\": \"pygount\", \"isCountable\": true, \"language\": \"Python\", \"path\": \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/common.py\", \"state\": \"analyzed\", \"stateInfo\": null, \"sourceCount\": 111}, {\"emptyCount\": 11, \"documentationCount\": 2, \"group\": \"pygount\", \"isCountable\": true, \"language\": \"Python\", \"path\": \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/git_storage.py\", \"state\": \"analyzed\", \"stateInfo\": null, \"sourceCount\": 27}, {\"emptyCount\": 17, \"documentationCount\": 30, \"group\": \"pygount\", \"isCountable\": true, \"language\": \"Python\", \"path\": \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/lexers.py\", \"state\": \"analyzed\", \"stateInfo\": null, \"sourceCount\": 22}, {\"emptyCount\": 53, \"documentationCount\": 37, \"group\": \"pygount\", \"isCountable\": true, \"language\": \"Python\", \"path\": \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/summary.py\", \"state\": \"analyzed\", \"stateInfo\": null, \"sourceCount\": 169}, {\"emptyCount\": 54, \"documentationCount\": 27, \"group\": \"pygount\", \"isCountable\": true, \"language\": \"Python\", \"path\": \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/write.py\", \"state\": \"analyzed\", \"stateInfo\": null, \"sourceCount\": 179}, {\"emptyCount\": 15, \"documentationCount\": 17, \"group\": \"pygount\", \"isCountable\": true, \"language\": \"Python\", \"path\": \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/xmldialect.py\", \"state\": \"analyzed\", \"stateInfo\": null, \"sourceCount\": 67}], \"languages\": [{\"documentationCount\": 346, \"documentationPercentage\": 15.663196016296967, \"emptyCount\": 383, \"emptyPercentage\": 17.338162064282482, \"fileCount\": 9, \"filePercentage\": 100.0, \"isPseudoLanguage\": false, \"language\": \"Python\", \"sourceCount\": 1480, \"sourcePercentage\": 66.99864191942055}], \"runtime\": {\"durationInSeconds\": 0.92419, \"filesPerSecond\": 9.738257284757463, \"finishedAt\": \"2023-07-01T09:38:44.129491\", \"linesPerSecond\": 2390.20114911436, \"startedAt\": \"2023-07-01T09:38:43.205301\"}, \"summary\": {\"totalDocumentationCount\": 346, \"totalDocumentationPercentage\": 15.663196016296967, \"totalEmptyCount\": 383, \"totalEmptyPercentage\": 17.338162064282482, \"totalFileCount\": 9, \"totalSourceCount\": 1480, \"totalSourcePercentage\": 66.99864191942055}}17\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/__init__.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 599\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/analysis.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 289\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/command.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 111\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/common.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 27\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/git_storage.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 22\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/lexers.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 169\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/summary.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 179\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/write.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | 67\tPython\tpygount\t/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/pygount/xmldialect.py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \u2503 Language \u2503 Files \u2503     % \u2503 Code \u2503    % \u2503 Comment \u2503    % \u2503\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \u2502 Python   \u2502     9 \u2502 100.0 \u2502 1406 \u2502 63.6 \u2502     346 \u2502 15.7 \u2502\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \u2502 Sum      \u2502     9 \u2502 100.0 \u2502 1406 \u2502 63.6 \u2502     346 \u2502 15.7 \u2502\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ____________ PygountCommandTest.test_fails_on_broken_regex_pattern _____________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ------------------------------ Captured log call -------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ERROR    pygount:command.py:364 option --generated: cannot parse pattern for regular repression: missing ), unterminated subpattern at position 0\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ______________ PygountCommandTest.test_fails_on_unknown_encoding _______________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stderr call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | usage: pytest [-h] [--duplicates] [--encoding ENCODING]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |               [--folders-to-skip PATTERNS] [--format FORMAT]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |               [--generated PATTERNS] [--names-to-skip PATTERNS] [--out FILE]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |               [--suffix PATTERNS] [--verbose] [--version]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |               [SHELL-PATTERN [SHELL-PATTERN ...]]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | pytest: error: encoding specified with --encoding must be a known Python encoding: no_such_encoding\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | _______________ PygountCommandTest.test_fails_on_unknown_format ________________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stderr call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | usage: pytest [-h] [--duplicates] [--encoding ENCODING]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |               [--folders-to-skip PATTERNS] [--format FORMAT]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |               [--generated PATTERNS] [--names-to-skip PATTERNS] [--out FILE]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |               [--suffix PATTERNS] [--verbose] [--version]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |               [SHELL-PATTERN [SHELL-PATTERN ...]]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | pytest: error: argument --format/-f: invalid choice: 'no_such_encoding' (choose from 'cloc-xml', 'json', 'sloccount', 'summary')\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | _______________________________ test_can_lex_idl _______________________________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------- Captured stdout call -----------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | [(Token.Comment.Multiline, '/* some\\n * comment */'), (Token.Text.Whitespace, '\\n'), (Token.Name, 'module'), (Token.Text.Whitespace, ' '), (Token.Name, 'HelloApp'), (Token.Text.Whitespace, ' '), (Token.Punctuation, '{'), (Token.Text.Whitespace, '\\n'), (Token.Text.Whitespace, '  '), (Token.Keyword.Declaration, 'interface'), (Token.Text, ' '), (Token.Name.Class, 'Hello'), (Token.Text.Whitespace, ' '), (Token.Punctuation, '{'), (Token.Text.Whitespace, '\\n'), (Token.Text.Whitespace, '    '), (Token.Name, 'string'), (Token.Text.Whitespace, ' '), (Token.Name.Function, 'sayHello'), (Token.Punctuation, '('), (Token.Punctuation, ')'), (Token.Punctuation, ';'), (Token.Text.Whitespace, ' '), (Token.Comment.Single, '// Be friendly!'), (Token.Text.Whitespace, '\\n'), (Token.Text.Whitespace, '  '), (Token.Punctuation, '}'), (Token.Punctuation, ';'), (Token.Text.Whitespace, '\\n'), (Token.Punctuation, '}'), (Token.Punctuation, ';'), (Token.Text.Whitespace, '\\n')]\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | __________________________ test_can_ignore_broken_xml __________________________\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ------------------------------ Captured log call -------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | WARNING  pygount:xmldialect.py:96 <broken>:1:8: mismatched tag\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/report.xml -\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ---------- coverage: platform linux, python 3.8.11-final-0 -----------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Name                     Stmts   Miss Branch BrPart  Cover\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | pygount/__init__.py          6      0      0      0   100%\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | pygount/analysis.py        469     21    166     14    94%\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | pygount/command.py         199     12     20      3    93%\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | pygount/common.py           72      2     24      1    97%\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | pygount/git_storage.py      25      0      2      0   100%\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | pygount/lexers.py           19      0      0      0   100%\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | pygount/summary.py         160      3     12      0    98%\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | pygount/write.py           109      0     10      1    99%\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | pygount/xmldialect.py       69      8     28      8    84%\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ----------------------------------------------------------\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | TOTAL                     1128     46    262     27    95%\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | =========================== short test summary info ============================\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::SourceScannerTest::test_can_find_any_files\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::SourceScannerTest::test_can_find_files_from_mixed_cloned_git_remote_url_and_local\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::SourceScannerTest::test_can_find_no_files\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::SourceScannerTest::test_can_find_python_files\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::SourceScannerTest::test_can_find_python_files_in_dot\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::SourceScannerTest::test_can_skip_dot_folder\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::AnalysisTest::test_can_analyze_c\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::AnalysisTest::test_can_analyze_python\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::AnalysisTest::test_can_compute_python_line_parts\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::AnalysisTest::test_can_convert_python_strings_to_comments\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::AnalysisTest::test_can_deline_tokens\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::AnalysisTest::test_can_detect_white_text\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::FileAnalysisTest::test_can_analyze_bytesio\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::FileAnalysisTest::test_can_analyze_encoding_error\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::FileAnalysisTest::test_can_analyze_oracle_sql\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::FileAnalysisTest::test_can_analyze_stringio\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::FileAnalysisTest::test_can_analyze_unknown_language\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::FileAnalysisTest::test_can_analyze_webfocus\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::FileAnalysisTest::test_can_analyze_xml_dialect\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::FileAnalysisTest::test_can_detect_binary_source_code\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::FileAnalysisTest::test_can_detect_silent_dos_batch_remarks\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::FileAnalysisTest::test_fails_on_non_seekable_file_handle_with_encoding_automatic\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::FileAnalysisTest::test_fails_on_non_seekable_file_handle_with_encoding_chardet\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::FileAnalysisTest::test_fails_on_unknown_magic_encoding_comment\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::test_can_repr_source_analysis_from_file\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::test_can_repr_empty_source_analysis_from_file\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::test_can_repr_error_source_analysis_from_file\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::test_can_guess_lexer_for_python\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::test_can_guess_lexer_for_plain_text\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::test_can_guess_lexer_for_cmakelists\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::test_can_use_deprecated_counts\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::EncodingTest::test_can_detect_automatic_encoding_for_empty_source\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::EncodingTest::test_can_detect_binary_with_zero_byte\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::EncodingTest::test_can_detect_bom_encodings\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::EncodingTest::test_can_detect_chardet_encoding\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::EncodingTest::test_can_detect_magic_comment\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::EncodingTest::test_can_detect_plain_encoding\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::EncodingTest::test_can_detect_utf16_as_non_binary\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::EncodingTest::test_can_detect_utf8_when_cp1252_would_fail\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::EncodingTest::test_can_detect_xml_prolog\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::EncodingTest::test_can_use_hardcoded_ending\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::GeneratedCodeTest::test_can_analyze_generated_code_with_own_pattern\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::GeneratedCodeTest::test_can_detect_generated_code\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::GeneratedCodeTest::test_can_detect_non_generated_code\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::GeneratedCodeTest::test_can_not_detect_generated_code_with_late_comment\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::SizeTest::test_can_detect_empty_source_code\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::test_can_analyze_project_markdown_files\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::test_has_no_duplicate_in_pygount_source\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::test_can_match_deprecated_functions\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::DuplicatePoolTest::test_can_detect_duplicate\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_analysis.py::DuplicatePoolTest::test_can_distinguish_different_files\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::CommandTest::test_can_execute_on_own_code\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::CommandTest::test_can_set_encoding\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::CommandTest::test_can_use_chardet_for_encoding\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::CommandTest::test_fails_on_broken_regex\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::CommandTest::test_fails_on_unknown_output_format\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_can_accept_duplicates\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_can_analyze_pygount_setup_py\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_can_analyze_pygount_source_code\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_can_analyze_pygount_source_code_as_cloc_xml\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_can_analyze_pygount_source_code_as_json\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_can_detect_duplicates\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_can_detect_generated_code\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_can_detect_generated_code_with_own_pattern\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_can_show_help\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_can_show_version\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_can_write_all_output_formats\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_fails_on_broken_regex_pattern\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_fails_on_unknown_encoding\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_command.py::PygountCommandTest::test_fails_on_unknown_format\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_build_str\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_match_from_regex\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_match_from_regex_pattern\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_match_from_shell_pattern\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_match_single_regex_from_shell_pattern\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_match_single_regex\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_match_regex_from_multiple_regex_patterns\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_match_regex_from_multiple_default_shell_patterns\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_represent_text_as_list\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_represent_iterable_as_list\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_convert_empty_text_to_lines\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_convert_single_letter_to_lines\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_convert_single_letter_with_newline_to_lines\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_convert_multiple_lines\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_common.py::test_can_convert_empty_lines\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_git_storage.py::test_can_extract_git_remote_url_and_revision_if_any\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_git_storage.py::test_can_extract_and_close_and_find_files_from_cloned_git_remote_url_with_revision\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_lexers.py::test_can_lex_idl\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_lexers.py::test_can_lex_m4\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_lexers.py::test_can_lex_vbscript\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_lexers.py::test_can_lex_webfocus\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_lexers.py::test_can_lex_plain_text\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_summary.py::test_can_repr_language_summary\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_summary.py::test_can_repr_pseudo_language_summary\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_summary.py::test_can_summarize_project_with_multiple_files_of_same_language\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_summary.py::test_can_summarize_project_with_multiple_files_of_different_languages\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_summary.py::test_can_summarize_project_with_pseudo_languages\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_summary.py::test_can_repr_empty_project_summary\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_write.py::test_can_collect_totals\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_write.py::test_can_write_cloc_xml\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_write.py::test_can_compute_digit_width\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_write.py::SummaryWriterTest::test_can_write_summary\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_xmldialect.py::test_can_detect_ant\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_xmldialect.py::test_can_detect_maven\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_xmldialect.py::test_can_ignore_broken_xml\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | PASSED tests/test_xmldialect.py::test_can_detect_docbook_from_dtd\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | ======================= 106 passed, 2 warnings in 16.46s =======================\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2705  Success - Main Run the test suite\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \u2b50 Run Main Update coveralls\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/7] user= workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \ud83c\udf31 Installing documentation dependencies\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Installing dependencies from lock file\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Package operations: 14 installs, 0 updates, 0 removals\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing markupsafe (2.1.3)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing pytz (2023.3)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing alabaster (0.7.13)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing babel (2.12.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing imagesize (1.4.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing jinja2 (3.1.2)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing snowballstemmer (2.2.0)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing sphinxcontrib-devhelp (1.0.2)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing sphinxcontrib-applehelp (1.0.4)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing sphinxcontrib-htmlhelp (2.0.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing sphinxcontrib-jsmath (1.0.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing sphinxcontrib-serializinghtml (1.1.5)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing sphinxcontrib-qthelp (1.0.3)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   \u2022 Installing sphinx (7.0.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Installing the current project: pygount (1.6.1)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \ud83d\udcd6 Building documentation\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | make: Entering directory '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/docs'\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Running Sphinx v7.0.1\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | making output directory... done\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | building [mo]: targets for 0 po files that are out of date\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | writing output... \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | building [html]: targets for 9 source files that are out of date\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | updating environment: [new config] 9 added, 0 changed, 0 removed\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | reading sources... [ 11%] api\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | reading sources... [ 22%] background\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | reading sources... [ 33%] changes\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | reading sources... [ 44%] continuous-integration\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | reading sources... [ 55%] contributing\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | reading sources... [ 66%] index\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | reading sources... [ 77%] installation\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | reading sources... [ 88%] json\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | reading sources... [100%] usage\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | looking for now-outdated files... none found\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | pickling environment... done\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | checking consistency... done\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | preparing documents... done\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | writing output... [ 11%] api\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | writing output... [ 22%] background\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | writing output... [ 33%] changes\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | writing output... [ 44%] continuous-integration\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | writing output... [ 55%] contributing\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | writing output... [ 66%] index\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | writing output... [ 77%] installation\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | writing output... [ 88%] json\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | writing output... [100%] usage\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | generating indices... genindex py-modindex done\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | writing additional pages... search done\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | copying static files... done\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | copying extra files... done\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | dumping search index in English (code: en)... done\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | dumping object inventory... done\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | build succeeded.\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | The HTML pages are in _build/html.\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | make: Leaving directory '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/docs'\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \ud83c\udf89 Successfully built documentation in docs/_build/html/index.html\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2705  Success - Main Update coveralls\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \u2b50 Run Main Update coveralls\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/8] user= workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Submitting coverage to coveralls.io...\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Traceback (most recent call last):\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/.venv/lib/python3.8/site-packages/coveralls/api.py\", line 290, in submit_report\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |     response.raise_for_status()\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/.venv/lib/python3.8/site-packages/requests/models.py\", line 1021, in raise_for_status\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |     raise HTTPError(http_error_msg, response=self)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | requests.exceptions.HTTPError: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | The above exception was the direct cause of the following exception:\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | \n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | Traceback (most recent call last):\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/.venv/lib/python3.8/site-packages/coveralls/cli.py\", line 95, in main\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |     result = coverallz.wear()\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/.venv/lib/python3.8/site-packages/coveralls/api.py\", line 257, in wear\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |     return self.submit_report(json_string)\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |   File \"/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/.venv/lib/python3.8/site-packages/coveralls/api.py\", line 293, in submit_report\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   |     raise CoverallsException(\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | coveralls.exception.CoverallsException: Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   | resubmitting with id None\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u274c  Failure - Main Update coveralls\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] exitcode '1': failure\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \u2b50 Run Post Install Poetry\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9dce04a3-8ed1-49e1-b90b-17dc4a4a39d7/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ]   \u2705  Success - Post Install Poetry\n[b906f616-9a0c-48da-8734-f53591e442fb/build      ] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/roskakori-pygount/.github/workflows/build-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "b906f616-9a0c-48da-8734-f53591e442fb",
        "build_tool": "pytest",
        "elapsed_time": 252.65558099746704
    }
}