{
    "repository": "bihealth/vcfpy",
    "stars": 73,
    "language": "python",
    "size": 1287,
    "clone_url": "https://github.com/bihealth/vcfpy.git",
    "timestamp": "2023-07-01T11:04:18.704490Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_call",
                "name": "test_is_phased_true",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_is_phased_mixed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_is_phased_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_gt_phase_char_pipe",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_gt_phase_char_slash",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_gt_bases_0_0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_gt_bases_0_1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_gt_bases_1_1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_gt_bases_0_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_gt_type_het",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_gt_type_hom_ref",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_gt_type_hom_alt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_is_het_het",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_is_het_hom_ref",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_is_het_hom_alt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_is_variant_het",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_is_variant_hom_ref",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_is_variant_hom_alt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_is_variant_no_call",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_ploidy_nocall",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_ploidy_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_ploidy_two",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_gt_type_filtered_no_ft",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_gt_type_filtered_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_call",
                "name": "test_gt_type_filtered_pass",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_context_manager",
                "name": "test_reader",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_context_manager",
                "name": "test_reader_fetch",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_context_manager",
                "name": "test_writer",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fetch",
                "name": "test_fetch_no_records_values",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fetch",
                "name": "test_fetch_one_record_values",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fetch",
                "name": "test_fetch_two_records_values",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fetch",
                "name": "test_fetch_no_records_region",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fetch",
                "name": "test_fetch_one_record_region",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fetch",
                "name": "test_fetch_two_records_region",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_header_field_info",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_sample_infos",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_header_header",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_header_without_lines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_header_header_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_header_alt_allele_header_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_header_contig_header_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_header_filter_header_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_header_pedigree_header_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_header_sample_header_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_header_info_header_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_header_format_header_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_header_has_header_line_positive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header",
                "name": "test_header_has_header_line_positive_no_samples",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header_add_lines",
                "name": "test_add_simple_line",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header_add_lines",
                "name": "test_add_contig_line",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header_add_lines",
                "name": "test_add_contig_line_shortcut",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header_add_lines",
                "name": "test_add_filter_line",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header_add_lines",
                "name": "test_add_filter_line_shortcut",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header_add_lines",
                "name": "test_add_format_line",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header_add_lines",
                "name": "test_add_format_line_shortcut",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header_add_lines",
                "name": "test_add_info_line",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_header_add_lines",
                "name": "test_add_info_line_shortcut",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_convert_field_values_integer_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_convert_field_values_integer_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_convert_field_values_float_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_convert_field_values_float_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_convert_field_values_flag",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_convert_field_values_character_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_convert_field_values_character_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_convert_field_values_string_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_convert_field_values_string_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_integer_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_integer_more[2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_integer_more[A]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_integer_more[R]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_integer_more[G]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_integer_more[.]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_integer_more_empty[2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_integer_more_empty[A]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_integer_more_empty[R]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_integer_more_empty[G]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_integer_more_empty[.]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_string_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_string_more[2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_string_more[A]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_string_more[R]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_string_more[G]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_string_more[.]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_string_more_empty[2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_string_more_empty[A]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_string_more_empty[R]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_string_more_empty[G]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_field_values",
                "name": "test_parse_field_value_string_more_empty[.]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_helpers",
                "name": "test_split_quoted_string_one_noquote",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_helpers",
                "name": "test_split_quoted_string_two_noquote",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_helpers",
                "name": "test_split_quoted_string_one_quote",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_helpers",
                "name": "test_split_quoted_string_two_quote",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_helpers",
                "name": "test_split_quoted_string_one_escape",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_helpers",
                "name": "test_split_quoted_string_two_escape",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_helpers",
                "name": "test_split_quoted_string_array_syntax_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_helpers",
                "name": "test_split_quoted_string_array_syntax_recursion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_helpers",
                "name": "test_vcf_header_line_parser_parse_mapping_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_helpers",
                "name": "test_vcf_header_line_parser_parse_mapping_flag",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_helpers",
                "name": "test_vcf_header_line_parser_parse_mapping_quoted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_helpers",
                "name": "test_vcf_header_line_parser_parse_mapping_escaped",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header",
                "name": "test_parse_header",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_stupid_vcf_header_line_parser_file_format",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_mapping_vcf_header_line_parser_parse_key_value_filter",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_mapping_vcf_header_line_parser_parse_key_value_format",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_mapping_vcf_header_line_parser_parse_key_value_info",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_mapping_vcf_header_line_parser_parse_key_value_contig",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_vcf_header_parser_file_format",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_vcf_header_parser_parse_line_filter",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_mapping_vcf_header_parser_parse_line_format",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_mapping_vcf_header_parser_parse_line_info",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_mapping_vcf_header_parser_parse_line_contig",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_mapping_vcf_header_parser_parse_line_alt_allele",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_mapping_vcf_header_parser_parse_line_meta",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_mapping_vcf_header_parser_parse_line_pedigree",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_parse_header_lines",
                "name": "test_mapping_vcf_header_parser_parse_line_sample",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_process_alt",
                "name": "test_substitution_snv",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_process_alt",
                "name": "test_substitution_mnv",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_process_alt",
                "name": "test_substitution_ins",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_process_alt",
                "name": "test_substitution_del",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_process_alt",
                "name": "test_substitution_indel",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record",
                "name": "test_parse_minimal_record",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record",
                "name": "test_parse_record_with_info",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record",
                "name": "test_parse_record_with_escaping",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record",
                "name": "test_parse_record_with_filter_warning",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record",
                "name": "test_parse_record_with_filter_no_warning",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record",
                "name": "test_missing_pass",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record_breakend",
                "name": "test_parse_simple_breakend",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record_breakend",
                "name": "test_parse_breakend_with_seq",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record_breakend",
                "name": "test_parse_breakend_telomere",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record_breakend",
                "name": "test_parse_breakend_multi_mate",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record_breakend",
                "name": "test_parse_breakend_single_breakend_fwd",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record_breakend",
                "name": "test_parse_breakend_single_breakend_rev",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record_symbolic",
                "name": "test_parse_dup",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_record_symbolic",
                "name": "test_parse_iupac",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_warnings",
                "name": "test_header_checker_missing_fileformat",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_warnings",
                "name": "test_header_checker_unknown_vcf_version",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser_warnings",
                "name": "test_header_checker_known_vcf_version",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_public_api",
                "name": "test_from_exceptions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_public_api",
                "name": "test_from_header",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_public_api",
                "name": "test_from_record",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_public_api",
                "name": "test_record_constants",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_public_api",
                "name": "test_from_reader",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_public_api",
                "name": "test_from_writer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader_nosample",
                "name": "test_reading_parse_nosample",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader_parse_subset",
                "name": "test_reading_parse_subset",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader_read_file",
                "name": "test_read_text",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader_read_file",
                "name": "test_read_bgzip",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader_read_file",
                "name": "test_read_text_no_samples",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader_read_file",
                "name": "test_read_info_flag",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader_read_header",
                "name": "test_read_text",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader_read_header",
                "name": "test_read_bgzip",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reader_read_header",
                "name": "test_read_text_no_samples",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_record_base",
                "name": "test_record_from_scratch",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_record_svs",
                "name": "test_breakend_builtins",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_record_svs",
                "name": "test_breakend_fwd_fwd_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_record_svs",
                "name": "test_breakend_fwd_fwd_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_record_svs",
                "name": "test_breakend_fwd_rev_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_record_svs",
                "name": "test_breakend_fwd_rev_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_record_svs",
                "name": "test_breakend_rev_fwd_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_record_svs",
                "name": "test_breakend_rev_fwd_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_record_svs",
                "name": "test_breakend_rev_rev_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_record_svs",
                "name": "test_breakend_rev_rev_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_record_svs",
                "name": "test_single_breakend_fdw",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_record_svs",
                "name": "test_single_breakend_rev",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_record_svs",
                "name": "test_symbolic_allele",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_aa",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_ac",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_ad",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_adf",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_adr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_an",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_bq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_cigar",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_DP",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_dp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_h2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_h3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_mq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_mq0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_ns",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_sb",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_somatic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_validated",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_1000g",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_imprecise",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_novel",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_end",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_svtype",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_svlen",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_cipos",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_ciend",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_homlen",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_homseq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_bkptid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_meinfo",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_metrans",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_dgvid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_dbvarid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_dbripid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_mateid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_parid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_event",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_cilen",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_dpadj",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_cn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_cnadj",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_cicn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_info_cicnadj",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_ad",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_adf",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_adr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_dp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_ec",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_ft",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_gq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_gp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_gt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_gl",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_hq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_mq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_pl",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_pq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_ps",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_cn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_cnq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_cnl",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_cnp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_nq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_hap",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reserved_fields",
                "name": "test_format_ahap",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_roundtrip",
                "name": "test_vcf_roundtrip",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[1kg.sites.vcf]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[1kg.vcf.gz]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[bcftools.vcf]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[contig_idonly.vcf]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[example-4.0.vcf]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[example-4.1-info-multiple-values.vcf]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[example-4.1-ploidy.vcf]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[example-4.1-sv.vcf]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[example-4.1.vcf]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[example-4.2.vcf]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[freebayes.vcf]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[gatk_26_meta.vcf]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[gatk.vcf]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[gonl.chr20.release4.gtc.vcf]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[info-type-character.vcf]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[issue-140-file1.vcf]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[issue-140-file2.vcf]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[issue-140-file3.vcf]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[issue-16.vcf]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[issue-201.vcf.gz]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[issue-214.vcf]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[issue_49.vcf]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[metadata-whitespace.vcf]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[mixed-filtering.vcf]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[null_genotype_mono.vcf]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[parse-meta-line.vcf]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[samples-space.vcf]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[samtools.vcf]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[strelka.vcf]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[string_as_flag.vcf]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[tb.vcf.gz]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[uncalled_genotypes.vcf]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[walk_left.vcf]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_vcfs_from_the_wild",
                "name": "test_read_vcfs_from_the_wild[walk_refcall.vcf]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_write_bgzf",
                "name": "test_write_minimal_record_writer_from_path",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_write_bgzf",
                "name": "test_write_minimal_record_writer_from_stream_path",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_write_bgzf",
                "name": "test_write_minimal_record_writer_from_stream_use_bgzf",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_write_record",
                "name": "test_write_minimal_record",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_write_record",
                "name": "test_write_annotated_record",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_write_record",
                "name": "test_write_record_with_escaping",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_write_record",
                "name": "test_write_record_no_samples",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_writer_escape",
                "name": "test_format_atomic_with_escape_info",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_writer_escape",
                "name": "test_format_atomic_with_escape_format",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_writer_escape",
                "name": "test_format_atomic_without_escape_info",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_writer_escape",
                "name": "test_format_atomic_without_escape_format",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_writer_escape",
                "name": "test_format_value_with_escape",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_writer_escape",
                "name": "test_format_value_without_escape",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_writer_write_header",
                "name": "test_write_header",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_writer_write_header",
                "name": "test_write_header_no_samples",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_writer_write_reordered",
                "name": "test_reading_and_write_reordered",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_writer_write_reordered",
                "name": "test_reading_and_write_reordered_parse_subset",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_writer_write_subset",
                "name": "test_reading_and_write_subset_of_samples",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_writer_write_subset",
                "name": "test_reading_and_write_subset_of_samples_parse_different_subset",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous] \ud83d\ude80  Start image=crawlergpt:latest\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ] \ud83d\ude80  Start image=crawlergpt:latest\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy] user=0 workdir=\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy] user=0 workdir=\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   \u2601  git clone 'https://github.com/marocchino/sticky-pull-request-comment' # ref=v1.1.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   \u2601  git clone 'https://github.com/khan/pull-request-workflow-cancel' # ref=1.0.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ] \u2b50 Run Main actions/checkout@v1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   \u2705  Success - Main actions/checkout@v1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ] \u2b50 Run Main Setup black environment\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous] \u2b50 Run Main khan/pull-request-workflow-cancel@1.0.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   \ud83d\udc33  docker cp src=/tmp/act-cache/d0930ee2-5b1c-4dab-a865-baf2c70f7c4f/act/khan-pull-request-workflow-cancel@1.0.0/ dst=/var/run/act/actions/khan-pull-request-workflow-cancel@1.0.0/\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/khan-pull-request-workflow-cancel@1.0.0/] user=0 workdir=\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/khan-pull-request-workflow-cancel@1.0.0/dist/index.js] user= workdir=\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   | [@octokit/rest] `const Octokit = require(\"@octokit/rest\")` is deprecated. Use `const { Octokit } = require(\"@octokit/rest\")` instead\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   | Checking main.yml \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   | TypeError: Cannot read property 'number' of undefined\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   |     at run (/run/act/actions/khan-pull-request-workflow-cancel@1.0.0/dist/index.js:25991:34)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   |     at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous]   \u274c  Failure - Main khan/pull-request-workflow-cancel@1.0.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous] exitcode '1': failure\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/cancel-previous] \ud83c\udfc1  Job failed\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | Collecting package metadata (current_repodata.json): ...working... done\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | Solving environment: ...working... failed with repodata from current_repodata.json, will retry with next repodata source.\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | Collecting package metadata (repodata.json): ...working... done\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | Solving environment: ...working... done\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | ## Package Plan ##\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   environment location: /home/runneradmin/.conda/envs/black\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   added / updated specs:\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     - black==22.3.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | The following packages will be downloaded:\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     package                    |            build\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     ---------------------------|-----------------\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     _libgcc_mutex-0.1          |      conda_forge           3 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     _openmp_mutex-4.5          |            2_gnu          23 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     black-22.3.0               |     pyhd8ed1ab_0         120 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     bzip2-1.0.8                |       h7f98852_4         484 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     ca-certificates-2023.5.7   |       hbcca054_0         145 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     click-8.1.3                |unix_pyhd8ed1ab_2          74 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     dataclasses-0.8            |     pyhc8e2a94_3          10 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     ld_impl_linux-64-2.40      |       h41732ed_0         688 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     libexpat-2.5.0             |       hcb278e6_1          76 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     libffi-3.4.2               |       h7f98852_5          57 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     libgcc-ng-13.1.0           |       he5830b7_0         758 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     libgomp-13.1.0             |       he5830b7_0         409 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     libnsl-2.0.0               |       h7f98852_0          31 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     libsqlite-3.42.0           |       h2797004_0         809 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     libuuid-2.38.1             |       h0b41bf4_0          33 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     libzlib-1.2.13             |       hd590300_5          60 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     mypy_extensions-1.0.0      |     pyha770c72_0          10 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     ncurses-6.4                |       hcb278e6_0         860 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     openssl-3.1.1              |       hd590300_1         2.5 MB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     pathspec-0.11.1            |     pyhd8ed1ab_0          37 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     pip-23.1.2                 |     pyhd8ed1ab_0         1.3 MB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     platformdirs-3.8.0         |     pyhd8ed1ab_0          19 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     python-3.11.4              |hab00c5b_0_cpython        29.3 MB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     python_abi-3.11            |          3_cp311           6 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     readline-8.2               |       h8228510_1         275 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     setuptools-68.0.0          |     pyhd8ed1ab_0         453 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     tk-8.6.12                  |       h27826a3_0         3.3 MB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     tomli-2.0.1                |     pyhd8ed1ab_0          16 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     typed-ast-1.5.4            |  py311hd4cff14_1         228 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     typing-extensions-4.7.0    |       hd8ed1ab_0          10 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     typing_extensions-4.7.0    |     pyha770c72_0          35 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     tzdata-2023c               |       h71feb2d_0         115 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     wheel-0.40.0               |     pyhd8ed1ab_0          54 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     xz-5.2.6                   |       h166bdaf_0         409 KB  conda-forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |     ------------------------------------------------------------\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |                                            Total:        42.5 MB\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | The following NEW packages will be INSTALLED:\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   _libgcc_mutex      conda-forge/linux-64::_libgcc_mutex-0.1-conda_forge\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   _openmp_mutex      conda-forge/linux-64::_openmp_mutex-4.5-2_gnu\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   black              conda-forge/noarch::black-22.3.0-pyhd8ed1ab_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   bzip2              conda-forge/linux-64::bzip2-1.0.8-h7f98852_4\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   ca-certificates    conda-forge/linux-64::ca-certificates-2023.5.7-hbcca054_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   click              conda-forge/noarch::click-8.1.3-unix_pyhd8ed1ab_2\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   dataclasses        conda-forge/noarch::dataclasses-0.8-pyhc8e2a94_3\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   ld_impl_linux-64   conda-forge/linux-64::ld_impl_linux-64-2.40-h41732ed_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   libexpat           conda-forge/linux-64::libexpat-2.5.0-hcb278e6_1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   libffi             conda-forge/linux-64::libffi-3.4.2-h7f98852_5\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   libgcc-ng          conda-forge/linux-64::libgcc-ng-13.1.0-he5830b7_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   libgomp            conda-forge/linux-64::libgomp-13.1.0-he5830b7_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   libnsl             conda-forge/linux-64::libnsl-2.0.0-h7f98852_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   libsqlite          conda-forge/linux-64::libsqlite-3.42.0-h2797004_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   libuuid            conda-forge/linux-64::libuuid-2.38.1-h0b41bf4_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   libzlib            conda-forge/linux-64::libzlib-1.2.13-hd590300_5\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   mypy_extensions    conda-forge/noarch::mypy_extensions-1.0.0-pyha770c72_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   ncurses            conda-forge/linux-64::ncurses-6.4-hcb278e6_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   openssl            conda-forge/linux-64::openssl-3.1.1-hd590300_1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   pathspec           conda-forge/noarch::pathspec-0.11.1-pyhd8ed1ab_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   pip                conda-forge/noarch::pip-23.1.2-pyhd8ed1ab_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   platformdirs       conda-forge/noarch::platformdirs-3.8.0-pyhd8ed1ab_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   python             conda-forge/linux-64::python-3.11.4-hab00c5b_0_cpython\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   python_abi         conda-forge/linux-64::python_abi-3.11-3_cp311\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   readline           conda-forge/linux-64::readline-8.2-h8228510_1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   setuptools         conda-forge/noarch::setuptools-68.0.0-pyhd8ed1ab_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   tk                 conda-forge/linux-64::tk-8.6.12-h27826a3_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   tomli              conda-forge/noarch::tomli-2.0.1-pyhd8ed1ab_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   typed-ast          conda-forge/linux-64::typed-ast-1.5.4-py311hd4cff14_1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   typing-extensions  conda-forge/noarch::typing-extensions-4.7.0-hd8ed1ab_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   typing_extensions  conda-forge/noarch::typing_extensions-4.7.0-pyha770c72_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   tzdata             conda-forge/noarch::tzdata-2023c-h71feb2d_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   wheel              conda-forge/noarch::wheel-0.40.0-pyhd8ed1ab_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   |   xz                 conda-forge/linux-64::xz-5.2.6-h166bdaf_0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | Preparing transaction: ...working... done\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | Verifying transaction: ...working... done\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | Executing transaction: ...working... done\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   \u2705  Success - Main Setup black environment\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ] \u2b50 Run Main Check formatting\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | All done! \u2728 \ud83c\udf70 \u2728\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   | 51 files would be left unchanged.\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ]   \u2705  Success - Main Check formatting\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/formatting     ] \ud83c\udfc1  Job succeeded\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ] \ud83d\ude80  Start image=crawlergpt:latest\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy] user=0 workdir=\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ] \ud83e\uddea  Matrix: map[python-version:3.7]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ] \u2b50 Run Main actions/checkout@v2\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \u2705  Success - Main actions/checkout@v2\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ] \u2b50 Run Main Install Python\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udc33  docker cp src=/tmp/act-cache/d0930ee2-5b1c-4dab-a865-baf2c70f7c4f/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::isExplicit: \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::explicit? false\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::explicit? true\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::explicit? true\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::explicit? true\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::explicit? true\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::explicit? true\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::explicit? true\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Successfully setup CPython (3.7.11)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \u2705  Success - Main Install Python\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \u2699  ::set-output:: python-version=3.7.11\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ] \u2b50 Run Main Install dependencies\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting pysam>=0.10.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading pysam-0.21.0-cp37-cp37m-manylinux_2_24_x86_64.whl (18.1 MB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting apipkg>=1.4\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading apipkg-3.0.1-py3-none-any.whl (8.5 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting coverage>=4.3.4\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading coverage-7.2.7-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (225 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting execnet>=1.4.1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading execnet-1.9.0-py2.py3-none-any.whl (39 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting py>=1.4.32\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting pytest>=3.0.6\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting pytest-cache>=1.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading pytest-cache-1.0.tar.gz (16 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting pytest-cov>=2.4.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting codacy-coverage>=1.3.6\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading codacy_coverage-1.3.11-py2.py3-none-any.whl (7.5 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting flake8>=3.6.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading flake8-5.0.4-py2.py3-none-any.whl (61 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting cython\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading Cython-0.29.35-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (1.9 MB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting iniconfig\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting pluggy<2.0,>=0.12\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting importlib-metadata>=0.12\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting tomli>=1.0.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting exceptiongroup>=1.0.0rc8\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting packaging\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting requests>=2.9.1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting importlib-metadata>=0.12\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading importlib_metadata-4.2.0-py3-none-any.whl (16 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting pycodestyle<2.10.0,>=2.9.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading pycodestyle-2.9.1-py2.py3-none-any.whl (41 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting mccabe<0.8.0,>=0.7.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting pyflakes<2.6.0,>=2.5.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading pyflakes-2.5.0-py2.py3-none-any.whl (66 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting typing-extensions>=3.6.4\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting zipp>=0.5\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting certifi>=2017.4.17\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting idna<4,>=2.5\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting charset-normalizer<4,>=2\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Collecting urllib3<3,>=1.21.1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Using legacy 'setup.py install' for pytest-cache, since package 'wheel' is not installed.\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Installing collected packages: zipp, typing-extensions, importlib-metadata, urllib3, tomli, pluggy, packaging, iniconfig, idna, exceptiongroup, coverage, charset-normalizer, certifi, requests, pytest, pyflakes, pycodestyle, mccabe, execnet, cython, pytest-cov, pytest-cache, pysam, py, flake8, codacy-coverage, apipkg\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     Running setup.py install for pytest-cache: started\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     Running setup.py install for pytest-cache: finished with status 'done'\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Successfully installed apipkg-3.0.1 certifi-2023.5.7 charset-normalizer-3.1.0 codacy-coverage-1.3.11 coverage-7.2.7 cython-0.29.35 exceptiongroup-1.1.1 execnet-1.9.0 flake8-5.0.4 idna-3.4 importlib-metadata-4.2.0 iniconfig-2.0.0 mccabe-0.7.0 packaging-23.1 pluggy-1.2.0 py-1.11.0 pycodestyle-2.9.1 pyflakes-2.5.0 pysam-0.21.0 pytest-7.4.0 pytest-cache-1.0 pytest-cov-4.1.0 requests-2.31.0 tomli-2.0.1 typing-extensions-4.7.0 urllib3-2.0.3 zipp-3.15.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | apipkg==3.0.1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | certifi==2023.5.7\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | charset-normalizer==3.1.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | codacy-coverage==1.3.11\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | coverage==7.2.7\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Cython==0.29.35\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | exceptiongroup==1.1.1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | execnet==1.9.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | flake8==5.0.4\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | idna==3.4\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | importlib-metadata==4.2.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | iniconfig==2.0.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | mccabe==0.7.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | packaging==23.1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | pluggy==1.2.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | py==1.11.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | pycodestyle==2.9.1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | pyflakes==2.5.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | pysam==0.21.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | pytest==7.4.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | pytest-cache==1.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | pytest-cov==4.1.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | requests==2.31.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tomli==2.0.1\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | typing_extensions==4.7.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | urllib3==2.0.3\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | zipp==3.15.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \u2705  Success - Main Install dependencies\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ] \u2b50 Run Main Run tests\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | ============================= test session starts ==============================\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | platform linux -- Python 3.7.11, pytest-7.4.0, pluggy-1.2.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | configfile: setup.cfg\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | testpaths: tests\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | plugins: cov-4.1.0\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | collected 284 items\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_call.py .........................                             [  8%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_context_manager.py ...                                        [  9%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_fetch.py ......                                               [ 11%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_header.py ..............                                      [ 16%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_header_add_lines.py .........                                 [ 20%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_parser_field_values.py ...............................        [ 30%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_parser_helpers.py ............                                [ 35%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_parser_parse_header.py .                                      [ 35%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_parser_parse_header_lines.py ..............                   [ 40%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_parser_process_alt.py .....                                   [ 42%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_parser_record.py ......                                       [ 44%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_parser_record_breakend.py ......                              [ 46%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_parser_record_symbolic.py ..                                  [ 47%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_parser_warnings.py ...                                        [ 48%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_public_api.py ......                                          [ 50%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_reader_nosample.py .                                          [ 50%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_reader_parse_subset.py .                                      [ 51%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_reader_read_file.py ....                                      [ 52%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_reader_read_header.py ...                                     [ 53%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_record_base.py .                                              [ 53%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_record_svs.py ............                                    [ 58%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_reserved_fields.py .......................................... [ 72%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | .......................                                                  [ 80%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_roundtrip.py .                                                [ 81%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py ..................................      [ 93%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_write_bgzf.py ...                                             [ 94%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_write_record.py ....                                          [ 95%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_writer_escape.py ......                                       [ 97%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_writer_write_header.py ..                                     [ 98%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_writer_write_reordered.py ..                                  [ 99%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_writer_write_subset.py ..                                     [100%]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | =============================== warnings summary ===============================\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | ../../../opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/_pytest/config/__init__.py:1373\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/_pytest/config/__init__.py:1373: PytestConfigWarning: Unknown config option: pep8ignore\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     self._warn_or_fail_if_strict(f\"Unknown config option: {key}\\n\")\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_header.py::test_header_without_lines\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/header.py:615: FieldInfoNotFound: Field \"Description\" not found in header line FILTER=<ID=PASS>\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     FieldInfoNotFound,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_header.py::test_header_without_lines\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/header.py:615: FieldInfoNotFound: Field \"Description\" not found in header line FILTER=<ID=q30>\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     FieldInfoNotFound,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_header.py::test_header_info_header_line\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/header.py:812: HeaderMissingDescription: Field \"Description\" not found in header line INFO=<ID=SVTYPE,Number=1,Type=String>\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     HeaderMissingDescription,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_header.py::test_header_info_header_line\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/header.py:812: HeaderMissingDescription: Field \"Description\" not found in header line INFO=<ID=END,Number=1,Type=Integer>\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     HeaderMissingDescription,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_header.py::test_header_format_header_line\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/header.py:866: HeaderMissingDescription: Field \"Description\" not found in header line FORMAT=<ID=AD,Number=R,Type=Integer>\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     HeaderMissingDescription,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_header.py::test_header_format_header_line\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/header.py:866: HeaderMissingDescription: Field \"Description\" not found in header line FORMAT=<ID=DP,Number=1,Type=Integer>\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     HeaderMissingDescription,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_header.py::test_header_has_header_line_positive\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/header.py:866: HeaderMissingDescription: Field \"Description\" not found in header line FORMAT=<ID=DP,Number=R,Type=Integer>\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     HeaderMissingDescription,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_header.py::test_header_has_header_line_positive\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/header.py:812: HeaderMissingDescription: Field \"Description\" not found in header line INFO=<ID=AD,Number=R,Type=Integer>\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     HeaderMissingDescription,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_parser_record.py::test_parse_record_with_filter_warning\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_parser_record.py::test_parse_record_with_filter_no_warning\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:498: UnknownFilter: Filter not found in header: REX; problem in FILTER column\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     UnknownFilter,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_parser_record.py::test_parse_record_with_filter_warning\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:507: UnknownFilter: Filter not found in header: BAR; problem in FORMAT/FT column of sample NA00002\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     UnknownFilter,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_parser_warnings.py::test_header_checker_unknown_vcf_version\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:580: UnknownVCFVersion: Unknown VCF version VCFv4.4\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     warnings.warn(\"Unknown VCF version {}\".format(first.value), UnknownVCFVersion)\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[contig_idonly.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/header.py:585: FieldInfoNotFound: Field \"length\" not found in header line contig=<ID=1>\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     FieldInfoNotFound,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[example-4.2.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[issue_49.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[metadata-whitespace.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:763: SpaceInChromLine: Found space in #CHROM line, splitting at whitespace instead of tab; this VCF file is ill-formatted\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     SpaceInChromLine,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[example-4.2.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[metadata-whitespace.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/header.py:288: DuplicateHeaderLineWarning: Seen INFO header more than once: VARTYPE, using firstoccurence\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     DuplicateHeaderLineWarning,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[metadata-whitespace.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:138: LeadingTrailingSpaceInKey: Mapping key ' Description' has leading or trailing space\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     LeadingTrailingSpaceInKey,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[metadata-whitespace.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:138: LeadingTrailingSpaceInKey: Mapping key ' Number' has leading or trailing space\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     LeadingTrailingSpaceInKey,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[metadata-whitespace.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:138: LeadingTrailingSpaceInKey: Mapping key ' Type' has leading or trailing space\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     LeadingTrailingSpaceInKey,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[metadata-whitespace.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:138: LeadingTrailingSpaceInKey: Mapping key '   Type' has leading or trailing space\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     LeadingTrailingSpaceInKey,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[metadata-whitespace.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:138: LeadingTrailingSpaceInKey: Mapping key '   Description' has leading or trailing space\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     LeadingTrailingSpaceInKey,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[metadata-whitespace.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:138: LeadingTrailingSpaceInKey: Mapping key '\\tNumber' has leading or trailing space\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     LeadingTrailingSpaceInKey,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[metadata-whitespace.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:138: LeadingTrailingSpaceInKey: Mapping key '\\tType' has leading or trailing space\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     LeadingTrailingSpaceInKey,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[metadata-whitespace.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:138: LeadingTrailingSpaceInKey: Mapping key '\\tDescription' has leading or trailing space\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     LeadingTrailingSpaceInKey,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[metadata-whitespace.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:138: LeadingTrailingSpaceInKey: Mapping key '   Number' has leading or trailing space\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     LeadingTrailingSpaceInKey,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | tests/test_vcfs_from_the_wild.py::test_read_vcfs_from_the_wild[metadata-whitespace.vcf]\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/vcfpy/parser.py:138: LeadingTrailingSpaceInKey: Mapping key '     Description' has leading or trailing space\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   |     LeadingTrailingSpaceInKey,\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/report.xml -\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | Coverage XML written to file coverage.xml\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | \n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   | ======================= 284 passed, 29 warnings in 2.49s =======================\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \u2705  Success - Main Run tests\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ] \u2b50 Run Post Install Python\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ]   \u2705  Success - Post Install Python\n[aa4aef75-cd19-4694-82f5-fb2dae94b1ef/testing        ] \ud83c\udfc1  Job succeeded\n",
        "stderr": "Error: Job 'cancel-previous' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/bihealth-vcfpy/.github/workflows/main-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "aa4aef75-cd19-4694-82f5-fb2dae94b1ef",
        "build_tool": "pytest",
        "elapsed_time": 412.0076551437378
    }
}