{
    "repository": "David-Wobrock/sqlvalidator",
    "stars": 54,
    "language": "python",
    "size": 205,
    "clone_url": "https://github.com/David-Wobrock/sqlvalidator.git",
    "timestamp": "2023-06-28T14:00:26.916334Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.integration.test_file_handler",
                "name": "test_format_file",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_file_handler",
                "name": "test_format_file_multilines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_file_handler",
                "name": "test_format_file_multiline_sql",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_file_handler",
                "name": "test_format_file_multiline_sql_with_prefix",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_file_handler",
                "name": "test_format_sql_string_with_strformat_call",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_file_handler",
                "name": "test_no_format_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_file_handler",
                "name": "test_no_format_sql_string_with_strformat_call",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_file_handler",
                "name": "test_two_following_statements",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_file_handler",
                "name": "test_two_following_statements_second_noformat",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_file_handler",
                "name": "test_two_following_statements_both_no_format",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_file_handler",
                "name": "test_string_starting_with_selected",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_file_handler",
                "name": "test_format_check_does_not_validate",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_format_select_star",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_upper_function_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_nested_function_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_extract_function",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_no_from_statement",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_simple_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_conditional_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_conditional_parenthesis_columns",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_simple_aliased_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_simple_aliased_as_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_select_except_one_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_select_except_multi_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_multiple_columns",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_parenthesis",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_basic_arithmetic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_chained_arithmetic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_nested_queries",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_nested_queries_multiple_columns",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_two_nested_queries",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_assert_no_semi_colon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_quoted_from",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_clause_boolean_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_clause_boolean_equal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_clause_boolean_is",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_clause_str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_clause_columns",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_clause_parenthesis_expression",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_clause_boolean",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_clause_parenthesis_boolean",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_clause_multiple_parenthesis_booleans",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_clause_multiple_booleans",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_boolean_conditions_select_where",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_parenthesis_boolean_conditions_select_where",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_distinct_on_one_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_distinct_on_multiple_fields",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_empty_group_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_group_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_group_by_parenthesis",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_group_by_multiple_elements",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_group_by_multiple_elements_parenthesis",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_and_group_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_group_by_parenthesis_rollup",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_group_by_multiple_elements_parenthesis_rollup",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_and_having",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_order_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_order_by_mutliple_fields",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_order_by_mutliple_fields_order",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_limit",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_limit_all",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_offset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_subquery_where",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_aliased_subquery",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_aliased_as_subquery",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_is_not_null_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_filter_not_predicate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_boolean_filter_not_predicate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_boolean_filter_first_not_predicate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_basic_join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_parenthesis_join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_join_on_clause",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_join_long_on_clause",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_join_long_on_clause_with_parenthesis",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_join_on_clause_boolean",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_two_parenthesis_joins_with_group_by",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_nested_joins",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_parenthesis_join_subquery",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_partitioning_function",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_partitioning_function_multiple_params",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_partitioning_function_multiple_params_with_frame",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_partitioning_function_order_by",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_partitioning_function_order_by_frame",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_partitioning_function_order_by_multiple",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_partitioning_function_order_by_no_partition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_partitioning_function_order_by_no_partition_with_frame",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_partitioning_function_no_order_with_frame",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_partitioning_function_equals_with_alias",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_partitioning_function_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_long_function",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_date_functions_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_case_expr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_case_expr_multiple_fields",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_case",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_case_multiple_fields",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_case_no_else",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_index_access",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_array_with_subquery",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_array_with_subquery_multiple_args",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_unnest_with_offset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_unnest_with_offset_alias",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_unnest_with_offset_both_aliased",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_function_calls",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_regex",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_multiple_regexes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_parentheses_nested_select",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_union",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_intersect",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_except",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_query_combinations",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_long_function_calls",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_long_function_calls_multiple_fields",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_capitalized_column_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_capitalized_alias",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_break_long_where",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_break_long_where_nested_operations",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_break_long_parenthesis_where_nested_operations",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_cast_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_cast_in_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_date_function",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_select_boolean_condition_expression",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_bitwise_operation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_cross_join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_implicit_cross_join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_implicit_cross_join_unnest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_multiple_joins_unnest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_nested_multiple_joins_unnest",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_having_boolean_clause",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_if_with_date_column_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_long_nested_where",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_long_case_when_conditions_line_breaks",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_long_case_when_conditions_line_breaks_multi_column",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_in_subquery",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_table_in_square_brackets",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_union_all_nested_query",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_array",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_chained_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_multiple_table_name_with_cross_join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_multiple_table_name_with_multiple_joins",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_with_offset_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_struct",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_array_agg",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_array_agg_order_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_distinct_array_agg_order_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_boolean_followed_by_group",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_date_column_in_function_call",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_floating_point_number",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_negative_floating_point_number",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_where_not_in_subquery",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_contains_predicate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_bitwise_shifting",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_quoted_table_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_long_quoted_table_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_extract_date",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_count_distinct",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_count_distinct_with_function",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_count_equal_countif",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_invalid_join_missing_using_or_on",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_string_alias",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_index_chained_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_group_each_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_plain_join_each",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_escaped_char",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_filter_where",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_filter_where_alias",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_filter_where_alias_as",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_with_statement",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_multiple_with_statements",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_nested_with_statement",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_function_with_index_access",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_multiple_index_accesses",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_string_containing_quote",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_select_star_replace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_select_star_multiple_replace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_select_star_replace_nospace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_formatting",
                "name": "test_nesting_case_expr",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_select_star_from",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_select_field_from",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_nested_select",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_no_from",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_nested_select_without_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_nested_select_with_star",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_no_from_with_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_where_without_from",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_where_parenthesis_without_from",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_where_boolean_condition",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_where_constant_columns",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_nested_select_without_where_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_where_clause_returns_boolean",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_where_clause_not_boolean_but_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_where_clause_not_boolean_but_integer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_group_without_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_group_by_existing_position",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_group_by_unknown_position",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_group_by_unknown_position_parenthesis",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_group_by_negative_position",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_group_by_unknown_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_group_by_implicit_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_group_by_known_column_star",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_group_by_known_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_group_by_unknown_column_with_from",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_having_non_boolean_constant",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_having_condition_constants",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_having_unknown_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_having_unknown_column_parenthesis",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_having_multiple_unknown_column_parenthesis",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_order_without_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_order_by_known_position",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_order_by_unknown_position",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_order_by_unknown_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_order_by_unknown_column_parenthesis",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_order_by_known_column",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_order_by_unknown_column_with_from",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_limit_integer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_limit_zero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_limit_negative_integer",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_limit_integer_parenthesis",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_limit_column",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_limit_column_with_from",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_limit_multiple_integers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_offset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_offset_parenthesis",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_offset_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_offset_variable",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_group_by_alias",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_invalid_join_missing_using_or_on",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_functioncall_expressions_missing_from_subquery",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_functioncall_expressions_in_subquery",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_functioncall_expressions_in_subquery_star",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_missing_nested_subquery_columns",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_nested_subquery_columns",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_nested_subquery_columns_star",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_missing_nested_subquery_columns_star",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_missing_chained_columns",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_missing_table_alias_chained_columns",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_chained_columns_from_join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_partition_by_with_order_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_chained_column_is_nested_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_chained_column_is_table_alias",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_chained_column_is_not_table_alias",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_know_fields_from_alias",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_specified_field_from_alias_subquery",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_subquery_field_is_boolean_and_can_where",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_subquery_field_is_not_boolean_and_cannot_where",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_unknown_type_subquery_field_and_allow_where",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_outer_query_uses_field_without_alias",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_outer_query_uses_field_without_alias_exists_once",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_ambiguous_not_aliased_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_between_condition_is_valid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_select_star_replace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_select_star_unknown_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.integration.test_validation",
                "name": "test_tab_as_token_separator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_simple_function_parsing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_simple_function_parsing_no_args",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_simple_function_multiple_params",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_nested_functions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_nested_date_functions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_string_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_string_value_double_quotes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_string_value_back_quotes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_aliased_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_aliased_string_without_as",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_integer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_negative_integer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_addition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_chained_addition",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_conditional_expression",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_parenthesis",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_multiple_parentheses",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_parenthesis_conditional",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_parenthesis_multiple_elements",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_from_subquery",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_where_clause",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_boolean_where_clause",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_between_where_clause",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_where_different_predicate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_parenthesis_boolean_where_clause",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_parenthesis_expression_where_clause",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_multiple_args_boolean_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_nested_parenthesis_boolean",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_where_clause_keeps_generator_intact",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_where_clause_keeps_generator_intact_is_null_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_consecutive_parenthesis",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_select_all",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_select_distinct",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_select_distinct_on",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_group_by_without_from",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_order_by_clause",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_limit_parentheses",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_subquery",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_parse_date_function",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_parse_date_function_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_index_access",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_index_access_alias",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_index_function_access",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_multiple_indices_access",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_index_access_right_hand",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_nested_joins",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_boolean_condition_as_expression",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_select_boolean_condition_expression",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_unnest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_unnest_with_alias",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_unnest_with_as_alias",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_unnest_with_offset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_unnest_with_offset_alias",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_unnest_with_offset_as_alias",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_unnest_alias_with_offset_as_alias",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_simple_chained_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_chained_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_aliased_table",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_empty_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_empty_list_with_alias",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_boolean_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_chained_columns_with_arithmetic_operator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_lexer",
                "name": "test_function_with_single_comma_string_param",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_sql",
                "name": "test_boolean_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_sql",
                "name": "test_cast_function_call",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_split_with_sep_one_element",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_split_with_sep_one_sep",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_split_with_sep",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_split_with_escaped_sep",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_function_tokenizer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_semi_colon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_arithmetic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_floating_point_numbers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_floating_point_numbers_with_column",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_parenthesis_arithmetic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_newlines_and_spaces",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_equal_predicate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_keep_predicates",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_keep_predicates_no_ending",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_keep_different_predicate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_lt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_index",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_chained_columns",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_escaped_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_escaped_string_with_keyword",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_some_string_containing_quote",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_another_string_containing_quote",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_string_containing_many_quotes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_string_containing_many_quotes_and_space",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_keep_tokens_in",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_keep_tokens_in_parenthesis",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_get_tokens_until",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_get_tokens_until_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_get_tokens_until_with_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_get_tokens_until_with_keep",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_get_tokens_until_with_keep_capitalised",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_tokeniser",
                "name": "test_empty_list_get_tokens_until",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting] \ud83d\ude80  Start image=crawlergpt:latest\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ] \ud83d\ude80  Start image=crawlergpt:latest\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ] \ud83d\ude80  Start image=crawlergpt:latest\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/David-Wobrock-sqlvalidator] user=0 workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/David-Wobrock-sqlvalidator] user=0 workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/David-Wobrock-sqlvalidator] user=0 workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting] \u2b50 Run Main Checkout code\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2705  Success - Main Checkout code\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting] \u2b50 Run Main Set up Python 3.9\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udc33  docker cp src=/tmp/act-cache/fa232dcd-b25c-4639-a7ac-44f82bf8ffc5/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ] \ud83e\uddea  Matrix: map[python-version:3.7]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ] \u2b50 Run Main Checkout code\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \u2705  Success - Main Checkout code\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ] \u2b50 Run Main Set up Python 3.7\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udc33  docker cp src=/tmp/act-cache/fa232dcd-b25c-4639-a7ac-44f82bf8ffc5/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::isExplicit: \n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::explicit? false\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::isExplicit: \n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Successfully setup CPython (3.7.11)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::explicit? false\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::evaluating 6 versions\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::matched: 3.9.6\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Successfully setup CPython (3.9.6)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \u2705  Success - Main Set up Python 3.7\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2705  Success - Main Set up Python 3.9\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \u2699  ::set-output:: python-version=3.7.11\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2699  ::set-output:: python-version=3.9.6\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ] \u2b50 Run Main Install dependencies\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting] \u2b50 Run Main Installing dependencies\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Obtaining file:///tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/David-Wobrock-sqlvalidator\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Collecting black==22.12.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   |   Downloading black-22.12.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.6 MB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Collecting pytest==7.2.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   |   Downloading pytest-7.2.0-py3-none-any.whl (316 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Collecting mypy==0.991\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   |   Downloading mypy-0.991-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (18.2 MB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Collecting importlib-metadata>=0.12\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Collecting packaging\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Collecting attrs>=19.2.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Collecting exceptiongroup>=1.0.0rc8\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Collecting pluggy<2.0,>=0.12\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Collecting iniconfig\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Collecting flake8==6.0.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   |   Downloading flake8-6.0.0-py2.py3-none-any.whl (57 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Collecting tomli>=1.0.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Collecting isort==5.11.4\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   |   Downloading isort-5.11.4-py3-none-any.whl (104 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Collecting zipp>=0.5\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Collecting mypy-extensions>=0.4.3\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Collecting typing-extensions>=3.6.4\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Collecting typing-extensions>=3.10.0.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Collecting pathspec>=0.9.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Collecting platformdirs>=2\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Installing collected packages: zipp, typing-extensions, importlib-metadata, tomli, pluggy, packaging, iniconfig, exceptiongroup, attrs, sqlvalidator, pytest\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Collecting click>=8.0.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Collecting tomli>=1.1.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Collecting pycodestyle<2.11.0,>=2.10.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   |   Downloading pycodestyle-2.10.0-py2.py3-none-any.whl (41 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Collecting pyflakes<3.1.0,>=3.0.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   |   Downloading pyflakes-3.0.1-py2.py3-none-any.whl (62 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Collecting mccabe<0.8.0,>=0.7.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   |   Running setup.py develop for sqlvalidator\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Installing collected packages: typing-extensions, tomli, pyflakes, pycodestyle, platformdirs, pathspec, mypy-extensions, mccabe, click, mypy, isort, flake8, black\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | Successfully installed attrs-23.1.0 exceptiongroup-1.1.1 importlib-metadata-6.7.0 iniconfig-2.0.0 packaging-23.1 pluggy-1.2.0 pytest-7.2.0 sqlvalidator-0.0.20 tomli-2.0.1 typing-extensions-4.6.3 zipp-3.15.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \u2705  Success - Main Install dependencies\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ] \u2b50 Run Main Run tests for Python 3.7 using pytest\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Successfully installed black-22.12.0 click-8.1.3 flake8-6.0.0 isort-5.11.4 mccabe-0.7.0 mypy-0.991 mypy-extensions-1.0.0 pathspec-0.11.1 platformdirs-3.8.0 pycodestyle-2.10.0 pyflakes-3.0.1 tomli-2.0.1 typing-extensions-4.6.3\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.9.6/x64/bin/python3.9 -m pip install --upgrade pip' command.\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2705  Success - Main Installing dependencies\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting] \u2b50 Run Main Lint using flake8\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ] \u2b50 Run Main Checkout code\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \u2705  Success - Main Checkout code\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ] \u2b50 Run Main Set up Python 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/fa232dcd-b25c-4639-a7ac-44f82bf8ffc5/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2705  Success - Main Lint using flake8\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | ============================= test session starts ==============================\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | platform linux -- Python 3.7.11, pytest-7.2.0, pluggy-1.2.0\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/David-Wobrock-sqlvalidator\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | collected 349 items\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | \n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | tests/integration/test_file_handler.py ............                      [  3%]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | tests/integration/test_formatting.py ................................... [ 13%]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting] \u2b50 Run Main Check formatting using black\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | ........................................................................ [ 34%]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | .........................................................                [ 50%]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | tests/integration/test_validation.py ................................... [ 60%]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | .........................................                                [ 72%]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | tests/unit/test_lexer.py ............................................... [ 85%]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | ................                                                         [ 90%]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | tests/unit/test_sql.py ..                                                [ 90%]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | tests/unit/test_tokeniser.py ................................            [100%]\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | \n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/David-Wobrock-sqlvalidator/report.xml -\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   | ============================= 349 passed in 1.84s ==============================\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \u2705  Success - Main Run tests for Python 3.7 using pytest\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ] \u2b50 Run Post Set up Python 3.7\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: \n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? false\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::match not found\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Version 3.10 was not found in the local cache\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::set auth\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ]   \u2705  Success - Post Set up Python 3.7\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | All done! \u2728 \ud83c\udf70 \u2728\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | 16 files would be left unchanged.\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2705  Success - Main Check formatting using black\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.3 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.2 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.1 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-rc.2 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-rc.1 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-beta.5 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-beta.4 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-beta.3 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-beta.2 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-beta.1 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.7 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.6 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.5 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.4 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.3 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.2 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.11.0-alpha.1 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::check 3.10.12 satisfies 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::matched 3.10.12\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Version 3.10 is available for downloading\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Download from \"https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\"\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.10.12-5200619051/python-3.10.12-linux-20.04-x64.tar.gz\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::Destination /tmp/af56be91-1e43-4d59-a9e1-87c1a21036f9\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::set auth\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting] \u2b50 Run Main Check type hinting using mypy\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Run test suite     ] \ud83c\udfc1  Job succeeded\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Success: no issues found in 16 source files\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2705  Success - Main Check type hinting using mypy\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting] \u2b50 Run Main Check import order using isort\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::download complete\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Extract downloaded archive\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::Checking tar --version\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/472adad5-4ca3-4948-884c-b700795216f0 -f /tmp/af56be91-1e43-4d59-a9e1-87c1a21036f9\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   | Skipped 2 files\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2705  Success - Main Check import order using isort\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting] \u2b50 Run Post Set up Python 3.9\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Execute installation script\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Check if Python hostedtoolcache folder exist...\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Create Python 3.10.12 folder\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Copy Python binaries to hostedtoolcache folder\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Upgrading pip...\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Looking in links: /tmp/tmpiuue7rj5\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (65.5.0)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages (23.0.1)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting]   \u2705  Success - Post Set up Python 3.9\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Lint and formatting] \ud83c\udfc1  Job succeeded\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Collecting pip\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 19.6 MB/s eta 0:00:00\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | \n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Installing collected packages: pip\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Successfully installed pip-23.1.2\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Create complete file\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: \n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? false\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: 3.10.12\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::explicit? true\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::evaluating 7 versions\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::matched: 3.10.12\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.10.12/x64\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.10.12 x64\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Successfully setup CPython (3.10.12)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \u2705  Success - Main Set up Python 3.10\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.10.12/x64\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.10.12/x64/lib\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \u2699  ::set-output:: python-version=3.10.12\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.10.12/x64/bin\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ] \u2b50 Run Main Install dependencies and pytest-cov\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Obtaining file:///tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/David-Wobrock-sqlvalidator\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Installing build dependencies: started\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Installing build dependencies: finished with status 'done'\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Checking if build backend supports build_editable: started\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Checking if build backend supports build_editable: finished with status 'done'\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Getting requirements to build editable: started\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Getting requirements to build editable: finished with status 'done'\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Preparing editable metadata (pyproject.toml): started\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Collecting pytest==7.2.0 (from sqlvalidator==0.0.20)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Downloading pytest-7.2.0-py3-none-any.whl (316 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 316.8/316.8 kB 5.5 MB/s eta 0:00:00\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Collecting attrs>=19.2.0 (from pytest==7.2.0->sqlvalidator==0.0.20)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 2.3 MB/s eta 0:00:00\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Collecting iniconfig (from pytest==7.2.0->sqlvalidator==0.0.20)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Collecting packaging (from pytest==7.2.0->sqlvalidator==0.0.20)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 1.0 MB/s eta 0:00:00\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Collecting pluggy<2.0,>=0.12 (from pytest==7.2.0->sqlvalidator==0.0.20)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest==7.2.0->sqlvalidator==0.0.20)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Collecting tomli>=1.0.0 (from pytest==7.2.0->sqlvalidator==0.0.20)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Building wheels for collected packages: sqlvalidator\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Building editable for sqlvalidator (pyproject.toml): started\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Building editable for sqlvalidator (pyproject.toml): finished with status 'done'\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Created wheel for sqlvalidator: filename=sqlvalidator-0.0.20-0.editable-py3-none-any.whl size=5376 sha256=3bc3f8162f3d780147a33717bb91dc5c5b9cf60609c7e4e0a4509d6fb7cc0874\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-qsru4kif/wheels/ca/85/c6/acfd3c0421a9450af62a1f09423fa40fbdbb75be0690a16ab5\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Successfully built sqlvalidator\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Installing collected packages: sqlvalidator, tomli, pluggy, packaging, iniconfig, exceptiongroup, attrs, pytest\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Successfully installed attrs-23.1.0 exceptiongroup-1.1.1 iniconfig-2.0.0 packaging-23.1 pluggy-1.2.0 pytest-7.2.0 sqlvalidator-0.0.20 tomli-2.0.1\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | \n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | [notice] A new release of pip is available: 23.0.1 -> 23.1.2\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | [notice] To update, run: pip install --upgrade pip\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | \n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | Usage:   \n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   /opt/hostedtoolcache/Python/3.10.12/x64/bin/python -m pip install [options] <requirement specifier> [package-index-options] ...\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   /opt/hostedtoolcache/Python/3.10.12/x64/bin/python -m pip install [options] -r <requirements file> [package-index-options] ...\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   /opt/hostedtoolcache/Python/3.10.12/x64/bin/python -m pip install [options] [-e] <vcs project url> ...\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   /opt/hostedtoolcache/Python/3.10.12/x64/bin/python -m pip install [options] [-e] <local project path> ...\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   |   /opt/hostedtoolcache/Python/3.10.12/x64/bin/python -m pip install [options] <archive url/path> ...\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | \n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   | no such option: --junitxml\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ]   \u274c  Failure - Main Install dependencies and pytest-cov\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ] exitcode '2': failure\n[ff480cf9-4e93-462e-9457-0d82ff2736a3/Generate coverage  ] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Generate coverage' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/David-Wobrock-sqlvalidator/.github/workflows/ci-build-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 144.65755438804626
    }
}