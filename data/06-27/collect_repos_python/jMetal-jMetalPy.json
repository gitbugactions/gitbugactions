{
    "repository": "jMetal/jMetalPy",
    "stars": 409,
    "language": "python",
    "size": 17717,
    "clone_url": "https://github.com/jMetal/jMetalPy.git",
    "timestamp": "2023-07-01T11:19:50.440352Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "unittest"
    ],
    "actions_test_build_tools": [
        "unittest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "jmetal.operator.test.test_crossover.SinglePointTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SinglePointTestCases",
                "name": "test_should_constructor_create_a_valid_operator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SinglePointTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_greater_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SinglePointTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_lower_than_zero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SinglePointTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_higher_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SinglePointTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SinglePointTestCases",
                "name": "test_should_the_operator_work_if_the_first_bit_is_selected",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SinglePointTestCases",
                "name": "test_should_the_operator_work_if_the_last_bit_is_selected",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SinglePointTestCases",
                "name": "test_should_the_operator_work_if_the_third_bit_is_selected",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SinglePointTestCases",
                "name": "test_should_the_operator_work_with_a_solution_with_three_binary_variables",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SinglePointTestCases",
                "name": "test_should_the_solution_remain_unchanged_if_the_probability_is_zero",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.DominanceRankingTestCases",
                "name": "test_should_len_of_nsgaii_execute_be_5",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F4TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F4TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_50_variables",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F4TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F4TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F4TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F7TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F7TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_50_variables",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F7TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F7TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F7TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.TwoDimensionalMeshTestCases",
                "name": "test_should_get_neighbors_return_four_neighbors_case1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.TwoDimensionalMeshTestCases",
                "name": "test_should_get_neighbors_return_four_neighbors_case2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.TwoDimensionalMeshTestCases",
                "name": "test_should_get_neighbors_return_four_neighbors_case3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.TwoDimensionalMeshTestCases",
                "name": "test_should_get_neighbors_return_four_neighbors_case4",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.TwoDimensionalMeshTestCases",
                "name": "test_should_get_neighbors_return_four_neighbors_case5",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.TwoDimensionalMeshTestCases",
                "name": "test_should_get_neighbors_return_four_neighbors_case6",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.TwoDimensionalMeshTestCases",
                "name": "test_should_get_neighbors_throw_an_exception_if_the_solution_list_is_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.TwoDimensionalMeshTestCases",
                "name": "test_should_get_neighbors_throw_an_exception_if_the_solution_list_is_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_problem.IntegerProblemTestCases",
                "name": "test_should_create_solution_create_a_valid_solution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": "2\n",
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_problem.IntegerProblemTestCases",
                "name": "test_should_default_constructor_create_a_valid_problem",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_add_a_solution_when_the_archive_is_empty_work_properly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_add_work_properly_case1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_add_work_properly_case2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_add_work_properly_case3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_add_work_properly_case4",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_add_work_properly_case5",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_add_work_properly_case6",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_add_work_properly_case7",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_compute_density_estimator_work_properly_case1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_compute_density_estimator_work_properly_case2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_compute_density_estimator_work_properly_case3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_constructor_create_an_empty_archive",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.CrowdingDistanceArchiveTestCases",
                "name": "test_should_constructor_set_the_max_size",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_replacement.RankingAndDensityEstimatorReplacementTestCases",
                "name": "test_should_replacement_return_the_list_if_the_offspring_list_is_empty",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_replacement.RankingAndDensityEstimatorReplacementTestCases",
                "name": "test_should_replacement_return_the_right_value_case1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_replacement.RankingAndDensityEstimatorReplacementTestCases",
                "name": "test_should_replacement_return_the_right_value_case2",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_replacement.RankingAndDensityEstimatorReplacementTestCases",
                "name": "test_should_replacement_return_the_right_value_case3",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.InvertedGenerationalDistanceTestCases",
                "name": "test_case1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.InvertedGenerationalDistanceTestCases",
                "name": "test_case2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.InvertedGenerationalDistanceTestCases",
                "name": "test_case3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.InvertedGenerationalDistanceTestCases",
                "name": "test_case4",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.InvertedGenerationalDistanceTestCases",
                "name": "test_case5",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.InvertedGenerationalDistanceTestCases",
                "name": "test_get_name_return_the_right_value",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.InvertedGenerationalDistanceTestCases",
                "name": "test_get_short_name_return_the_right_value",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.InvertedGenerationalDistanceTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.SchafferTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.SchafferTestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.SchafferTestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.SchafferTestCases",
                "name": "test_should_create_solution_return_right_evaluation_values",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.SchafferTestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT1TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT1TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_5_variables",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT1TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT1TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT1TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.RandomMutationTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.RandomMutationTestCases",
                "name": "test_should_constructor_create_a_valid_operator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.RandomMutationTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_greater_than_one",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.RandomMutationTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_lower_than_zero",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.RandomMutationTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_higher_than_one",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.RandomMutationTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_negative",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.RandomMutationTestCases",
                "name": "test_should_the_solution_change_between_max_and_min_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.RandomMutationTestCases",
                "name": "test_should_the_solution_change_if_the_probability_is_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.RandomMutationTestCases",
                "name": "test_should_the_solution_remain_unchanged_if_the_probability_is_zero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.PolynomialMutationTestMethods",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.PolynomialMutationTestMethods",
                "name": "test_should_constructor_create_a_valid_operator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.PolynomialMutationTestMethods",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_greater_than_one",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.PolynomialMutationTestMethods",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_lower_than_zero",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.PolynomialMutationTestMethods",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_higher_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.PolynomialMutationTestMethods",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_negative",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.PolynomialMutationTestMethods",
                "name": "test_should_execute_work_with_a_solution_subclass_of_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.PolynomialMutationTestMethods",
                "name": "test_should_the_solution_change__if_the_probability_is_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.PolynomialMutationTestMethods",
                "name": "test_should_the_solution_remain_unchanged_if_the_probability_is_zero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_aggregativefunction.WeightedSumTestCases",
                "name": "test_should_aggregative_sum_work_properly_with_2D_vectors",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_unconstrained.SphereTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_unconstrained.SphereTestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_5_variables",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_unconstrained.SphereTestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_unconstrained.SphereTestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_unconstrained.SphereTestCases",
                "name": "test_should_evaluate_work_properly",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_unconstrained.SphereTestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.OverallConstraintViolationComparatorTestCases",
                "name": "test_should_comparator_return_0_if_the_solutions_have_no_constraints",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.OverallConstraintViolationComparatorTestCases",
                "name": "test_should_comparator_return_0_if_the_solutions_have_the_same_constraint_violation_degree",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.OverallConstraintViolationComparatorTestCases",
                "name": "test_should_comparator_return_1_if_solution_2_has_higher_constraint_violation_degree",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.OverallConstraintViolationComparatorTestCases",
                "name": "test_should_comparator_return_minus_1_if_solution_2_has_lower_constraint_violation_degree",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.CompositeMutationTestCases",
                "name": "test_should_constructor_create_a_valid_operator_when_adding_a_single_mutation_operator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.CompositeMutationTestCases",
                "name": "test_should_constructor_create_a_valid_operator_when_adding_two_mutation_operators",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.CompositeMutationTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_parameter_list_is_Empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.CompositeMutationTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_parameter_list_is_None",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.CompositeMutationTestCases",
                "name": "test_should_execute_raise_and_exception_if_the_types_of_the_solutions_do_not_match_the_operators",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.PMXTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.PMXTestCases",
                "name": "test_should_constructor_create_a_valid_operator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.PMXTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_higher_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.PMXTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.PMXTestCases",
                "name": "test_should_the_operator_work_with_permutation_at_the_beginning",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.PMXTestCases",
                "name": "test_should_the_operator_work_with_permutation_at_the_middle",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.PMXTestCases",
                "name": "test_should_the_solution_remain_unchanged_if_the_probability_is_zero",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_checking.CheckingTestCases",
                "name": "test_should_is_not_null_raise_an_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_checking.CheckingTestCases",
                "name": "test_should_is_valid_probability_raise_an_exception_if_the_value_is_higher_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_checking.CheckingTestCases",
                "name": "test_should_is_valid_probability_raise_an_exception_if_the_value_is_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_checking.CheckingTestCases",
                "name": "test_should_is_value_in_range_raise_an_exception_if_the_value_is_higher_than_the_upper_bound",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_checking.CheckingTestCases",
                "name": "test_should_is_value_in_range_raise_an_exception_if_the_value_is_lower_than_the_lower_bound",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_checking.CheckingTestCases",
                "name": "test_should_that_raise_an_exception_if_the_expression_is_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ5TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ5TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_10_variables_and_4_objectives",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ5TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ5TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ5TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_point.IdealPointTestCases",
                "name": "test_should_constructor_create_a_correctly_initialized_point",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_point.IdealPointTestCases",
                "name": "test_should_update_with_one_point_work_properly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_point.IdealPointTestCases",
                "name": "test_should_update_with_three_solutions_work_properly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_point.IdealPointTestCases",
                "name": "test_should_update_with_two_solutions_work_properly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_distance.EuclideanDistanceTestCases",
                "name": "test_should_get_distance_work_properly_case_1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_distance.EuclideanDistanceTestCases",
                "name": "test_should_get_distance_work_properly_case_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_distance.EuclideanDistanceTestCases",
                "name": "test_should_get_distance_work_properly_case_3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.RankingAndCrowdingComparatorTestCases",
                "name": "test_should_compare_work_properly_case_1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.RankingAndCrowdingComparatorTestCases",
                "name": "test_should_compare_work_properly_case_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.RankingAndCrowdingComparatorTestCases",
                "name": "test_should_compare_work_properly_case_3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.RankingAndCrowdingComparatorTestCases",
                "name": "test_should_compare_work_properly_case_4",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.RankingAndCrowdingComparatorTestCases",
                "name": "test_should_compare_work_properly_case_5",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.HyperVolumeTestCases",
                "name": "test_should_hypervolume_return_5_0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.HyperVolumeTestCases",
                "name": "test_should_hypervolume_return_the_correct_value_when_applied_to_the_ZDT1_reference_front",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F3TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F3TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_50_variables",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F3TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F3TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F3TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.NullCrossoverTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.NullCrossoverTestCases",
                "name": "test_should_constructor_create_a_valid_operator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.NullCrossoverTestCases",
                "name": "test_should_the_solution_remain_unchanged",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ4TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ4TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_10_variables_and_4_objectives",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ4TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ4TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ4TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F5TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F5TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_50_variables",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F5TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F5TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F5TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.SolutionAttributeComparatorTestCases",
                "name": "test_should_compare_return_zero_if_both_solutions_have_the_same_attribute_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.SolutionAttributeComparatorTestCases",
                "name": "test_should_compare_return_zero_if_none_of_the_solutions_have_the_attribute",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.SolutionAttributeComparatorTestCases",
                "name": "test_should_compare_return_zero_if_the_first_solution_has_no_the_attribute",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.SolutionAttributeComparatorTestCases",
                "name": "test_should_compare_return_zero_if_the_second_solution_has_no_the_attribute",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.SolutionAttributeComparatorTestCases",
                "name": "test_should_compare_works_properly_case1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.SolutionAttributeComparatorTestCases",
                "name": "test_should_compare_works_properly_case2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.SolutionAttributeComparatorTestCases",
                "name": "test_should_compare_works_properly_case3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.SolutionAttributeComparatorTestCases",
                "name": "test_should_compare_works_properly_case4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_density_estimator.KNearestNeighborDensityEstimatorTest",
                "name": "test_should_the_density_estimator_compute_the_right_distances_case1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_density_estimator.KNearestNeighborDensityEstimatorTest",
                "name": "test_should_the_density_estimator_sort_the_solution_list",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_density_estimator.KNearestNeighborDensityEstimatorTest",
                "name": "test_should_the_density_estimator_sort_the_solution_list_considering_the_draws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_density_estimator.KNearestNeighborDensityEstimatorTest",
                "name": "test_should_the_density_estimator_sort_the_solution_list_considering_the_draws_case2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT4TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT4TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_7_variables",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT4TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT4TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT4TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F8TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F8TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_50_variables",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F8TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F8TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F8TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.L5TestCases",
                "name": "test_should_get_neighbors_return_four_neighbors_case1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.L5TestCases",
                "name": "test_should_get_neighbors_return_four_neighbors_case2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.L5TestCases",
                "name": "test_should_get_neighbors_return_four_neighbors_case3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.L5TestCases",
                "name": "test_should_get_neighbors_return_four_neighbors_case4",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.SolutionTestCase",
                "name": "test_should_default_constructor_create_a_valid_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.GenerationalDistanceTestCases",
                "name": "test_case1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.GenerationalDistanceTestCases",
                "name": "test_case2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.GenerationalDistanceTestCases",
                "name": "test_case3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.GenerationalDistanceTestCases",
                "name": "test_case4",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.GenerationalDistanceTestCases",
                "name": "test_case5",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.GenerationalDistanceTestCases",
                "name": "test_case6",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.GenerationalDistanceTestCases",
                "name": "test_case7",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.GenerationalDistanceTestCases",
                "name": "test_get_name_return_the_right_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.GenerationalDistanceTestCases",
                "name": "test_get_short_name_return_the_right_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.GenerationalDistanceTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_constrained.TanakaTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_constrained.TanakaTestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_constrained.TanakaTestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_constrained.TanakaTestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_operator.OperatorTestCase",
                "name": "test_should_crossover_constructor_raises_an_exception_is_probability_is_higher_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_operator.OperatorTestCase",
                "name": "test_should_crossover_constructor_raises_an_exception_is_probability_is_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_operator.OperatorTestCase",
                "name": "test_should_mutation_constructor_raises_an_exception_is_probability_is_higher_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_operator.OperatorTestCase",
                "name": "test_should_mutation_constructor_raises_an_exception_is_probability_is_negative",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.ArchiveTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.ArchiveTestCases",
                "name": "test_should_constructor_create_an_empty_list",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F6TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F6TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_50_variables",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F6TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F6TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F6TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.BoundedArchiveTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.BoundedArchiveTestCases",
                "name": "test_should_constructor_set_the_max_size",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.RandomSolutionSelectionTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.RandomSolutionSelectionTestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.RandomSolutionSelectionTestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.RandomSolutionSelectionTestCases",
                "name": "test_should_execute_return_the_solution_in_a_list_with_one_solution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.RandomSolutionSelectionTestCases",
                "name": "test_should_execute_work_if_the_solution_list_contains_five_solutions_and_one_them_is_dominated",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.RandomSolutionSelectionTestCases",
                "name": "test_should_execute_work_if_the_solution_list_contains_two_non_dominated_solutions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.RandomSolutionSelectionTestCases",
                "name": "test_should_execute_work_if_the_solution_list_contains_two_solutions_and_one_them_is_dominated",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.BitFlipTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.BitFlipTestCases",
                "name": "test_should_constructor_create_a_valid_operator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.BitFlipTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_greater_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.BitFlipTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_lower_than_zero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.BitFlipTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_higher_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.BitFlipTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.BitFlipTestCases",
                "name": "test_should_the_solution_change_all_the_bits_if_the_probability_is_one",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.BitFlipTestCases",
                "name": "test_should_the_solution_remain_unchanged_if_the_probability_is_zero",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT2TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT2TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_7_variables",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT2TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT2TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT2TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.BinarySolutionTestCase",
                "name": "test_should_constructor_create_a_valid_solution",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.BinarySolutionTestCase",
                "name": "test_should_default_constructor_create_a_valid_solution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.BinarySolutionTestCase",
                "name": "test_should_get_total_number_of_bits_return_the_right_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.BinarySolutionTestCase",
                "name": "test_should_get_total_number_of_bits_return_zero_if_the_object_variables_are_not_initialized",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.CompositeSolutionTestCase",
                "name": "test_should_constructor_create_a_valid_not_none_composite_solution_composed_of_a_double_solution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.CompositeSolutionTestCase",
                "name": "test_should_constructor_create_a_valid_soltion_composed_of_a_float_and_an_integer_solutions",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.CompositeSolutionTestCase",
                "name": "test_should_constructor_raise_an_exception_if_the_number_of_objectives_is_not_coherent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.CompositeSolutionTestCase",
                "name": "test_should_copy_work_properly",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_knapsack.KnapsackTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_knapsack.KnapsackTestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_500_bits",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_knapsack.KnapsackTestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_knapsack.KnapsackTestCases",
                "name": "test_should_create_solution_a_valid_binary_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_knapsack.KnapsackTestCases",
                "name": "test_should_create_solution_from_file",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_knapsack.KnapsackTestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_unconstrained.OneMaxTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_unconstrained.OneMaxTestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_512_bits",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_unconstrained.OneMaxTestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_unconstrained.OneMaxTestCases",
                "name": "test_should_create_solution_a_valid_binary_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_unconstrained.OneMaxTestCases",
                "name": "test_should_evaluate_work_properly_if_the_bitset_only_contains_zeroes",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.singleobjective.test.test_unconstrained.OneMaxTestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CXTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CXTestCases",
                "name": "test_should_constructor_create_a_valid_operator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CXTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_greater_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CXTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_lower_than_zero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CXTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_higher_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CXTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CXTestCases",
                "name": "test_should_the_operator_work_with_two_solutions_with_same_number_of_variables",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.FloatSolutionTestCase",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.FloatSolutionTestCase",
                "name": "test_should_copy_work_properly",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.FloatSolutionTestCase",
                "name": "test_should_default_constructor_create_a_valid_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.NonDominatedSolutionListArchiveTestCases",
                "name": "test_should_adding_four_solutions_work_properly_if_one_dominates_the_others",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.NonDominatedSolutionListArchiveTestCases",
                "name": "test_should_adding_one_solution_work_properly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.NonDominatedSolutionListArchiveTestCases",
                "name": "test_should_adding_three_solutions_work_properly_if_two_of_them_are_equal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.NonDominatedSolutionListArchiveTestCases",
                "name": "test_should_adding_two_solutions_work_properly_if_both_are_non_dominated",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.NonDominatedSolutionListArchiveTestCases",
                "name": "test_should_adding_two_solutions_work_properly_if_one_is_dominated",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_archive.NonDominatedSolutionListArchiveTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ7TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ7TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_10_variables_and_4_objectives",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ7TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ7TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ7TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ2TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ2TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_10_variables_and_4_objectives",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ2TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ2TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ2TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.DominanceComparatorTestCases",
                "name": "test_should_dominance_comparator_raise_an_exception_if_the_first_solution_is_null",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.DominanceComparatorTestCases",
                "name": "test_should_dominance_comparator_raise_an_exception_if_the_second_solution_is_null",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.DominanceComparatorTestCases",
                "name": "test_should_dominance_comparator_return_minus_one_if_the_two_solutions_have_one_objective_and_the_first_one_is_lower",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.DominanceComparatorTestCases",
                "name": "test_should_dominance_comparator_return_one_if_the_two_solutions_have_one_objective_and_the_second_one_is_lower",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.DominanceComparatorTestCases",
                "name": "test_should_dominance_comparator_return_zero_if_the_two_solutions_have_one_objective_with_the_same_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.DominanceComparatorTestCases",
                "name": "test_should_dominance_comparator_work_properly_case_3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.DominanceComparatorTestCases",
                "name": "test_should_dominance_comparator_work_properly_case_a",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.DominanceComparatorTestCases",
                "name": "test_should_dominance_comparator_work_properly_case_b",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.DominanceComparatorTestCases",
                "name": "test_should_dominance_comparator_work_properly_case_c",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.DominanceComparatorTestCases",
                "name": "test_should_dominance_comparator_work_properly_case_d",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_observable.ObservableTestCases",
                "name": "test_should_deregister_all_remove_all_the_observers",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_observable.ObservableTestCases",
                "name": "test_should_deregister_not_remove_the_observer_if_it_is_not_registered",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_observable.ObservableTestCases",
                "name": "test_should_deregister_remove_the_observer_if_it_is_registered",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_observable.ObservableTestCases",
                "name": "test_should_register_add_one_observer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_observable.ObservableTestCases",
                "name": "test_should_register_add_two_observers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_ranking.StrengthRankingTestCases",
                "name": "test_should_ranking_assing_zero_to_all_the_solutions_if_they_are_nondominated",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_ranking.StrengthRankingTestCases",
                "name": "test_should_ranking_work_properly",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_constrained.SrinivasTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_constrained.SrinivasTestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_constrained.SrinivasTestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_constrained.SrinivasTestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.MultiComparatorTestCases",
                "name": "test_should_compare_return_zero_if_the_comparator_list_is_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.MultiComparatorTestCases",
                "name": "test_should_compare_work_properly_case_1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.MultiComparatorTestCases",
                "name": "test_should_compare_work_properly_case_2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.MultiComparatorTestCases",
                "name": "test_should_compare_work_properly_case_3",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.IntegerSolutionTestCase",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.IntegerSolutionTestCase",
                "name": "test_should_copy_work_properly",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_solution.IntegerSolutionTestCase",
                "name": "test_should_default_constructor_create_a_valid_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.DifferentialEvolutionSelectionTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.DifferentialEvolutionSelectionTestCases",
                "name": "test_should_execute_exclude_the_indicated_solution_if_the_list_of_solutions_has_size_four",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.DifferentialEvolutionSelectionTestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.DifferentialEvolutionSelectionTestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.DifferentialEvolutionSelectionTestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_smaller_than_required",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.DifferentialEvolutionSelectionTestCases",
                "name": "test_should_execute_return_three_solutions_if_the_list_of_solutions_larger_than_three",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ6TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ6TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_10_variables_and_4_objectives",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ6TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ6TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ6TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT6TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT6TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_7_variables",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT6TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT6TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT6TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT3TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT3TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_7_variables",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT3TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT3TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_zdt.ZDT3TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BinaryTournamentTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BinaryTournamentTestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BinaryTournamentTestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BinaryTournamentTestCases",
                "name": "test_should_execute_return_the_solution_in_a_list_with_one_solution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BinaryTournamentTestCases",
                "name": "test_should_execute_work_if_the_solution_list_contains_two_non_dominated_solutions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": "/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hamcrest/core/assert_that.py:61: UserWarning:\n\narg1 should be boolean, but was <class 'hamcrest.core.core.anyof.AnyOf'>\n\n"
            },
            {
                "classname": "jmetal.operator.test.test_selection.BinaryTournamentTestCases",
                "name": "test_should_execute_work_if_the_solution_list_contains_two_solutions_and_one_them_is_dominated",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.Viennet2TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.Viennet2TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.Viennet2TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.Viennet2TestCases",
                "name": "test_should_create_solution_return_right_evaluation_values",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.Viennet2TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_problem.FloatProblemTestCases",
                "name": "test_should_create_solution_create_a_valid_solution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_problem.FloatProblemTestCases",
                "name": "test_should_default_constructor_create_a_valid_problem",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.NormalizedHyperVolumeTestCases",
                "name": "test_should_hypervolume_return_zero_when_providing_reference_front",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.NormalizedHyperVolumeTestCases",
                "name": "test_should_raise_AssertionError_when_reference_front_hv_is_zero",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.DominanceWithConstraintsComparatorTestCases",
                "name": "test_should_dominance_comparator_work_properly_with_constrains_case_1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_comparator.DominanceWithConstraintsComparatorTestCases",
                "name": "test_should_dominance_comparator_work_properly_with_constrains_case_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_evaluator.SequentialEvaluatorTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_evaluator.SequentialEvaluatorTestCases",
                "name": "test_should_evaluate_a_list_of_problem_work_properly",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_evaluator.SequentialEvaluatorTestCases",
                "name": "test_should_evaluate_a_list_of_problem_work_properly_with_a_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.FonsecaTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.FonsecaTestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.FonsecaTestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.FonsecaTestCases",
                "name": "test_should_create_solution_return_right_evaluation_values",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.FonsecaTestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F2TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F2TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_50_variables",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F2TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F2TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F2TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ3TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ3TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_10_variables_and_4_objectives",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ3TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ3TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ3TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.core.test.test_quality_indicator.EpsilonIndicatorTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.IntegerPolynomialMutationTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.IntegerPolynomialMutationTestCases",
                "name": "test_should_constructor_create_a_valid_operator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.IntegerPolynomialMutationTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_greater_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.IntegerPolynomialMutationTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_lower_than_zero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.IntegerPolynomialMutationTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_higher_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.IntegerPolynomialMutationTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.IntegerPolynomialMutationTestCases",
                "name": "test_should_the_solution_change__if_the_probability_is_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.IntegerPolynomialMutationTestCases",
                "name": "test_should_the_solution_remain_unchanged_if_the_probability_is_zero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F1TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F1TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_50",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F1TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F1TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F1TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_evaluator.ParallelEvaluatorTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_evaluator.ParallelEvaluatorTestCases",
                "name": "test_should_evaluate_a_list_of_problem_work_properly",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_evaluator.ParallelEvaluatorTestCases",
                "name": "test_should_evaluate_a_list_of_problem_work_properly_with_a_solution",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_density_estimator.CrowdingDistanceTestCases",
                "name": "test_should_the_crowding_distance_of_an_empty_set_do_nothing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_density_estimator.CrowdingDistanceTestCases",
                "name": "test_should_the_crowding_distance_of_four_solutions_correctly_assigned",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_density_estimator.CrowdingDistanceTestCases",
                "name": "test_should_the_crowding_distance_of_single_solution_be_infinity",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_density_estimator.CrowdingDistanceTestCases",
                "name": "test_should_the_crowding_distance_of_three_solutions_correctly_assigned",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_density_estimator.CrowdingDistanceTestCases",
                "name": "test_should_the_crowding_distance_of_two_solutions_be_infinity",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.NaryRandomSolutionSelectionTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.NaryRandomSolutionSelectionTestCases",
                "name": "test_should_constructor_create_a_non_null_object_and_check_number_of_elements",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.NaryRandomSolutionSelectionTestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.NaryRandomSolutionSelectionTestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.NaryRandomSolutionSelectionTestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_smaller_than_required",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.NaryRandomSolutionSelectionTestCases",
                "name": "test_should_execute_return_the_solution_in_a_list_with_one_solution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.NaryRandomSolutionSelectionTestCases",
                "name": "test_should_execute_work_if_the_solution_list_contains_five_solutions_and_one_them_is_dominated",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.NaryRandomSolutionSelectionTestCases",
                "name": "test_should_execute_work_if_the_solution_list_contains_two_non_dominated_solutions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SBXCrossoverTestCases",
                "name": "test_should_constructor_assign_the_correct_distribution_index_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SBXCrossoverTestCases",
                "name": "test_should_constructor_assign_the_correct_probability_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SBXCrossoverTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_distribution_index_is_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SBXCrossoverTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_greater_than_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SBXCrossoverTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SBXCrossoverTestCases",
                "name": "test_should_execute_produce_valid_solutions_when_crossing_two_single_variable_solutions",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SBXCrossoverTestCases",
                "name": "test_should_execute_return_the_parents_if_the_crossover_probability_is_zero",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SBXCrossoverTestCases",
                "name": "test_should_execute_with_an_invalid_solution_list_size_raise_an_exception",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.SBXCrossoverTestCases",
                "name": "test_should_execute_work_with_a_solution_subclass_of_float_solution",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BestSolutionSelectionTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BestSolutionSelectionTestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BestSolutionSelectionTestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BestSolutionSelectionTestCases",
                "name": "test_should_execute_return_the_solution_in_a_list_with_one_solution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BestSolutionSelectionTestCases",
                "name": "test_should_execute_work_if_the_solution_list_contains_five_solutions_and_one_them_is_dominated",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BestSolutionSelectionTestCases",
                "name": "test_should_execute_work_if_the_solution_list_contains_two_non_dominated_solutions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BestSolutionSelectionTestCases",
                "name": "test_should_execute_work_if_the_solution_list_contains_two_solutions_and_one_them_is_dominated",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_constraint_handling.ConstraintHandlingTestCases",
                "name": "test_should_constraint_violation_degree_return_the_right_violation_degree",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_constraint_handling.ConstraintHandlingTestCases",
                "name": "test_should_constraint_violation_degree_return_zero_if_the_solution_has_no_constraints",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_constraint_handling.ConstraintHandlingTestCases",
                "name": "test_should_constraint_violation_degree_return_zero_if_the_solution_has_not_violated_constraints",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_constraint_handling.ConstraintHandlingTestCases",
                "name": "test_should_feasibility_ratio_raise_and_exception_if_the_solution_list_is_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_constraint_handling.ConstraintHandlingTestCases",
                "name": "test_should_feasibility_ratio_return_one_if_all_the_solutions_in_a_list_are_feasible",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_constraint_handling.ConstraintHandlingTestCases",
                "name": "test_should_feasibility_ratio_return_the_right_percentage_of_feasible_solutions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_constraint_handling.ConstraintHandlingTestCases",
                "name": "test_should_feasibility_ratio_return_zero_if_all_the_solutions_in_a_list_are_unfeasible",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_constraint_handling.ConstraintHandlingTestCases",
                "name": "test_should_is_feasible_return_false_if_the_solution_has_is_not_feasible",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_constraint_handling.ConstraintHandlingTestCases",
                "name": "test_should_is_feasible_return_true_if_the_solution_has_constraints_and_is_feasible",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_constraint_handling.ConstraintHandlingTestCases",
                "name": "test_should_is_feasible_return_true_if_the_solution_has_no_constraints",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_constraint_handling.ConstraintHandlingTestCases",
                "name": "test_should_number_of_violated_constraints_return_the_right_number_of_violated_constraints",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_constraint_handling.ConstraintHandlingTestCases",
                "name": "test_should_number_of_violated_constraints_return_zero_if_the_solution_has_no_constraints",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_constraint_handling.ConstraintHandlingTestCases",
                "name": "test_should_number_of_violated_constraints_return_zero_if_the_solution_has_not_violated_constraints",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_ranking.FastNonDominatedRankingTestCases",
                "name": "test_should_compute_ranking_of_an_emtpy_solution_list_return_a_empty_list_of_subranks",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_ranking.FastNonDominatedRankingTestCases",
                "name": "test_should_compute_ranking_return_a_subfront_if_the_solution_list_contains_one_solution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_ranking.FastNonDominatedRankingTestCases",
                "name": "test_should_compute_ranking_return_a_subfront_if_the_solution_list_contains_two_nondominated_solutions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_ranking.FastNonDominatedRankingTestCases",
                "name": "test_should_compute_ranking_work_properly_case1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_ranking.FastNonDominatedRankingTestCases",
                "name": "test_should_compute_ranking_work_properly_with_constraints_case1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_ranking.FastNonDominatedRankingTestCases",
                "name": "test_should_compute_ranking_work_properly_with_constraints_case2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_ranking.FastNonDominatedRankingTestCases",
                "name": "test_should_compute_ranking_work_properly_with_constraints_case3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_ranking.FastNonDominatedRankingTestCases",
                "name": "test_should_constructor_create_a_valid_object",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_ranking.FastNonDominatedRankingTestCases",
                "name": "test_should_ranking_of_a_population_with_five_solutions_work_properly",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_ranking.FastNonDominatedRankingTestCases",
                "name": "test_should_ranking_of_a_population_with_three_dominated_solutions_return_three_subfronts",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BinaryTournament2TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BinaryTournament2TestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BinaryTournament2TestCases",
                "name": "test_should_execute_raise_an_exception_if_the_list_of_solutions_is_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BinaryTournament2TestCases",
                "name": "test_should_execute_return_the_solution_in_a_list_with_one_solution",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BinaryTournament2TestCases",
                "name": "test_should_execute_work_properly_case1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_selection.BinaryTournament2TestCases",
                "name": "test_should_operator_raise_an_exception_if_the_list_of_comparators_is_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CompositeCrossoverTestCases",
                "name": "test_should_constructor_create_a_valid_operator_when_adding_a_single_crossover_operator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CompositeCrossoverTestCases",
                "name": "test_should_constructor_create_a_valid_operator_when_adding_two_crossover_operators",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CompositeCrossoverTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_parameter_list_is_Empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CompositeCrossoverTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_parameter_list_is_None",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CompositeCrossoverTestCases",
                "name": "test_should_execute_raise_and_exception_if_the_types_of_the_solutions_do_not_match_the_operators",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CompositeCrossoverTestCases",
                "name": "test_should_execute_work_properly_with_a_single_crossover_operator",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_crossover.CompositeCrossoverTestCases",
                "name": "test_should_execute_work_properly_with_a_two_crossover_operators",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ1TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ1TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_5_variables_and_4_objectives",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ1TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ1TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_dtlz.DTLZ1TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F9TestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F9TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_50_variables",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F9TestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F9TestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_lz09.LZ09F9TestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.KursaweTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.KursaweTestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_5_variables",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.KursaweTestCases",
                "name": "test_should_constructor_create_a_valid_problem_with_default_settings",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.KursaweTestCases",
                "name": "test_should_create_solution_create_a_valid_float_solution",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.problem.multiobjective.test.test_unconstrained.KursaweTestCases",
                "name": "test_should_get_name_return_the_right_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.WeightVectorNeighborhoodTestCases",
                "name": "test_should_constructor_work_properly",
                "time": 0.134,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.util.test.test_neighborhood.WeightVectorNeighborhoodTestCases",
                "name": "test_should_get_neighbors_work_properly_with_two_objectives",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.UniformMutationTestCases",
                "name": "test_should_constructor_create_a_non_null_object",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.UniformMutationTestCases",
                "name": "test_should_constructor_create_a_valid_operator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.UniformMutationTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_greater_than_one",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.UniformMutationTestCases",
                "name": "test_should_constructor_raise_an_exception_if_the_probability_is_lower_than_zero",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.UniformMutationTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_higher_than_one",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.UniformMutationTestCases",
                "name": "test_should_constructor_raises_an_exception_is_probability_is_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.UniformMutationTestCases",
                "name": "test_should_the_solution_change_between_max_and_min_value",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.UniformMutationTestCases",
                "name": "test_should_the_solution_change_if_the_probability_is_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "jmetal.operator.test.test_mutation.UniformMutationTestCases",
                "name": "test_should_the_solution_remain_unchanged_if_the_probability_is_zero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[820b89d8-778c-4563-9d98-35a348e034a3/test] \ud83d\ude80  Start image=crawlergpt:latest\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/jMetal-jMetalPy] user=0 workdir=\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[820b89d8-778c-4563-9d98-35a348e034a3/test] \ud83e\uddea  Matrix: map[py:3.9]\n[820b89d8-778c-4563-9d98-35a348e034a3/test] \u2b50 Run Main actions/checkout@v2\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2705  Success - Main actions/checkout@v2\n[820b89d8-778c-4563-9d98-35a348e034a3/test] \u2b50 Run Main Install Python 3.9\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/8d7a1da6-3df3-40b6-bc11-c16c06be124f/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::isExplicit: \n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::explicit? false\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::explicit? true\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::explicit? true\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::explicit? true\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::explicit? true\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::explicit? true\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::explicit? true\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::matched: 3.9.6\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Successfully setup CPython (3.9.6)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2705  Success - Main Install Python 3.9\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2699  ::set-output:: python-version=3.9.6\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[820b89d8-778c-4563-9d98-35a348e034a3/test] \u2b50 Run Main Get full Python version\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2.sh] user= workdir=\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2699  ::set-output:: version=3-9-6-final-0\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2705  Success - Main Get full Python version\n[820b89d8-778c-4563-9d98-35a348e034a3/test] \u2b50 Run Main Install dependencies\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (21.2.4)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting pip\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Installing collected packages: pip\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Attempting uninstall: pip\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |     Found existing installation: pip 21.2.4\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |     Uninstalling pip-21.2.4:\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |       Successfully uninstalled pip-21.2.4\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Successfully installed pip-23.1.2\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/jMetal-jMetalPy\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Installing build dependencies: started\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Installing build dependencies: finished with status 'done'\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Checking if build backend supports build_editable: started\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Checking if build backend supports build_editable: finished with status 'done'\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Getting requirements to build editable: started\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Getting requirements to build editable: finished with status 'done'\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Installing backend dependencies: started\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Installing backend dependencies: finished with status 'done'\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Preparing editable metadata (pyproject.toml): started\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Preparing editable metadata (pyproject.toml): finished with status 'done'\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting tqdm (from jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading tqdm-4.65.0-py3-none-any.whl (77 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 77.1/77.1 kB 2.5 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting numpy>=1.16.0 (from jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading numpy-1.25.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.7 MB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.7/17.7 MB 16.0 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting pandas>=0.24.2 (from jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading pandas-2.0.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.4 MB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 12.4/12.4 MB 18.5 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting plotly>=3.3.0 (from jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading plotly-5.15.0-py2.py3-none-any.whl (15.5 MB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 15.5/15.5 MB 24.9 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting matplotlib>=3.0.2 (from jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading matplotlib-3.7.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.6 MB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.6/11.6 MB 21.9 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting scipy>=1.3.0 (from jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading scipy-1.11.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (36.5 MB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 36.5/36.5 MB 21.3 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting statsmodels>=0.9.0 (from jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading statsmodels-0.14.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (10.1 MB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 10.1/10.1 MB 22.6 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting mockito (from jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading mockito-1.4.0-py3-none-any.whl (30 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting PyHamcrest (from jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading pyhamcrest-2.0.4-py3-none-any.whl (52 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 52.9/52.9 kB 3.0 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting contourpy>=1.0.1 (from matplotlib>=3.0.2->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading contourpy-1.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (300 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 300.4/300.4 kB 13.3 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting cycler>=0.10 (from matplotlib>=3.0.2->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading cycler-0.11.0-py3-none-any.whl (6.4 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting fonttools>=4.22.0 (from matplotlib>=3.0.2->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading fonttools-4.40.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.4 MB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.4/4.4 MB 24.6 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting kiwisolver>=1.0.1 (from matplotlib>=3.0.2->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading kiwisolver-1.4.4-cp39-cp39-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.6/1.6 MB 20.0 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting packaging>=20.0 (from matplotlib>=3.0.2->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 1.6 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting pillow>=6.2.0 (from matplotlib>=3.0.2->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading Pillow-9.5.0-cp39-cp39-manylinux_2_28_x86_64.whl (3.4 MB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.4/3.4 MB 28.6 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting pyparsing>=2.3.1 (from matplotlib>=3.0.2->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 102.6/102.6 kB 6.6 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting python-dateutil>=2.7 (from matplotlib>=3.0.2->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 7.6 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting importlib-resources>=3.2.0 (from matplotlib>=3.0.2->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting pytz>=2020.1 (from pandas>=0.24.2->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 13.8 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting tzdata>=2022.1 (from pandas>=0.24.2->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading tzdata-2023.3-py2.py3-none-any.whl (341 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 341.8/341.8 kB 4.8 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting tenacity>=6.2.0 (from plotly>=3.3.0->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading tenacity-8.2.2-py3-none-any.whl (24 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting patsy>=0.5.2 (from statsmodels>=0.9.0->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading patsy-0.5.3-py2.py3-none-any.whl (233 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 233.8/233.8 kB 3.0 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting zipp>=3.1.0 (from importlib-resources>=3.2.0->matplotlib>=3.0.2->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting six (from patsy>=0.5.2->statsmodels>=0.9.0->jmetalpy==1.6.0)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Building wheels for collected packages: jmetalpy\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Building editable for jmetalpy (pyproject.toml): started\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Building editable for jmetalpy (pyproject.toml): finished with status 'done'\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Created wheel for jmetalpy: filename=jmetalpy-1.6.0-0.editable-py2.py3-none-any.whl size=6178 sha256=b44f9665d1a7b4486c24f214a34f630f3b43dd3bf68e08153123b3de0543d1ba\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-wxga9jm_/wheels/df/fd/ce/77c162ca64e38d49550bf8e18ee6db6e31a6cd7ec364c4e3a7\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Successfully built jmetalpy\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Installing collected packages: pytz, zipp, tzdata, tqdm, tenacity, six, pyparsing, PyHamcrest, pillow, packaging, numpy, mockito, kiwisolver, fonttools, cycler, scipy, python-dateutil, plotly, patsy, importlib-resources, contourpy, pandas, matplotlib, statsmodels, jmetalpy\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Successfully installed PyHamcrest-2.0.4 contourpy-1.1.0 cycler-0.11.0 fonttools-4.40.0 importlib-resources-5.12.0 jmetalpy-1.6.0 kiwisolver-1.4.4 matplotlib-3.7.1 mockito-1.4.0 numpy-1.25.0 packaging-23.1 pandas-2.0.3 patsy-0.5.3 pillow-9.5.0 plotly-5.15.0 pyparsing-3.1.0 python-dateutil-2.8.2 pytz-2023.3 scipy-1.11.1 six-1.16.0 statsmodels-0.14.0 tenacity-8.2.2 tqdm-4.65.0 tzdata-2023.3 zipp-3.15.0\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | \n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | [notice] A new release of pip is available: 21.1.3 -> 23.1.2\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | [notice] To update, run: pip install --upgrade pip\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2705  Success - Main Install dependencies\n[820b89d8-778c-4563-9d98-35a348e034a3/test] \u2b50 Run Main Run unittest\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4.sh] user= workdir=\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting unittest-xml-reporting\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading unittest_xml_reporting-3.2.0-py2.py3-none-any.whl (20 kB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Collecting lxml (from unittest-xml-reporting)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |   Downloading lxml-4.9.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (7.1 MB)\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 7.1/7.1 MB 28.7 MB/s eta 0:00:00\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Installing collected packages: lxml, unittest-xml-reporting\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Successfully installed lxml-4.9.2 unittest-xml-reporting-3.2.0\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | \n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | [notice] A new release of pip is available: 21.1.3 -> 23.1.2\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | [notice] To update, run: pip install --upgrade pip\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | \n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Running tests...\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | ----------------------------------------------------------------------\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | 2\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/hamcrest/core/assert_that.py:61: UserWarning:\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | \n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | arg1 should be boolean, but was <class 'hamcrest.core.core.anyof.AnyOf'>\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | \n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | ----------------------------------------------------------------------\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Ran 464 tests in 1.232s\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | \n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | OK\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | \n[820b89d8-778c-4563-9d98-35a348e034a3/test]   | Generating XML reports...\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2705  Success - Main Run unittest\n[820b89d8-778c-4563-9d98-35a348e034a3/test] \u2b50 Run Post Install Python 3.9\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[820b89d8-778c-4563-9d98-35a348e034a3/test]   \u2705  Success - Post Install Python 3.9\n[820b89d8-778c-4563-9d98-35a348e034a3/test] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/jMetal-jMetalPy/.github/workflows/ci-crawler.yml",
            "type": "unittest"
        },
        "workflow_name": "820b89d8-778c-4563-9d98-35a348e034a3",
        "build_tool": "unittest",
        "elapsed_time": 184.0306053161621
    }
}