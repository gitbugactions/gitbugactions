{
    "repository": "dask/dask",
    "stars": 11156,
    "language": "python",
    "size": 58972,
    "clone_url": "https://github.com/dask/dask.git",
    "timestamp": "2023-07-01T10:13:31.080402Z",
    "clone_success": true,
    "number_of_actions": 9,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "unknown",
        "unknown",
        "pytest",
        "unknown",
        "unknown",
        "unknown",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "dask.base",
                "name": "dask.base.DaskMethodsMixin.visualize",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.base",
                "name": "dask.base._colorize",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.base",
                "name": "dask.base.annotate",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.base",
                "name": "dask.base.clone_key",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.base",
                "name": "dask.base.compute",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.base",
                "name": "dask.base.get_collection_names",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.base",
                "name": "dask.base.get_name_from_key",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.base",
                "name": "dask.base.optimize",
                "time": 0.205,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.base",
                "name": "dask.base.persist",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.base",
                "name": "dask.base.replace_name_in_key",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.base",
                "name": "dask.base.tokenize",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.base",
                "name": "dask.base.visualize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.blockwise",
                "name": "dask.blockwise.BlockwiseDepDict",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.blockwise",
                "name": "dask.blockwise.broadcast_dimensions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.blockwise",
                "name": "dask.blockwise.lol_product",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.blockwise",
                "name": "dask.blockwise.lol_tuples",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.blockwise",
                "name": "dask.blockwise.make_blockwise_graph",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.blockwise",
                "name": "dask.blockwise.zero_broadcast_dimensions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.cache",
                "name": "dask.cache.Cache",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.callbacks",
                "name": "dask.callbacks.Callback",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.callbacks",
                "name": "dask.callbacks.add_callbacks",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.config",
                "name": "dask.config.check_deprecations",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.config",
                "name": "dask.config.expand_environment_variables",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.config",
                "name": "dask.config.get",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.config",
                "name": "dask.config.merge",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.config",
                "name": "dask.config.set",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.config",
                "name": "dask.config.update",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.context",
                "name": "dask.context.globalmethod",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.core",
                "name": "dask.core._execute_task",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.core",
                "name": "dask.core.flatten",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.core",
                "name": "dask.core.get",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.core",
                "name": "dask.core.get_dependencies",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.core",
                "name": "dask.core.get_deps",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.core",
                "name": "dask.core.getcycle",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.core",
                "name": "dask.core.isdag",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.core",
                "name": "dask.core.ishashable",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.core",
                "name": "dask.core.istask",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.core",
                "name": "dask.core.keys_in_tasks",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.core",
                "name": "dask.core.quote",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.core",
                "name": "dask.core.reverse_dict",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.core",
                "name": "dask.core.subs",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.datasets",
                "name": "dask.datasets.timeseries",
                "time": 0.113,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.delayed",
                "name": "dask.delayed.delayed",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.delayed",
                "name": "dask.delayed.to_task_dask",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.delayed",
                "name": "dask.delayed.unpack_collections",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.graph_manipulation",
                "name": "dask.graph_manipulation.bind",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.graph_manipulation",
                "name": "dask.graph_manipulation.clone",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.graph_manipulation",
                "name": "dask.graph_manipulation.wait_on",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.highlevelgraph",
                "name": "dask.highlevelgraph.HighLevelGraph",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.highlevelgraph",
                "name": "dask.highlevelgraph.HighLevelGraph.from_collections",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.highlevelgraph",
                "name": "dask.highlevelgraph.HighLevelGraph.visualize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.highlevelgraph",
                "name": "dask.highlevelgraph.Layer.cull",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.layers",
                "name": "dask.layers._expand_keys_around_center",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.layers",
                "name": "dask.layers.fractional_slice",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.layers",
                "name": "dask.layers.reshapelist",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.local",
                "name": "dask.local",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.local",
                "name": "dask.local.identity",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.local",
                "name": "dask.local.nested_get",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.local",
                "name": "dask.local.sortkey",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.local",
                "name": "dask.local.start_state_from_dask",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.optimization",
                "name": "dask.optimization.cull",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.optimization",
                "name": "dask.optimization.functions_of",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.optimization",
                "name": "dask.optimization.fuse_linear",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.optimization",
                "name": "dask.optimization.inline",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.optimization",
                "name": "dask.optimization.inline_functions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.order",
                "name": "dask.order.StrComparable",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.order",
                "name": "dask.order.graph_metrics",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.order",
                "name": "dask.order.ndependencies",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.order",
                "name": "dask.order.order",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.rewrite",
                "name": "dask.rewrite.RewriteRule",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.rewrite",
                "name": "dask.rewrite.RuleSet",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.rewrite",
                "name": "dask.rewrite.RuleSet.rewrite",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.sizeof",
                "name": "dask.sizeof.SimpleSizeof",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.threaded",
                "name": "dask.threaded.get",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.typing",
                "name": "dask.typing.DaskCollection.visualize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.IndexCallable",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.MethodCache",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils._deprecated",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.apply",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.concrete",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.deepmap",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.digit",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.ensure_bytes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.ensure_unicode",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.format_bytes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.format_time",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.format_time_ago",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.insert",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.is_arraylike",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.is_integer",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.key_split",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.natural_sort_key",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.ndeepmap",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.parse_bytes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.parse_timedelta",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.partial_by_order",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.pseudorandom",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.stringify",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.takes_multiple_arguments",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.utils",
                "name": "dask.utils.typename",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.blockwise",
                "name": "dask.array.blockwise.blockwise",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.chunk",
                "name": "dask.array.chunk.coarsen",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.chunk",
                "name": "dask.array.chunk.trim",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.chunk_types",
                "name": "dask.array.chunk_types.register_chunk_type",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.Array.__repr__",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.Array.blocks",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.Array.compute_chunk_sizes",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.Array.map_blocks",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.Array.partitions",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.Array.store",
                "time": 0.015,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.Array.to_hdf5",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.Array.to_svg",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.Array.vindex",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.BlockView",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core._check_regular_chunks",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core._concatenate2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core._get_axis",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core._vindex",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core._vindex_merge",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.asanyarray",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.asarray",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.blockdims_from_blockshape",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.broadcast_arrays",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.broadcast_chunks",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.chunks_from_arrays",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.common_blockdim",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.concatenate",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.concatenate3",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.deepfirst",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.dotmany",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.elemwise",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.from_array",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.from_delayed",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.from_func",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.getter_inline",
                "time": 0.029,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.graph_from_arraylike",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.insert_to_ooc",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.interleave_none",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.is_scalar_for_elemwise",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.keyname",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.load_store_chunk",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.map_blocks",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.normalize_chunks",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.offset_func",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.retrieve_from_ooc",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.slices_from_chunks",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.stack",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.store",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.to_hdf5",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.to_npy_stack",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.transposelist",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.unify_chunks",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.core",
                "name": "dask.array.core.unpack_singleton",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.creation",
                "name": "dask.array.creation.diag",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.creation",
                "name": "dask.array.creation.diagonal",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.creation",
                "name": "dask.array.creation.fromfunction",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.creation",
                "name": "dask.array.creation.meshgrid",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.creation",
                "name": "dask.array.creation.pad",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.creation",
                "name": "dask.array.creation.repeat",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.creation",
                "name": "dask.array.creation.tile",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.creation",
                "name": "dask.array.creation.tri",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.einsumfuncs",
                "name": "dask.array.einsumfuncs.einsum",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.gufunc",
                "name": "dask.array.gufunc.apply_gufunc",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.gufunc",
                "name": "dask.array.gufunc.as_gufunc",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.gufunc",
                "name": "dask.array.gufunc.gufunc",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.image",
                "name": "dask.array.image.imread",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.linalg",
                "name": "dask.array.linalg.compression_level",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.linalg",
                "name": "dask.array.linalg.lu",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.linalg",
                "name": "dask.array.linalg.norm",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.linalg",
                "name": "dask.array.linalg.qr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.linalg",
                "name": "dask.array.linalg.svd",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.linalg",
                "name": "dask.array.linalg.svd_compressed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.average",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.count",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.empty_like",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.filled",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.fix_invalid",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.getdata",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.getmaskarray",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.masked_array",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.masked_equal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.masked_inside",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.masked_invalid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.masked_outside",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.masked_values",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.masked_where",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.nonzero",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.ones_like",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.set_fill_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.where",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ma",
                "name": "dask.array.ma.zeros_like",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.numpy_compat",
                "name": "dask.array.numpy_compat.moveaxis",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.optimization",
                "name": "dask.array.optimization.fuse_slice",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.optimization",
                "name": "dask.array.optimization.normalize_slice",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.overlap",
                "name": "dask.array.overlap.add_dummy_padding",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.overlap",
                "name": "dask.array.overlap.ensure_minimum_chunksize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.overlap",
                "name": "dask.array.overlap.map_overlap",
                "time": 0.151,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.overlap",
                "name": "dask.array.overlap.overlap",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.overlap",
                "name": "dask.array.overlap.sliding_window_view",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.percentile",
                "name": "dask.array.percentile.merge_percentiles",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.binomial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.chisquare",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.choice",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.f",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.gamma",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.geometric",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.gumbel",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.hypergeometric",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.integers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.laplace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.logistic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.lognormal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.logseries",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.multinomial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.multivariate_hypergeometric",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.negative_binomial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.noncentral_chisquare",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.noncentral_f",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.normal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.pareto",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.permutation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.poisson",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.power",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.random",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.rayleigh",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.standard_cauchy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.standard_exponential",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.standard_gamma",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.standard_normal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.standard_t",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.triangular",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.uniform",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.vonmises",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.wald",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.weibull",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.Generator.zipf",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.binomial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.chisquare",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.choice",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.f",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.gamma",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.geometric",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.gumbel",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.hypergeometric",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.laplace",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.logistic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.lognormal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.logseries",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.multinomial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.negative_binomial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.noncentral_chisquare",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.noncentral_f",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.normal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.pareto",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.permutation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.poisson",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.power",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.randint",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.random_integers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.random_sample",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.rayleigh",
                "time": 0.025,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.standard_cauchy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.standard_exponential",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.standard_gamma",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.standard_normal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.standard_t",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.tomaxint",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.triangular",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.uniform",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.vonmises",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.wald",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.weibull",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.RandomState.zipf",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.binomial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.chisquare",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.choice",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.default_rng",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.f",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.gamma",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.geometric",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.gumbel",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.hypergeometric",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.laplace",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.logistic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.lognormal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.logseries",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.multinomial",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.negative_binomial",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.noncentral_chisquare",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.noncentral_f",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.normal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.pareto",
                "time": 0.021,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.permutation",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.poisson",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.power",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.randint",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.random",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.random_integers",
                "time": 0.021,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.random_sample",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.rayleigh",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.standard_cauchy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.standard_exponential",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.standard_gamma",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.standard_normal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.standard_t",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.triangular",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.uniform",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.vonmises",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.wald",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.weibull",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.random",
                "name": "dask.array.random.zipf",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.rechunk",
                "name": "dask.array.rechunk._breakpoints",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.rechunk",
                "name": "dask.array.rechunk._intersect_1d",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.rechunk",
                "name": "dask.array.rechunk.cumdims_label",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.rechunk",
                "name": "dask.array.rechunk.format_blocks",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.rechunk",
                "name": "dask.array.rechunk.format_chunks",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.rechunk",
                "name": "dask.array.rechunk.format_plan",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.rechunk",
                "name": "dask.array.rechunk.intersect_chunks",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.rechunk",
                "name": "dask.array.rechunk.old_to_new",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.rechunk",
                "name": "dask.array.rechunk.rechunk",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.all",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.any",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.argmax",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.argmin",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.argtopk",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.cumprod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.cumsum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.max",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.mean",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.median",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.min",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.nanargmax",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.nanargmin",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.nancumprod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.nancumsum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.nanmax",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.nanmean",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.nanmedian",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.nanmin",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.nanprod",
                "time": 0.005,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.nanstd",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.nansum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.nanvar",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.partial_reduce",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.prod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.std",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.sum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.topk",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.trace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reductions",
                "name": "dask.array.reductions.var",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reshape",
                "name": "dask.array.reshape.contract_tuple",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.reshape",
                "name": "dask.array.reshape.expand_tuple",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.aligned_coarsen_chunks",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.allclose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.append",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.apply_along_axis",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.apply_over_axes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.argwhere",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.around",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.array",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.atleast_1d",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.atleast_2d",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.atleast_3d",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.average",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.bincount",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.choose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.compress",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.corrcoef",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.count_nonzero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.cov",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.delete",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.diff",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.digitize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.dot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.dstack",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.ediff1d",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.expand_dims",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.extract",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.flatnonzero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.fliplr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.flipud",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.gradient",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.histogram",
                "time": 1.668,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.histogram2d",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.histogramdd",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.hstack",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.insert",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.isclose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.iscomplexobj",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.matmul",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.ndim",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.nonzero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.outer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.piecewise",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.ptp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.ravel",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.result_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.roll",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.rot90",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.searchsorted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.select",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.shape",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.split_at_breaks",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.squeeze",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.swapaxes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.take",
                "time": 0.008,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.tensordot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.transpose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.tril",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.tril_indices",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.triu",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.triu_indices",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.union1d",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.unique",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.unravel_index",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.vdot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.vstack",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.routines",
                "name": "dask.array.routines.where",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing._slice_1d",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.check_index",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.expander",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.issorted",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.make_block_sorted_slices",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.new_blockdim",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.normalize_index",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.normalize_slice",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.parse_assignment_indices",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.partition_by_size",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.posify_index",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.replace_ellipsis",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.sanitize_index",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.setitem",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.slice_array",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.slicing",
                "name": "dask.array.slicing.take",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.stats",
                "name": "dask.array.stats.f_oneway",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.stats",
                "name": "dask.array.stats.kurtosis",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.stats",
                "name": "dask.array.stats.kurtosistest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.stats",
                "name": "dask.array.stats.moment",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.stats",
                "name": "dask.array.stats.normaltest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.stats",
                "name": "dask.array.stats.power_divergence",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.stats",
                "name": "dask.array.stats.skew",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.stats",
                "name": "dask.array.stats.skewtest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.stats",
                "name": "dask.array.stats.ttest_1samp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.stats",
                "name": "dask.array.stats.ttest_ind",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.stats",
                "name": "dask.array.stats.ttest_rel",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.svg",
                "name": "dask.array.svg.svg_lines",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.tiledb_io",
                "name": "dask.array.tiledb_io.from_tiledb",
                "time": 0.326,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.tiledb_io",
                "name": "dask.array.tiledb_io.to_tiledb",
                "time": 0.269,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.angle",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.clip",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.divmod",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.fix",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.frexp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.frompyfunc",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.i0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.imag",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.iscomplex",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.isreal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.modf",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.nan_to_num",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.real",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.sinc",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.ufunc",
                "name": "dask.array.ufunc.ufunc.outer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.wrap",
                "name": "dask.array.wrap.broadcast_trick",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.wrap",
                "name": "dask.array.wrap.full",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.array.wrap",
                "name": "dask.array.wrap.full_like",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.avro",
                "name": "dask.bag.avro.to_avro",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag",
                "time": 2.966,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.accumulate",
                "time": 1.935,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.all",
                "time": 0.942,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.any",
                "time": 0.963,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.count",
                "time": 0.955,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.distinct",
                "time": 3.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.filter",
                "time": 0.895,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.flatten",
                "time": 0.841,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.fold",
                "time": 2.958,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.foldby",
                "time": 1.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.frequencies",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.groupby",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.join",
                "time": 0.922,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.map",
                "time": 5.826,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.map_partitions",
                "time": 3.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.pluck",
                "time": 1.742,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.random_sample",
                "time": 1.985,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.reduction",
                "time": 0.933,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.remove",
                "time": 0.96,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.repartition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.starmap",
                "time": 4.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.str",
                "time": 2.921,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.take",
                "time": 0.958,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.to_dataframe",
                "time": 1.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.to_textfiles",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.topk",
                "time": 1.978,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.Bag.unzip",
                "time": 0.931,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.StringAccessor",
                "time": 2.802,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.StringAccessor.match",
                "time": 0.935,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.bag_map",
                "time": 5.529,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.bag_range",
                "time": 0.915,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.bag_zip",
                "time": 1.969,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.concat",
                "time": 0.865,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.dictitems",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.from_delayed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.from_sequence",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.from_url",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.inline_singleton_lists",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.lazify_task",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.map_partitions",
                "time": 2.895,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.split",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.core",
                "name": "dask.bag.core.to_textfiles",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.random",
                "name": "dask.bag.random.choices",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.random",
                "name": "dask.bag.random.sample",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bag.text",
                "name": "dask.bag.text.read_text",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.bytes.core",
                "name": "dask.bytes.core.read_bytes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.asfreq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.ceil",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.components",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.day",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.day_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.day_of_week",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.dayofweek",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.floor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.hour",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.is_leap_year",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.is_month_end",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.is_month_start",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.is_quarter_end",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.is_quarter_start",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.is_year_end",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.is_year_start",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.isocalendar",
                "time": 0.027,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.microsecond",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.minute",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.month",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.month_name",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.nanosecond",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.normalize",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.round",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.second",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.start_time",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.strftime",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.to_period",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.to_pydatetime",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.to_pytimedelta",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.total_seconds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.tz_convert",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.tz_localize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.weekday",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.DatetimeAccessor.year",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.capitalize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.casefold",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.cat",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.contains",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.count",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.endswith",
                "time": 0.011,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.extract",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.extractall",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.findall",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.get",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.isalnum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.isalpha",
                "time": 0.033,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.isdecimal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.isdigit",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.islower",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.isnumeric",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.isspace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.istitle",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.isupper",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.len",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.lower",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.lstrip",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.pad",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.partition",
                "time": 0.025,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.removeprefix",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.removesuffix",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.repeat",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.replace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.rpartition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.rsplit",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.rstrip",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.slice",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.slice_replace",
                "time": 0.005,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.split",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.startswith",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.strip",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.swapcase",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.title",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.upper",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.wrap",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.accessor",
                "name": "dask.dataframe.accessor.StringAccessor.zfill",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.backends",
                "name": "dask.dataframe.backends.make_meta_object",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.categorical",
                "name": "dask.dataframe.categorical.CategoricalAccessor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.add",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.append",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.apply",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.applymap",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.assign",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.clip",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.corr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.cov",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.div",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.divide",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.drop",
                "time": 0.031,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.dropna",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.eq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.eval",
                "time": 0.016,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.explode",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.floordiv",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.ge",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.groupby",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.gt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.iloc",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.items",
                "time": 0.03,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.iterrows",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.itertuples",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.le",
                "time": 0.008,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.lt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.memory_usage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.mod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.mode",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.mul",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.ne",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.nlargest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.nsmallest",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.nunique",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.pop",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.pow",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.query",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.radd",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.rdiv",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.rename",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.rfloordiv",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.rmod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.rmul",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.round",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.rpow",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.rsub",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.rtruediv",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.select_dtypes",
                "time": 0.015,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.set_index",
                "time": 0.36,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.shape",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.sort_values",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.squeeze",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.sub",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.to_bag",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.to_parquet",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.to_records",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.to_string",
                "time": 0.005,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.DataFrame.truediv",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Index.is_monotonic_decreasing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Index.is_monotonic_increasing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Index.max",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Index.min",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Index.shift",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Index.to_frame",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Index.to_series",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.add",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.align",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.apply",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.autocorr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.between",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.clip",
                "time": 0.036,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.combine",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.combine_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.corr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.count",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.cov",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.div",
                "time": 0.031,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.divide",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.dropna",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.eq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.explode",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.floordiv",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.ge",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.groupby",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.gt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.isin",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.le",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.lt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.map",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.memory_usage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.mod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.mul",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.ne",
                "time": 0.019,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.nlargest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.nsmallest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.nunique",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.pow",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.radd",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.rdiv",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.rfloordiv",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.rmod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.rmul",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.round",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.rpow",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.rsub",
                "time": 0.016,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.rtruediv",
                "time": 0.005,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.shape",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.squeeze",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.sub",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.to_frame",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.truediv",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.value_counts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.Series.view",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.abs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.add_prefix",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.add_suffix",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.align",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.all",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.any",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.append",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.astype",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.combine",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.combine_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.compute_current_divisions",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.count",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.cummax",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.cummin",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.cumprod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.cumsum",
                "time": 0.011,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.describe",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.diff",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.dot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.drop_duplicates",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.fillna",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.get_partition",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.idxmax",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.idxmin",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.isin",
                "time": 0.023,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.isna",
                "time": 0.007,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.isnull",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.last",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.loc",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.map_overlap",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.map_partitions",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.mask",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.max",
                "time": 0.025,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.min",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.mode",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.notnull",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.partitions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.pipe",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.prod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.random_split",
                "time": 0.006,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.reduction",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.repartition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.replace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.resample",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.shift",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.shuffle",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.size",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.std",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.sum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.to_csv",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.to_delayed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.to_hdf",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.var",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core._Frame.where",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.apply_concat_apply",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.elemwise",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.partitionwise_graph",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.pd_split",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.repartition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.core",
                "name": "dask.dataframe.core.repartition_divisions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby.Aggregation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby.SeriesGroupBy.head",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby.SeriesGroupBy.nunique",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby.SeriesGroupBy.tail",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby.SeriesGroupBy.unique",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby._GroupBy.corr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby._GroupBy.cov",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby._GroupBy.cumcount",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby._GroupBy.first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby._GroupBy.idxmax",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby._GroupBy.idxmin",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby._GroupBy.last",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby._GroupBy.mean",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby._GroupBy.rolling",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby._GroupBy.shift",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.groupby",
                "name": "dask.dataframe.groupby._normalize_spec",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.indexing",
                "name": "dask.dataframe.indexing._partition_of_index_value",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.indexing",
                "name": "dask.dataframe.indexing._partitions_of_index_values",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.methods",
                "name": "dask.dataframe.methods.boundary_slice",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.multi",
                "name": "dask.dataframe.multi.concat",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.multi",
                "name": "dask.dataframe.multi.hash_join",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.multi",
                "name": "dask.dataframe.multi.require",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.numeric",
                "name": "dask.dataframe.numeric.to_numeric",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.partitionquantiles",
                "name": "dask.dataframe.partitionquantiles.percentiles_to_weights",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.partitionquantiles",
                "name": "dask.dataframe.partitionquantiles.tree_groups",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.reshape",
                "name": "dask.dataframe.reshape.get_dummies",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.rolling",
                "name": "dask.dataframe.rolling.Rolling.aggregate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.rolling",
                "name": "dask.dataframe.rolling.Rolling.count",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.rolling",
                "name": "dask.dataframe.rolling.Rolling.kurt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.rolling",
                "name": "dask.dataframe.rolling.Rolling.mean",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.rolling",
                "name": "dask.dataframe.rolling.Rolling.median",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.rolling",
                "name": "dask.dataframe.rolling.Rolling.min",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.rolling",
                "name": "dask.dataframe.rolling.Rolling.quantile",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.rolling",
                "name": "dask.dataframe.rolling.Rolling.std",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.rolling",
                "name": "dask.dataframe.rolling.Rolling.sum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.rolling",
                "name": "dask.dataframe.rolling.Rolling.var",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.utils",
                "name": "dask.dataframe.utils.shard_df_on_index",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.utils",
                "name": "dask.dataframe.utils.valid_divisions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.csv",
                "name": "dask.dataframe.io.csv.block_mask",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.csv",
                "name": "dask.dataframe.io.csv.block_mask_last",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.csv",
                "name": "dask.dataframe.io.csv.read_csv",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.csv",
                "name": "dask.dataframe.io.csv.read_fwf",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.csv",
                "name": "dask.dataframe.io.csv.read_table",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.csv",
                "name": "dask.dataframe.io.csv.to_csv",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.demo",
                "name": "dask.dataframe.io.demo.make_timeseries",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.hdf",
                "name": "dask.dataframe.io.hdf.read_hdf",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.hdf",
                "name": "dask.dataframe.io.hdf.to_hdf",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.json",
                "name": "dask.dataframe.io.json.read_json",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.sql",
                "name": "dask.dataframe.io.sql.read_sql_table",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.sql",
                "name": "dask.dataframe.io.sql.to_sql",
                "time": 0.153,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.orc.core",
                "name": "dask.dataframe.io.orc.core.read_orc",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.orc.core",
                "name": "dask.dataframe.io.orc.core.to_orc",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.parquet.core",
                "name": "dask.dataframe.io.parquet.core.read_parquet",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.io.parquet.core",
                "name": "dask.dataframe.io.parquet.core.to_parquet",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.tseries.resample",
                "name": "dask.dataframe.tseries.resample.Resampler.agg",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.tseries.resample",
                "name": "dask.dataframe.tseries.resample.Resampler.first",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.tseries.resample",
                "name": "dask.dataframe.tseries.resample.Resampler.last",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.dataframe.tseries.resample",
                "name": "dask.dataframe.tseries.resample.Resampler.mean",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.diagnostics.profile",
                "name": "dask.diagnostics.profile.CacheProfiler",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.diagnostics.profile",
                "name": "dask.diagnostics.profile.Profiler",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.diagnostics.profile",
                "name": "dask.diagnostics.profile.ResourceProfiler",
                "time": 1.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.diagnostics.profile_visualize",
                "name": "dask.diagnostics.profile_visualize.pprint_task",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.diagnostics.progress",
                "name": "dask.diagnostics.progress.ProgressBar",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "dask.diagnostics.progress",
                "name": "dask.diagnostics.progress.format_time",
                "time": 0.015,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "all tests skipped by +SKIP option",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[2256f7f4-791e-4082-b72f-d45069042e7b/imports] \ud83d\ude80  Start image=crawlergpt:latest\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest] \ud83d\ude80  Start image=crawlergpt:latest\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask] user=0 workdir=\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask] user=0 workdir=\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \u2601  git clone 'https://github.com/conda-incubator/setup-miniconda' # ref=v2.2.0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2601  git clone 'https://github.com/conda-incubator/setup-miniconda' # ref=v2.2.0\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports] \ud83e\uddea  Matrix: map[python-version:3.9]\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports] \u2b50 Run Main Checkout source\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \u2705  Success - Main Checkout source\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest] \u2b50 Run Main Checkout source\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports] \u2b50 Run Main Setup Conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2705  Success - Main Checkout source\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udc33  docker cp src=/tmp/act-cache/93ea3edc-ee3e-40da-9528-ebbb52278497/act/conda-incubator-setup-miniconda@v2.2.0/ dst=/var/run/act/actions/conda-incubator-setup-miniconda@v2.2.0/\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/conda-incubator-setup-miniconda@v2.2.0/] user=0 workdir=\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest] \u2b50 Run Main Setup Conda Environment\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udc33  docker cp src=/tmp/act-cache/93ea3edc-ee3e-40da-9528-ebbb52278497/act/conda-incubator-setup-miniconda@v2.2.0/ dst=/var/run/act/actions/conda-incubator-setup-miniconda@v2.2.0/\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/conda-incubator-setup-miniconda@v2.2.0/] user=0 workdir=\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/conda-incubator-setup-miniconda@v2.2.0/dist/setup/index.js] user= workdir=\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/conda-incubator-setup-miniconda@v2.2.0/dist/setup/index.js] user= workdir=\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::group::Gathering Inputs...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::group::Creating bootstrap condarc file in /home/runneradmin/.condarc...\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \u2753  ::group::Gathering Inputs...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::group::Ensuring installer...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Can we use bundled Miniconda?\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Can we download a custom installer by URL?\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Can we download Miniconda?\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Can we download Miniforge?\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ... will download Miniforge.\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Will fetch Mambaforge latest from https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \u2753  ::group::Creating bootstrap condarc file in /home/runneradmin/.condarc...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Ensuring Installer...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Checking for cached Mambaforge@latest...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udcac  ::debug::isExplicit: \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udcac  ::debug::explicit? false\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \u2753  ::group::Ensuring installer...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udcac  ::debug::evaluating 0 versions\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udcac  ::debug::match not found\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Did not find Mambaforge-Linux-x86_64.sh latest in cache\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | Can we use bundled Miniconda?\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | Can we download a custom installer by URL?\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | Can we download Miniconda?\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | Can we download Miniforge?\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | ... will download Miniforge.\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | Will fetch Mambaforge latest from https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udcac  ::debug::Downloading https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udcac  ::debug::Destination /tmp/6cbf1581-0461-4827-a9eb-cd90e1adbf95\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | Ensuring Installer...\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | Checking for cached Mambaforge@latest...\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udcac  ::debug::isExplicit: \n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udcac  ::debug::explicit? false\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udcac  ::debug::evaluating 0 versions\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udcac  ::debug::match not found\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | Did not find Mambaforge-Linux-x86_64.sh latest in cache\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udcac  ::debug::Downloading https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udcac  ::debug::Destination /tmp/6d8e7112-fca7-48a1-b75f-542219e8197d\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udcac  ::debug::download complete\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Downloaded Mambaforge-Linux-x86_64.sh, ensuring extension .sh\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Caching Mambaforge@latest...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udcac  ::debug::Caching tool Mambaforge latest x86_64\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udcac  ::debug::source file: /tmp/6cbf1581-0461-4827-a9eb-cd90e1adbf95.sh\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Mambaforge/latest/x86_64\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udcac  ::debug::destination file /opt/hostedtoolcache/Mambaforge/latest/x86_64/Mambaforge-Linux-x86_64.sh\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udcac  ::debug::download complete\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | Downloaded Mambaforge-Linux-x86_64.sh, ensuring extension .sh\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | Caching Mambaforge@latest...\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udcac  ::debug::Caching tool Mambaforge latest x86_64\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udcac  ::debug::source file: /tmp/6d8e7112-fca7-48a1-b75f-542219e8197d.sh\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Mambaforge/latest/x86_64\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udcac  ::debug::destination file /opt/hostedtoolcache/Mambaforge/latest/x86_64/Mambaforge-Linux-x86_64.sh\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udcac  ::debug::finished caching tool\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Cached Mambaforge@latest: /opt/hostedtoolcache/Mambaforge/latest/x86_64!\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::group::Running installer...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | [command]/usr/bin/bash /tmp/6cbf1581-0461-4827-a9eb-cd90e1adbf95.sh -f -b -p 3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | PREFIX=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udcac  ::debug::finished caching tool\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | Cached Mambaforge@latest: /opt/hostedtoolcache/Mambaforge/latest/x86_64!\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \u2753  ::group::Running installer...\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | [command]/usr/bin/bash /tmp/6d8e7112-fca7-48a1-b75f-542219e8197d.sh -f -b -p 3\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | PREFIX=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Unpacking payload ...\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \ud83d\udea7  ::warning::/tmp/6d8e7112-fca7-48a1-b75f-542219e8197d.sh: line 301: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/conda.exe: Text file busy%0A\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   | /tmp/6d8e7112-fca7-48a1-b75f-542219e8197d.sh: line 301: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/conda.exe: Text file busy\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \u2757  ::error::The process '/usr/bin/bash' failed with exit code 1\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \u274c  Failure - Main Setup Conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports]   \u2699  ::set-env:: INPUT_RUN_POST=true\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting _libgcc_mutex-0.1-conda_forge.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports] exitcode '1': failure\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting ca-certificates-2023.5.7-hbcca054_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting ld_impl_linux-64-2.40-h41732ed_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libstdcxx-ng-13.1.0-hfd8a6a1_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting pybind11-abi-4-hd8ed1ab_3.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting python_abi-3.10-3_cp310.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting tzdata-2023c-h71feb2d_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libgomp-13.1.0-he5830b7_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting _openmp_mutex-4.5-2_gnu.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libgcc-ng-13.1.0-he5830b7_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting bzip2-1.0.8-h7f98852_4.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting c-ares-1.19.1-hd590300_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting fmt-9.1.0-h924138e_0.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting icu-72.1-hcb278e6_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting keyutils-1.6.1-h166bdaf_0.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libbrotlicommon-1.0.9-h166bdaf_8.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libev-4.33-h516909a_1.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libffi-3.4.2-h7f98852_5.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libiconv-1.17-h166bdaf_0.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libnsl-2.0.0-h7f98852_0.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libuuid-2.38.1-h0b41bf4_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libzlib-1.2.13-hd590300_5.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting lz4-c-1.9.4-hcb278e6_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting lzo-2.10-h516909a_1000.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting ncurses-6.4-hcb278e6_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting openssl-3.1.1-hd590300_1.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting reproc-14.2.4-h0b41bf4_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting xz-5.2.6-h166bdaf_0.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting yaml-cpp-0.7.0-h27087fc_2.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libbrotlidec-1.0.9-h166bdaf_8.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libbrotlienc-1.0.9-h166bdaf_8.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libedit-3.1.20191231-he28a2e2_2.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libnghttp2-1.52.0-h61bc06f_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libsolv-0.7.24-hfc55251_1.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libsqlite-3.42.0-h2797004_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libssh2-1.11.0-h0841786_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libxml2-2.11.4-h0d562d8_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting readline-8.2-h8228510_1.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting reproc-cpp-14.2.4-hcb278e6_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting tk-8.6.12-h27826a3_0.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting zstd-1.5.2-h3eb15da_6.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting brotli-bin-1.0.9-h166bdaf_8.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting krb5-1.20.1-h81ceb04_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libarchive-3.6.2-h039dbb9_1.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting python-3.10.12-hd12c33a_0_cpython.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting brotli-1.0.9-h166bdaf_8.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting certifi-2023.5.7-pyhd8ed1ab_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting charset-normalizer-3.1.0-pyhd8ed1ab_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting colorama-0.4.6-pyhd8ed1ab_0.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting idna-3.4-pyhd8ed1ab_0.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libcurl-8.1.2-h409715c_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting pluggy-1.2.0-pyhd8ed1ab_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting pycosat-0.6.4-py310h5764c6d_1.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting pycparser-2.21-pyhd8ed1ab_0.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting pysocks-1.7.1-pyha2e5f31_6.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting ruamel.yaml.clib-0.2.7-py310h1fa729e_1.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting setuptools-68.0.0-pyhd8ed1ab_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting toolz-0.12.0-pyhd8ed1ab_0.tar.bz2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting wheel-0.40.0-pyhd8ed1ab_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting cffi-1.15.1-py310h255011f_3.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libmamba-1.4.2-hcea66bb_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting pip-23.1.2-pyhd8ed1ab_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting ruamel.yaml-0.17.32-py310h2372a71_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting tqdm-4.65.0-pyhd8ed1ab_1.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting urllib3-2.0.3-pyhd8ed1ab_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting cryptography-41.0.1-py310h75e40e8_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting libmambapy-1.4.2-py310h1428755_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting requests-2.31.0-pyhd8ed1ab_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting zstandard-0.19.0-py310h1275a96_2.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting conda-package-streaming-0.8.0-pyhd8ed1ab_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting pyopenssl-23.2.0-pyhd8ed1ab_1.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting conda-package-handling-2.0.2-pyh38be061_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting conda-23.1.0-py310hff52083_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Extracting mamba-1.4.2-py310h51d5547_0.conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Installing base environment...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |                                            __\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |           __  ______ ___  ____ _____ ___  / /_  ____ _\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |          / / / / __ `__ \\/ __ `/ __ `__ \\/ __ \\/ __ `/\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |         / /_/ / / / / / / /_/ / / / / / / /_/ / /_/ /\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |        / .___/_/ /_/ /_/\\__,_/_/ /_/ /_/_.___/\\__,_/\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |       /_/\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Transaction\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Prefix: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Updating specs:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::_libgcc_mutex==0.1=conda_forge[md5=d7c89558ba9fa0495403155b64376d81]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::ca-certificates==2023.5.7=hbcca054_0[md5=f5c65075fc34438d5b456c7f3f5ab695]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::ld_impl_linux-64==2.40=h41732ed_0[md5=7aca3059a1729aa76c597603f10b0dd3]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libstdcxx-ng==13.1.0=hfd8a6a1_0[md5=067bcc23164642f4c226da631f2a2e1d]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::pybind11-abi==4=hd8ed1ab_3[md5=878f923dd6acc8aeb47a75da6c4098be]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::python_abi==3.10=3_cp310[md5=4eb33d14d794b0f4be116443ffed3853]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::tzdata==2023c=h71feb2d_0[md5=939e3e74d8be4dac89ce83b20de2492a]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libgomp==13.1.0=he5830b7_0[md5=56ca14d57ac29a75d23a39eb3ee0ddeb]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::_openmp_mutex==4.5=2_gnu[md5=73aaf86a425cc6e73fcf236a5a46396d]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libgcc-ng==13.1.0=he5830b7_0[md5=cd93f779ff018dd85c7544c015c9db3c]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::bzip2==1.0.8=h7f98852_4[md5=a1fd65c7ccbf10880423d82bca54eb54]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::c-ares==1.19.1=hd590300_0[md5=e8c18d865be43e2fb3f7a145b6adf1f5]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::fmt==9.1.0=h924138e_0[md5=b57864c85261a0fbc7132d2cc17478c7]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::icu==72.1=hcb278e6_0[md5=7c8d20d847bb45f56bd941578fcfa146]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::keyutils==1.6.1=h166bdaf_0[md5=30186d27e2c9fa62b45fb1476b7200e3]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libbrotlicommon==1.0.9=h166bdaf_8[md5=9194c9bf9428035a05352d031462eae4]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libev==4.33=h516909a_1[md5=6f8720dff19e17ce5d48cfe7f3d2f0a3]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libffi==3.4.2=h7f98852_5[md5=d645c6d2ac96843a2bfaccd2d62b3ac3]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libiconv==1.17=h166bdaf_0[md5=b62b52da46c39ee2bc3c162ac7f1804d]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libnsl==2.0.0=h7f98852_0[md5=39b1328babf85c7c3a61636d9cd50206]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libuuid==2.38.1=h0b41bf4_0[md5=40b61aab5c7ba9ff276c41cfffe6b80b]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libzlib==1.2.13=hd590300_5[md5=f36c115f1ee199da648e0597ec2047ad]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::lz4-c==1.9.4=hcb278e6_0[md5=318b08df404f9c9be5712aaa5a6f0bb0]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::lzo==2.10=h516909a_1000[md5=bb14fcb13341b81d5eb386423b9d2bac]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::ncurses==6.4=hcb278e6_0[md5=681105bccc2a3f7f1a837d47d39c9179]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::openssl==3.1.1=hd590300_1[md5=2e1d7b458ac8f1e3ca4e18b77add6277]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::reproc==14.2.4=h0b41bf4_0[md5=0f51393e019df1f0047ef864cd9ddeec]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::xz==5.2.6=h166bdaf_0[md5=2161070d867d1b1204ea749c8eec4ef0]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::yaml-cpp==0.7.0=h27087fc_2[md5=0449d47d8457feaa3720d4779616dde2]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libbrotlidec==1.0.9=h166bdaf_8[md5=4ae4d7795d33e02bd20f6b23d91caf82]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libbrotlienc==1.0.9=h166bdaf_8[md5=04bac51ba35ea023dc48af73c1c88c25]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libedit==3.1.20191231=he28a2e2_2[md5=4d331e44109e3f0e19b4cb8f9b82f3e1]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libnghttp2==1.52.0=h61bc06f_0[md5=613955a50485812985c059e7b269f42e]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libsolv==0.7.24=hfc55251_1[md5=9d2787f2fdcf65661e2416b2dffdb668]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libsqlite==3.42.0=h2797004_0[md5=fdaae20a1cf7cd62130a0973190a31b7]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libssh2==1.11.0=h0841786_0[md5=1f5a58e686b13bcfde88b93f547d23fe]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libxml2==2.11.4=h0d562d8_0[md5=e46fad17d5fb57316b956f88dca765e4]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::readline==8.2=h8228510_1[md5=47d31b792659ce70f470b5c82fdfb7a4]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::reproc-cpp==14.2.4=hcb278e6_0[md5=ede8e0f849f2fee2f78cb488b4ea3b33]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::tk==8.6.12=h27826a3_0[md5=5b8c42eb62e9fc961af70bdd6a26e168]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::zstd==1.5.2=h3eb15da_6[md5=6b63daed8feeca47be78f323e793d555]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::brotli-bin==1.0.9=h166bdaf_8[md5=e5613f2bc717e9945840ff474419b8e4]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::krb5==1.20.1=h81ceb04_0[md5=89a41adce7106749573d883b2f657d78]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libarchive==3.6.2=h039dbb9_1[md5=29cf970521d30d113f3425b84cb250f6]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::python==3.10.12=hd12c33a_0_cpython[md5=eb6f1df105f37daedd6dca78523baa75]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::brotli==1.0.9=h166bdaf_8[md5=2ff08978892a3e8b954397c461f18418]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::certifi==2023.5.7=pyhd8ed1ab_0[md5=5d1b71c942b8421285934dad1d891ebc]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::charset-normalizer==3.1.0=pyhd8ed1ab_0[md5=7fcff9f6f123696e940bda77bd4d6551]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::colorama==0.4.6=pyhd8ed1ab_0[md5=3faab06a954c2a04039983f2c4a50d99]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::idna==3.4=pyhd8ed1ab_0[md5=34272b248891bddccc64479f9a7fffed]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libcurl==8.1.2=h409715c_0[md5=50c873c9660ed116707ae15b663928d8]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::pluggy==1.2.0=pyhd8ed1ab_0[md5=7263924c642d22e311d9e59b839f1b33]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::pycosat==0.6.4=py310h5764c6d_1[md5=0e565d732f6660374b45d76761c09b06]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::pycparser==2.21=pyhd8ed1ab_0[md5=076becd9e05608f8dc72757d5f3a91ff]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::pysocks==1.7.1=pyha2e5f31_6[md5=2a7de29fb590ca14b5243c4c812c8025]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::ruamel.yaml.clib==0.2.7=py310h1fa729e_1[md5=2f9b517412af46255cef5e53a22c264e]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::setuptools==68.0.0=pyhd8ed1ab_0[md5=5a7739d0f57ee64133c9d32e6507c46d]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::toolz==0.12.0=pyhd8ed1ab_0[md5=92facfec94bc02d6ccf42e7173831a36]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::wheel==0.40.0=pyhd8ed1ab_0[md5=49bb0d9e60ce1db25e151780331bb5f3]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::cffi==1.15.1=py310h255011f_3[md5=800596144bb613cd7ac58b80900ce835]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libmamba==1.4.2=hcea66bb_0[md5=0b3b4c833ea1ec555063479e2ac259dc]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::pip==23.1.2=pyhd8ed1ab_0[md5=7288da0d36821349cf1126e8670292df]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::ruamel.yaml==0.17.32=py310h2372a71_0[md5=9a03abf74d5069bda767c1bce7a41e0b]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::tqdm==4.65.0=pyhd8ed1ab_1[md5=ed792aff3acb977d09c7013358097f83]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::urllib3==2.0.3=pyhd8ed1ab_0[md5=ae465d0fbf9f1979cb2d8d4043d885e2]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::cryptography==41.0.1=py310h75e40e8_0[md5=bd5501a8ae0df5ef36b9ed03035ebe3a]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::libmambapy==1.4.2=py310h1428755_0[md5=0c942ea14a0e7a9e394882a8e4405235]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::requests==2.31.0=pyhd8ed1ab_0[md5=a30144e4156cdbb236f99ebb49828f8b]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::zstandard==0.19.0=py310h1275a96_2[md5=a2b48edcd52593cdf007158ce10e1520]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::conda-package-streaming==0.8.0=pyhd8ed1ab_0[md5=ebe3230a4c1e135954eee4fb6ef8cded]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::pyopenssl==23.2.0=pyhd8ed1ab_1[md5=34f7d568bf59d18e3fef8c405cbece21]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/noarch::conda-package-handling==2.0.2=pyh38be061_0[md5=44800e9bd13143292097c65e57323038]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::conda==23.1.0=py310hff52083_0[md5=c2f5cd14bf4a8cc673f66fd9839e6602]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - conda-forge/linux-64::mamba==1.4.2=py310h51d5547_0[md5=a84d408833491f202a6d9f6d8fc696db]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Package                         Version  Build               Channel           Size\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Install:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + _libgcc_mutex                     0.1  conda_forge         conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + _openmp_mutex                     4.5  2_gnu               conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + brotli                          1.0.9  h166bdaf_8          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + brotli-bin                      1.0.9  h166bdaf_8          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + bzip2                           1.0.8  h7f98852_4          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + c-ares                         1.19.1  hd590300_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ca-certificates              2023.5.7  hbcca054_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + certifi                      2023.5.7  pyhd8ed1ab_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cffi                           1.15.1  py310h255011f_3     conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + charset-normalizer              3.1.0  pyhd8ed1ab_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + colorama                        0.4.6  pyhd8ed1ab_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + conda                          23.1.0  py310hff52083_0     conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + conda-package-handling          2.0.2  pyh38be061_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + conda-package-streaming         0.8.0  pyhd8ed1ab_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cryptography                   41.0.1  py310h75e40e8_0     conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + fmt                             9.1.0  h924138e_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + icu                              72.1  hcb278e6_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + idna                              3.4  pyhd8ed1ab_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + keyutils                        1.6.1  h166bdaf_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + krb5                           1.20.1  h81ceb04_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ld_impl_linux-64                 2.40  h41732ed_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libarchive                      3.6.2  h039dbb9_1          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libbrotlicommon                 1.0.9  h166bdaf_8          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libbrotlidec                    1.0.9  h166bdaf_8          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libbrotlienc                    1.0.9  h166bdaf_8          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libcurl                         8.1.2  h409715c_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libedit                  3.1.20191231  he28a2e2_2          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libev                            4.33  h516909a_1          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libffi                          3.4.2  h7f98852_5          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libgcc-ng                      13.1.0  he5830b7_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libgomp                        13.1.0  he5830b7_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libiconv                         1.17  h166bdaf_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libmamba                        1.4.2  hcea66bb_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libmambapy                      1.4.2  py310h1428755_0     conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libnghttp2                     1.52.0  h61bc06f_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libnsl                          2.0.0  h7f98852_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libsolv                        0.7.24  hfc55251_1          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libsqlite                      3.42.0  h2797004_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libssh2                        1.11.0  h0841786_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libstdcxx-ng                   13.1.0  hfd8a6a1_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libuuid                        2.38.1  h0b41bf4_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libxml2                        2.11.4  h0d562d8_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libzlib                        1.2.13  hd590300_5          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + lz4-c                           1.9.4  hcb278e6_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + lzo                              2.10  h516909a_1000       conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + mamba                           1.4.2  py310h51d5547_0     conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ncurses                           6.4  hcb278e6_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + openssl                         3.1.1  hd590300_1          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pip                            23.1.2  pyhd8ed1ab_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pluggy                          1.2.0  pyhd8ed1ab_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pybind11-abi                        4  hd8ed1ab_3          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pycosat                         0.6.4  py310h5764c6d_1     conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pycparser                        2.21  pyhd8ed1ab_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pyopenssl                      23.2.0  pyhd8ed1ab_1        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pysocks                         1.7.1  pyha2e5f31_6        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + python                        3.10.12  hd12c33a_0_cpython  conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + python_abi                       3.10  3_cp310             conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + readline                          8.2  h8228510_1          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + reproc                         14.2.4  h0b41bf4_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + reproc-cpp                     14.2.4  hcb278e6_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + requests                       2.31.0  pyhd8ed1ab_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ruamel.yaml                   0.17.32  py310h2372a71_0     conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ruamel.yaml.clib                0.2.7  py310h1fa729e_1     conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + setuptools                     68.0.0  pyhd8ed1ab_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + tk                             8.6.12  h27826a3_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + toolz                          0.12.0  pyhd8ed1ab_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + tqdm                           4.65.0  pyhd8ed1ab_1        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + tzdata                          2023c  h71feb2d_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + urllib3                         2.0.3  pyhd8ed1ab_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + wheel                          0.40.0  pyhd8ed1ab_0        conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xz                              5.2.6  h166bdaf_0          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + yaml-cpp                        0.7.0  h27087fc_2          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + zstandard                      0.19.0  py310h1275a96_2     conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + zstd                            1.5.2  h3eb15da_6          conda-forge     Cached\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Summary:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Install: 74 packages\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Total download: 0 B\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Transaction starting\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking _libgcc_mutex-0.1-conda_forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking ca-certificates-2023.5.7-hbcca054_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking ld_impl_linux-64-2.40-h41732ed_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libstdcxx-ng-13.1.0-hfd8a6a1_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking pybind11-abi-4-hd8ed1ab_3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking python_abi-3.10-3_cp310\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking tzdata-2023c-h71feb2d_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libgomp-13.1.0-he5830b7_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking _openmp_mutex-4.5-2_gnu\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libgcc-ng-13.1.0-he5830b7_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking bzip2-1.0.8-h7f98852_4\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking c-ares-1.19.1-hd590300_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking fmt-9.1.0-h924138e_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking icu-72.1-hcb278e6_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking keyutils-1.6.1-h166bdaf_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libbrotlicommon-1.0.9-h166bdaf_8\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libev-4.33-h516909a_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libffi-3.4.2-h7f98852_5\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libiconv-1.17-h166bdaf_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libnsl-2.0.0-h7f98852_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libuuid-2.38.1-h0b41bf4_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libzlib-1.2.13-hd590300_5\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking lz4-c-1.9.4-hcb278e6_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking lzo-2.10-h516909a_1000\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking ncurses-6.4-hcb278e6_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking openssl-3.1.1-hd590300_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking reproc-14.2.4-h0b41bf4_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking xz-5.2.6-h166bdaf_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking yaml-cpp-0.7.0-h27087fc_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libbrotlidec-1.0.9-h166bdaf_8\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libbrotlienc-1.0.9-h166bdaf_8\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libedit-3.1.20191231-he28a2e2_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libnghttp2-1.52.0-h61bc06f_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libsolv-0.7.24-hfc55251_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libsqlite-3.42.0-h2797004_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libssh2-1.11.0-h0841786_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libxml2-2.11.4-h0d562d8_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking readline-8.2-h8228510_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking reproc-cpp-14.2.4-hcb278e6_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking tk-8.6.12-h27826a3_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking zstd-1.5.2-h3eb15da_6\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking brotli-bin-1.0.9-h166bdaf_8\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking krb5-1.20.1-h81ceb04_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libarchive-3.6.2-h039dbb9_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking python-3.10.12-hd12c33a_0_cpython\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking brotli-1.0.9-h166bdaf_8\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking certifi-2023.5.7-pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking charset-normalizer-3.1.0-pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking colorama-0.4.6-pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking idna-3.4-pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libcurl-8.1.2-h409715c_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking pluggy-1.2.0-pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking pycosat-0.6.4-py310h5764c6d_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking pycparser-2.21-pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking pysocks-1.7.1-pyha2e5f31_6\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking ruamel.yaml.clib-0.2.7-py310h1fa729e_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking setuptools-68.0.0-pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking toolz-0.12.0-pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking wheel-0.40.0-pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking cffi-1.15.1-py310h255011f_3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libmamba-1.4.2-hcea66bb_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking pip-23.1.2-pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking ruamel.yaml-0.17.32-py310h2372a71_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking tqdm-4.65.0-pyhd8ed1ab_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking urllib3-2.0.3-pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking cryptography-41.0.1-py310h75e40e8_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking libmambapy-1.4.2-py310h1428755_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking requests-2.31.0-pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking zstandard-0.19.0-py310h1275a96_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking conda-package-streaming-0.8.0-pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking pyopenssl-23.2.0-pyhd8ed1ab_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking conda-package-handling-2.0.2-pyh38be061_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking conda-23.1.0-py310hff52083_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Linking mamba-1.4.2-py310h51d5547_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Transaction finished\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | installation finished.\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Mamba was found in the `base` env\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::group::Setup environment variables...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Add \"3/condabin\" to PATH\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Set 'CONDA=\"3\"'\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::group::Parsing environment...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::group::Configuring conda package cache...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | [command]/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/condabin/conda config --add pkgs_dirs /home/runneradmin/conda_pkgs_dir\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::group::Applying initial configuration...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Adding channel 'nodefaults'\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | [command]/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/condabin/conda config --add channels nodefaults\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Adding channel 'conda-forge'\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | [command]/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/condabin/conda config --add channels conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | auto_activate_base: false\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | [command]/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/condabin/conda config --set auto_activate_base false\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | auto_update_conda: false\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | [command]/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/condabin/conda config --set auto_update_conda false\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | channel_priority: strict\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | [command]/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/condabin/conda config --set channel_priority strict\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | always_yes: true\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | [command]/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/condabin/conda config --set always_yes true\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | changeps1: false\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | [command]/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/condabin/conda config --set changeps1 false\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | [command]/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/condabin/conda config --show-sources\n[2256f7f4-791e-4082-b72f-d45069042e7b/imports] \ud83c\udfc1  Job failed\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ==> /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/.condarc <==\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | channels:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ==> /home/runneradmin/.condarc <==\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | auto_update_conda: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | auto_activate_base: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | notify_outdated_conda: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | changeps1: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pkgs_dirs:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - /home/runneradmin/conda_pkgs_dir\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | channel_priority: strict\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | channels:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - nodefaults\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - defaults\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | always_yes: True\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | [command]/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/condabin/conda config --show\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | add_anaconda_token: True\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | add_pip_as_python_dependency: True\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aggressive_update_packages:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ca-certificates\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - certifi\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - openssl\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | allow_conda_downgrades: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | allow_cycles: True\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | allow_non_channel_urls: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | allow_softlinks: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | allowlist_channels: []\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | always_copy: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | always_softlink: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | always_yes: True\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | anaconda_upload: None\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | auto_activate_base: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | auto_stack: 0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | auto_update_conda: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | bld_path: \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | changeps1: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | channel_alias: https://conda.anaconda.org\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | channel_priority: strict\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | channels:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - nodefaults\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - defaults\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | client_ssl_cert: None\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | client_ssl_cert_key: None\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | clobber: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | conda_build: {}\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | create_default_packages: []\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | croot: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/conda-bld\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | custom_channels:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   pkgs/main: https://repo.anaconda.com\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   pkgs/r: https://repo.anaconda.com\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   pkgs/pro: https://repo.anaconda.com\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | custom_multichannels:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   defaults: \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |     - https://repo.anaconda.com/pkgs/main\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |     - https://repo.anaconda.com/pkgs/r\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   local: \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | debug: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | default_channels:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - https://repo.anaconda.com/pkgs/main\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - https://repo.anaconda.com/pkgs/r\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | default_python: 3.10\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | default_threads: None\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | deps_modifier: not_set\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dev: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | disallowed_packages: []\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | download_only: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dry_run: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | enable_private_envs: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | env_prompt: ({default_env}) \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | envs_dirs:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - /home/runneradmin/.conda/envs\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | error_upload_url: https://conda.io/conda-post/unexpected-error\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | execute_threads: 1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | extra_safety_checks: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | fetch_threads: 5\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | force: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | force_32bit: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | force_reinstall: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | force_remove: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ignore_pinned: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | json: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | local_repodata_ttl: 1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | migrated_channel_aliases: []\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | migrated_custom_channels: {}\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | non_admin_enabled: True\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | notify_outdated_conda: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | number_channel_notices: 5\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | offline: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | override_channels_enabled: True\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | path_conflict: clobber\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pinned_packages: []\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pip_interop_enabled: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pkgs_dirs:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - /home/runneradmin/conda_pkgs_dir\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | proxy_servers: {}\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | quiet: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | remote_backoff_factor: 1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | remote_connect_timeout_secs: 9.15\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | remote_max_retries: 3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | remote_read_timeout_secs: 60.0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | repodata_fns:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - current_repodata.json\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - repodata.json\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | repodata_threads: None\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | report_errors: None\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | restore_free_channel: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | rollback_enabled: True\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | root_prefix: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | safety_checks: warn\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | sat_solver: pycosat\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | separate_format_cache: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | shortcuts: True\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | show_channel_urls: None\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | signing_metadata_url_base: None\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | solver: classic\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | solver_ignore_timestamps: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ssl_verify: True\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | subdir: linux-64\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | subdirs:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - linux-64\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - noarch\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | target_prefix_override: \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | track_features: []\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | unsatisfiable_hints: True\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | unsatisfiable_hints_check_depth: 2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | update_modifier: update_specs\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | use_index_cache: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | use_local: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | use_only_tar_bz2: False\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | verbosity: 0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | verify_threads: 1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::group::Initializing conda shell integration...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/.bashrc\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/.profile\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | [command]/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/condabin/conda init --all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | no change     /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/condabin/conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | no change     /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/bin/conda\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | no change     /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/bin/conda-env\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | no change     /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/bin/activate\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | no change     /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/bin/deactivate\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | no change     /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/etc/profile.d/conda.sh\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | no change     /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/etc/fish/conf.d/conda.fish\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | no change     /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/shell/condabin/Conda.psm1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | modified      /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/shell/condabin/conda-hook.ps1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | no change     /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/lib/python3.10/site-packages/xontrib/conda.xsh\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | no change     /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/etc/profile.d/conda.csh\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | modified      /home/runneradmin/.bashrc\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | modified      /home/runneradmin/.zshrc\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | modified      /home/runneradmin/.config/fish/config.fish\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | modified      /home/runneradmin/.xonshrc\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | modified      /home/runneradmin/.tcshrc\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | modified      /home/runneradmin/.config/powershell/profile.ps1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ==> For changes to take effect, close and re-open your current shell. <==\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Renaming \"/home/runneradmin/.bashrc\" to \"/home/runneradmin/.profile\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Append to \"/home/runneradmin/.profile\":\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |  \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # ----------------------------------------------------------------------------\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # Conda Setup Action: Basic configuration\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   set -eo pipefail\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # Conda Setup Action: Custom activation\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   conda activate \"test-environment\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # ---------------------------------------------------------------------------- \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Append to \"/home/runneradmin/.zshrc\":\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |  \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # ----------------------------------------------------------------------------\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # Conda Setup Action: Basic configuration\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   set -eo pipefail\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # Conda Setup Action: Custom activation\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   conda activate \"test-environment\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # ---------------------------------------------------------------------------- \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Append to \"/home/runneradmin/.config/fish/config.fish\":\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |  \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # ----------------------------------------------------------------------------\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # Conda Setup Action: Basic configuration\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   set -eo pipefail\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # Conda Setup Action: Custom activation\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   conda activate \"test-environment\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # ---------------------------------------------------------------------------- \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Append to \"/home/runneradmin/.tcshrc\":\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |  \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # ----------------------------------------------------------------------------\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # Conda Setup Action: Basic configuration\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   set -eo pipefail\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # Conda Setup Action: Custom activation\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   conda activate \"test-environment\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # ---------------------------------------------------------------------------- \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Append to \"/home/runneradmin/.xonshrc\":\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |  \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # ----------------------------------------------------------------------------\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # Conda Setup Action: Basic configuration\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   set -eo pipefail\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # Conda Setup Action: Custom activation\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   conda activate \"test-environment\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # ---------------------------------------------------------------------------- \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Append to \"/home/runneradmin/.config/powershell/profile.ps1\":\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |  \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # ----------------------------------------------------------------------------\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # Conda Setup Action: Custom activation\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   conda activate \"test-environment\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   # ---------------------------------------------------------------------------- \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::group::Adding tools to 'base' env...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Do we need to update conda?\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Do we need to update mamba?\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ... we will update mamba.\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udea7  ::warning::Mamba support is still experimental and can result in differently solved environments!\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ... we will perform post-install steps after we update mamba.\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Do we need to update python?\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Do we need to update conda-build?\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | No tools were installed in 'base' env.\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | `mamba` is already executable\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::group::Ensuring environment...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Can we conda create (from explicit)?\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Can we conda create (simple)?\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Can we conda env update?\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ... will conda env update.\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Making patched copy of 'environment-file: continuous_integration/environment-3.10.yaml'\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Using: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/setup-miniconda-patched-environment-3.10.yaml\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | name: test-environment\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | channels:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - nodefaults\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dependencies:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python=3.10\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - packaging\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pyyaml\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - click\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cloudpickle\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - partd\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - fsspec\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - importlib_metadata\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - toolz\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pre-commit\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pytest\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pytest-cov\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pytest-rerunfailures\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pytest-timeout\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pytest-xdist\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - moto\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - mimesis\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - numpy=1.23\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pandas=1.5\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - flask\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - fastparquet>=0.8.0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - h5py\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pytables\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - zarr\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - tiledb-py<0.17.4\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pyspark\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - tiledb>=2.5.0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xarray\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - sqlalchemy>=1.4.16,<2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pyarrow=10\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - coverage\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jsonschema\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - boto3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - botocore\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - bokeh\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - httpretty\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aiohttp\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - s3fs\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - crick\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cytoolz\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - distributed\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ipython\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ipycytoscape\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ipywidgets<8.0.5\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ipykernel<6.22.0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - lz4\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - numba\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - psutil\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - requests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - scikit-image\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - scikit-learn\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - scipy\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python-snappy\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - sparse\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cachey\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python-graphviz\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python-xxhash\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python-cityhash\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - mmh3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jinja2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pip\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pip:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |       - git+https://github.com/dask/distributed\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python=3.10\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::group::Updating 'test-environment' env from conda env update...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | [command]/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/condabin/mamba env update --name test-environment --file /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/setup-miniconda-patched-environment-3.10.yaml\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Looking for: ['python=3.10', 'packaging', 'pyyaml', 'click', 'cloudpickle', 'partd', 'fsspec', 'importlib_metadata', 'toolz', 'pre-commit', 'pytest', 'pytest-cov', 'pytest-rerunfailures', 'pytest-timeout', 'pytest-xdist', 'moto', 'mimesis', 'numpy=1.23', 'pandas=1.5', 'flask', \"fastparquet[version='>=0.8.0']\", 'h5py', 'pytables', 'zarr', \"tiledb-py[version='<0.17.4']\", 'pyspark', \"tiledb[version='>=2.5.0']\", 'xarray', \"sqlalchemy[version='>=1.4.16,<2']\", 'pyarrow=10', 'coverage', 'jsonschema', 'boto3', 'botocore', 'bokeh', 'httpretty', 'aiohttp', 's3fs', 'crick', 'cytoolz', 'distributed', 'ipython', 'ipycytoscape', \"ipywidgets[version='<8.0.5']\", \"ipykernel[version='<6.22.0']\", 'lz4', 'numba', 'psutil', 'requests', 'scikit-image', 'scikit-learn', 'scipy', 'python-snappy', 'sparse', 'cachey', 'python-graphviz', 'python-xxhash', 'python-cityhash', 'mmh3', 'jinja2', 'pip', 'python=3.10']\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Transaction\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Prefix: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Updating specs:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - python=3.10\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - packaging\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - pyyaml\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - click\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - cloudpickle\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - partd\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - fsspec\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - importlib_metadata\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - toolz\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - pre-commit\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - pytest\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - pytest-cov\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - pytest-rerunfailures\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - pytest-timeout\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - pytest-xdist\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - moto\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - mimesis\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - numpy=1.23\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - pandas=1.5\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - flask\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - fastparquet[version='>=0.8.0']\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - h5py\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - pytables\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - zarr\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - tiledb-py[version='<0.17.4']\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - pyspark\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - tiledb[version='>=2.5.0']\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - xarray\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - sqlalchemy[version='>=1.4.16,<2']\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - pyarrow=10\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - coverage\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - jsonschema\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - boto3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - botocore\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - bokeh\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - httpretty\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - aiohttp\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - s3fs\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - crick\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - cytoolz\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - distributed\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - ipython\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - ipycytoscape\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - ipywidgets[version='<8.0.5']\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - ipykernel[version='<6.22.0']\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - lz4\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - numba\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - psutil\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - requests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - scikit-image\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - scikit-learn\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - scipy\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - python-snappy\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - sparse\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - cachey\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - python-graphviz\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - python-xxhash\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - python-cityhash\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - mmh3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - jinja2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - pip\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |    - python=3.10\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Package                               Version  Build                    Channel                   Size\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Install:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + _libgcc_mutex                           0.1  conda_forge              conda-forge/linux-64       3kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + _openmp_mutex                           4.5  2_gnu                    conda-forge/linux-64      24kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aiohttp                               3.8.4  py310h2372a71_1          conda-forge/linux-64     446kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aiosignal                             1.3.1  pyhd8ed1ab_0             conda-forge/noarch        13kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aom                                   3.5.0  h27087fc_0               conda-forge/linux-64       3MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + asciitree                             0.3.3  py_2                     conda-forge/noarch         6kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + asttokens                             2.2.1  pyhd8ed1ab_0             conda-forge/noarch        28kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + async-timeout                         4.0.2  pyhd8ed1ab_0             conda-forge/noarch         9kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + atk-1.0                              2.38.0  hd4edc92_1               conda-forge/linux-64     552kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + attrs                                23.1.0  pyh71513ae_1             conda-forge/noarch        55kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-c-auth                           0.6.28  hccec9ca_5               conda-forge/linux-64     102kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-c-cal                            0.5.27  hf85dbcb_0               conda-forge/linux-64      50kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-c-common                         0.8.20  hd590300_0               conda-forge/linux-64     197kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-c-compression                    0.2.17  h4b87b72_0               conda-forge/linux-64      19kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-c-event-stream                    0.3.0  hc5de78f_6               conda-forge/linux-64      54kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-c-http                            0.7.8  h412fb1b_4               conda-forge/linux-64     193kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-c-io                            0.13.26  h0d05201_0               conda-forge/linux-64     154kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-c-mqtt                           0.8.13  ha5d9b87_2               conda-forge/linux-64     151kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-c-s3                              0.3.4  h95e21fb_5               conda-forge/linux-64      81kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-c-sdkutils                       0.1.10  h4b87b72_0               conda-forge/linux-64      53kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-checksums                        0.1.16  h4b87b72_0               conda-forge/linux-64      50kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-crt-cpp                          0.20.2  h5289e1f_9               conda-forge/linux-64     321kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-sam-translator                   1.70.0  pyhd8ed1ab_0             conda-forge/noarch       247kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-sdk-cpp                         1.10.57  h8101662_14              conda-forge/linux-64       4MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + aws-xray-sdk                         2.12.0  pyhd8ed1ab_0             conda-forge/noarch        74kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + backcall                              0.2.0  pyh9f0ad1d_0             conda-forge/noarch        14kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + backports                               1.0  pyhd8ed1ab_3             conda-forge/noarch         6kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + backports.functools_lru_cache         1.6.5  pyhd8ed1ab_0             conda-forge/noarch        12kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + bcrypt                                3.2.2  py310h5764c6d_1          conda-forge/linux-64      46kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + blinker                               1.6.2  pyhd8ed1ab_0             conda-forge/noarch        18kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + blosc                                1.21.4  h0f2a231_0               conda-forge/linux-64      49kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + bokeh                                 3.2.0  pyhd8ed1ab_0             conda-forge/noarch         6MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + boto3                              1.26.165  pyhd8ed1ab_0             conda-forge/noarch        79kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + botocore                           1.29.165  pyhd8ed1ab_0             conda-forge/noarch         6MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + brotli                                1.0.9  h166bdaf_9               conda-forge/linux-64      20kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + brotli-bin                            1.0.9  h166bdaf_9               conda-forge/linux-64      20kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + brotlipy                              0.7.0  py310h5764c6d_1005       conda-forge/linux-64     351kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + brunsli                                 0.1  h9c3ff4c_0               conda-forge/linux-64     205kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + bzip2                                 1.0.8  h7f98852_4               conda-forge/linux-64     496kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + c-ares                               1.19.1  hd590300_0               conda-forge/linux-64     113kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + c-blosc2                              2.9.3  hb4ffafa_0               conda-forge/linux-64     304kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ca-certificates                    2023.5.7  hbcca054_0               conda-forge/linux-64     148kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cached-property                       1.5.2  hd8ed1ab_1               conda-forge/noarch         4kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cached_property                       1.5.2  pyha770c72_1             conda-forge/noarch        11kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cachey                                0.2.1  pyh9f0ad1d_0             conda-forge/noarch         9kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cairo                                1.16.0  hbbf8b49_1016            conda-forge/linux-64       1MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + certifi                            2023.5.7  pyhd8ed1ab_0             conda-forge/noarch       152kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cffi                                 1.15.1  py310h255011f_3          conda-forge/linux-64     237kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cfgv                                  3.3.1  pyhd8ed1ab_0             conda-forge/noarch        11kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cfitsio                               4.2.0  hd9d235c_0               conda-forge/linux-64     848kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cfn-lint                            0.77.10  pyhd8ed1ab_0             conda-forge/noarch       979kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + charls                                2.4.2  h59595ed_0               conda-forge/linux-64     150kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + charset-normalizer                    3.1.0  pyhd8ed1ab_0             conda-forge/noarch        45kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + click                                 8.1.3  unix_pyhd8ed1ab_2        conda-forge/noarch        76kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cloudpickle                           2.2.1  pyhd8ed1ab_0             conda-forge/noarch        28kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + colorama                              0.4.6  pyhd8ed1ab_0             conda-forge/noarch        25kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + comm                                  0.1.3  pyhd8ed1ab_0             conda-forge/noarch        11kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + contourpy                             1.1.0  py310hd41b1e2_0          conda-forge/linux-64     221kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + coverage                              7.2.7  py310h2372a71_0          conda-forge/linux-64     281kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cramjam                               2.6.2  py310h3392aa1_0          conda-forge/linux-64       2MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + crick                                 0.0.3  py310hde88566_1003       conda-forge/linux-64     222kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cryptography                         41.0.1  py310h75e40e8_0          conda-forge/linux-64       2MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + curl                                  8.1.2  h409715c_0               conda-forge/linux-64      91kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + cytoolz                              0.12.0  py310h5764c6d_1          conda-forge/linux-64     398kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + dask-core                          2023.6.1  pyhd8ed1ab_0             conda-forge/noarch       849kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + dav1d                                 1.2.1  hd590300_0               conda-forge/linux-64     760kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + debugpy                               1.6.7  py310heca2aa9_0          conda-forge/linux-64       2MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + decorator                             5.1.1  pyhd8ed1ab_0             conda-forge/noarch        12kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + distlib                               0.3.6  pyhd8ed1ab_0             conda-forge/noarch       340kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + distributed                        2023.6.1  pyhd8ed1ab_0             conda-forge/noarch       777kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + docker-py                             6.1.0  pyhd8ed1ab_0             conda-forge/noarch       103kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ecdsa                                0.18.0  pyhd8ed1ab_1             conda-forge/noarch       122kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + entrypoints                             0.4  pyhd8ed1ab_0             conda-forge/noarch         9kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + exceptiongroup                        1.1.1  pyhd8ed1ab_0             conda-forge/noarch        19kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + execnet                               1.9.0  pyhd8ed1ab_0             conda-forge/noarch        33kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + executing                             1.2.0  pyhd8ed1ab_0             conda-forge/noarch        25kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + expat                                 2.5.0  hcb278e6_1               conda-forge/linux-64     137kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + fasteners                            0.17.3  pyhd8ed1ab_0             conda-forge/noarch        20kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + fastparquet                        2023.4.0  py310h0a54255_0          conda-forge/linux-64     442kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + filelock                             3.12.2  pyhd8ed1ab_0             conda-forge/noarch        15kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + flask                                 2.3.2  pyhd8ed1ab_0             conda-forge/noarch        80kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + flask_cors                           3.0.10  pyhd3deb0d_0             conda-forge/noarch        15kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + font-ttf-dejavu-sans-mono              2.37  hab24e00_0               conda-forge/noarch       397kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + font-ttf-inconsolata                  3.000  h77eed37_0               conda-forge/noarch        97kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + font-ttf-source-code-pro              2.038  h77eed37_0               conda-forge/noarch       701kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + font-ttf-ubuntu                        0.83  hab24e00_0               conda-forge/noarch         2MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + fontconfig                           2.14.2  h14ed4e7_0               conda-forge/linux-64     272kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + fonts-conda-ecosystem                     1  0                        conda-forge/noarch         4kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + fonts-conda-forge                         1  0                        conda-forge/noarch         4kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + freetype                             2.12.1  hca18f0e_1               conda-forge/linux-64     626kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + fribidi                              1.0.10  h36c2ea0_0               conda-forge/linux-64     114kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + frozenlist                            1.3.3  py310h5764c6d_0          conda-forge/linux-64      45kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + fsspec                             2023.6.0  pyh1a96a4e_0             conda-forge/noarch       118kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + gdk-pixbuf                          2.42.10  h6b639ba_2               conda-forge/linux-64     573kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + gettext                              0.21.1  h27087fc_0               conda-forge/linux-64       4MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + gflags                                2.2.2  he1b5a44_1004            conda-forge/linux-64     117kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + giflib                                5.2.1  h0b41bf4_3               conda-forge/linux-64      77kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + glog                                  0.6.0  h6f12383_0               conda-forge/linux-64     114kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + gmp                                   6.2.1  h58526e2_0               conda-forge/linux-64     826kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + gmpy2                                 2.1.2  py310h3ec546c_1          conda-forge/linux-64     220kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + graphite2                            1.3.13  h58526e2_1001            conda-forge/linux-64     105kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + graphql-core                          3.2.3  pyhd8ed1ab_0             conda-forge/noarch       367kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + graphviz                              8.0.5  h28d9a01_0               conda-forge/linux-64       2MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + greenlet                              2.0.2  py310hc6cd4ac_1          conda-forge/linux-64     191kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + gtk2                                2.24.33  h90689f9_2               conda-forge/linux-64       8MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + gts                                   0.7.6  h977cf35_4               conda-forge/linux-64     318kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + h5py                                  3.9.0  nompi_py310hcca72df_101  conda-forge/linux-64       1MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + harfbuzz                              7.3.0  hdb3a94d_0               conda-forge/linux-64       1MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + hdf5                                 1.14.1  nompi_h4f84152_100       conda-forge/linux-64       4MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + heapdict                              1.0.1  py_0                     conda-forge/noarch         7kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + httpretty                             1.1.4  pyhd8ed1ab_0             conda-forge/noarch        26kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + icu                                    72.1  hcb278e6_0               conda-forge/linux-64      12MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + identify                             2.5.24  pyhd8ed1ab_0             conda-forge/noarch        78kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + idna                                    3.4  pyhd8ed1ab_0             conda-forge/noarch        57kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + imagecodecs                       2023.1.23  py310h241fb82_2          conda-forge/linux-64       2MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + imageio                              2.31.1  pyh24c5eb1_0             conda-forge/noarch       290kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + importlib-metadata                    6.7.0  pyha770c72_0             conda-forge/noarch        26kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + importlib_metadata                    6.7.0  hd8ed1ab_0               conda-forge/noarch         9kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + importlib_resources                  5.12.0  pyhd8ed1ab_0             conda-forge/noarch        31kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + iniconfig                             2.0.0  pyhd8ed1ab_0             conda-forge/noarch        11kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ipycytoscape                          1.3.3  pyhd8ed1ab_1             conda-forge/noarch         3MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ipykernel                            6.21.3  pyh210e3f2_0             conda-forge/noarch       111kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ipython                              8.14.0  pyh41d4057_0             conda-forge/noarch       583kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ipywidgets                            8.0.4  pyhd8ed1ab_0             conda-forge/noarch       111kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + itsdangerous                          2.1.2  pyhd8ed1ab_0             conda-forge/noarch        16kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jedi                                 0.18.2  pyhd8ed1ab_0             conda-forge/noarch       804kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jinja2                                3.1.2  pyhd8ed1ab_1             conda-forge/noarch       101kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jmespath                              1.0.1  pyhd8ed1ab_0             conda-forge/noarch        21kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + joblib                                1.3.0  pyhd8ed1ab_1             conda-forge/noarch       221kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jschema-to-python                     1.2.3  pyhd8ed1ab_0             conda-forge/noarch        12kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jsondiff                              2.0.0  pyhd8ed1ab_0             conda-forge/noarch        10kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jsonpatch                              1.32  pyhd8ed1ab_0             conda-forge/noarch        15kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jsonpickle                            2.2.0  pyhd8ed1ab_0             conda-forge/noarch        35kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jsonpointer                             2.0  py_0                     conda-forge/noarch         9kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jsonschema                           4.17.3  pyhd8ed1ab_0             conda-forge/noarch        70kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jsonschema-spec                       0.1.6  pyhd8ed1ab_0             conda-forge/noarch        17kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + junit-xml                               1.9  pyh9f0ad1d_0             conda-forge/noarch        11kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jupyter_client                        8.3.0  pyhd8ed1ab_0             conda-forge/noarch       104kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jupyter_core                          5.3.1  py310hff52083_0          conda-forge/linux-64      92kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jupyterlab_widgets                    3.0.7  pyhd8ed1ab_1             conda-forge/noarch       173kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + jxrlib                                  1.1  h7f98852_2               conda-forge/linux-64     241kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + keyutils                              1.6.1  h166bdaf_0               conda-forge/linux-64     118kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + krb5                                 1.20.1  h81ceb04_0               conda-forge/linux-64       1MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + lazy-object-proxy                     1.9.0  py310h1fa729e_0          conda-forge/linux-64      34kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + lazy_loader                             0.2  pyhd8ed1ab_0             conda-forge/noarch        14kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + lcms2                                  2.15  haa2dc70_1               conda-forge/linux-64     242kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ld_impl_linux-64                       2.40  h41732ed_0               conda-forge/linux-64     705kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + lerc                                  4.0.0  h27087fc_0               conda-forge/linux-64     282kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libabseil                        20230125.3  cxx17_h59595ed_0         conda-forge/linux-64       1MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libaec                                1.0.6  hcb278e6_1               conda-forge/linux-64      34kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libarrow                             10.0.1  h3bdf5bc_31_cpu          conda-forge/linux-64      27MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libavif                              0.11.1  h8182462_2               conda-forge/linux-64     102kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libblas                               3.9.0  17_linux64_openblas      conda-forge/linux-64      14kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libbrotlicommon                       1.0.9  h166bdaf_9               conda-forge/linux-64      71kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libbrotlidec                          1.0.9  h166bdaf_9               conda-forge/linux-64      33kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libbrotlienc                          1.0.9  h166bdaf_9               conda-forge/linux-64     265kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libcblas                              3.9.0  17_linux64_openblas      conda-forge/linux-64      14kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libcrc32c                             1.1.2  h9c3ff4c_0               conda-forge/linux-64      20kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libcurl                               8.1.2  h409715c_0               conda-forge/linux-64     373kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libdeflate                             1.18  h0b41bf4_0               conda-forge/linux-64      65kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libedit                        3.1.20191231  he28a2e2_2               conda-forge/linux-64     124kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libev                                  4.33  h516909a_1               conda-forge/linux-64     106kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libevent                             2.1.12  hf998b51_1               conda-forge/linux-64     427kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libexpat                              2.5.0  hcb278e6_1               conda-forge/linux-64      78kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libffi                                3.4.2  h7f98852_5               conda-forge/linux-64      58kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libgcc-ng                            13.1.0  he5830b7_0               conda-forge/linux-64     776kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libgd                                 2.3.3  hfa28ad5_6               conda-forge/linux-64     223kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libgfortran-ng                       13.1.0  h69a702a_0               conda-forge/linux-64      23kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libgfortran5                         13.1.0  h15d22d2_0               conda-forge/linux-64       1MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libglib                              2.76.3  hebfc3b9_0               conda-forge/linux-64       3MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libgomp                              13.1.0  he5830b7_0               conda-forge/linux-64     419kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libgoogle-cloud                      2.12.0  hac9eb74_0               conda-forge/linux-64      45MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libgrpc                              1.54.2  hb20ce57_2               conda-forge/linux-64       6MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libiconv                               1.17  h166bdaf_0               conda-forge/linux-64       1MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libjpeg-turbo                       2.1.5.1  h0b41bf4_0               conda-forge/linux-64     491kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + liblapack                             3.9.0  17_linux64_openblas      conda-forge/linux-64      14kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libllvm14                            14.0.6  hcd5def8_3               conda-forge/linux-64      31MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libnghttp2                           1.52.0  h61bc06f_0               conda-forge/linux-64     622kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libnsl                                2.0.0  h7f98852_0               conda-forge/linux-64      31kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libnuma                              2.0.16  h0b41bf4_1               conda-forge/linux-64      41kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libopenblas                          0.3.23  pthreads_h80387f5_0      conda-forge/linux-64       5MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libpng                               1.6.39  h753d276_0               conda-forge/linux-64     283kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libprotobuf                         3.21.12  h3eb15da_0               conda-forge/linux-64       2MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + librsvg                              2.56.1  h98fae49_0               conda-forge/linux-64       5MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libsodium                            1.0.18  h36c2ea0_1               conda-forge/linux-64     375kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libsqlite                            3.42.0  h2797004_0               conda-forge/linux-64     829kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libssh2                              1.11.0  h0841786_0               conda-forge/linux-64     271kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libstdcxx-ng                         13.1.0  hfd8a6a1_0               conda-forge/linux-64       4MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libthrift                            0.18.1  h8fd135c_2               conda-forge/linux-64       4MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libtiff                               4.5.1  h8b53f26_0               conda-forge/linux-64     418kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libtool                               2.4.7  h27087fc_0               conda-forge/linux-64     412kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libutf8proc                           2.8.0  h166bdaf_0               conda-forge/linux-64     101kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libuuid                              2.38.1  h0b41bf4_0               conda-forge/linux-64      34kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libwebp                               1.3.1  hbf2b3c1_0               conda-forge/linux-64      84kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libwebp-base                          1.3.1  hd590300_0               conda-forge/linux-64     400kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libxcb                                 1.15  h0b41bf4_0               conda-forge/linux-64     384kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libxml2                              2.11.4  h0d562d8_0               conda-forge/linux-64     704kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libzlib                              1.2.13  hd590300_5               conda-forge/linux-64      62kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + libzopfli                             1.0.3  h9c3ff4c_0               conda-forge/linux-64     168kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + llvmlite                             0.40.1  py310h1b8f574_0          conda-forge/linux-64       3MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + locket                                1.0.0  pyhd8ed1ab_0             conda-forge/noarch         8kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + lz4                                   4.3.2  py310h0cfdcf0_0          conda-forge/linux-64      37kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + lz4-c                                 1.9.4  hcb278e6_0               conda-forge/linux-64     143kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + lzo                                    2.10  h516909a_1000            conda-forge/linux-64     321kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + markupsafe                            2.1.3  py310h2372a71_0          conda-forge/linux-64      24kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + matplotlib-inline                     0.1.6  pyhd8ed1ab_0             conda-forge/noarch        12kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + mimesis                              10.1.0  pyhd8ed1ab_0             conda-forge/noarch         4MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + mmh3                                  4.0.0  py310hc6cd4ac_0          conda-forge/linux-64      33kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + moto                                 4.1.12  pyhd8ed1ab_0             conda-forge/noarch         2MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + mpc                                   1.3.1  hfe3b2da_0               conda-forge/linux-64     116kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + mpfr                                  4.2.0  hb012696_0               conda-forge/linux-64     631kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + mpmath                                1.3.0  pyhd8ed1ab_0             conda-forge/noarch       438kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + msgpack-python                        1.0.5  py310hdf3cbec_0          conda-forge/linux-64      85kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + multidict                             6.0.4  py310h1fa729e_0          conda-forge/linux-64      53kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + nbformat                              5.9.0  pyhd8ed1ab_0             conda-forge/noarch       101kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ncurses                                 6.4  hcb278e6_0               conda-forge/linux-64     881kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + nest-asyncio                          1.5.6  pyhd8ed1ab_0             conda-forge/noarch        10kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + networkx                              2.8.8  pyhd8ed1ab_0             conda-forge/noarch         2MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + nodeenv                               1.8.0  pyhd8ed1ab_0             conda-forge/noarch        34kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + nomkl                                   1.0  h5ca1d4c_0               conda-forge/noarch         4kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + numba                                0.57.1  py310h0f6aa51_0          conda-forge/linux-64       4MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + numcodecs                            0.11.0  py310heca2aa9_1          conda-forge/linux-64     671kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + numexpr                               2.8.4  py310h690d005_100        conda-forge/linux-64     129kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + numpy                                1.23.5  py310h53a5b5f_0          conda-forge/linux-64       6MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + openapi-schema-validator              0.4.4  pyhd8ed1ab_0             conda-forge/noarch        17kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + openapi-spec-validator                0.5.7  pyhd8ed1ab_0             conda-forge/noarch        37kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + openjpeg                              2.5.0  hfec8fc6_2               conda-forge/linux-64     352kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + openssl                               3.1.1  hd590300_1               conda-forge/linux-64       3MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + orc                                   1.9.0  h2f23424_0               conda-forge/linux-64       1MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + packaging                              23.1  pyhd8ed1ab_0             conda-forge/noarch        46kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pandas                                1.5.3  py310h9b08913_1          conda-forge/linux-64      12MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pango                               1.50.14  heaa33ce_1               conda-forge/linux-64     443kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + paramiko                              3.2.0  pyhd8ed1ab_0             conda-forge/noarch       158kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + parso                                 0.8.3  pyhd8ed1ab_0             conda-forge/noarch        71kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + partd                                 1.4.0  pyhd8ed1ab_0             conda-forge/noarch        20kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pathable                              0.4.3  pyhd8ed1ab_0             conda-forge/noarch        17kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pbr                                  5.11.1  pyhd8ed1ab_0             conda-forge/noarch        76kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pcre2                                 10.40  hc3806b6_0               conda-forge/linux-64       2MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pexpect                               4.8.0  pyh1a96a4e_2             conda-forge/noarch        49kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pickleshare                           0.7.5  py_1003                  conda-forge/noarch         9kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pillow                                9.5.0  py310h582fbeb_1          conda-forge/linux-64      46MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pip                                  23.1.2  pyhd8ed1ab_0             conda-forge/noarch         1MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pixman                               0.40.0  h36c2ea0_0               conda-forge/linux-64     643kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pkgutil-resolve-name                 1.3.10  pyhd8ed1ab_0             conda-forge/noarch         9kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + platformdirs                          3.1.1  pyhd8ed1ab_0             conda-forge/noarch        18kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pluggy                                1.2.0  pyhd8ed1ab_0             conda-forge/noarch        22kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pooch                                 1.7.0  pyha770c72_3             conda-forge/noarch        51kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pre-commit                            3.3.3  pyha770c72_0             conda-forge/noarch       180kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + prompt-toolkit                       3.0.38  pyha770c72_0             conda-forge/noarch       269kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + prompt_toolkit                       3.0.38  hd8ed1ab_0               conda-forge/noarch         6kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + psutil                                5.9.5  py310h1fa729e_0          conda-forge/linux-64     362kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pthread-stubs                           0.4  h36c2ea0_1001            conda-forge/linux-64       6kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ptyprocess                            0.7.0  pyhd3deb0d_0             conda-forge/noarch        17kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pure_eval                             0.2.2  pyhd8ed1ab_0             conda-forge/noarch        15kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + py-cpuinfo                            9.0.0  pyhd8ed1ab_0             conda-forge/noarch        25kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + py4j                               0.10.9.7  pyhd8ed1ab_0             conda-forge/noarch       186kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pyarrow                              10.0.1  py310he6bfd7f_31_cpu     conda-forge/linux-64       4MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pyasn1                                0.4.8  py_0                     conda-forge/noarch        54kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pycparser                              2.21  pyhd8ed1ab_0             conda-forge/noarch       103kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pydantic                            1.10.10  py310h2372a71_0          conda-forge/linux-64       2MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pygments                             2.15.1  pyhd8ed1ab_0             conda-forge/noarch       841kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pynacl                                1.5.0  py310h5764c6d_2          conda-forge/linux-64       1MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pyopenssl                            23.2.0  pyhd8ed1ab_1             conda-forge/noarch       129kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pyparsing                             3.1.0  pyhd8ed1ab_0             conda-forge/noarch        89kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pyrsistent                           0.19.3  py310h1fa729e_0          conda-forge/linux-64     100kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pysocks                               1.7.1  pyha2e5f31_6             conda-forge/noarch        19kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pyspark                               3.4.1  pyhd8ed1ab_0             conda-forge/noarch       304MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pytables                              3.8.0  py310ha028ce3_2          conda-forge/linux-64       2MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pytest                                7.4.0  pyhd8ed1ab_0             conda-forge/noarch       244kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pytest-cov                            4.1.0  pyhd8ed1ab_0             conda-forge/noarch        25kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pytest-rerunfailures                 11.1.2  pyhd8ed1ab_0             conda-forge/noarch        17kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pytest-timeout                        2.1.0  pyhd8ed1ab_0             conda-forge/noarch        16kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pytest-xdist                          3.3.1  pyhd8ed1ab_0             conda-forge/noarch        36kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + python                              3.10.12  hd12c33a_0_cpython       conda-forge/linux-64      26MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + python-cityhash                       0.4.7  py310hc6cd4ac_0          conda-forge/linux-64      63kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + python-dateutil                       2.8.2  pyhd8ed1ab_0             conda-forge/noarch       246kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + python-fastjsonschema                2.17.1  pyhd8ed1ab_0             conda-forge/noarch       226kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + python-graphviz                      0.20.1  pyh22cad53_0             conda-forge/noarch        36kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + python-jose                           3.3.0  pyh6c4a22f_1             conda-forge/noarch       116kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + python-snappy                         0.6.1  py310hcee4d7c_0          conda-forge/linux-64      32kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + python-xxhash                         3.2.0  py310h1fa729e_0          conda-forge/linux-64      23kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + python_abi                             3.10  3_cp310                  conda-forge/linux-64       6kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pytz                                 2023.3  pyhd8ed1ab_0             conda-forge/noarch       187kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pywavelets                            1.4.1  py310h0a54255_0          conda-forge/linux-64       4MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pywin32-on-windows                    0.1.0  pyh1179c8e_3             conda-forge/noarch         5kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pyyaml                                  6.0  py310h5764c6d_5          conda-forge/linux-64     176kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + pyzmq                                25.1.0  py310h5bbb5d0_0          conda-forge/linux-64     453kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + rdma-core                              28.9  h59595ed_1               conda-forge/linux-64       4MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + re2                              2023.03.02  h8c504da_0               conda-forge/linux-64     201kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + readline                                8.2  h8228510_1               conda-forge/linux-64     281kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + regex                              2023.6.3  py310h2372a71_0          conda-forge/linux-64     346kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + requests                             2.31.0  pyhd8ed1ab_0             conda-forge/noarch        57kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + responses                            0.23.1  pyhd8ed1ab_0             conda-forge/noarch        48kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + rfc3339-validator                     0.1.4  pyhd8ed1ab_0             conda-forge/noarch         8kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + rsa                                     4.9  pyhd8ed1ab_0             conda-forge/noarch        30kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + s2n                                  1.3.45  h06160fa_0               conda-forge/linux-64     368kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + s3fs                                  0.4.2  py_0                     conda-forge/noarch        21kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + s3transfer                            0.6.1  pyhd8ed1ab_0             conda-forge/noarch        61kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + sarif-om                              1.0.4  pyhd8ed1ab_0             conda-forge/noarch        19kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + scikit-image                         0.20.0  py310h9b08913_1          conda-forge/linux-64      10MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + scikit-learn                          1.3.0  py310hf7d194e_0          conda-forge/linux-64       8MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + scipy                                1.11.1  py310ha4c1d20_0          conda-forge/linux-64      15MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + setuptools                           68.0.0  pyhd8ed1ab_0             conda-forge/noarch       464kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + six                                  1.16.0  pyh6c4a22f_0             conda-forge/noarch        14kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + snappy                               1.1.10  h9fff704_0               conda-forge/linux-64      39kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + sortedcontainers                      2.4.0  pyhd8ed1ab_0             conda-forge/noarch        26kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + sparse                               0.14.0  pyhd8ed1ab_0             conda-forge/noarch        66kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + spectate                              1.0.1  pyhd8ed1ab_0             conda-forge/noarch        16kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + sqlalchemy                           1.4.48  py310h2372a71_0          conda-forge/linux-64       2MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + sshpubkeys                            3.3.1  pyhd8ed1ab_0             conda-forge/noarch        14kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + stack_data                            0.6.2  pyhd8ed1ab_0             conda-forge/noarch        26kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + sympy                                  1.12  pypyh9d50eac_103         conda-forge/noarch         4MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + tblib                                 1.7.0  pyhd8ed1ab_0             conda-forge/noarch        15kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + threadpoolctl                         3.1.0  pyh8a188c0_0             conda-forge/noarch        18kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + tifffile                          2023.4.12  pyhd8ed1ab_0             conda-forge/noarch       175kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + tiledb                               2.11.3  h3f4058f_1               conda-forge/linux-64       5MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + tiledb-py                            0.17.3  py310hdbd97e5_0          conda-forge/linux-64       1MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + tk                                   8.6.12  h27826a3_0               conda-forge/linux-64       3MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + toml                                 0.10.2  pyhd8ed1ab_0             conda-forge/noarch        18kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + tomli                                 2.0.1  pyhd8ed1ab_0             conda-forge/noarch        16kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + toolz                                0.12.0  pyhd8ed1ab_0             conda-forge/noarch        49kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + tornado                               6.3.2  py310h2372a71_0          conda-forge/linux-64     639kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + traitlets                             5.9.0  pyhd8ed1ab_0             conda-forge/noarch        98kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + types-pyyaml                      6.0.12.10  pyhd8ed1ab_0             conda-forge/noarch        25kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + typing-extensions                     4.4.0  hd8ed1ab_0               conda-forge/noarch         9kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + typing_extensions                     4.4.0  pyha770c72_0             conda-forge/noarch        30kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + tzdata                                2023c  h71feb2d_0               conda-forge/noarch       118kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ucx                                  1.14.1  hf587318_2               conda-forge/linux-64      17MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + ukkonen                               1.0.1  py310hbf28c38_3          conda-forge/linux-64      13kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + urllib3                             1.26.15  pyhd8ed1ab_0             conda-forge/noarch       113kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + virtualenv                          20.21.1  pyhd8ed1ab_0             conda-forge/noarch         6MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + wcwidth                               0.2.6  pyhd8ed1ab_0             conda-forge/noarch        29kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + websocket-client                      1.6.1  pyhd8ed1ab_0             conda-forge/noarch        46kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + werkzeug                              2.3.6  pyhd8ed1ab_0             conda-forge/noarch       254kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + wheel                                0.40.0  pyhd8ed1ab_0             conda-forge/noarch        56kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + widgetsnbextension                    4.0.7  pyhd8ed1ab_0             conda-forge/noarch       848kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + wrapt                                1.15.0  py310h1fa729e_0          conda-forge/linux-64      54kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xarray                             2023.6.0  pyhd8ed1ab_0             conda-forge/noarch       677kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xmltodict                            0.13.0  pyhd8ed1ab_0             conda-forge/noarch        14kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xorg-kbproto                          1.0.7  h7f98852_1002            conda-forge/linux-64      27kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xorg-libice                           1.1.1  hd590300_0               conda-forge/linux-64      58kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xorg-libsm                            1.2.4  h7391055_0               conda-forge/linux-64      27kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xorg-libx11                           1.8.6  h8ee46fc_0               conda-forge/linux-64     829kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xorg-libxau                          1.0.11  hd590300_0               conda-forge/linux-64      14kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xorg-libxdmcp                         1.1.3  h7f98852_0               conda-forge/linux-64      19kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xorg-libxext                          1.3.4  h0b41bf4_2               conda-forge/linux-64      50kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xorg-libxrender                      0.9.10  h7f98852_1003            conda-forge/linux-64      33kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xorg-renderproto                     0.11.1  h7f98852_1002            conda-forge/linux-64      10kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xorg-xextproto                        7.3.0  h0b41bf4_1003            conda-forge/linux-64      30kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xorg-xproto                          7.0.31  h7f98852_1007            conda-forge/linux-64      75kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xxhash                                0.8.1  h0b41bf4_0               conda-forge/linux-64      89kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xyzservices                        2023.5.0  pyhd8ed1ab_1             conda-forge/noarch        36kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + xz                                    5.2.6  h166bdaf_0               conda-forge/linux-64     418kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + yaml                                  0.2.5  h7f98852_2               conda-forge/linux-64      89kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + yarl                                  1.9.2  py310h2372a71_0          conda-forge/linux-64      97kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + zarr                                 2.15.0  pyhd8ed1ab_0             conda-forge/noarch       157kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + zeromq                                4.3.4  h9c3ff4c_1               conda-forge/linux-64     360kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + zfp                                   1.0.0  h27087fc_3               conda-forge/linux-64     292kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + zict                                  3.0.0  pyhd8ed1ab_0             conda-forge/noarch        36kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + zipp                                 3.15.0  pyhd8ed1ab_0             conda-forge/noarch        17kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + zlib                                 1.2.13  hd590300_5               conda-forge/linux-64      93kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + zlib-ng                               2.0.7  h0b41bf4_0               conda-forge/linux-64      95kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   + zstd                                  1.5.2  h3eb15da_6               conda-forge/linux-64     420kB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Summary:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Install: 363 packages\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Total download: 758MB\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Downloading and Extracting Packages\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \r\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Preparing transaction: ...working... done\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Verifying transaction: ...working... done\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Executing transaction: ...working... \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | done\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Installing pip dependencies: ...working... Ran pip subprocess with arguments:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ['/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/bin/python', '-m', 'pip', 'install', '-U', '-r', '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt', '--exists-action=b']\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Pip subprocess output:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Collecting git+https://github.com/dask/distributed (from -r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1))\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Cloning https://github.com/dask/distributed to /tmp/pip-req-build-fgnxj23s\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Resolved https://github.com/dask/distributed to commit 9b9f948b8143fee43887a941a3304273beed4a50\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Installing build dependencies: started\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Installing build dependencies: finished with status 'done'\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Getting requirements to build wheel: started\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Getting requirements to build wheel: finished with status 'done'\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Installing backend dependencies: started\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Installing backend dependencies: finished with status 'done'\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Preparing metadata (pyproject.toml): started\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: click>=8.0 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (8.1.3)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: cloudpickle>=1.5.0 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (2.2.1)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: dask==2023.6.1 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (2023.6.1)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: jinja2>=2.10.3 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (3.1.2)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: locket>=1.0.0 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (1.0.0)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: msgpack>=1.0.0 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (1.0.5)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: packaging>=20.0 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (23.1)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: psutil>=5.7.2 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (5.9.5)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: pyyaml>=5.3.1 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (6.0)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: sortedcontainers>=2.0.5 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (2.4.0)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: tblib>=1.6.0 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (1.7.0)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: toolz>=0.10.0 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (0.12.0)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: tornado>=6.0.4 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (6.3.2)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: urllib3>=1.24.3 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (1.26.15)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: zict>=2.2.0 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (3.0.0)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: fsspec>=2021.09.0 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from dask==2023.6.1->distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (2023.6.0)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: partd>=1.2.0 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from dask==2023.6.1->distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (1.4.0)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: importlib-metadata>=4.13.0 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from dask==2023.6.1->distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (6.7.0)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: MarkupSafe>=2.0 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from jinja2>=2.10.3->distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (2.1.3)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Requirement already satisfied: zipp>=0.5 in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages (from importlib-metadata>=4.13.0->dask==2023.6.1->distributed==2023.6.1+3.g9b9f948b->-r /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/condaenv.ev73cial.requirements.txt (line 1)) (3.15.0)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Building wheels for collected packages: distributed\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Building wheel for distributed (pyproject.toml): started\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Building wheel for distributed (pyproject.toml): finished with status 'done'\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Created wheel for distributed: filename=distributed-2023.6.1+3.g9b9f948b-py3-none-any.whl size=985670 sha256=c02fb281c39de77464c282b9f761f02be3d5ddd8a729f6860f36516a9304c795\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Stored in directory: /tmp/pip-ephem-wheel-cache-n_eodluf/wheels/45/01/16/45fd185e5f26e8968e1f9f9c978705370925d72e511d47c624\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Successfully built distributed\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Installing collected packages: distributed\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Attempting uninstall: distributed\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |     Found existing installation: distributed 2023.6.1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |     Uninstalling distributed-2023.6.1:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |       Successfully uninstalled distributed-2023.6.1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Successfully installed distributed-2023.6.1+3.g9b9f948b\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | done\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | #\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | # To activate this environment, use\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | #\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | #     $ conda activate test-environment\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | #\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | # To deactivate an active environment, use\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | #\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | #     $ conda deactivate\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | setup-miniconda ran successfully\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2705  Success - Main Setup Conda Environment\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2699  ::set-env:: INPUT_RUN_POST=true\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2699  ::set-env:: CONDA=3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2699  ::set-env:: CONDA_PKGS_DIR=/home/runneradmin/conda_pkgs_dir\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2699  ::set-output:: environment-file=/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/continuous_integration/setup-miniconda-patched-environment-3.10.yaml\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2699  ::set-output:: environment-file-content=|\n  name: test-environment\n  channels:\n    - conda-forge\n    - nodefaults\n  dependencies:\n    - python=3.10\n    - packaging\n    - pyyaml\n    - click\n    - cloudpickle\n    - partd\n    - fsspec\n    - importlib_metadata\n    - toolz\n    - pre-commit\n    - pytest\n    - pytest-cov\n    - pytest-rerunfailures\n    - pytest-timeout\n    - pytest-xdist\n    - moto\n    - mimesis\n    - numpy=1.23\n    - pandas=1.5\n    - flask\n    - fastparquet>=0.8.0\n    - h5py\n    - pytables\n    - zarr\n    - tiledb-py<0.17.4\n    - pyspark\n    - tiledb>=2.5.0\n    - xarray\n    - sqlalchemy>=1.4.16,<2\n    - pyarrow=10\n    - coverage\n    - jsonschema\n    - boto3\n    - botocore\n    - bokeh\n    - httpretty\n    - aiohttp\n    - s3fs\n    - crick\n    - cytoolz\n    - distributed\n    - ipython\n    - ipycytoscape\n    - ipywidgets<8.0.5\n    - ipykernel<6.22.0\n    - lz4\n    - numba\n    - psutil\n    - requests\n    - scikit-image\n    - scikit-learn\n    - scipy\n    - python-snappy\n    - sparse\n    - cachey\n    - python-graphviz\n    - python-xxhash\n    - python-cityhash\n    - mmh3\n    - jinja2\n    - pip\n    - pip:\n        - git+https://github.com/dask/distributed\n    - python=3.10\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2699  ::set-output:: environment-file-was-patched=true\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2699  ::add-path:: 3/condabin\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest] \u2b50 Run Main Install\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udc33  docker exec cmd=[bash -l /var/run/act/workflow/2] user= workdir=\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ++ [[ -n '' ]]\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ++ python -m pip install --quiet --no-deps -e '.[complete]'\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ++ echo mamba list\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ++ mamba list\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | mamba list\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | # packages in environment at /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | #\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | # Name                    Version                   Build  Channel\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | _libgcc_mutex             0.1                 conda_forge    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | _openmp_mutex             4.5                       2_gnu    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aiohttp                   3.8.4           py310h2372a71_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aiosignal                 1.3.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aom                       3.5.0                h27087fc_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | asciitree                 0.3.3                      py_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | asttokens                 2.2.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | async-timeout             4.0.2              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | atk-1.0                   2.38.0               hd4edc92_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | attrs                     23.1.0             pyh71513ae_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-c-auth                0.6.28               hccec9ca_5    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-c-cal                 0.5.27               hf85dbcb_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-c-common              0.8.20               hd590300_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-c-compression         0.2.17               h4b87b72_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-c-event-stream        0.3.0                hc5de78f_6    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-c-http                0.7.8                h412fb1b_4    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-c-io                  0.13.26              h0d05201_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-c-mqtt                0.8.13               ha5d9b87_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-c-s3                  0.3.4                h95e21fb_5    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-c-sdkutils            0.1.10               h4b87b72_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-checksums             0.1.16               h4b87b72_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-crt-cpp               0.20.2               h5289e1f_9    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-sam-translator        1.70.0             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-sdk-cpp               1.10.57             h8101662_14    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | aws-xray-sdk              2.12.0             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | backcall                  0.2.0              pyh9f0ad1d_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | backports                 1.0                pyhd8ed1ab_3    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | backports.functools_lru_cache 1.6.5              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | bcrypt                    3.2.2           py310h5764c6d_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | blinker                   1.6.2              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | blosc                     1.21.4               h0f2a231_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | bokeh                     3.2.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | boto3                     1.26.165           pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | botocore                  1.29.165           pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | brotli                    1.0.9                h166bdaf_9    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | brotli-bin                1.0.9                h166bdaf_9    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | brotlipy                  0.7.0           py310h5764c6d_1005    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | brunsli                   0.1                  h9c3ff4c_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | bzip2                     1.0.8                h7f98852_4    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | c-ares                    1.19.1               hd590300_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | c-blosc2                  2.9.3                hb4ffafa_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ca-certificates           2023.5.7             hbcca054_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | cached-property           1.5.2                hd8ed1ab_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | cached_property           1.5.2              pyha770c72_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | cachey                    0.2.1              pyh9f0ad1d_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | cairo                     1.16.0            hbbf8b49_1016    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | certifi                   2023.5.7           pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | cffi                      1.15.1          py310h255011f_3    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | cfgv                      3.3.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | cfitsio                   4.2.0                hd9d235c_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | cfn-lint                  0.77.10            pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | charls                    2.4.2                h59595ed_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | charset-normalizer        3.1.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | click                     8.1.3           unix_pyhd8ed1ab_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | cloudpickle               2.2.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | colorama                  0.4.6              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | comm                      0.1.3              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | contourpy                 1.1.0           py310hd41b1e2_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | coverage                  7.2.7           py310h2372a71_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | cramjam                   2.6.2           py310h3392aa1_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | crick                     0.0.3           py310hde88566_1003    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | cryptography              41.0.1          py310h75e40e8_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | curl                      8.1.2                h409715c_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | cytoolz                   0.12.0          py310h5764c6d_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask                      2023.6.1+4.g920359997          pypi_0    pypi\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dav1d                     1.2.1                hd590300_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | debugpy                   1.6.7           py310heca2aa9_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | decorator                 5.1.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | distlib                   0.3.6              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | distributed               2023.6.1+3.g9b9f948b          pypi_0    pypi\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | docker-py                 6.1.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ecdsa                     0.18.0             pyhd8ed1ab_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | entrypoints               0.4                pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | exceptiongroup            1.1.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | execnet                   1.9.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | executing                 1.2.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | expat                     2.5.0                hcb278e6_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | fasteners                 0.17.3             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | fastparquet               2023.4.0        py310h0a54255_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | filelock                  3.12.2             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | flask                     2.3.2              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | flask_cors                3.0.10             pyhd3deb0d_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | font-ttf-dejavu-sans-mono 2.37                 hab24e00_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | font-ttf-inconsolata      3.000                h77eed37_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | font-ttf-source-code-pro  2.038                h77eed37_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | font-ttf-ubuntu           0.83                 hab24e00_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | fontconfig                2.14.2               h14ed4e7_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | fonts-conda-ecosystem     1                             0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | fonts-conda-forge         1                             0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | freetype                  2.12.1               hca18f0e_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | fribidi                   1.0.10               h36c2ea0_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | frozenlist                1.3.3           py310h5764c6d_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | fsspec                    2023.6.0           pyh1a96a4e_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | gdk-pixbuf                2.42.10              h6b639ba_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | gettext                   0.21.1               h27087fc_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | gflags                    2.2.2             he1b5a44_1004    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | giflib                    5.2.1                h0b41bf4_3    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | glog                      0.6.0                h6f12383_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | gmp                       6.2.1                h58526e2_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | gmpy2                     2.1.2           py310h3ec546c_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | graphite2                 1.3.13            h58526e2_1001    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | graphql-core              3.2.3              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | graphviz                  8.0.5                h28d9a01_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | greenlet                  2.0.2           py310hc6cd4ac_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | gtk2                      2.24.33              h90689f9_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | gts                       0.7.6                h977cf35_4    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | h5py                      3.9.0           nompi_py310hcca72df_101    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | harfbuzz                  7.3.0                hdb3a94d_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | hdf5                      1.14.1          nompi_h4f84152_100    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | heapdict                  1.0.1                      py_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | httpretty                 1.1.4              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | icu                       72.1                 hcb278e6_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | identify                  2.5.24             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | idna                      3.4                pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | imagecodecs               2023.1.23       py310h241fb82_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | imageio                   2.31.1             pyh24c5eb1_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | importlib-metadata        6.7.0              pyha770c72_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | importlib_metadata        6.7.0                hd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | importlib_resources       5.12.0             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | iniconfig                 2.0.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ipycytoscape              1.3.3              pyhd8ed1ab_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ipykernel                 6.21.3             pyh210e3f2_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ipython                   8.14.0             pyh41d4057_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ipywidgets                8.0.4              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | itsdangerous              2.1.2              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jedi                      0.18.2             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jinja2                    3.1.2              pyhd8ed1ab_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jmespath                  1.0.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | joblib                    1.3.0              pyhd8ed1ab_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jschema-to-python         1.2.3              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jsondiff                  2.0.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jsonpatch                 1.32               pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jsonpickle                2.2.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jsonpointer               2.0                        py_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jsonschema                4.17.3             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jsonschema-spec           0.1.6              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | junit-xml                 1.9                pyh9f0ad1d_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jupyter_client            8.3.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jupyter_core              5.3.1           py310hff52083_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jupyterlab_widgets        3.0.7              pyhd8ed1ab_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | jxrlib                    1.1                  h7f98852_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | keyutils                  1.6.1                h166bdaf_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | krb5                      1.20.1               h81ceb04_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | lazy-object-proxy         1.9.0           py310h1fa729e_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | lazy_loader               0.2                pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | lcms2                     2.15                 haa2dc70_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ld_impl_linux-64          2.40                 h41732ed_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | lerc                      4.0.0                h27087fc_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libabseil                 20230125.3      cxx17_h59595ed_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libaec                    1.0.6                hcb278e6_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libarrow                  10.0.1          h3bdf5bc_31_cpu    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libavif                   0.11.1               h8182462_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libblas                   3.9.0           17_linux64_openblas    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libbrotlicommon           1.0.9                h166bdaf_9    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libbrotlidec              1.0.9                h166bdaf_9    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libbrotlienc              1.0.9                h166bdaf_9    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libcblas                  3.9.0           17_linux64_openblas    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libcrc32c                 1.1.2                h9c3ff4c_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libcurl                   8.1.2                h409715c_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libdeflate                1.18                 h0b41bf4_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libedit                   3.1.20191231         he28a2e2_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libev                     4.33                 h516909a_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libevent                  2.1.12               hf998b51_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libexpat                  2.5.0                hcb278e6_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libffi                    3.4.2                h7f98852_5    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libgcc-ng                 13.1.0               he5830b7_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libgd                     2.3.3                hfa28ad5_6    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libgfortran-ng            13.1.0               h69a702a_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libgfortran5              13.1.0               h15d22d2_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libglib                   2.76.3               hebfc3b9_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libgomp                   13.1.0               he5830b7_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libgoogle-cloud           2.12.0               hac9eb74_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libgrpc                   1.54.2               hb20ce57_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libiconv                  1.17                 h166bdaf_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libjpeg-turbo             2.1.5.1              h0b41bf4_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | liblapack                 3.9.0           17_linux64_openblas    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libllvm14                 14.0.6               hcd5def8_3    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libnghttp2                1.52.0               h61bc06f_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libnsl                    2.0.0                h7f98852_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libnuma                   2.0.16               h0b41bf4_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libopenblas               0.3.23          pthreads_h80387f5_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libpng                    1.6.39               h753d276_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libprotobuf               3.21.12              h3eb15da_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | librsvg                   2.56.1               h98fae49_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libsodium                 1.0.18               h36c2ea0_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libsqlite                 3.42.0               h2797004_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libssh2                   1.11.0               h0841786_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libstdcxx-ng              13.1.0               hfd8a6a1_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libthrift                 0.18.1               h8fd135c_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libtiff                   4.5.1                h8b53f26_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libtool                   2.4.7                h27087fc_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libutf8proc               2.8.0                h166bdaf_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libuuid                   2.38.1               h0b41bf4_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libwebp                   1.3.1                hbf2b3c1_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libwebp-base              1.3.1                hd590300_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libxcb                    1.15                 h0b41bf4_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libxml2                   2.11.4               h0d562d8_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libzlib                   1.2.13               hd590300_5    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | libzopfli                 1.0.3                h9c3ff4c_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | llvmlite                  0.40.1          py310h1b8f574_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | locket                    1.0.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | lz4                       4.3.2           py310h0cfdcf0_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | lz4-c                     1.9.4                hcb278e6_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | lzo                       2.10              h516909a_1000    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | markupsafe                2.1.3           py310h2372a71_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | matplotlib-inline         0.1.6              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | mimesis                   10.1.0             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | mmh3                      4.0.0           py310hc6cd4ac_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | moto                      4.1.12             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | mpc                       1.3.1                hfe3b2da_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | mpfr                      4.2.0                hb012696_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | mpmath                    1.3.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | msgpack-python            1.0.5           py310hdf3cbec_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | multidict                 6.0.4           py310h1fa729e_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | nbformat                  5.9.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ncurses                   6.4                  hcb278e6_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | nest-asyncio              1.5.6              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | networkx                  2.8.8              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | nodeenv                   1.8.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | nomkl                     1.0                  h5ca1d4c_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | numba                     0.57.1          py310h0f6aa51_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | numcodecs                 0.11.0          py310heca2aa9_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | numexpr                   2.8.4           py310h690d005_100    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | numpy                     1.23.5          py310h53a5b5f_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | openapi-schema-validator  0.4.4              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | openapi-spec-validator    0.5.7              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | openjpeg                  2.5.0                hfec8fc6_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | openssl                   3.1.1                hd590300_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | orc                       1.9.0                h2f23424_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | packaging                 23.1               pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pandas                    1.5.3           py310h9b08913_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pango                     1.50.14              heaa33ce_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | paramiko                  3.2.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | parso                     0.8.3              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | partd                     1.4.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pathable                  0.4.3              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pbr                       5.11.1             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pcre2                     10.40                hc3806b6_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pexpect                   4.8.0              pyh1a96a4e_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pickleshare               0.7.5                   py_1003    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pillow                    9.5.0           py310h582fbeb_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pip                       23.1.2             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pixman                    0.40.0               h36c2ea0_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pkgutil-resolve-name      1.3.10             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | platformdirs              3.1.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pluggy                    1.2.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pooch                     1.7.0              pyha770c72_3    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pre-commit                3.3.3              pyha770c72_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | prompt-toolkit            3.0.38             pyha770c72_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | prompt_toolkit            3.0.38               hd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | psutil                    5.9.5           py310h1fa729e_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pthread-stubs             0.4               h36c2ea0_1001    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ptyprocess                0.7.0              pyhd3deb0d_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pure_eval                 0.2.2              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | py-cpuinfo                9.0.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | py4j                      0.10.9.7           pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pyarrow                   10.0.1          py310he6bfd7f_31_cpu    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pyasn1                    0.4.8                      py_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pycparser                 2.21               pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pydantic                  1.10.10         py310h2372a71_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pygments                  2.15.1             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pynacl                    1.5.0           py310h5764c6d_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pyopenssl                 23.2.0             pyhd8ed1ab_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pyparsing                 3.1.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pyrsistent                0.19.3          py310h1fa729e_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pysocks                   1.7.1              pyha2e5f31_6    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pyspark                   3.4.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pytables                  3.8.0           py310ha028ce3_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pytest                    7.4.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pytest-cov                4.1.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pytest-rerunfailures      11.1.2             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pytest-timeout            2.1.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pytest-xdist              3.3.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | python                    3.10.12         hd12c33a_0_cpython    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | python-cityhash           0.4.7           py310hc6cd4ac_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | python-dateutil           2.8.2              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | python-fastjsonschema     2.17.1             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | python-graphviz           0.20.1             pyh22cad53_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | python-jose               3.3.0              pyh6c4a22f_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | python-snappy             0.6.1           py310hcee4d7c_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | python-xxhash             3.2.0           py310h1fa729e_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | python_abi                3.10                    3_cp310    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pytz                      2023.3             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pywavelets                1.4.1           py310h0a54255_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pywin32-on-windows        0.1.0              pyh1179c8e_3    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pyyaml                    6.0             py310h5764c6d_5    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | pyzmq                     25.1.0          py310h5bbb5d0_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | rdma-core                 28.9                 h59595ed_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | re2                       2023.03.02           h8c504da_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | readline                  8.2                  h8228510_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | regex                     2023.6.3        py310h2372a71_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | requests                  2.31.0             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | responses                 0.23.1             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | rfc3339-validator         0.1.4              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | rsa                       4.9                pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | s2n                       1.3.45               h06160fa_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | s3fs                      0.4.2                      py_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | s3transfer                0.6.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | sarif-om                  1.0.4              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | scikit-image              0.20.0          py310h9b08913_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | scikit-learn              1.3.0           py310hf7d194e_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | scipy                     1.11.1          py310ha4c1d20_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | setuptools                68.0.0             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | six                       1.16.0             pyh6c4a22f_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | snappy                    1.1.10               h9fff704_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | sortedcontainers          2.4.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | sparse                    0.14.0             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | spectate                  1.0.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | sqlalchemy                1.4.48          py310h2372a71_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | sshpubkeys                3.3.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | stack_data                0.6.2              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | sympy                     1.12            pypyh9d50eac_103    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tblib                     1.7.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | threadpoolctl             3.1.0              pyh8a188c0_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tifffile                  2023.4.12          pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tiledb                    2.11.3               h3f4058f_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tiledb-py                 0.17.3          py310hdbd97e5_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tk                        8.6.12               h27826a3_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | toml                      0.10.2             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tomli                     2.0.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | toolz                     0.12.0             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tornado                   6.3.2           py310h2372a71_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | traitlets                 5.9.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | types-pyyaml              6.0.12.10          pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | typing-extensions         4.4.0                hd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | typing_extensions         4.4.0              pyha770c72_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tzdata                    2023c                h71feb2d_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ucx                       1.14.1               hf587318_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ukkonen                   1.0.1           py310hbf28c38_3    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | urllib3                   1.26.15            pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | virtualenv                20.21.1            pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | wcwidth                   0.2.6              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | websocket-client          1.6.1              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | werkzeug                  2.3.6              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | wheel                     0.40.0             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | widgetsnbextension        4.0.7              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | wrapt                     1.15.0          py310h1fa729e_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xarray                    2023.6.0           pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xmltodict                 0.13.0             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xorg-kbproto              1.0.7             h7f98852_1002    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xorg-libice               1.1.1                hd590300_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xorg-libsm                1.2.4                h7391055_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xorg-libx11               1.8.6                h8ee46fc_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xorg-libxau               1.0.11               hd590300_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xorg-libxdmcp             1.1.3                h7f98852_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xorg-libxext              1.3.4                h0b41bf4_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xorg-libxrender           0.9.10            h7f98852_1003    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xorg-renderproto          0.11.1            h7f98852_1002    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xorg-xextproto            7.3.0             h0b41bf4_1003    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xorg-xproto               7.0.31            h7f98852_1007    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xxhash                    0.8.1                h0b41bf4_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xyzservices               2023.5.0           pyhd8ed1ab_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | xz                        5.2.6                h166bdaf_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | yaml                      0.2.5                h7f98852_2    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | yarl                      1.9.2           py310h2372a71_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | zarr                      2.15.0             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | zeromq                    4.3.4                h9c3ff4c_1    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | zfp                       1.0.0                h27087fc_3    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | zict                      3.0.0              pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | zipp                      3.15.0             pyhd8ed1ab_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | zlib                      1.2.13               hd590300_5    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | zlib-ng                   2.0.7                h0b41bf4_0    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | zstd                      1.5.2                h3eb15da_6    conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | --\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | --Conda Environment (re-create this with `conda env create --name <name> -f <output_file>`)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | --\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ++ echo -e '--\\n--Conda Environment (re-create this with `conda env create --name <name> -f <output_file>`)\\n--'\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ++ mamba env export\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ++ grep -E -v '^prefix:.*$'\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ++ cat env.yaml\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | name: test-environment\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | channels:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - conda-forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - nodefaults\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - defaults\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dependencies:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - _libgcc_mutex=0.1=conda_forge\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - _openmp_mutex=4.5=2_gnu\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aiohttp=3.8.4=py310h2372a71_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aiosignal=1.3.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aom=3.5.0=h27087fc_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - asciitree=0.3.3=py_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - asttokens=2.2.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - async-timeout=4.0.2=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - atk-1.0=2.38.0=hd4edc92_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - attrs=23.1.0=pyh71513ae_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-c-auth=0.6.28=hccec9ca_5\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-c-cal=0.5.27=hf85dbcb_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-c-common=0.8.20=hd590300_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-c-compression=0.2.17=h4b87b72_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-c-event-stream=0.3.0=hc5de78f_6\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-c-http=0.7.8=h412fb1b_4\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-c-io=0.13.26=h0d05201_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-c-mqtt=0.8.13=ha5d9b87_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-c-s3=0.3.4=h95e21fb_5\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-c-sdkutils=0.1.10=h4b87b72_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-checksums=0.1.16=h4b87b72_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-crt-cpp=0.20.2=h5289e1f_9\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-sam-translator=1.70.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-sdk-cpp=1.10.57=h8101662_14\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - aws-xray-sdk=2.12.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - backcall=0.2.0=pyh9f0ad1d_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - backports=1.0=pyhd8ed1ab_3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - backports.functools_lru_cache=1.6.5=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - bcrypt=3.2.2=py310h5764c6d_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - blinker=1.6.2=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - blosc=1.21.4=h0f2a231_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - bokeh=3.2.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - boto3=1.26.165=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - botocore=1.29.165=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - brotli=1.0.9=h166bdaf_9\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - brotli-bin=1.0.9=h166bdaf_9\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - brotlipy=0.7.0=py310h5764c6d_1005\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - brunsli=0.1=h9c3ff4c_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - bzip2=1.0.8=h7f98852_4\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - c-ares=1.19.1=hd590300_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - c-blosc2=2.9.3=hb4ffafa_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ca-certificates=2023.5.7=hbcca054_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cached-property=1.5.2=hd8ed1ab_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cached_property=1.5.2=pyha770c72_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cachey=0.2.1=pyh9f0ad1d_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cairo=1.16.0=hbbf8b49_1016\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - certifi=2023.5.7=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cffi=1.15.1=py310h255011f_3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cfgv=3.3.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cfitsio=4.2.0=hd9d235c_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cfn-lint=0.77.10=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - charls=2.4.2=h59595ed_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - charset-normalizer=3.1.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - click=8.1.3=unix_pyhd8ed1ab_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cloudpickle=2.2.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - colorama=0.4.6=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - comm=0.1.3=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - contourpy=1.1.0=py310hd41b1e2_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - coverage=7.2.7=py310h2372a71_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cramjam=2.6.2=py310h3392aa1_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - crick=0.0.3=py310hde88566_1003\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cryptography=41.0.1=py310h75e40e8_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - curl=8.1.2=h409715c_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - cytoolz=0.12.0=py310h5764c6d_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - dav1d=1.2.1=hd590300_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - debugpy=1.6.7=py310heca2aa9_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - decorator=5.1.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - distlib=0.3.6=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - docker-py=6.1.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ecdsa=0.18.0=pyhd8ed1ab_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - entrypoints=0.4=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - exceptiongroup=1.1.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - execnet=1.9.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - executing=1.2.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - expat=2.5.0=hcb278e6_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - fasteners=0.17.3=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - fastparquet=2023.4.0=py310h0a54255_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - filelock=3.12.2=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - flask=2.3.2=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - flask_cors=3.0.10=pyhd3deb0d_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - font-ttf-dejavu-sans-mono=2.37=hab24e00_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - font-ttf-inconsolata=3.000=h77eed37_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - font-ttf-source-code-pro=2.038=h77eed37_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - font-ttf-ubuntu=0.83=hab24e00_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - fontconfig=2.14.2=h14ed4e7_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - fonts-conda-ecosystem=1=0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - fonts-conda-forge=1=0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - freetype=2.12.1=hca18f0e_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - fribidi=1.0.10=h36c2ea0_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - frozenlist=1.3.3=py310h5764c6d_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - fsspec=2023.6.0=pyh1a96a4e_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - gdk-pixbuf=2.42.10=h6b639ba_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - gettext=0.21.1=h27087fc_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - gflags=2.2.2=he1b5a44_1004\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - giflib=5.2.1=h0b41bf4_3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - glog=0.6.0=h6f12383_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - gmp=6.2.1=h58526e2_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - gmpy2=2.1.2=py310h3ec546c_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - graphite2=1.3.13=h58526e2_1001\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - graphql-core=3.2.3=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - graphviz=8.0.5=h28d9a01_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - greenlet=2.0.2=py310hc6cd4ac_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - gtk2=2.24.33=h90689f9_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - gts=0.7.6=h977cf35_4\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - h5py=3.9.0=nompi_py310hcca72df_101\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - harfbuzz=7.3.0=hdb3a94d_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - hdf5=1.14.1=nompi_h4f84152_100\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - heapdict=1.0.1=py_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - httpretty=1.1.4=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - icu=72.1=hcb278e6_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - identify=2.5.24=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - idna=3.4=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - imagecodecs=2023.1.23=py310h241fb82_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - imageio=2.31.1=pyh24c5eb1_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - importlib-metadata=6.7.0=pyha770c72_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - importlib_metadata=6.7.0=hd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - importlib_resources=5.12.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - iniconfig=2.0.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ipycytoscape=1.3.3=pyhd8ed1ab_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ipykernel=6.21.3=pyh210e3f2_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ipython=8.14.0=pyh41d4057_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ipywidgets=8.0.4=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - itsdangerous=2.1.2=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jedi=0.18.2=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jinja2=3.1.2=pyhd8ed1ab_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jmespath=1.0.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - joblib=1.3.0=pyhd8ed1ab_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jschema-to-python=1.2.3=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jsondiff=2.0.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jsonpatch=1.32=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jsonpickle=2.2.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jsonpointer=2.0=py_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jsonschema=4.17.3=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jsonschema-spec=0.1.6=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - junit-xml=1.9=pyh9f0ad1d_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jupyter_client=8.3.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jupyter_core=5.3.1=py310hff52083_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jupyterlab_widgets=3.0.7=pyhd8ed1ab_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - jxrlib=1.1=h7f98852_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - keyutils=1.6.1=h166bdaf_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - krb5=1.20.1=h81ceb04_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - lazy-object-proxy=1.9.0=py310h1fa729e_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - lazy_loader=0.2=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - lcms2=2.15=haa2dc70_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ld_impl_linux-64=2.40=h41732ed_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - lerc=4.0.0=h27087fc_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libabseil=20230125.3=cxx17_h59595ed_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libaec=1.0.6=hcb278e6_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libarrow=10.0.1=h3bdf5bc_31_cpu\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libavif=0.11.1=h8182462_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libblas=3.9.0=17_linux64_openblas\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libbrotlicommon=1.0.9=h166bdaf_9\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libbrotlidec=1.0.9=h166bdaf_9\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libbrotlienc=1.0.9=h166bdaf_9\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libcblas=3.9.0=17_linux64_openblas\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libcrc32c=1.1.2=h9c3ff4c_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libcurl=8.1.2=h409715c_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libdeflate=1.18=h0b41bf4_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libedit=3.1.20191231=he28a2e2_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libev=4.33=h516909a_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libevent=2.1.12=hf998b51_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libexpat=2.5.0=hcb278e6_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libffi=3.4.2=h7f98852_5\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libgcc-ng=13.1.0=he5830b7_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libgd=2.3.3=hfa28ad5_6\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libgfortran-ng=13.1.0=h69a702a_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libgfortran5=13.1.0=h15d22d2_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libglib=2.76.3=hebfc3b9_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libgomp=13.1.0=he5830b7_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libgoogle-cloud=2.12.0=hac9eb74_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libgrpc=1.54.2=hb20ce57_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libiconv=1.17=h166bdaf_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libjpeg-turbo=2.1.5.1=h0b41bf4_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - liblapack=3.9.0=17_linux64_openblas\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libllvm14=14.0.6=hcd5def8_3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libnghttp2=1.52.0=h61bc06f_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libnsl=2.0.0=h7f98852_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libnuma=2.0.16=h0b41bf4_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libopenblas=0.3.23=pthreads_h80387f5_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libpng=1.6.39=h753d276_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libprotobuf=3.21.12=h3eb15da_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - librsvg=2.56.1=h98fae49_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libsodium=1.0.18=h36c2ea0_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libsqlite=3.42.0=h2797004_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libssh2=1.11.0=h0841786_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libstdcxx-ng=13.1.0=hfd8a6a1_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libthrift=0.18.1=h8fd135c_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libtiff=4.5.1=h8b53f26_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libtool=2.4.7=h27087fc_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libutf8proc=2.8.0=h166bdaf_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libuuid=2.38.1=h0b41bf4_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libwebp=1.3.1=hbf2b3c1_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libwebp-base=1.3.1=hd590300_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libxcb=1.15=h0b41bf4_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libxml2=2.11.4=h0d562d8_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libzlib=1.2.13=hd590300_5\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - libzopfli=1.0.3=h9c3ff4c_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - llvmlite=0.40.1=py310h1b8f574_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - locket=1.0.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - lz4=4.3.2=py310h0cfdcf0_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - lz4-c=1.9.4=hcb278e6_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - lzo=2.10=h516909a_1000\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - markupsafe=2.1.3=py310h2372a71_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - matplotlib-inline=0.1.6=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - mimesis=10.1.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - mmh3=4.0.0=py310hc6cd4ac_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - moto=4.1.12=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - mpc=1.3.1=hfe3b2da_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - mpfr=4.2.0=hb012696_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - mpmath=1.3.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - msgpack-python=1.0.5=py310hdf3cbec_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - multidict=6.0.4=py310h1fa729e_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - nbformat=5.9.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ncurses=6.4=hcb278e6_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - nest-asyncio=1.5.6=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - networkx=2.8.8=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - nodeenv=1.8.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - nomkl=1.0=h5ca1d4c_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - numba=0.57.1=py310h0f6aa51_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - numcodecs=0.11.0=py310heca2aa9_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - numexpr=2.8.4=py310h690d005_100\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - numpy=1.23.5=py310h53a5b5f_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - openapi-schema-validator=0.4.4=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - openapi-spec-validator=0.5.7=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - openjpeg=2.5.0=hfec8fc6_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - openssl=3.1.1=hd590300_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - orc=1.9.0=h2f23424_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - packaging=23.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pandas=1.5.3=py310h9b08913_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pango=1.50.14=heaa33ce_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - paramiko=3.2.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - parso=0.8.3=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - partd=1.4.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pathable=0.4.3=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pbr=5.11.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pcre2=10.40=hc3806b6_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pexpect=4.8.0=pyh1a96a4e_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pickleshare=0.7.5=py_1003\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pillow=9.5.0=py310h582fbeb_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pip=23.1.2=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pixman=0.40.0=h36c2ea0_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pkgutil-resolve-name=1.3.10=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - platformdirs=3.1.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pluggy=1.2.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pooch=1.7.0=pyha770c72_3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pre-commit=3.3.3=pyha770c72_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - prompt-toolkit=3.0.38=pyha770c72_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - prompt_toolkit=3.0.38=hd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - psutil=5.9.5=py310h1fa729e_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pthread-stubs=0.4=h36c2ea0_1001\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ptyprocess=0.7.0=pyhd3deb0d_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pure_eval=0.2.2=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - py-cpuinfo=9.0.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - py4j=0.10.9.7=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pyarrow=10.0.1=py310he6bfd7f_31_cpu\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pyasn1=0.4.8=py_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pycparser=2.21=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pydantic=1.10.10=py310h2372a71_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pygments=2.15.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pynacl=1.5.0=py310h5764c6d_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pyopenssl=23.2.0=pyhd8ed1ab_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pyparsing=3.1.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pyrsistent=0.19.3=py310h1fa729e_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pysocks=1.7.1=pyha2e5f31_6\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pyspark=3.4.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pytables=3.8.0=py310ha028ce3_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pytest=7.4.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pytest-cov=4.1.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pytest-rerunfailures=11.1.2=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pytest-timeout=2.1.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pytest-xdist=3.3.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python=3.10.12=hd12c33a_0_cpython\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python-cityhash=0.4.7=py310hc6cd4ac_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python-dateutil=2.8.2=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python-fastjsonschema=2.17.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python-graphviz=0.20.1=pyh22cad53_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python-jose=3.3.0=pyh6c4a22f_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python-snappy=0.6.1=py310hcee4d7c_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python-xxhash=3.2.0=py310h1fa729e_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - python_abi=3.10=3_cp310\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pytz=2023.3=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pywavelets=1.4.1=py310h0a54255_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pywin32-on-windows=0.1.0=pyh1179c8e_3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pyyaml=6.0=py310h5764c6d_5\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pyzmq=25.1.0=py310h5bbb5d0_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - rdma-core=28.9=h59595ed_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - re2=2023.03.02=h8c504da_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - readline=8.2=h8228510_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - regex=2023.6.3=py310h2372a71_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - requests=2.31.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - responses=0.23.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - rfc3339-validator=0.1.4=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - rsa=4.9=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - s2n=1.3.45=h06160fa_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - s3fs=0.4.2=py_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - s3transfer=0.6.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - sarif-om=1.0.4=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - scikit-image=0.20.0=py310h9b08913_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - scikit-learn=1.3.0=py310hf7d194e_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - scipy=1.11.1=py310ha4c1d20_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - setuptools=68.0.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - six=1.16.0=pyh6c4a22f_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - snappy=1.1.10=h9fff704_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - sortedcontainers=2.4.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - sparse=0.14.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - spectate=1.0.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - sqlalchemy=1.4.48=py310h2372a71_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - sshpubkeys=3.3.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - stack_data=0.6.2=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - sympy=1.12=pypyh9d50eac_103\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - tblib=1.7.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - threadpoolctl=3.1.0=pyh8a188c0_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - tifffile=2023.4.12=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - tiledb=2.11.3=h3f4058f_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - tiledb-py=0.17.3=py310hdbd97e5_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - tk=8.6.12=h27826a3_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - toml=0.10.2=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - tomli=2.0.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - toolz=0.12.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - tornado=6.3.2=py310h2372a71_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - traitlets=5.9.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - types-pyyaml=6.0.12.10=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - typing-extensions=4.4.0=hd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - typing_extensions=4.4.0=pyha770c72_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - tzdata=2023c=h71feb2d_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ucx=1.14.1=hf587318_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - ukkonen=1.0.1=py310hbf28c38_3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - urllib3=1.26.15=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - virtualenv=20.21.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - wcwidth=0.2.6=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - websocket-client=1.6.1=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - werkzeug=2.3.6=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - wheel=0.40.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - widgetsnbextension=4.0.7=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - wrapt=1.15.0=py310h1fa729e_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xarray=2023.6.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xmltodict=0.13.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xorg-kbproto=1.0.7=h7f98852_1002\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xorg-libice=1.1.1=hd590300_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xorg-libsm=1.2.4=h7391055_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xorg-libx11=1.8.6=h8ee46fc_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xorg-libxau=1.0.11=hd590300_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xorg-libxdmcp=1.1.3=h7f98852_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xorg-libxext=1.3.4=h0b41bf4_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xorg-libxrender=0.9.10=h7f98852_1003\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xorg-renderproto=0.11.1=h7f98852_1002\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xorg-xextproto=7.3.0=h0b41bf4_1003\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xorg-xproto=7.0.31=h7f98852_1007\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xxhash=0.8.1=h0b41bf4_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xyzservices=2023.5.0=pyhd8ed1ab_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - xz=5.2.6=h166bdaf_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - yaml=0.2.5=h7f98852_2\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - yarl=1.9.2=py310h2372a71_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - zarr=2.15.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - zeromq=4.3.4=h9c3ff4c_1\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - zfp=1.0.0=h27087fc_3\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - zict=3.0.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - zipp=3.15.0=pyhd8ed1ab_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - zlib=1.2.13=hd590300_5\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - zlib-ng=2.0.7=h0b41bf4_0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - zstd=1.5.2=h3eb15da_6\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   - pip:\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |       - dask==2023.6.1+4.g920359997\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |       - distributed==2023.6.1+3.g9b9f948b\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ++ set +xe\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2705  Success - Main Install\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest] \u2b50 Run Main Run tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udc33  docker exec cmd=[bash -l /var/run/act/workflow/3] user= workdir=\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \u001b[1m============================= test session starts ==============================\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0 -- /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/bin/python3.10\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | cachedir: .pytest_cache\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | configfile: pyproject.toml\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | plugins: rerunfailures-11.1.2, xdist-3.3.1, cov-4.1.0, timeout-2.1.0\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \u001b[1mcollecting ... \u001b[0mcollected 834 items\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/base.py::dask.base.DaskMethodsMixin.visualize \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [  0%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/base.py::dask.base._colorize \u001b[32mPASSED\u001b[0m\u001b[33m                                 [  0%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/base.py::dask.base.annotate \u001b[32mPASSED\u001b[0m\u001b[33m                                  [  0%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/base.py::dask.base.clone_key \u001b[32mPASSED\u001b[0m\u001b[33m                                 [  0%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/base.py::dask.base.compute \u001b[32mPASSED\u001b[0m\u001b[33m                                   [  0%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/base.py::dask.base.get_collection_names \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [  0%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/base.py::dask.base.get_name_from_key \u001b[32mPASSED\u001b[0m\u001b[33m                         [  0%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/base.py::dask.base.optimize \u001b[32mPASSED\u001b[0m\u001b[33m                                  [  0%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/base.py::dask.base.persist \u001b[32mPASSED\u001b[0m\u001b[33m                                   [  1%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/base.py::dask.base.replace_name_in_key \u001b[32mPASSED\u001b[0m\u001b[33m                       [  1%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/base.py::dask.base.tokenize \u001b[32mPASSED\u001b[0m\u001b[33m                                  [  1%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/base.py::dask.base.visualize \u001b[33mSKIPPED\u001b[0m (all tests skipped by +SKIP\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | option)\u001b[33m                                                                  [  1%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/blockwise.py::dask.blockwise.BlockwiseDepDict \u001b[32mPASSED\u001b[0m\u001b[33m                [  1%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/blockwise.py::dask.blockwise.broadcast_dimensions \u001b[32mPASSED\u001b[0m\u001b[33m            [  1%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/blockwise.py::dask.blockwise.lol_product \u001b[32mPASSED\u001b[0m\u001b[33m                     [  1%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/blockwise.py::dask.blockwise.lol_tuples \u001b[32mPASSED\u001b[0m\u001b[33m                      [  1%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/blockwise.py::dask.blockwise.make_blockwise_graph \u001b[32mPASSED\u001b[0m\u001b[33m            [  2%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/blockwise.py::dask.blockwise.zero_broadcast_dimensions \u001b[32mPASSED\u001b[0m\u001b[33m       [  2%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/cache.py::dask.cache.Cache \u001b[33mSKIPPED\u001b[0m (all tests skipped by +SKIP\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | option)\u001b[33m                                                                  [  2%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/callbacks.py::dask.callbacks.Callback \u001b[32mPASSED\u001b[0m\u001b[33m                        [  2%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/callbacks.py::dask.callbacks.add_callbacks \u001b[32mPASSED\u001b[0m\u001b[33m                   [  2%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/config.py::dask.config.check_deprecations \u001b[32mPASSED\u001b[0m\u001b[33m                    [  2%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/config.py::dask.config.expand_environment_variables \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [  2%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/config.py::dask.config.get \u001b[32mPASSED\u001b[0m\u001b[33m                                   [  2%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/config.py::dask.config.merge \u001b[32mPASSED\u001b[0m\u001b[33m                                 [  2%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/config.py::dask.config.set \u001b[32mPASSED\u001b[0m\u001b[33m                                   [  3%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/config.py::dask.config.update \u001b[32mPASSED\u001b[0m\u001b[33m                                [  3%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/context.py::dask.context.globalmethod \u001b[32mPASSED\u001b[0m\u001b[33m                        [  3%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/core.py::dask.core._execute_task \u001b[32mPASSED\u001b[0m\u001b[33m                             [  3%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/core.py::dask.core.flatten \u001b[32mPASSED\u001b[0m\u001b[33m                                   [  3%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/core.py::dask.core.get \u001b[32mPASSED\u001b[0m\u001b[33m                                       [  3%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/core.py::dask.core.get_dependencies \u001b[32mPASSED\u001b[0m\u001b[33m                          [  3%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/core.py::dask.core.get_deps \u001b[32mPASSED\u001b[0m\u001b[33m                                  [  3%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/core.py::dask.core.getcycle \u001b[32mPASSED\u001b[0m\u001b[33m                                  [  4%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/core.py::dask.core.isdag \u001b[32mPASSED\u001b[0m\u001b[33m                                     [  4%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/core.py::dask.core.ishashable \u001b[32mPASSED\u001b[0m\u001b[33m                                [  4%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/core.py::dask.core.istask \u001b[32mPASSED\u001b[0m\u001b[33m                                    [  4%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/core.py::dask.core.keys_in_tasks \u001b[32mPASSED\u001b[0m\u001b[33m                             [  4%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/core.py::dask.core.quote \u001b[32mPASSED\u001b[0m\u001b[33m                                     [  4%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/core.py::dask.core.reverse_dict \u001b[32mPASSED\u001b[0m\u001b[33m                              [  4%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/core.py::dask.core.subs \u001b[32mPASSED\u001b[0m\u001b[33m                                      [  4%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/datasets.py::dask.datasets.timeseries \u001b[32mPASSED\u001b[0m\u001b[33m                        [  5%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/delayed.py::dask.delayed.delayed \u001b[32mPASSED\u001b[0m\u001b[33m                             [  5%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/delayed.py::dask.delayed.to_task_dask \u001b[32mPASSED\u001b[0m\u001b[33m                        [  5%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/delayed.py::dask.delayed.unpack_collections \u001b[32mPASSED\u001b[0m\u001b[33m                  [  5%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/graph_manipulation.py::dask.graph_manipulation.bind \u001b[32mPASSED\u001b[0m\u001b[33m          [  5%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/graph_manipulation.py::dask.graph_manipulation.clone \u001b[32mPASSED\u001b[0m\u001b[33m         [  5%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/graph_manipulation.py::dask.graph_manipulation.wait_on \u001b[32mPASSED\u001b[0m\u001b[33m       [  5%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/highlevelgraph.py::dask.highlevelgraph.HighLevelGraph \u001b[32mPASSED\u001b[0m\u001b[33m        [  5%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/highlevelgraph.py::dask.highlevelgraph.HighLevelGraph.from_collections \u001b[32mPASSED\u001b[0m\u001b[33m [  5%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/highlevelgraph.py::dask.highlevelgraph.HighLevelGraph.visualize \u001b[33mSKIPPED\u001b[0m\u001b[33m [  6%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/highlevelgraph.py::dask.highlevelgraph.Layer.cull \u001b[32mPASSED\u001b[0m\u001b[33m            [  6%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/layers.py::dask.layers._expand_keys_around_center \u001b[32mPASSED\u001b[0m\u001b[33m            [  6%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/layers.py::dask.layers.fractional_slice \u001b[32mPASSED\u001b[0m\u001b[33m                      [  6%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/layers.py::dask.layers.reshapelist \u001b[32mPASSED\u001b[0m\u001b[33m                           [  6%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/local.py::dask.local \u001b[32mPASSED\u001b[0m\u001b[33m                                         [  6%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/local.py::dask.local.identity \u001b[32mPASSED\u001b[0m\u001b[33m                                [  6%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/local.py::dask.local.nested_get \u001b[32mPASSED\u001b[0m\u001b[33m                              [  6%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/local.py::dask.local.sortkey \u001b[32mPASSED\u001b[0m\u001b[33m                                 [  7%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/local.py::dask.local.start_state_from_dask \u001b[32mPASSED\u001b[0m\u001b[33m                   [  7%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/optimization.py::dask.optimization.cull \u001b[32mPASSED\u001b[0m\u001b[33m                      [  7%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/optimization.py::dask.optimization.functions_of \u001b[32mPASSED\u001b[0m\u001b[33m              [  7%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/optimization.py::dask.optimization.fuse_linear \u001b[32mPASSED\u001b[0m\u001b[33m               [  7%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/optimization.py::dask.optimization.inline \u001b[32mPASSED\u001b[0m\u001b[33m                    [  7%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/optimization.py::dask.optimization.inline_functions \u001b[32mPASSED\u001b[0m\u001b[33m          [  7%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/order.py::dask.order.StrComparable \u001b[32mPASSED\u001b[0m\u001b[33m                           [  7%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/order.py::dask.order.graph_metrics \u001b[32mPASSED\u001b[0m\u001b[33m                           [  8%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/order.py::dask.order.ndependencies \u001b[32mPASSED\u001b[0m\u001b[33m                           [  8%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/order.py::dask.order.order \u001b[32mPASSED\u001b[0m\u001b[33m                                   [  8%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/rewrite.py::dask.rewrite.RewriteRule \u001b[32mPASSED\u001b[0m\u001b[33m                         [  8%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/rewrite.py::dask.rewrite.RuleSet \u001b[32mPASSED\u001b[0m\u001b[33m                             [  8%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/rewrite.py::dask.rewrite.RuleSet.rewrite \u001b[32mPASSED\u001b[0m\u001b[33m                     [  8%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/sizeof.py::dask.sizeof.SimpleSizeof \u001b[32mPASSED\u001b[0m\u001b[33m                          [  8%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/threaded.py::dask.threaded.get \u001b[32mPASSED\u001b[0m\u001b[33m                               [  8%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/typing.py::dask.typing.DaskCollection.visualize \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [  8%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.IndexCallable \u001b[32mPASSED\u001b[0m\u001b[33m                           [  9%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.MethodCache \u001b[32mPASSED\u001b[0m\u001b[33m                             [  9%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils._deprecated \u001b[32mPASSED\u001b[0m\u001b[33m                             [  9%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.apply \u001b[32mPASSED\u001b[0m\u001b[33m                                   [  9%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.concrete \u001b[32mPASSED\u001b[0m\u001b[33m                                [  9%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.deepmap \u001b[32mPASSED\u001b[0m\u001b[33m                                 [  9%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.digit \u001b[32mPASSED\u001b[0m\u001b[33m                                   [  9%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.ensure_bytes \u001b[32mPASSED\u001b[0m\u001b[33m                            [  9%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.ensure_unicode \u001b[32mPASSED\u001b[0m\u001b[33m                          [ 10%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.format_bytes \u001b[32mPASSED\u001b[0m\u001b[33m                            [ 10%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.format_time \u001b[32mPASSED\u001b[0m\u001b[33m                             [ 10%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.format_time_ago \u001b[32mPASSED\u001b[0m\u001b[33m                         [ 10%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.insert \u001b[32mPASSED\u001b[0m\u001b[33m                                  [ 10%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.is_arraylike \u001b[32mPASSED\u001b[0m\u001b[33m                            [ 10%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.is_integer \u001b[32mPASSED\u001b[0m\u001b[33m                              [ 10%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.key_split \u001b[32mPASSED\u001b[0m\u001b[33m                               [ 10%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.natural_sort_key \u001b[32mPASSED\u001b[0m\u001b[33m                        [ 11%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.ndeepmap \u001b[32mPASSED\u001b[0m\u001b[33m                                [ 11%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.parse_bytes \u001b[32mPASSED\u001b[0m\u001b[33m                             [ 11%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.parse_timedelta \u001b[32mPASSED\u001b[0m\u001b[33m                         [ 11%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.partial_by_order \u001b[32mPASSED\u001b[0m\u001b[33m                        [ 11%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.pseudorandom \u001b[32mPASSED\u001b[0m\u001b[33m                            [ 11%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.stringify \u001b[32mPASSED\u001b[0m\u001b[33m                               [ 11%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.takes_multiple_arguments \u001b[32mPASSED\u001b[0m\u001b[33m                [ 11%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/utils.py::dask.utils.typename \u001b[32mPASSED\u001b[0m\u001b[33m                                [ 11%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/blockwise.py::dask.array.blockwise.blockwise \u001b[32mPASSED\u001b[0m\u001b[33m           [ 12%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/chunk.py::dask.array.chunk.coarsen \u001b[32mPASSED\u001b[0m\u001b[33m                     [ 12%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/chunk.py::dask.array.chunk.trim \u001b[32mPASSED\u001b[0m\u001b[33m                        [ 12%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/chunk_types.py::dask.array.chunk_types.register_chunk_type \u001b[32mPASSED\u001b[0m\u001b[33m [ 12%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.Array.__repr__ \u001b[32mPASSED\u001b[0m\u001b[33m                [ 12%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.Array.blocks \u001b[32mPASSED\u001b[0m\u001b[33m                  [ 12%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.Array.compute_chunk_sizes \u001b[32mPASSED\u001b[0m\u001b[33m     [ 12%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.Array.map_blocks \u001b[32mPASSED\u001b[0m\u001b[33m              [ 12%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.Array.partitions \u001b[32mPASSED\u001b[0m\u001b[33m              [ 13%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.Array.store \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 13%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.Array.to_hdf5 \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 13%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.Array.to_svg \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 13%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.Array.vindex \u001b[32mPASSED\u001b[0m\u001b[33m                  [ 13%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.BlockView \u001b[32mPASSED\u001b[0m\u001b[33m                     [ 13%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core._check_regular_chunks \u001b[32mPASSED\u001b[0m\u001b[33m         [ 13%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core._concatenate2 \u001b[32mPASSED\u001b[0m\u001b[33m                 [ 13%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core._get_axis \u001b[32mPASSED\u001b[0m\u001b[33m                     [ 14%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core._vindex \u001b[32mPASSED\u001b[0m\u001b[33m                       [ 14%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core._vindex_merge \u001b[32mPASSED\u001b[0m\u001b[33m                 [ 14%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.asanyarray \u001b[32mPASSED\u001b[0m\u001b[33m                    [ 14%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.asarray \u001b[32mPASSED\u001b[0m\u001b[33m                       [ 14%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.blockdims_from_blockshape \u001b[32mPASSED\u001b[0m\u001b[33m     [ 14%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.broadcast_arrays \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 14%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.broadcast_chunks \u001b[32mPASSED\u001b[0m\u001b[33m              [ 14%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.chunks_from_arrays \u001b[32mPASSED\u001b[0m\u001b[33m            [ 14%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.common_blockdim \u001b[32mPASSED\u001b[0m\u001b[33m               [ 15%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.concatenate \u001b[32mPASSED\u001b[0m\u001b[33m                   [ 15%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.concatenate3 \u001b[32mPASSED\u001b[0m\u001b[33m                  [ 15%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.deepfirst \u001b[32mPASSED\u001b[0m\u001b[33m                     [ 15%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.dotmany \u001b[32mPASSED\u001b[0m\u001b[33m                       [ 15%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.elemwise \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 15%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.from_array \u001b[32mPASSED\u001b[0m\u001b[33m                    [ 15%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.from_delayed \u001b[32mPASSED\u001b[0m\u001b[33m                  [ 15%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.from_func \u001b[32mPASSED\u001b[0m\u001b[33m                     [ 16%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.getter_inline \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 16%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.graph_from_arraylike \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 16%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.insert_to_ooc \u001b[32mPASSED\u001b[0m\u001b[33m                 [ 16%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.interleave_none \u001b[32mPASSED\u001b[0m\u001b[33m               [ 16%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.is_scalar_for_elemwise \u001b[32mPASSED\u001b[0m\u001b[33m        [ 16%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.keyname \u001b[32mPASSED\u001b[0m\u001b[33m                       [ 16%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.load_store_chunk \u001b[32mPASSED\u001b[0m\u001b[33m              [ 16%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.map_blocks \u001b[32mPASSED\u001b[0m\u001b[33m                    [ 17%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.normalize_chunks \u001b[32mPASSED\u001b[0m\u001b[33m              [ 17%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.offset_func \u001b[32mPASSED\u001b[0m\u001b[33m                   [ 17%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.retrieve_from_ooc \u001b[32mPASSED\u001b[0m\u001b[33m             [ 17%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.slices_from_chunks \u001b[32mPASSED\u001b[0m\u001b[33m            [ 17%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.stack \u001b[32mPASSED\u001b[0m\u001b[33m                         [ 17%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.store \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 17%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.to_hdf5 \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 17%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.to_npy_stack \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 17%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.transposelist \u001b[32mPASSED\u001b[0m\u001b[33m                 [ 18%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.unify_chunks \u001b[32mPASSED\u001b[0m\u001b[33m                  [ 18%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/core.py::dask.array.core.unpack_singleton \u001b[32mPASSED\u001b[0m\u001b[33m              [ 18%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/creation.py::dask.array.creation.diag \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 18%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/creation.py::dask.array.creation.diagonal \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 18%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/creation.py::dask.array.creation.fromfunction \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 18%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/creation.py::dask.array.creation.meshgrid \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 18%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/creation.py::dask.array.creation.pad \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 18%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/creation.py::dask.array.creation.repeat \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 19%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/creation.py::dask.array.creation.tile \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 19%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/creation.py::dask.array.creation.tri \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 19%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/einsumfuncs.py::dask.array.einsumfuncs.einsum \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 19%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/gufunc.py::dask.array.gufunc.apply_gufunc \u001b[32mPASSED\u001b[0m\u001b[33m              [ 19%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/gufunc.py::dask.array.gufunc.as_gufunc \u001b[32mPASSED\u001b[0m\u001b[33m                 [ 19%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/gufunc.py::dask.array.gufunc.gufunc \u001b[32mPASSED\u001b[0m\u001b[33m                    [ 19%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/image.py::dask.array.image.imread \u001b[32mPASSED\u001b[0m\u001b[33m                      [ 19%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/linalg.py::dask.array.linalg.compression_level \u001b[32mPASSED\u001b[0m\u001b[33m         [ 20%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/linalg.py::dask.array.linalg.lu \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 20%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/linalg.py::dask.array.linalg.norm \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 20%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/linalg.py::dask.array.linalg.qr \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 20%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/linalg.py::dask.array.linalg.svd \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 20%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/linalg.py::dask.array.linalg.svd_compressed \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 20%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.average \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 20%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.count \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 20%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.empty_like \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 20%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.filled \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 21%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.fix_invalid \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 21%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.getdata \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 21%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.getmaskarray \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 21%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.masked_array \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 21%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.masked_equal \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 21%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.masked_inside \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 21%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.masked_invalid \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 21%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.masked_outside \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 22%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.masked_values \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 22%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.masked_where \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 22%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.nonzero \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 22%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.ones_like \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 22%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.set_fill_value \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 22%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.where \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 22%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ma.py::dask.array.ma.zeros_like \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 22%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/numpy_compat.py::dask.array.numpy_compat.moveaxis \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 23%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/optimization.py::dask.array.optimization.fuse_slice \u001b[32mPASSED\u001b[0m\u001b[33m    [ 23%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/optimization.py::dask.array.optimization.normalize_slice \u001b[32mPASSED\u001b[0m\u001b[33m [ 23%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/overlap.py::dask.array.overlap.add_dummy_padding \u001b[32mPASSED\u001b[0m\u001b[33m       [ 23%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/overlap.py::dask.array.overlap.ensure_minimum_chunksize \u001b[32mPASSED\u001b[0m\u001b[33m [ 23%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/overlap.py::dask.array.overlap.map_overlap \u001b[32mPASSED\u001b[0m\u001b[33m             [ 23%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/overlap.py::dask.array.overlap.overlap \u001b[32mPASSED\u001b[0m\u001b[33m                 [ 23%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/overlap.py::dask.array.overlap.sliding_window_view \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 23%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/percentile.py::dask.array.percentile.merge_percentiles \u001b[32mPASSED\u001b[0m\u001b[33m [ 23%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator \u001b[32mPASSED\u001b[0m\u001b[33m                 [ 24%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.binomial \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 24%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.chisquare \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 24%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.choice \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 24%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.f \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 24%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.gamma \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 24%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.geometric \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 24%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.gumbel \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 24%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.hypergeometric \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 25%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.integers \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 25%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.laplace \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 25%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.logistic \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 25%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.lognormal \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 25%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.logseries \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 25%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.multinomial \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 25%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.multivariate_hypergeometric \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 25%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.negative_binomial \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 26%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.noncentral_chisquare \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 26%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.noncentral_f \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 26%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.normal \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 26%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.pareto \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 26%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.permutation \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 26%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.poisson \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 26%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.power \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 26%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.random \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 26%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.rayleigh \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 27%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.standard_cauchy \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 27%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.standard_exponential \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 27%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.standard_gamma \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 27%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.standard_normal \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 27%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.standard_t \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 27%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.triangular \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 27%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.uniform \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 27%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.vonmises \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 28%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.wald \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 28%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.weibull \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 28%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.Generator.zipf \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 28%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState \u001b[32mPASSED\u001b[0m\u001b[33m               [ 28%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.binomial \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 28%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.chisquare \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 28%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.choice \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 28%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.f \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 29%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.gamma \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 29%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.geometric \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 29%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.gumbel \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 29%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.hypergeometric \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 29%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.laplace \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 29%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.logistic \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 29%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.lognormal \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 29%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.logseries \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 29%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.multinomial \u001b[33mSKIPPED\u001b[0m\u001b[33m  [ 30%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.negative_binomial \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 30%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.noncentral_chisquare \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 30%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.noncentral_f \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 30%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.normal \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 30%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.pareto \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 30%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.permutation \u001b[33mSKIPPED\u001b[0m\u001b[33m  [ 30%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.poisson \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 30%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.power \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 31%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.randint \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 31%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.random_integers \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 31%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.random_sample \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 31%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.rayleigh \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 31%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.standard_cauchy \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 31%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.standard_exponential \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 31%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.standard_gamma \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 31%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.standard_normal \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 32%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.standard_t \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 32%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.tomaxint \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 32%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.triangular \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 32%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.uniform \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 32%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.vonmises \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 32%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.wald \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 32%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.weibull \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 32%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.RandomState.zipf \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 32%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.binomial \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 33%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.chisquare \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 33%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.choice \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 33%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.default_rng \u001b[32mPASSED\u001b[0m\u001b[33m               [ 33%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.f \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 33%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.gamma \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 33%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.geometric \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 33%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.gumbel \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 33%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.hypergeometric \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 34%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.laplace \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 34%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.logistic \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 34%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.lognormal \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 34%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.logseries \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 34%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.multinomial \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 34%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.negative_binomial \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 34%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.noncentral_chisquare \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 34%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.noncentral_f \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 35%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.normal \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 35%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.pareto \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 35%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.permutation \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 35%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.poisson \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 35%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.power \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 35%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.randint \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 35%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.random \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 35%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.random_integers \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 35%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.random_sample \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 36%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.rayleigh \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 36%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.standard_cauchy \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 36%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.standard_exponential \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 36%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.standard_gamma \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 36%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.standard_normal \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 36%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.standard_t \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 36%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.triangular \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 36%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.uniform \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 37%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.vonmises \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 37%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.wald \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 37%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.weibull \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 37%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/random.py::dask.array.random.zipf \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 37%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/rechunk.py::dask.array.rechunk._breakpoints \u001b[32mPASSED\u001b[0m\u001b[33m            [ 37%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/rechunk.py::dask.array.rechunk._intersect_1d \u001b[32mPASSED\u001b[0m\u001b[33m           [ 37%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/rechunk.py::dask.array.rechunk.cumdims_label \u001b[32mPASSED\u001b[0m\u001b[33m           [ 37%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/rechunk.py::dask.array.rechunk.format_blocks \u001b[32mPASSED\u001b[0m\u001b[33m           [ 38%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/rechunk.py::dask.array.rechunk.format_chunks \u001b[32mPASSED\u001b[0m\u001b[33m           [ 38%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/rechunk.py::dask.array.rechunk.format_plan \u001b[32mPASSED\u001b[0m\u001b[33m             [ 38%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/rechunk.py::dask.array.rechunk.intersect_chunks \u001b[32mPASSED\u001b[0m\u001b[33m        [ 38%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/rechunk.py::dask.array.rechunk.old_to_new \u001b[32mPASSED\u001b[0m\u001b[33m              [ 38%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/rechunk.py::dask.array.rechunk.rechunk \u001b[32mPASSED\u001b[0m\u001b[33m                 [ 38%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.all \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 38%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.any \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 38%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.argmax \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 38%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.argmin \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 39%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.argtopk \u001b[32mPASSED\u001b[0m\u001b[33m           [ 39%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.cumprod \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 39%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.cumsum \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 39%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.max \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 39%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.mean \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 39%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.median \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 39%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.min \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 39%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.nanargmax \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 40%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.nanargmin \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 40%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.nancumprod \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 40%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.nancumsum \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 40%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.nanmax \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 40%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.nanmean \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 40%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.nanmedian \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 40%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.nanmin \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 40%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.nanprod \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 41%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.nanstd \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 41%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.nansum \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 41%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.nanvar \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 41%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.partial_reduce \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 41%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.prod \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 41%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.std \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 41%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.sum \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 41%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.topk \u001b[32mPASSED\u001b[0m\u001b[33m              [ 41%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.trace \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 42%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reductions.py::dask.array.reductions.var \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 42%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reshape.py::dask.array.reshape.contract_tuple \u001b[32mPASSED\u001b[0m\u001b[33m          [ 42%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/reshape.py::dask.array.reshape.expand_tuple \u001b[32mPASSED\u001b[0m\u001b[33m            [ 42%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.aligned_coarsen_chunks \u001b[32mPASSED\u001b[0m\u001b[33m [ 42%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.allclose \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 42%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.append \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 42%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.apply_along_axis \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 42%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.apply_over_axes \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 43%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.argwhere \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 43%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.around \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 43%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.array \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 43%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.atleast_1d \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 43%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.atleast_2d \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 43%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.atleast_3d \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 43%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.average \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 43%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.bincount \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 44%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.choose \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 44%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.compress \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 44%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.corrcoef \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 44%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.count_nonzero \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 44%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.cov \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 44%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.delete \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 44%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.diff \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 44%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.digitize \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 44%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.dot \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 45%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.dstack \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 45%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.ediff1d \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 45%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.expand_dims \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 45%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.extract \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 45%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.flatnonzero \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 45%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.fliplr \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 45%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.flipud \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 45%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.gradient \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 46%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.histogram \u001b[32mPASSED\u001b[0m\u001b[33m             [ 46%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.histogram2d \u001b[32mPASSED\u001b[0m\u001b[33m           [ 46%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.histogramdd \u001b[32mPASSED\u001b[0m\u001b[33m           [ 46%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.hstack \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 46%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.insert \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 46%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.isclose \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 46%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.iscomplexobj \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 46%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.matmul \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 47%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.ndim \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 47%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.nonzero \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 47%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.outer \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 47%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.piecewise \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 47%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.ptp \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 47%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.ravel \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 47%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.result_type \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 47%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.roll \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 47%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.rot90 \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 48%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.searchsorted \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 48%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.select \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 48%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.shape \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 48%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.split_at_breaks \u001b[32mPASSED\u001b[0m\u001b[33m       [ 48%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.squeeze \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 48%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.swapaxes \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 48%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.take \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 48%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.tensordot \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 49%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.transpose \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 49%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.tril \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 49%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.tril_indices \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 49%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.triu \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 49%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.triu_indices \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 49%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.union1d \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 49%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.unique \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 49%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.unravel_index \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 50%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.vdot \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 50%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.vstack \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 50%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/routines.py::dask.array.routines.where \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 50%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing._slice_1d \u001b[32mPASSED\u001b[0m\u001b[33m               [ 50%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.check_index \u001b[32mPASSED\u001b[0m\u001b[33m             [ 50%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.expander \u001b[32mPASSED\u001b[0m\u001b[33m                [ 50%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.issorted \u001b[32mPASSED\u001b[0m\u001b[33m                [ 50%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.make_block_sorted_slices \u001b[32mPASSED\u001b[0m\u001b[33m [ 50%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.new_blockdim \u001b[32mPASSED\u001b[0m\u001b[33m            [ 51%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.normalize_index \u001b[32mPASSED\u001b[0m\u001b[33m         [ 51%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.normalize_slice \u001b[32mPASSED\u001b[0m\u001b[33m         [ 51%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.parse_assignment_indices \u001b[32mPASSED\u001b[0m\u001b[33m [ 51%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.partition_by_size \u001b[32mPASSED\u001b[0m\u001b[33m       [ 51%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.posify_index \u001b[32mPASSED\u001b[0m\u001b[33m            [ 51%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.replace_ellipsis \u001b[32mPASSED\u001b[0m\u001b[33m        [ 51%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.sanitize_index \u001b[32mPASSED\u001b[0m\u001b[33m          [ 51%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.setitem \u001b[32mPASSED\u001b[0m\u001b[33m                 [ 52%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.slice_array \u001b[32mPASSED\u001b[0m\u001b[33m             [ 52%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/slicing.py::dask.array.slicing.take \u001b[32mPASSED\u001b[0m\u001b[33m                    [ 52%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/stats.py::dask.array.stats.f_oneway \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 52%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/stats.py::dask.array.stats.kurtosis \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 52%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/stats.py::dask.array.stats.kurtosistest \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 52%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/stats.py::dask.array.stats.moment \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 52%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/stats.py::dask.array.stats.normaltest \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 52%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/stats.py::dask.array.stats.power_divergence \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 52%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/stats.py::dask.array.stats.skew \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 53%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/stats.py::dask.array.stats.skewtest \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 53%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/stats.py::dask.array.stats.ttest_1samp \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 53%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/stats.py::dask.array.stats.ttest_ind \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 53%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/stats.py::dask.array.stats.ttest_rel \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 53%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/svg.py::dask.array.svg.svg_lines \u001b[32mPASSED\u001b[0m\u001b[33m                       [ 53%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/tiledb_io.py::dask.array.tiledb_io.from_tiledb \u001b[32mPASSED\u001b[0m\u001b[33m         [ 53%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/tiledb_io.py::dask.array.tiledb_io.to_tiledb \u001b[32mPASSED\u001b[0m\u001b[33m           [ 53%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.angle \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 54%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.clip \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 54%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.divmod \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 54%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.fix \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 54%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.frexp \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 54%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.frompyfunc \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 54%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.i0 \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 54%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.imag \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 54%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.iscomplex \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 55%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.isreal \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 55%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.modf \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 55%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.nan_to_num \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 55%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.real \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 55%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.sinc \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 55%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/ufunc.py::dask.array.ufunc.ufunc.outer \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 55%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/wrap.py::dask.array.wrap.broadcast_trick \u001b[32mPASSED\u001b[0m\u001b[33m               [ 55%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/wrap.py::dask.array.wrap.full \u001b[32mPASSED\u001b[0m\u001b[33m                          [ 55%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/array/wrap.py::dask.array.wrap.full_like \u001b[32mPASSED\u001b[0m\u001b[33m                     [ 56%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/avro.py::dask.bag.avro.to_avro \u001b[32mPASSED\u001b[0m\u001b[33m                           [ 56%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag \u001b[32mPASSED\u001b[0m\u001b[33m                               [ 56%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.accumulate \u001b[32mPASSED\u001b[0m\u001b[33m                    [ 56%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.all \u001b[32mPASSED\u001b[0m\u001b[33m                           [ 56%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.any \u001b[32mPASSED\u001b[0m\u001b[33m                           [ 56%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.count \u001b[32mPASSED\u001b[0m\u001b[33m                         [ 56%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.distinct \u001b[32mPASSED\u001b[0m\u001b[33m                      [ 56%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.filter \u001b[32mPASSED\u001b[0m\u001b[33m                        [ 57%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.flatten \u001b[32mPASSED\u001b[0m\u001b[33m                       [ 57%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.fold \u001b[32mPASSED\u001b[0m\u001b[33m                          [ 57%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.foldby \u001b[32mPASSED\u001b[0m\u001b[33m                        [ 57%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.frequencies \u001b[32mPASSED\u001b[0m\u001b[33m                   [ 57%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.groupby \u001b[32mPASSED\u001b[0m\u001b[33m                       [ 57%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.join \u001b[32mPASSED\u001b[0m\u001b[33m                          [ 57%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.map \u001b[32mPASSED\u001b[0m\u001b[33m                           [ 57%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.map_partitions \u001b[32mPASSED\u001b[0m\u001b[33m                [ 58%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.pluck \u001b[32mPASSED\u001b[0m\u001b[33m                         [ 58%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.random_sample \u001b[32mPASSED\u001b[0m\u001b[33m                 [ 58%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.reduction \u001b[32mPASSED\u001b[0m\u001b[33m                     [ 58%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.remove \u001b[32mPASSED\u001b[0m\u001b[33m                        [ 58%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.repartition \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 58%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.starmap \u001b[32mPASSED\u001b[0m\u001b[33m                       [ 58%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.str \u001b[32mPASSED\u001b[0m\u001b[33m                           [ 58%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.take \u001b[32mPASSED\u001b[0m\u001b[33m                          [ 58%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.to_dataframe \u001b[32mPASSED\u001b[0m\u001b[33m                  [ 59%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.to_textfiles \u001b[32mPASSED\u001b[0m\u001b[33m                  [ 59%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.topk \u001b[32mPASSED\u001b[0m\u001b[33m                          [ 59%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.Bag.unzip \u001b[32mPASSED\u001b[0m\u001b[33m                         [ 59%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.StringAccessor \u001b[32mPASSED\u001b[0m\u001b[33m                    [ 59%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.StringAccessor.match \u001b[32mPASSED\u001b[0m\u001b[33m              [ 59%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.bag_map \u001b[32mPASSED\u001b[0m\u001b[33m                           [ 59%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.bag_range \u001b[32mPASSED\u001b[0m\u001b[33m                         [ 59%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.bag_zip \u001b[32mPASSED\u001b[0m\u001b[33m                           [ 60%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.concat \u001b[32mPASSED\u001b[0m\u001b[33m                            [ 60%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.dictitems \u001b[32mPASSED\u001b[0m\u001b[33m                         [ 60%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.from_delayed \u001b[33mSKIPPED\u001b[0m (all tests skipped\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | by +SKIP option)\u001b[33m                                                         [ 60%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.from_sequence \u001b[32mPASSED\u001b[0m\u001b[33m                     [ 60%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.from_url \u001b[32mPASSED\u001b[0m\u001b[33m                          [ 60%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.inline_singleton_lists \u001b[32mPASSED\u001b[0m\u001b[33m            [ 60%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.lazify_task \u001b[32mPASSED\u001b[0m\u001b[33m                       [ 60%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.map_partitions \u001b[32mPASSED\u001b[0m\u001b[33m                    [ 61%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.split \u001b[32mPASSED\u001b[0m\u001b[33m                             [ 61%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/core.py::dask.bag.core.to_textfiles \u001b[32mPASSED\u001b[0m\u001b[33m                      [ 61%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/random.py::dask.bag.random.choices \u001b[32mPASSED\u001b[0m\u001b[33m                       [ 61%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/random.py::dask.bag.random.sample \u001b[32mPASSED\u001b[0m\u001b[33m                        [ 61%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bag/text.py::dask.bag.text.read_text \u001b[33mSKIPPED\u001b[0m (all tests skipped by\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | +SKIP option)\u001b[33m                                                            [ 61%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/bytes/core.py::dask.bytes.core.read_bytes \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 61%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 61%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.asfreq \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 61%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.ceil \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 62%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.components \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 62%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.day \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 62%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.day_name \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 62%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.day_of_week \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 62%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.dayofweek \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 62%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.floor \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 62%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.hour \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 62%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.is_leap_year \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 63%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.is_month_end \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 63%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.is_month_start \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 63%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.is_quarter_end \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 63%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.is_quarter_start \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 63%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.is_year_end \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 63%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.is_year_start \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 63%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.isocalendar \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 63%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.microsecond \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 64%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.minute \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 64%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.month \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 64%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.month_name \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 64%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.nanosecond \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 64%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.normalize \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 64%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.round \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 64%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.second \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 64%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.start_time \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 64%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.strftime \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 65%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.to_period \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 65%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.to_pydatetime \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 65%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.to_pytimedelta \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 65%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.total_seconds \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 65%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.tz_convert \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 65%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.tz_localize \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 65%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.weekday \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 65%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.DatetimeAccessor.year \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 66%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 66%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.capitalize \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 66%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.casefold \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 66%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.cat \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 66%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.contains \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 66%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.count \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 66%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.endswith \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 66%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.extract \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 67%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.extractall \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 67%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.findall \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 67%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.get \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 67%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.isalnum \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 67%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.isalpha \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 67%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.isdecimal \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 67%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.isdigit \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 67%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.islower \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 67%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.isnumeric \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 68%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.isspace \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 68%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.istitle \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 68%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.isupper \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 68%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.join \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 68%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.len \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 68%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.lower \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 68%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.lstrip \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 68%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.pad \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 69%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.partition \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 69%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.removeprefix \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 69%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.removesuffix \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 69%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.repeat \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 69%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.replace \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 69%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.rpartition \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 69%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.rsplit \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 69%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.rstrip \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 70%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.slice \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 70%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.slice_replace \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 70%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.split \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 70%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.startswith \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 70%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.strip \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 70%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.swapcase \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 70%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.title \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 70%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.upper \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 70%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.wrap \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 71%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/accessor.py::dask.dataframe.accessor.StringAccessor.zfill \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 71%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/backends.py::dask.dataframe.backends.make_meta_object \u001b[32mPASSED\u001b[0m\u001b[33m [ 71%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/categorical.py::dask.dataframe.categorical.CategoricalAccessor \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 71%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.add \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 71%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.append \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 71%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.apply \u001b[32mPASSED\u001b[0m\u001b[33m       [ 71%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.applymap \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 71%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.assign \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 72%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.clip \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 72%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.corr \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 72%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.cov \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 72%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.div \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 72%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.divide \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 72%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.drop \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 72%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.dropna \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 72%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.eq \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 73%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.eval \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 73%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.explode \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 73%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.floordiv \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 73%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.ge \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 73%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.groupby \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 73%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.gt \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 73%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.iloc \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 73%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.items \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 73%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.iterrows \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 74%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.itertuples \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 74%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.join \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 74%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.le \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 74%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.lt \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 74%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.memory_usage \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 74%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.mod \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 74%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.mode \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 74%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.mul \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 75%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.ne \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 75%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.nlargest \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 75%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.nsmallest \u001b[33mSKIPPED\u001b[0m\u001b[33m  [ 75%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.nunique \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 75%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.pop \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 75%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.pow \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 75%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.query \u001b[32mPASSED\u001b[0m\u001b[33m       [ 75%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.radd \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 76%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.rdiv \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 76%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.rename \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 76%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.rfloordiv \u001b[33mSKIPPED\u001b[0m\u001b[33m  [ 76%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.rmod \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 76%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.rmul \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 76%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.round \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 76%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.rpow \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 76%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.rsub \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 76%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.rtruediv \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 77%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.select_dtypes \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 77%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.set_index \u001b[32mPASSED\u001b[0m\u001b[33m   [ 77%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.shape \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 77%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.sort_values \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 77%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.squeeze \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 77%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.sub \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 77%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.to_bag \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 77%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.to_parquet \u001b[32mPASSED\u001b[0m\u001b[33m  [ 78%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.to_records \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 78%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.to_string \u001b[33mSKIPPED\u001b[0m\u001b[33m  [ 78%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.DataFrame.truediv \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 78%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Index.is_monotonic_decreasing \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 78%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Index.is_monotonic_increasing \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 78%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Index.max \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 78%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Index.min \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 78%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Index.shift \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 79%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Index.to_frame \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 79%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Index.to_series \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 79%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.add \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 79%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.align \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 79%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.apply \u001b[32mPASSED\u001b[0m\u001b[33m          [ 79%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.autocorr \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 79%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.between \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 79%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.clip \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 79%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.combine \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 80%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.combine_first \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 80%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.corr \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 80%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.count \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 80%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.cov \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 80%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.div \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 80%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.divide \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 80%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.dropna \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 80%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.eq \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 81%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.explode \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 81%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.floordiv \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 81%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.ge \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 81%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.groupby \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 81%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.gt \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 81%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.isin \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 81%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.le \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 81%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.lt \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 82%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.map \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 82%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.memory_usage \u001b[33mSKIPPED\u001b[0m\u001b[33m  [ 82%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.mod \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 82%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.mul \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 82%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.ne \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 82%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.nlargest \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 82%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.nsmallest \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 82%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.nunique \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 82%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.pow \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 83%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.radd \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 83%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.rdiv \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 83%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.rfloordiv \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 83%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.rmod \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 83%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.rmul \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 83%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.round \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 83%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.rpow \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 83%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.rsub \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 84%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.rtruediv \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 84%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.shape \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 84%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.squeeze \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 84%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.sub \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 84%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.to_frame \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 84%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.truediv \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 84%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.value_counts \u001b[33mSKIPPED\u001b[0m\u001b[33m  [ 84%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.Series.view \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 85%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.abs \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 85%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.add_prefix \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 85%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.add_suffix \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 85%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.align \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 85%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.all \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 85%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.any \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 85%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.append \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 85%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.astype \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 85%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.combine \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 86%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.combine_first \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 86%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.compute_current_divisions \u001b[32mPASSED\u001b[0m\u001b[33m [ 86%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.count \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 86%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.cummax \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 86%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.cummin \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 86%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.cumprod \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 86%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.cumsum \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 86%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.describe \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 87%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.diff \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 87%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.dot \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 87%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.drop_duplicates \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 87%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.fillna \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 87%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.first \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 87%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.get_partition \u001b[32mPASSED\u001b[0m\u001b[33m  [ 87%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.idxmax \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 87%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.idxmin \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 88%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.isin \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 88%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.isna \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 88%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.isnull \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 88%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.last \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 88%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.loc \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 88%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.map_overlap \u001b[32mPASSED\u001b[0m\u001b[33m    [ 88%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.map_partitions \u001b[32mPASSED\u001b[0m\u001b[33m [ 88%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.mask \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 88%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.max \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 89%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.min \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 89%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.mode \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 89%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.notnull \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 89%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.partitions \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 89%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.pipe \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 89%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.prod \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 89%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.random_split \u001b[33mSKIPPED\u001b[0m\u001b[33m  [ 89%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.reduction \u001b[32mPASSED\u001b[0m\u001b[33m      [ 90%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.repartition \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 90%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.replace \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 90%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.resample \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 90%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.shift \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 90%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.shuffle \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 90%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.size \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 90%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.std \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 90%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.sum \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 91%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.to_csv \u001b[32mPASSED\u001b[0m\u001b[33m         [ 91%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.to_delayed \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 91%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.to_hdf \u001b[32mPASSED\u001b[0m\u001b[33m         [ 91%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.var \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 91%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core._Frame.where \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 91%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.apply_concat_apply \u001b[32mPASSED\u001b[0m\u001b[33m    [ 91%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.elemwise \u001b[33mSKIPPED\u001b[0m (all tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | skipped by +SKIP option)\u001b[33m                                                 [ 91%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.partitionwise_graph \u001b[33mSKIPPED\u001b[0m\u001b[33m  [ 91%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.pd_split \u001b[32mPASSED\u001b[0m\u001b[33m              [ 92%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.repartition \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 92%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/core.py::dask.dataframe.core.repartition_divisions \u001b[32mPASSED\u001b[0m\u001b[33m [ 92%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby.Aggregation \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 92%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby.SeriesGroupBy.head \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 92%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby.SeriesGroupBy.nunique \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 92%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby.SeriesGroupBy.tail \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 92%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby.SeriesGroupBy.unique \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 92%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby._GroupBy.corr \u001b[33mSKIPPED\u001b[0m\u001b[33m  [ 93%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby._GroupBy.cov \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 93%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby._GroupBy.cumcount \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 93%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby._GroupBy.first \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 93%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby._GroupBy.idxmax \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 93%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby._GroupBy.idxmin \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 93%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby._GroupBy.last \u001b[33mSKIPPED\u001b[0m\u001b[33m  [ 93%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby._GroupBy.mean \u001b[33mSKIPPED\u001b[0m\u001b[33m  [ 93%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby._GroupBy.rolling \u001b[32mPASSED\u001b[0m\u001b[33m [ 94%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby._GroupBy.shift \u001b[32mPASSED\u001b[0m\u001b[33m  [ 94%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/groupby.py::dask.dataframe.groupby._normalize_spec \u001b[32mPASSED\u001b[0m\u001b[33m [ 94%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/indexing.py::dask.dataframe.indexing._partition_of_index_value \u001b[32mPASSED\u001b[0m\u001b[33m [ 94%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/indexing.py::dask.dataframe.indexing._partitions_of_index_values \u001b[32mPASSED\u001b[0m\u001b[33m [ 94%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/methods.py::dask.dataframe.methods.boundary_slice \u001b[32mPASSED\u001b[0m\u001b[33m  [ 94%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/multi.py::dask.dataframe.multi.concat \u001b[32mPASSED\u001b[0m\u001b[33m              [ 94%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/multi.py::dask.dataframe.multi.hash_join \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 94%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/multi.py::dask.dataframe.multi.require \u001b[32mPASSED\u001b[0m\u001b[33m             [ 94%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/numeric.py::dask.dataframe.numeric.to_numeric \u001b[33mSKIPPED\u001b[0m\u001b[33m     [ 95%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/partitionquantiles.py::dask.dataframe.partitionquantiles.percentiles_to_weights \u001b[32mPASSED\u001b[0m\u001b[33m [ 95%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/partitionquantiles.py::dask.dataframe.partitionquantiles.tree_groups \u001b[32mPASSED\u001b[0m\u001b[33m [ 95%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/reshape.py::dask.dataframe.reshape.get_dummies \u001b[32mPASSED\u001b[0m\u001b[33m     [ 95%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/rolling.py::dask.dataframe.rolling.Rolling.aggregate \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 95%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/rolling.py::dask.dataframe.rolling.Rolling.count \u001b[33mSKIPPED\u001b[0m\u001b[33m  [ 95%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/rolling.py::dask.dataframe.rolling.Rolling.kurt \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 95%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/rolling.py::dask.dataframe.rolling.Rolling.mean \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 95%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/rolling.py::dask.dataframe.rolling.Rolling.median \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 96%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/rolling.py::dask.dataframe.rolling.Rolling.min \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 96%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/rolling.py::dask.dataframe.rolling.Rolling.quantile \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 96%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/rolling.py::dask.dataframe.rolling.Rolling.std \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 96%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/rolling.py::dask.dataframe.rolling.Rolling.sum \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 96%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/rolling.py::dask.dataframe.rolling.Rolling.var \u001b[33mSKIPPED\u001b[0m\u001b[33m    [ 96%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/utils.py::dask.dataframe.utils.shard_df_on_index \u001b[32mPASSED\u001b[0m\u001b[33m   [ 96%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/utils.py::dask.dataframe.utils.valid_divisions \u001b[32mPASSED\u001b[0m\u001b[33m     [ 96%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/csv.py::dask.dataframe.io.csv.block_mask \u001b[32mPASSED\u001b[0m\u001b[33m        [ 97%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/csv.py::dask.dataframe.io.csv.block_mask_last \u001b[32mPASSED\u001b[0m\u001b[33m   [ 97%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/csv.py::dask.dataframe.io.csv.read_csv \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 97%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/csv.py::dask.dataframe.io.csv.read_fwf \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 97%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/csv.py::dask.dataframe.io.csv.read_table \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 97%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/csv.py::dask.dataframe.io.csv.to_csv \u001b[32mPASSED\u001b[0m\u001b[33m            [ 97%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/demo.py::dask.dataframe.io.demo.make_timeseries \u001b[32mPASSED\u001b[0m\u001b[33m [ 97%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/hdf.py::dask.dataframe.io.hdf.read_hdf \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 97%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/hdf.py::dask.dataframe.io.hdf.to_hdf \u001b[32mPASSED\u001b[0m\u001b[33m            [ 97%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/json.py::dask.dataframe.io.json.read_json \u001b[33mSKIPPED\u001b[0m (all\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | tests skipped by +SKIP option)\u001b[33m                                           [ 98%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/sql.py::dask.dataframe.io.sql.read_sql_table \u001b[33mSKIPPED\u001b[0m\u001b[33m   [ 98%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/sql.py::dask.dataframe.io.sql.to_sql \u001b[32mPASSED\u001b[0m\u001b[33m            [ 98%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/orc/core.py::dask.dataframe.io.orc.core.read_orc \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 98%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/orc/core.py::dask.dataframe.io.orc.core.to_orc \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 98%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/parquet/core.py::dask.dataframe.io.parquet.core.read_parquet \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 98%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/io/parquet/core.py::dask.dataframe.io.parquet.core.to_parquet \u001b[32mPASSED\u001b[0m\u001b[33m [ 98%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/tseries/resample.py::dask.dataframe.tseries.resample.Resampler.agg \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 98%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/tseries/resample.py::dask.dataframe.tseries.resample.Resampler.first \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 99%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/tseries/resample.py::dask.dataframe.tseries.resample.Resampler.last \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 99%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/dataframe/tseries/resample.py::dask.dataframe.tseries.resample.Resampler.mean \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 99%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/diagnostics/profile.py::dask.diagnostics.profile.CacheProfiler \u001b[32mPASSED\u001b[0m\u001b[33m [ 99%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/diagnostics/profile.py::dask.diagnostics.profile.Profiler \u001b[32mPASSED\u001b[0m\u001b[33m    [ 99%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/diagnostics/profile.py::dask.diagnostics.profile.ResourceProfiler \u001b[32mPASSED\u001b[0m\u001b[33m [ 99%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/diagnostics/profile_visualize.py::dask.diagnostics.profile_visualize.pprint_task \u001b[32mPASSED\u001b[0m\u001b[33m [ 99%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/diagnostics/progress.py::dask.diagnostics.progress.ProgressBar \u001b[33mSKIPPED\u001b[0m\u001b[33m [ 99%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | dask/diagnostics/progress.py::dask.diagnostics.progress.format_time \u001b[33mSKIPPED\u001b[0m\u001b[33m [100%]\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \u001b[33m=============================== warnings summary ===============================\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | 3/envs/test-environment/lib/python3.10/importlib/__init__.py:126\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/importlib/__init__.py:126: DeprecationWarning: `dask.compatibility` is not intended for external use and has been renamed to `dask._compatibility`. This backward-compatible shim will be removed in a future release. Please find an alternative.\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |     return _bootstrap._gcd_import(name[level:], package, level)\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | 3/envs/test-environment/lib/python3.10/site-packages/crick/__init__.py:4\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/3/envs/test-environment/lib/python3.10/site-packages/crick/__init__.py:4: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |   Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   |     from .space_saving import SpaceSaving\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/report.xml -\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | ============================= slowest 10 durations =============================\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | 5.83s call     dask/bag/core.py::dask.bag.core.Bag.map\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | 5.53s call     dask/bag/core.py::dask.bag.core.bag_map\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | 4.03s call     dask/bag/core.py::dask.bag.core.Bag.starmap\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | 3.06s call     dask/bag/core.py::dask.bag.core.Bag.distinct\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | 3.02s call     dask/bag/core.py::dask.bag.core.Bag.map_partitions\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | 2.97s call     dask/bag/core.py::dask.bag.core.Bag\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | 2.96s call     dask/bag/core.py::dask.bag.core.Bag.fold\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | 2.92s call     dask/bag/core.py::dask.bag.core.Bag.str\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | 2.89s call     dask/bag/core.py::dask.bag.core.map_partitions\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | 2.80s call     dask/bag/core.py::dask.bag.core.StringAccessor\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \u001b[36m\u001b[1m=========================== short test summary info ============================\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \u001b[33mSKIPPED\u001b[0m [560] 3/envs/test-environment/lib/python3.10/site-packages/_pytest/doctest.py:455: all tests skipped by +SKIP option\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | \u001b[33m=========== \u001b[32m274 passed\u001b[0m, \u001b[33m\u001b[1m560 skipped\u001b[0m, \u001b[33m\u001b[1m2 warnings\u001b[0m\u001b[33m in 72.02s (0:01:12)\u001b[0m\u001b[33m ============\u001b[0m\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2705  Success - Main Run tests\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest] \u2b50 Run Post Setup Conda Environment\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/conda-incubator-setup-miniconda@v2.2.0/dist/delete/index.js] user= workdir=\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::group::Removing uncompressed packages to trim down cache folder...\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/_libgcc_mutex-0.1-conda_forge\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/_openmp_mutex-4.5-2_gnu\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aiohttp-3.8.4-py310h2372a71_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aiosignal-1.3.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aom-3.5.0-h27087fc_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/asciitree-0.3.3-py_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/asttokens-2.2.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/async-timeout-4.0.2-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/atk-1.0-2.38.0-hd4edc92_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/attrs-23.1.0-pyh71513ae_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-c-auth-0.6.28-hccec9ca_5\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-c-cal-0.5.27-hf85dbcb_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-c-common-0.8.20-hd590300_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-c-compression-0.2.17-h4b87b72_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-c-event-stream-0.3.0-hc5de78f_6\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-c-http-0.7.8-h412fb1b_4\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-c-io-0.13.26-h0d05201_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-c-mqtt-0.8.13-ha5d9b87_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-c-s3-0.3.4-h95e21fb_5\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-c-sdkutils-0.1.10-h4b87b72_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-checksums-0.1.16-h4b87b72_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-crt-cpp-0.20.2-h5289e1f_9\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-sam-translator-1.70.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-sdk-cpp-1.10.57-h8101662_14\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/aws-xray-sdk-2.12.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/backcall-0.2.0-pyh9f0ad1d_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/backports-1.0-pyhd8ed1ab_3\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/backports.functools_lru_cache-1.6.5-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/bcrypt-3.2.2-py310h5764c6d_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/blinker-1.6.2-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/blosc-1.21.4-h0f2a231_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/bokeh-3.2.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/boto3-1.26.165-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/botocore-1.29.165-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/brotli-1.0.9-h166bdaf_9\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/brotli-bin-1.0.9-h166bdaf_9\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/brotlipy-0.7.0-py310h5764c6d_1005\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/brunsli-0.1-h9c3ff4c_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/bzip2-1.0.8-h7f98852_4\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/c-ares-1.19.1-hd590300_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/c-blosc2-2.9.3-hb4ffafa_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/ca-certificates-2023.5.7-hbcca054_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/cached-property-1.5.2-hd8ed1ab_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/cached_property-1.5.2-pyha770c72_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/cachey-0.2.1-pyh9f0ad1d_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/cairo-1.16.0-hbbf8b49_1016\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/certifi-2023.5.7-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/cffi-1.15.1-py310h255011f_3\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/cfgv-3.3.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/cfitsio-4.2.0-hd9d235c_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/cfn-lint-0.77.10-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/charls-2.4.2-h59595ed_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/charset-normalizer-3.1.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/click-8.1.3-unix_pyhd8ed1ab_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/cloudpickle-2.2.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/colorama-0.4.6-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/comm-0.1.3-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/contourpy-1.1.0-py310hd41b1e2_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/coverage-7.2.7-py310h2372a71_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/cramjam-2.6.2-py310h3392aa1_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/crick-0.0.3-py310hde88566_1003\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/cryptography-41.0.1-py310h75e40e8_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/curl-8.1.2-h409715c_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/cytoolz-0.12.0-py310h5764c6d_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/dask-core-2023.6.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/dav1d-1.2.1-hd590300_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/debugpy-1.6.7-py310heca2aa9_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/decorator-5.1.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/distlib-0.3.6-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/distributed-2023.6.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/docker-py-6.1.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/ecdsa-0.18.0-pyhd8ed1ab_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/entrypoints-0.4-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/exceptiongroup-1.1.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/execnet-1.9.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/executing-1.2.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/expat-2.5.0-hcb278e6_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/fasteners-0.17.3-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/fastparquet-2023.4.0-py310h0a54255_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/filelock-3.12.2-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/flask-2.3.2-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/flask_cors-3.0.10-pyhd3deb0d_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/font-ttf-dejavu-sans-mono-2.37-hab24e00_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/font-ttf-inconsolata-3.000-h77eed37_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/font-ttf-source-code-pro-2.038-h77eed37_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/font-ttf-ubuntu-0.83-hab24e00_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/fontconfig-2.14.2-h14ed4e7_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/fonts-conda-ecosystem-1-0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/fonts-conda-forge-1-0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/freetype-2.12.1-hca18f0e_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/fribidi-1.0.10-h36c2ea0_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/frozenlist-1.3.3-py310h5764c6d_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/fsspec-2023.6.0-pyh1a96a4e_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/gdk-pixbuf-2.42.10-h6b639ba_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/gettext-0.21.1-h27087fc_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/gflags-2.2.2-he1b5a44_1004\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/giflib-5.2.1-h0b41bf4_3\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/glog-0.6.0-h6f12383_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/gmp-6.2.1-h58526e2_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/gmpy2-2.1.2-py310h3ec546c_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/graphite2-1.3.13-h58526e2_1001\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/graphql-core-3.2.3-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/graphviz-8.0.5-h28d9a01_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/greenlet-2.0.2-py310hc6cd4ac_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/gtk2-2.24.33-h90689f9_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/gts-0.7.6-h977cf35_4\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/h5py-3.9.0-nompi_py310hcca72df_101\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/harfbuzz-7.3.0-hdb3a94d_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/hdf5-1.14.1-nompi_h4f84152_100\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/heapdict-1.0.1-py_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/httpretty-1.1.4-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/icu-72.1-hcb278e6_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/identify-2.5.24-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/idna-3.4-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/imagecodecs-2023.1.23-py310h241fb82_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/imageio-2.31.1-pyh24c5eb1_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/importlib-metadata-6.7.0-pyha770c72_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/importlib_metadata-6.7.0-hd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/importlib_resources-5.12.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/iniconfig-2.0.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/ipycytoscape-1.3.3-pyhd8ed1ab_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/ipykernel-6.21.3-pyh210e3f2_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/ipython-8.14.0-pyh41d4057_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/ipywidgets-8.0.4-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/itsdangerous-2.1.2-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jedi-0.18.2-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jinja2-3.1.2-pyhd8ed1ab_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jmespath-1.0.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/joblib-1.3.0-pyhd8ed1ab_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jschema-to-python-1.2.3-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jsondiff-2.0.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jsonpatch-1.32-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jsonpickle-2.2.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jsonpointer-2.0-py_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jsonschema-4.17.3-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jsonschema-spec-0.1.6-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/junit-xml-1.9-pyh9f0ad1d_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jupyter_client-8.3.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jupyter_core-5.3.1-py310hff52083_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jupyterlab_widgets-3.0.7-pyhd8ed1ab_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/jxrlib-1.1-h7f98852_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/keyutils-1.6.1-h166bdaf_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/krb5-1.20.1-h81ceb04_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/lazy-object-proxy-1.9.0-py310h1fa729e_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/lazy_loader-0.2-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/lcms2-2.15-haa2dc70_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/ld_impl_linux-64-2.40-h41732ed_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/lerc-4.0.0-h27087fc_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libabseil-20230125.3-cxx17_h59595ed_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libaec-1.0.6-hcb278e6_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libarrow-10.0.1-h3bdf5bc_31_cpu\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libavif-0.11.1-h8182462_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libblas-3.9.0-17_linux64_openblas\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libbrotlicommon-1.0.9-h166bdaf_9\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libbrotlidec-1.0.9-h166bdaf_9\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libbrotlienc-1.0.9-h166bdaf_9\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libcblas-3.9.0-17_linux64_openblas\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libcrc32c-1.1.2-h9c3ff4c_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libcurl-8.1.2-h409715c_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libdeflate-1.18-h0b41bf4_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libedit-3.1.20191231-he28a2e2_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libev-4.33-h516909a_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libevent-2.1.12-hf998b51_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libexpat-2.5.0-hcb278e6_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libffi-3.4.2-h7f98852_5\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libgcc-ng-13.1.0-he5830b7_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libgd-2.3.3-hfa28ad5_6\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libgfortran-ng-13.1.0-h69a702a_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libgfortran5-13.1.0-h15d22d2_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libglib-2.76.3-hebfc3b9_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libgomp-13.1.0-he5830b7_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libgoogle-cloud-2.12.0-hac9eb74_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libgrpc-1.54.2-hb20ce57_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libiconv-1.17-h166bdaf_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libjpeg-turbo-2.1.5.1-h0b41bf4_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/liblapack-3.9.0-17_linux64_openblas\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libllvm14-14.0.6-hcd5def8_3\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libnghttp2-1.52.0-h61bc06f_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libnsl-2.0.0-h7f98852_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libnuma-2.0.16-h0b41bf4_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libopenblas-0.3.23-pthreads_h80387f5_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libpng-1.6.39-h753d276_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libprotobuf-3.21.12-h3eb15da_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/librsvg-2.56.1-h98fae49_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libsodium-1.0.18-h36c2ea0_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libsqlite-3.42.0-h2797004_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libssh2-1.11.0-h0841786_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libstdcxx-ng-13.1.0-hfd8a6a1_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libthrift-0.18.1-h8fd135c_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libtiff-4.5.1-h8b53f26_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libtool-2.4.7-h27087fc_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libutf8proc-2.8.0-h166bdaf_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libuuid-2.38.1-h0b41bf4_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libwebp-1.3.1-hbf2b3c1_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libwebp-base-1.3.1-hd590300_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libxcb-1.15-h0b41bf4_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libxml2-2.11.4-h0d562d8_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libzlib-1.2.13-hd590300_5\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/libzopfli-1.0.3-h9c3ff4c_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/llvmlite-0.40.1-py310h1b8f574_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/locket-1.0.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/lz4-4.3.2-py310h0cfdcf0_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/lz4-c-1.9.4-hcb278e6_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/lzo-2.10-h516909a_1000\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/markupsafe-2.1.3-py310h2372a71_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/matplotlib-inline-0.1.6-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/mimesis-10.1.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/mmh3-4.0.0-py310hc6cd4ac_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/moto-4.1.12-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/mpc-1.3.1-hfe3b2da_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/mpfr-4.2.0-hb012696_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/mpmath-1.3.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/msgpack-python-1.0.5-py310hdf3cbec_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/multidict-6.0.4-py310h1fa729e_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/nbformat-5.9.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/ncurses-6.4-hcb278e6_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/nest-asyncio-1.5.6-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/networkx-2.8.8-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/nodeenv-1.8.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/nomkl-1.0-h5ca1d4c_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/numba-0.57.1-py310h0f6aa51_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/numcodecs-0.11.0-py310heca2aa9_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/numexpr-2.8.4-py310h690d005_100\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/numpy-1.23.5-py310h53a5b5f_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/openapi-schema-validator-0.4.4-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/openapi-spec-validator-0.5.7-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/openjpeg-2.5.0-hfec8fc6_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/openssl-3.1.1-hd590300_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/orc-1.9.0-h2f23424_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/packaging-23.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pandas-1.5.3-py310h9b08913_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pango-1.50.14-heaa33ce_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/paramiko-3.2.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/parso-0.8.3-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/partd-1.4.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pathable-0.4.3-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pbr-5.11.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pcre2-10.40-hc3806b6_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pexpect-4.8.0-pyh1a96a4e_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pickleshare-0.7.5-py_1003\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pillow-9.5.0-py310h582fbeb_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pip-23.1.2-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pixman-0.40.0-h36c2ea0_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pkgutil-resolve-name-1.3.10-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/platformdirs-3.1.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pluggy-1.2.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pooch-1.7.0-pyha770c72_3\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pre-commit-3.3.3-pyha770c72_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/prompt-toolkit-3.0.38-pyha770c72_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/prompt_toolkit-3.0.38-hd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/psutil-5.9.5-py310h1fa729e_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pthread-stubs-0.4-h36c2ea0_1001\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/ptyprocess-0.7.0-pyhd3deb0d_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pure_eval-0.2.2-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/py-cpuinfo-9.0.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/py4j-0.10.9.7-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pyarrow-10.0.1-py310he6bfd7f_31_cpu\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pyasn1-0.4.8-py_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pycparser-2.21-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pydantic-1.10.10-py310h2372a71_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pygments-2.15.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pynacl-1.5.0-py310h5764c6d_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pyopenssl-23.2.0-pyhd8ed1ab_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pyparsing-3.1.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pyrsistent-0.19.3-py310h1fa729e_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pysocks-1.7.1-pyha2e5f31_6\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pyspark-3.4.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pytables-3.8.0-py310ha028ce3_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pytest-7.4.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pytest-cov-4.1.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pytest-rerunfailures-11.1.2-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pytest-timeout-2.1.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pytest-xdist-3.3.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/python-3.10.12-hd12c33a_0_cpython\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/python-cityhash-0.4.7-py310hc6cd4ac_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/python-dateutil-2.8.2-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/python-fastjsonschema-2.17.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/python-graphviz-0.20.1-pyh22cad53_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/python-jose-3.3.0-pyh6c4a22f_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/python-snappy-0.6.1-py310hcee4d7c_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/python-xxhash-3.2.0-py310h1fa729e_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/python_abi-3.10-3_cp310\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pytz-2023.3-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pywavelets-1.4.1-py310h0a54255_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pywin32-on-windows-0.1.0-pyh1179c8e_3\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pyyaml-6.0-py310h5764c6d_5\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/pyzmq-25.1.0-py310h5bbb5d0_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/rdma-core-28.9-h59595ed_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/re2-2023.03.02-h8c504da_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/readline-8.2-h8228510_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/regex-2023.6.3-py310h2372a71_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/requests-2.31.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/responses-0.23.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/rfc3339-validator-0.1.4-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/rsa-4.9-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/s2n-1.3.45-h06160fa_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/s3fs-0.4.2-py_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/s3transfer-0.6.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/sarif-om-1.0.4-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/scikit-image-0.20.0-py310h9b08913_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/scikit-learn-1.3.0-py310hf7d194e_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/scipy-1.11.1-py310ha4c1d20_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/setuptools-68.0.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/six-1.16.0-pyh6c4a22f_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/snappy-1.1.10-h9fff704_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/sortedcontainers-2.4.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/sparse-0.14.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/spectate-1.0.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/sqlalchemy-1.4.48-py310h2372a71_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/sshpubkeys-3.3.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/stack_data-0.6.2-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/sympy-1.12-pypyh9d50eac_103\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/tblib-1.7.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/threadpoolctl-3.1.0-pyh8a188c0_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/tifffile-2023.4.12-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/tiledb-2.11.3-h3f4058f_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/tiledb-py-0.17.3-py310hdbd97e5_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/tk-8.6.12-h27826a3_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/toml-0.10.2-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/tomli-2.0.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/toolz-0.12.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/tornado-6.3.2-py310h2372a71_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/traitlets-5.9.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/types-pyyaml-6.0.12.10-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/typing-extensions-4.4.0-hd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/typing_extensions-4.4.0-pyha770c72_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/tzdata-2023c-h71feb2d_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/ucx-1.14.1-hf587318_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/ukkonen-1.0.1-py310hbf28c38_3\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/urllib3-1.26.15-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/virtualenv-20.21.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/wcwidth-0.2.6-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/websocket-client-1.6.1-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/werkzeug-2.3.6-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/wheel-0.40.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/widgetsnbextension-4.0.7-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/wrapt-1.15.0-py310h1fa729e_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xarray-2023.6.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xmltodict-0.13.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xorg-kbproto-1.0.7-h7f98852_1002\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xorg-libice-1.1.1-hd590300_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xorg-libsm-1.2.4-h7391055_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xorg-libx11-1.8.6-h8ee46fc_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xorg-libxau-1.0.11-hd590300_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xorg-libxdmcp-1.1.3-h7f98852_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xorg-libxext-1.3.4-h0b41bf4_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xorg-libxrender-0.9.10-h7f98852_1003\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xorg-renderproto-0.11.1-h7f98852_1002\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xorg-xextproto-7.3.0-h0b41bf4_1003\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xorg-xproto-7.0.31-h7f98852_1007\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xxhash-0.8.1-h0b41bf4_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xyzservices-2023.5.0-pyhd8ed1ab_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/xz-5.2.6-h166bdaf_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/yaml-0.2.5-h7f98852_2\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/yarl-1.9.2-py310h2372a71_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/zarr-2.15.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/zeromq-4.3.4-h9c3ff4c_1\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/zfp-1.0.0-h27087fc_3\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/zict-3.0.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/zipp-3.15.0-pyhd8ed1ab_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/zlib-1.2.13-hd590300_5\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/zlib-ng-2.0.7-h0b41bf4_0\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   | Removing \"/home/runneradmin/conda_pkgs_dir/zstd-1.5.2-h3eb15da_6\"\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2753  ::endgroup::\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest]   \u2705  Success - Post Setup Conda Environment\n[2256f7f4-791e-4082-b72f-d45069042e7b/doctest] \ud83c\udfc1  Job succeeded\n",
        "stderr": "Error: Job 'imports' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dask-dask/.github/workflows/additional-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "2256f7f4-791e-4082-b72f-d45069042e7b",
        "build_tool": "pytest",
        "elapsed_time": 450.41952753067017
    }
}