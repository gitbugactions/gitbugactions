{
    "repository": "zulip/zulip-terminal",
    "stars": 498,
    "language": "python",
    "size": 7196,
    "clone_url": "https://github.com/zulip/zulip-terminal.git",
    "timestamp": "2023-07-01T12:10:45.360127Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.cli.test_run",
                "name": "test_in_color[red-\\x1b[91m]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_in_color[green-\\x1b[92m]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_in_color[yellow-\\x1b[93m]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_in_color[blue-\\x1b[94m]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_in_color[purple-\\x1b[95m]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_in_color[cyan-\\x1b[96m]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_get_login_label[json0-Email or Username]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_get_login_label[json1-Username]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_get_login_label[json2-Email]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_get_login_label[json3-Email]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_get_server_settings",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_get_server_settings__not_a_zulip_organization",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_main_help[-h]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_main_help[--help]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_valid_zuliprc_but_no_connection",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_warning_regarding_incomplete_theme[c-expected_complete_incomplete_themes0-(you could try: a, b)]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_warning_regarding_incomplete_theme[d-expected_complete_incomplete_themes1-(all themes are incomplete)]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_zt_version[-v]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_zt_version[--version]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_parse_args_valid_autohide_option[--autohide-autohide]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_parse_args_valid_autohide_option[--no-autohide-no_autohide]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_parse_args_valid_autohide_option[--debug-None]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_main_multiple_autohide_options[options0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_main_multiple_autohide_options[options1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test__parse_args_valid_notify_option[--notify-enabled]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test__parse_args_valid_notify_option[--no-notify-disabled]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test__parse_args_valid_notify_option[--profile-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_main_multiple_notify_options[options0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_main_multiple_notify_options[options1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_main_cannot_write_zuliprc_given_good_credentials[valid_path_but_cannot_be_written_to]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_main_cannot_write_zuliprc_given_good_credentials[path_does_not_exist]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_successful_main_function_with_config[footlinks_disabled]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_successful_main_function_with_config[footlinks_enabled]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_successful_main_function_with_config[maximum-footlinks_3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_successful_main_function_with_config[maximum-footlinks_0]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_main_error_with_invalid_zuliprc_options[zulip_config0-Configuration Error: footlinks and maximum-footlinks options cannot be used together]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_main_error_with_invalid_zuliprc_options[zulip_config1-Configuration Error: Minimum value allowed for maximum-footlinks is 0; you used '-3']",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_exit_with_error[1-]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_exit_with_error[2-helper]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test__write_zuliprc__success",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test__write_zuliprc__fail_file_exists",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[63]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[56]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[7]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[54]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[48]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[6]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[45]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[40]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[5]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[36]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[32]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[4]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[27]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[24]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[3]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[18]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[16]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[9]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[8]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.cli.test_run",
                "name": "test_show_error_if_loading_zuliprc_with_open_permissions[1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_color",
                "name": "test_color_properties",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[HELP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[MARKDOWN_HELP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[ABOUT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[GO_BACK]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[OPEN_DRAFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[GO_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[GO_DOWN]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[GO_LEFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[GO_RIGHT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[SCROLL_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[SCROLL_DOWN]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[GO_TO_BOTTOM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[REPLY_MESSAGE]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[MENTION_REPLY]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[QUOTE_REPLY]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[REPLY_AUTHOR]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[EDIT_MESSAGE]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[STREAM_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[PRIVATE_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[CYCLE_COMPOSE_FOCUS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[SEND_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[SAVE_AS_DRAFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[AUTOCOMPLETE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[AUTOCOMPLETE_REVERSE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[ADD_REACTION]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[STREAM_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[TOPIC_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[NARROW_MESSAGE_RECIPIENT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[TOGGLE_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[TOGGLE_TOPIC]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[ALL_MESSAGES]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[ALL_PM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[ALL_STARRED]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[ALL_MENTIONS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[NEXT_UNREAD_TOPIC]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[NEXT_UNREAD_PM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[SEARCH_PEOPLE]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[SEARCH_MESSAGES]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[SEARCH_STREAMS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[SEARCH_TOPICS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[SEARCH_EMOJIS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[TOGGLE_MUTE_STREAM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[ENTER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[THUMBS_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[TOGGLE_STAR_STATUS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[MSG_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[MSG_SENDER_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[EDIT_HISTORY]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[VIEW_IN_BROWSER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[STREAM_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[STREAM_MEMBERS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[COPY_STREAM_EMAIL]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[REDRAW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[QUIT]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[USER_INFO]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[BEGINNING_OF_LINE]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[END_OF_LINE]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[ONE_WORD_BACKWARD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[ONE_WORD_FORWARD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[DELETE_LAST_CHARACTER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[TRANSPOSE_CHARACTERS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[CUT_TO_END_OF_LINE]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[CUT_TO_START_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[CUT_TO_END_OF_WORD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[CUT_TO_START_OF_WORD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[PASTE_LAST_CUT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[UNDO_LAST_ACTION]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[PREV_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[NEXT_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[CLEAR_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[FULL_RENDERED_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command[FULL_RAW_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[HELP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[MARKDOWN_HELP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[ABOUT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[GO_BACK]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[OPEN_DRAFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[GO_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[GO_DOWN]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[GO_LEFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[GO_RIGHT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[SCROLL_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[SCROLL_DOWN]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[GO_TO_BOTTOM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[REPLY_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[MENTION_REPLY]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[QUOTE_REPLY]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[REPLY_AUTHOR]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[EDIT_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[STREAM_MESSAGE]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[PRIVATE_MESSAGE]",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[CYCLE_COMPOSE_FOCUS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[SEND_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[SAVE_AS_DRAFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[AUTOCOMPLETE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[AUTOCOMPLETE_REVERSE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[ADD_REACTION]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[STREAM_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[TOPIC_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[NARROW_MESSAGE_RECIPIENT]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[TOGGLE_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[TOGGLE_TOPIC]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[ALL_MESSAGES]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[ALL_PM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[ALL_STARRED]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[ALL_MENTIONS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[NEXT_UNREAD_TOPIC]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[NEXT_UNREAD_PM]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[SEARCH_PEOPLE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[SEARCH_MESSAGES]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[SEARCH_STREAMS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[SEARCH_TOPICS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[SEARCH_EMOJIS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[TOGGLE_MUTE_STREAM]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[ENTER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[THUMBS_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[TOGGLE_STAR_STATUS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[MSG_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[MSG_SENDER_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[EDIT_HISTORY]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[VIEW_IN_BROWSER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[STREAM_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[STREAM_MEMBERS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[COPY_STREAM_EMAIL]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[REDRAW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[QUIT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[USER_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[BEGINNING_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[END_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[ONE_WORD_BACKWARD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[ONE_WORD_FORWARD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[DELETE_LAST_CHARACTER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[TRANSPOSE_CHARACTERS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[CUT_TO_END_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[CUT_TO_START_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[CUT_TO_END_OF_WORD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[CUT_TO_START_OF_WORD]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[PASTE_LAST_CUT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[UNDO_LAST_ACTION]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[PREV_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[NEXT_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[CLEAR_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[FULL_RENDERED_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_primary_key_for_command[FULL_RAW_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_invalid_command[BLAH*10]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[HELP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[MARKDOWN_HELP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[ABOUT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[GO_BACK]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[OPEN_DRAFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[GO_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[GO_DOWN]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[GO_LEFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[GO_RIGHT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[SCROLL_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[SCROLL_DOWN]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[GO_TO_BOTTOM]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[REPLY_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[MENTION_REPLY]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[QUOTE_REPLY]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[REPLY_AUTHOR]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[EDIT_MESSAGE]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[STREAM_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[PRIVATE_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[CYCLE_COMPOSE_FOCUS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[SEND_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[SAVE_AS_DRAFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[AUTOCOMPLETE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[AUTOCOMPLETE_REVERSE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[ADD_REACTION]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[STREAM_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[TOPIC_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[NARROW_MESSAGE_RECIPIENT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[TOGGLE_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[TOGGLE_TOPIC]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[ALL_MESSAGES]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[ALL_PM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[ALL_STARRED]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[ALL_MENTIONS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[NEXT_UNREAD_TOPIC]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[NEXT_UNREAD_PM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[SEARCH_PEOPLE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[SEARCH_MESSAGES]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[SEARCH_STREAMS]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[SEARCH_TOPICS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[SEARCH_EMOJIS]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[TOGGLE_MUTE_STREAM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[ENTER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[THUMBS_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[TOGGLE_STAR_STATUS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[MSG_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[MSG_SENDER_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[EDIT_HISTORY]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[VIEW_IN_BROWSER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[STREAM_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[STREAM_MEMBERS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[COPY_STREAM_EMAIL]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[REDRAW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[QUIT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[USER_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[BEGINNING_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[END_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[ONE_WORD_BACKWARD]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[ONE_WORD_FORWARD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[DELETE_LAST_CHARACTER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[TRANSPOSE_CHARACTERS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[CUT_TO_END_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[CUT_TO_START_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[CUT_TO_END_OF_WORD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[CUT_TO_START_OF_WORD]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[PASTE_LAST_CUT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[UNDO_LAST_ACTION]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[PREV_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[NEXT_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[CLEAR_MESSAGE]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[FULL_RENDERED_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_keys_for_command_identity[FULL_RAW_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[HELP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[MARKDOWN_HELP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[ABOUT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[GO_BACK]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[OPEN_DRAFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[GO_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[GO_DOWN]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[GO_LEFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[GO_RIGHT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[SCROLL_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[SCROLL_DOWN]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[GO_TO_BOTTOM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[REPLY_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[MENTION_REPLY]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[QUOTE_REPLY]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[REPLY_AUTHOR]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[EDIT_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[STREAM_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[PRIVATE_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[CYCLE_COMPOSE_FOCUS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[SEND_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[SAVE_AS_DRAFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[AUTOCOMPLETE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[AUTOCOMPLETE_REVERSE]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[ADD_REACTION]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[STREAM_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[TOPIC_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[NARROW_MESSAGE_RECIPIENT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[TOGGLE_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[TOGGLE_TOPIC]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[ALL_MESSAGES]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[ALL_PM]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[ALL_STARRED]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[ALL_MENTIONS]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[NEXT_UNREAD_TOPIC]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[NEXT_UNREAD_PM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[SEARCH_PEOPLE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[SEARCH_MESSAGES]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[SEARCH_STREAMS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[SEARCH_TOPICS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[SEARCH_EMOJIS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[TOGGLE_MUTE_STREAM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[ENTER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[THUMBS_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[TOGGLE_STAR_STATUS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[MSG_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[MSG_SENDER_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[EDIT_HISTORY]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[VIEW_IN_BROWSER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[STREAM_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[STREAM_MEMBERS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[COPY_STREAM_EMAIL]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[REDRAW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[QUIT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[USER_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[BEGINNING_OF_LINE]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[END_OF_LINE]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[ONE_WORD_BACKWARD]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[ONE_WORD_FORWARD]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[DELETE_LAST_CHARACTER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[TRANSPOSE_CHARACTERS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[CUT_TO_END_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[CUT_TO_START_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[CUT_TO_END_OF_WORD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[CUT_TO_START_OF_WORD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[PASTE_LAST_CUT]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[UNDO_LAST_ACTION]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[PREV_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[NEXT_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[CLEAR_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[FULL_RENDERED_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_matching_keys[FULL_RAW_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[HELP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[MARKDOWN_HELP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[ABOUT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[GO_BACK]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[OPEN_DRAFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[GO_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[GO_DOWN]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[GO_LEFT]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[GO_RIGHT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[SCROLL_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[SCROLL_DOWN]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[GO_TO_BOTTOM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[REPLY_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[MENTION_REPLY]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[QUOTE_REPLY]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[REPLY_AUTHOR]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[EDIT_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[STREAM_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[PRIVATE_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[CYCLE_COMPOSE_FOCUS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[SEND_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[SAVE_AS_DRAFT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[AUTOCOMPLETE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[AUTOCOMPLETE_REVERSE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[ADD_REACTION]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[STREAM_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[TOPIC_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[NARROW_MESSAGE_RECIPIENT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[TOGGLE_NARROW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[TOGGLE_TOPIC]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[ALL_MESSAGES]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[ALL_PM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[ALL_STARRED]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[ALL_MENTIONS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[NEXT_UNREAD_TOPIC]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[NEXT_UNREAD_PM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[SEARCH_PEOPLE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[SEARCH_MESSAGES]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[SEARCH_STREAMS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[SEARCH_TOPICS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[SEARCH_EMOJIS]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[TOGGLE_MUTE_STREAM]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[ENTER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[THUMBS_UP]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[TOGGLE_STAR_STATUS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[MSG_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[MSG_SENDER_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[EDIT_HISTORY]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[VIEW_IN_BROWSER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[STREAM_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[STREAM_MEMBERS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[COPY_STREAM_EMAIL]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[REDRAW]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[QUIT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[USER_INFO]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[BEGINNING_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[END_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[ONE_WORD_BACKWARD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[ONE_WORD_FORWARD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[DELETE_LAST_CHARACTER]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[TRANSPOSE_CHARACTERS]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[CUT_TO_END_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[CUT_TO_START_OF_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[CUT_TO_END_OF_WORD]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[CUT_TO_START_OF_WORD]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[PASTE_LAST_CUT]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[UNDO_LAST_ACTION]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[PREV_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[NEXT_LINE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[CLEAR_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[FULL_RENDERED_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_nonmatching_keys[FULL_RAW_MESSAGE]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_is_command_key_invalid_command[BLAH*10]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_HELP_is_not_allowed_as_tip",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_commands_for_random_tips",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_keys",
                "name": "test_updated_urwid_command_map",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_all_themes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_builtin_theme_completeness[gruvbox_dark]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_builtin_theme_completeness[gruvbox_light]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_builtin_theme_completeness[zt_dark]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_builtin_theme_completeness[zt_light]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_builtin_theme_completeness[zt_blue]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_complete_and_incomplete_themes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_parse_themefile[mono-chrome]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_parse_themefile[16-color]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_parse_themefile[256-color]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_parse_themefile[24-bit-color]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_add_pygments_style[theme_meta0-expected_styles0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_validate_colors[16-zt_dark]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_validate_colors[16-gruvbox_dark]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_validate_colors[16-gruvbox_light]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_validate_colors[16-zt_light]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.config.test_themes",
                "name": "test_validate_colors[16-zt_blue]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_initialize_controller",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_initial_editor_mode",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_current_editor_error_if_no_editor",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_editor_mode_entered_from_initial",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_editor_mode_error_on_multiple_enter",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_editor_mode_exits_after_entering",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_stream",
                "time": 0.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_topic[all-messages_to_topic_narrow_no_anchor]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_topic[topic_narrow_to_same_topic_narrow_with_anchor]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_topic[topic_narrow_to_same_topic_narrow_with_other_anchor]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_user",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_messages[None-537288]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_messages[537286-537286]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_messages[537288-537288]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_pm",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_starred[index_all_starred0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_starred[index_all_starred1]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_starred[index_all_starred2]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_starred[index_all_starred3]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_starred[index_all_starred4]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_starred[index_all_starred5]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_starred[index_all_starred6]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_mentions[stream_mention__stream_wildcard]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_mentions[stream+pm_mention__no_wildcard]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_mentions[no_mention__stream+pm_wildcard]",
                "time": 0.14,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_mentions[stream+group_mention__pm_wildcard]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_mentions[pm_mention__stream+group_wildcard]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_mentions[group_mention__all_wildcard]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_mentions[all_mention__stream_wildcard]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_narrow_to_all_mentions[stream+group_mention__wildcard]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_copy_to_clipboard_no_exception[copy this-copy this-success]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_copy_to_clipboard_no_exception[copy that-other text-failure]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_copy_to_clipboard_exception",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_open_in_browser_success[https://chat.zulip.org/#narrow/stream/test]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_open_in_browser_success[https://chat.zulip.org/user_uploads/sent/abcd/efg.png]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_open_in_browser_success[https://github.com/]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_open_in_browser_fail__no_browser_controller",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_main",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_stream_muting_confirmation_popup[muted_streams0-unmuting]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_stream_muting_confirmation_popup[muted_streams1-muting]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids0-Default_all_msg_search]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids0-redo_default_search]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids0-search_within_stream]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids0-pm_search_again]",
                "time": 0.151,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids0-search_within_topic_narrow]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids1-Default_all_msg_search]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids1-redo_default_search]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids1-search_within_stream]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids1-pm_search_again]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids1-search_within_topic_narrow]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids2-Default_all_msg_search]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids2-redo_default_search]",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids2-search_within_stream]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids2-pm_search_again]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_search_message[msg_ids2-search_within_topic_narrow]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_maximum_popup_dimensions[above_linear_range]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_maximum_popup_dimensions[in_linear_range]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_maximum_popup_dimensions[below_linear_range]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_show_typing_notification[in_pm_narrow_with_sender_typing:start]",
                "time": 0.179,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.core.test_core.TestController",
                "name": "test_show_typing_notification[in_pm_narrow_with_sender_typing:stop]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.emoji_data.test_emoji_data",
                "name": "test_generated_emoji_list_sorted",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.emoji_data.test_emoji_data",
                "name": "test_unicode_emojis_fixture_sorted",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_messages_narrow_all_messages",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_messages_narrow_stream",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_messages_narrow_topic",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_messages_narrow_user",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_messages_narrow_user_multiple",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_edited_message[edited_msgs0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_edited_message[edited_msgs1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_edited_message[edited_msgs2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_edited_message[edited_msgs3]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_edited_message[edited_msgs4]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_edited_message[edited_msgs5]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_edited_message[edited_msgs6]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_starred[msgs_with_stars0]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_starred[msgs_with_stars1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_starred[msgs_with_stars2]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_starred[msgs_with_stars3]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_starred[msgs_with_stars4]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_starred[msgs_with_stars5]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_starred[msgs_with_stars6]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_mentioned_messages[stream_mention__stream_wildcard]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_mentioned_messages[stream+pm_mention__no_wildcard]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_mentioned_messages[no_mention__stream+pm_wildcard]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_mentioned_messages[stream+group_mention__pm_wildcard]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_mentioned_messages[pm_mention__stream+group_wildcard]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_mentioned_messages[group_mention__all_wildcard]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_mentioned_messages[all_mention__stream_wildcard]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_index_mentioned_messages[stream+group_mention__wildcard]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_powerset[iterable0-set-expected_powerset0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_powerset[iterable1-set-expected_powerset1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_powerset[iterable2-set-expected_powerset2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_powerset[iterable3-set-expected_powerset3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_powerset[iterable4-tuple-expected_powerset4]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_classify_unread_counts[mute_private_stream_mute_general_stream_topic]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_classify_unread_counts[mute_general_stream_mute_private_stream_topic]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_classify_unread_counts[no_mute_some_other_stream_muted]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_color_formats[#ffffff]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_color_formats[#f0f0f0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_color_formats[#f0f1f2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_color_formats[#fff]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_color_formats[#FFF]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_color_formats[#F3F5FA]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_invalid_color_format[#]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_invalid_color_format[#f]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_invalid_color_format[#ff]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_invalid_color_format[#ffff]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_invalid_color_format[#fffff]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_invalid_color_format[#fffffff]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_invalid_color_format[#abj]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_invalid_color_format[#398a0s]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_display_error_if_present[response0-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_display_error_if_present[response1-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_notify_if_message_sent_outside_narrow[all_private__pm__not_notified]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_notify_if_message_sent_outside_narrow[group_private_conv__same_group_pm__not_notified]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_notify_if_message_sent_outside_narrow[private_conv__other_pm__notified]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_notify_if_message_sent_outside_narrow[private_conv__other_pm2__notified]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_notify_if_message_sent_outside_narrow[stream_topic__same_stream_topic__not_notified]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_notify_if_message_sent_outside_narrow[stream__different_stream__notified]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_notify_if_message_sent_outside_narrow[all_messages__stream__not_notified]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_notify_if_message_sent_outside_narrow[starred__stream__notified]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_notify_if_message_sent_outside_narrow[mentioned__private_no_mention__notified]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_notify_if_message_sent_outside_narrow[stream_search__stream_match_not_search__notified]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_hash_util_decode[(no.20topic)-(no topic)]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_hash_util_decode[.3Cstrong.3Exss.3C.2Fstrong.3E-<strong>xss</strong>]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_hash_util_decode[.23test-here.20.23T1.20.23T2.20.23T3-#test-here #T1 #T2 #T3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_hash_util_decode[.2Edot-.dot]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_hash_util_decode[.3Aparty_parrot.3A-:party_parrot:]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_get_unused_fence[inline_code]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_get_unused_fence[block_quote]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_get_unused_fence[block_code_python]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_get_unused_fence[block_code]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_get_unused_fence[block_code_quoted]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_get_unused_fence[block_math]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_get_unused_fence[block_spoiler]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_download_media",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_process_media[Linux_os_user]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_process_media[Mac_os_user]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_process_media[WSL_os_user]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_process_media[Unsupported_os_user]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_process_media_empty_url",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_open_media[0-error0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_open_media[1-error1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helper.test_helper",
                "name": "test_open_media_tool_exception",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_init",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_init_user_settings[None-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_init_user_settings[True-True]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_init_user_settings[False-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_user_settings_expected_contents",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_init_muted_topics[zulip_feature_level:None]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_init_muted_topics[zulip_feature_level:1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_init_InvalidAPIKey_response",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_init_ZulipError_exception",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_register_initial_desired_events",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_normalize_and_cache_message_retention_text[ZFL=None_no_stream_retention_realm_retention=None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_normalize_and_cache_message_retention_text[ZFL=16_no_stream_retention_realm_retention=-1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_normalize_and_cache_message_retention_text[ZFL=17_stream_retention_days=30]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_normalize_and_cache_message_retention_text[ZFL=18_stream_retention_days=[None, -1]]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow0-1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow0-5]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow0-None]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow1-1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow1-5]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow1-None]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow2-1]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow2-5]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow2-None]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow3-1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow3-5]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow3-None]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow4-1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow4-5]",
                "time": 0.176,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow4-None]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow5-1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow5-5]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow5-None]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow6-1]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow6-5]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_focus_in_current_narrow_individually[narrow6-None]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow0-1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow0-5]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow1-1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow1-5]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow2-1]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow2-5]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow3-1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow3-5]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow4-1]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow4-5]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow5-1]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow5-5]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow6-1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_focus_in_current_narrow[narrow6-5]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_search_narrow[narrow0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_search_narrow[narrow1-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_search_narrow[narrow2-False]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_search_narrow[narrow3-True]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_search_narrow[narrow4-True]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_search_narrow[narrow5-False]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_search_narrow[narrow6-True]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_search_narrow[narrow7-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_search_narrow[narrow8-True]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_search_narrow[narrow9-True]",
                "time": 0.216,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_search_narrow[narrow10-True]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_bad_input[bad_args0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_bad_input[bad_args1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_bad_input[bad_args2]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_bad_input[bad_args3]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_already_set[narrow0-good_args0]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_already_set[narrow1-good_args1]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_already_set[narrow2-good_args2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_already_set[narrow3-good_args3]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_already_set[narrow4-good_args4]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_already_set[narrow5-good_args5]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_already_set[narrow6-good_args6]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_not_already_set[initial_narrow0-narrow0-good_args0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_not_already_set[initial_narrow1-narrow1-good_args1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_not_already_set[initial_narrow2-narrow2-good_args2]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_not_already_set[initial_narrow3-narrow3-good_args3]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_not_already_set[initial_narrow4-narrow4-good_args4]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_not_already_set[initial_narrow5-narrow5-good_args5]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_set_narrow_not_already_set[initial_narrow6-narrow6-good_args6]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_message_ids_in_current_narrow[narrow0-index0-current_ids0]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_message_ids_in_current_narrow[narrow1-index1-current_ids1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_message_ids_in_current_narrow[narrow2-index2-current_ids2]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_message_ids_in_current_narrow[narrow3-index3-current_ids3]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_message_ids_in_current_narrow[narrow4-index4-current_ids4]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_message_ids_in_current_narrow[narrow5-index5-current_ids5]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_message_ids_in_current_narrow[narrow6-index6-current_ids6]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_message_ids_in_current_narrow[narrow7-index7-current_ids7]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_message_ids_in_current_narrow[narrow8-index8-current_ids8]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_message_ids_in_current_narrow[narrow9-index9-current_ids9]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_message_ids_in_current_narrow[narrow10-index10-current_ids10]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__fetch_topics_in_streams[response0-expected_index0-]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__fetch_topics_in_streams[response1-expected_index1-]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__fetch_topics_in_streams[response2-expected_index2-Some Error]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_topics_in_stream[topics_index0-False]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_topics_in_stream[topics_index1-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_unicode_original_no_existing_emoji-user_id]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_unicode_original_no_existing_emoji-id]",
                "time": 0.244,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_unicode_original_no_existing_emoji-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_realm_original_no_existing_emoji-user_id]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_realm_original_no_existing_emoji-id]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_realm_original_no_existing_emoji-None]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_unicode_original_mine_existing_different_emoji-user_id]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_unicode_original_mine_existing_different_emoji-id]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_unicode_original_mine_existing_different_emoji-None]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_zulip_original_mine_existing_different_emoji-user_id]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_zulip_original_mine_existing_different_emoji-id]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_zulip_original_mine_existing_different_emoji-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_unicode_original_others_existing_same_emoji-user_id]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_unicode_original_others_existing_same_emoji-id]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_unicode_original_others_existing_same_emoji-None]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_unicode_alias_others_existing_same_emoji-user_id]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_unicode_alias_others_existing_same_emoji-id]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[add_unicode_alias_others_existing_same_emoji-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[remove_unicode_original_mine_existing_same_emoji-user_id]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[remove_unicode_original_mine_existing_same_emoji-id]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[remove_unicode_original_mine_existing_same_emoji-None]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[remove_unicode_alias_mine_existing_same_emoji-user_id]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[remove_unicode_alias_mine_existing_same_emoji-id]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[remove_unicode_alias_mine_existing_same_emoji-None]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[remove_zulip_original_mine_existing_same_emoji-user_id]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[remove_zulip_original_mine_existing_same_emoji-id]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_valid_emoji[remove_zulip_original_mine_existing_same_emoji-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_reaction_with_invalid_emoji",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_has_user_reacted_to_message[id_inside_user_field__user_not_reacted]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_has_user_reacted_to_message[user_id_inside_user_field__user_has_reacted]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_has_user_reacted_to_message[no_user_field_with_user_id__user_has_reacted]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_has_user_reacted_to_message[no_user_field_with_user_id__user_not_reacted]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_typing_status_by_user_ids[start-recipient_user_ids0]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_typing_status_by_user_ids[start-recipient_user_ids1]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_typing_status_by_user_ids[stop-recipient_user_ids0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_typing_status_by_user_ids[stop-recipient_user_ids1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_typing_status_with_no_recipients[start]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_typing_status_with_no_recipients[stop]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_typing_status_avoided_due_to_user_setting[start-recipient_user_ids0]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_typing_status_avoided_due_to_user_setting[start-recipient_user_ids1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_typing_status_avoided_due_to_user_setting[stop-recipient_user_ids0]",
                "time": 0.275,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_typing_status_avoided_due_to_user_setting[stop-recipient_user_ids1]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_private_message[recipients0-response0-True]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_private_message[recipients0-response1-False]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_private_message[recipients1-response0-True]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_private_message[recipients1-response1-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_private_message_with_no_recipients",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_stream_message[response0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_send_stream_message[response1-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_private_message[response0-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_private_message[response1-False]",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_passed_but_same_so_not_changed:content_changed-API_success]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_passed_but_same_so_not_changed:content_changed-API_error]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_changed[one]-API_success]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_changed[one]-API_error]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_passed_but_same_so_not_changed[all]-API_success]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_passed_but_same_so_not_changed[all]-API_error]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_passed_but_same_so_not_changed[later]:content_changed-API_success]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_passed_but_same_so_not_changed[later]:content_changed-API_error]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_changed[later]:content_changed-API_success]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_changed[later]:content_changed-API_error]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_changed[one]:content_changed-API_success]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_changed[one]:content_changed-API_error]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_changed[all]:content_changed-API_success]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message[topic_changed[all]:content_changed-API_error]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args0-False-False-None-False]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args0-False-False-8-False]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args0-False-False-9-True]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args0-False-False-152-True]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args1-False-False-None-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args1-False-False-8-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args1-False-False-9-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args1-False-False-152-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args2-False-False-None-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args2-False-False-8-False]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args2-False-False-9-True]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args2-False-False-152-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args3-True-False-None-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args3-True-False-8-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args3-True-False-9-True]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args3-True-False-152-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args4-False-True-None-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args4-False-True-8-False]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args4-False-True-9-True]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args4-False-True-152-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args5-True-True-None-False]",
                "time": 0.251,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args5-True-True-8-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args5-True-True-9-True]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_stream_message__notify_thread_vs_ZFL[notify_args5-True-True-152-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_latest_message_in_topic[response0-return_value0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_latest_message_in_topic[response1-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_latest_message_in_topic[response2-None]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_latest_message_in_topic[response3-None]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_msg_disabled:PreZulip4.0-None-_]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_msg_disabled:PreZulip4.0-user_role1-_owner]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_msg_disabled:PreZulip4.0-user_role2-_admin]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_msg_disabled:PreZulip4.0-user_role3-_moderator]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_msg_disabled:PreZulip4.0-user_role4-_member]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_msg_disabled:PreZulip4.0-user_role5-_guest]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_topic_disabled:PreZulip4.0-None-_]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_topic_disabled:PreZulip4.0-user_role1-_owner]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_topic_disabled:PreZulip4.0-user_role2-_admin]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_topic_disabled:PreZulip4.0-user_role3-_moderator]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_topic_disabled:PreZulip4.0-user_role4-_member]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_topic_disabled:PreZulip4.0-user_role5-_guest]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_topic_and_msg_enabled:PreZulip4.0-None-_]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_topic_and_msg_enabled:PreZulip4.0-user_role1-_owner]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_topic_and_msg_enabled:PreZulip4.0-user_role2-_admin]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_topic_and_msg_enabled:PreZulip4.0-user_role3-_moderator]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_topic_and_msg_enabled:PreZulip4.0-user_role4-_member]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[editing_topic_and_msg_enabled:PreZulip4.0-user_role5-_guest]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[all_but_no_editing:Zulip4.0+:ZFL75-None-_]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[all_but_no_editing:Zulip4.0+:ZFL75-user_role1-_owner]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[all_but_no_editing:Zulip4.0+:ZFL75-user_role2-_admin]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[all_but_no_editing:Zulip4.0+:ZFL75-user_role3-_moderator]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[all_but_no_editing:Zulip4.0+:ZFL75-user_role4-_member]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[all_but_no_editing:Zulip4.0+:ZFL75-user_role5-_guest]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[members:Zulip4.0+:ZFL75-None-_]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[members:Zulip4.0+:ZFL75-user_role1-_owner]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[members:Zulip4.0+:ZFL75-user_role2-_admin]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[members:Zulip4.0+:ZFL75-user_role3-_moderator]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[members:Zulip4.0+:ZFL75-user_role4-_member]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[members:Zulip4.0+:ZFL75-user_role5-_guest]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[admins:Zulip4.0+:ZFL75-None-_]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[admins:Zulip4.0+:ZFL75-user_role1-_owner]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[admins:Zulip4.0+:ZFL75-user_role2-_admin]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[admins:Zulip4.0+:ZFL75-user_role3-_moderator]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[admins:Zulip4.0+:ZFL75-user_role4-_member]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[admins:Zulip4.0+:ZFL75-user_role5-_guest]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[full_members:Zulip4.0+:ZFL75-None-_]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[full_members:Zulip4.0+:ZFL75-user_role1-_owner]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[full_members:Zulip4.0+:ZFL75-user_role2-_admin]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[full_members:Zulip4.0+:ZFL75-user_role3-_moderator]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[full_members:Zulip4.0+:ZFL75-user_role4-_member]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[full_members:Zulip4.0+:ZFL75-user_role5-_guest]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[moderators:Zulip4.0+:ZFL75-None-_]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[moderators:Zulip4.0+:ZFL75-user_role1-_owner]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[moderators:Zulip4.0+:ZFL75-user_role2-_admin]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[moderators:Zulip4.0+:ZFL75-user_role3-_moderator]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[moderators:Zulip4.0+:ZFL75-user_role4-_member]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[moderators:Zulip4.0+:ZFL75-user_role5-_guest]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[guests:Zulip4.0+:ZFL75-None-_]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[guests:Zulip4.0+:ZFL75-user_role1-_owner]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[guests:Zulip4.0+:ZFL75-user_role2-_admin]",
                "time": 0.254,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[guests:Zulip4.0+:ZFL75-user_role3-_moderator]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[guests:Zulip4.0+:ZFL75-user_role4-_member]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_can_user_edit_topic[guests:Zulip4.0+:ZFL75-user_role5-_guest]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_success_get_messages",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_modernize_message_response[Zulip_4.0+_ZFL46_response_with_topic_links]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_modernize_message_response[Zulip_3.0+_ZFL1_response_with_topic_links]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_modernize_message_response[Zulip_3.0+_ZFL1_response_empty_topic_links]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_modernize_message_response[Zulip_2.1+_response_with_subject_links]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_modernize_message_response[Zulip_2.1+_response_empty_subject_links]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__store_content_length_restrictions[Zulip_2.1.x_ZFL_None_no_restrictions]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__store_content_length_restrictions[Zulip_3.1.x_ZFL_27_no_restrictions]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__store_content_length_restrictions[Zulip_4.0.x_ZFL_52_no_restrictions]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__store_content_length_restrictions[Zulip_4.0.x_ZFL_53_with_restrictions]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_message_false_first_anchor",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_fail_get_messages",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_fetch_raw_message_content[response0-Feels **great** to be back!-False]",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_fetch_raw_message_content[response1-None-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_stream_muted_status[muting_205]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_stream_muted_status[unmuting_205]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_stream_muted_status[first_muted_205]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_stream_muted_status[last_unmuted_205]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_stream_access_type",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_star_status[flags_before0-add]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_star_status[flags_before1-remove]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_star_status[flags_before2-add]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_star_status[flags_before3-remove]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_message_star_status[flags_before4-remove]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_mark_message_ids_as_read",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_mark_message_ids_as_read_empty_message_view",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__update_initial_data",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__group_info_from_realm_user_groups",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_full_name]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_empty_full_name]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_email]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_empty_email]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_date_joined]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_empty_date_joined]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_timezone]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_empty_timezone]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_bot_type]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_empty_bot_type]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_is_owner:Zulip_4.0+_ZFL59]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_is_admin:Zulip_4.0+_ZFL59]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_is_moderator:Zulip_4.0+_ZFL60]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_is_guest:Zulip_4.0+_ZFL59]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_is_member]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_is_owner:Zulip_3.0+]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_is_admin:preZulip_4.0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_is_guest:preZulip_4.0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_is_bot]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_bot_has_owner:Zulip_3.0+_ZFL1]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_bot_has_owner:preZulip_3.0]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info[user_bot_has_no_owner]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info_USER_NOT_FOUND",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_user_info_sample_response",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_all_users",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled0-muted0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled0-muted1]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled0-muted2]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled0-muted3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled1-muted0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled1-muted1]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled1-muted2]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled1-muted3]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled2-muted0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled2-muted1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled2-muted2]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled2-muted3]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled3-muted0]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled3-muted1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled3-muted2]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__subscribe_to_streams[visual_notification_enabled3-muted3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event_with_Falsey_log[stream_message]",
                "time": 0.334,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event_with_Falsey_log[pm_message]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event_with_Falsey_log[group_pm_message]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event_with_valid_log[stream_message]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event_with_valid_log[pm_message]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event_with_valid_log[group_pm_message]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event_with_flags[stream_message]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event_with_flags[pm_message]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event_with_flags[group_pm_message]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event[stream_to_all_messages]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event[private_to_all_private]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event[stream_to_stream]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event[stream_to_topic]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event[stream_to_different_stream_same_topic]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event[user_pm_x_appears_in_narrow_with_x]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event[search]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event[user_pm_x_does_not_appear_in_narrow_without_x]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_message_event[mentioned_msg_in_mentioned_msg_narrow]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__update_topic_index[reorder_topic3]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__update_topic_index[topic1_discussion_continues]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__update_topic_index[new_topic4]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__update_topic_index[first_topic_1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[stream_message-not_notified_since_self_message]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[stream_message-notified_stream_and_private_since_directly_mentioned]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[stream_message-notified_stream_and_private_since_wildcard_mentioned]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[stream_message-notified_stream_since_stream_has_desktop_notifications]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[stream_message-notified_private_since_private_message]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[pm_message-not_notified_since_self_message]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[pm_message-notified_stream_and_private_since_directly_mentioned]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[pm_message-notified_stream_and_private_since_wildcard_mentioned]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[pm_message-notified_stream_since_stream_has_desktop_notifications]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[pm_message-notified_private_since_private_message]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[group_pm_message-not_notified_since_self_message]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[group_pm_message-notified_stream_and_private_since_directly_mentioned]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[group_pm_message-notified_stream_and_private_since_wildcard_mentioned]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[group_pm_message-notified_stream_since_stream_has_desktop_notifications]",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_calling_msg_type[group_pm_message-notified_private_since_private_message]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_user_transformed_content[stream_message-simple_text]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_user_transformed_content[stream_message-spoiler_with_title]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_user_transformed_content[stream_message-spoiler_no_title]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_user_transformed_content[pm_message-simple_text]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_user_transformed_content[pm_message-spoiler_with_title]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_user_transformed_content[pm_message-spoiler_no_title]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_user_transformed_content[group_pm_message-simple_text]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_user_transformed_content[group_pm_message-spoiler_with_title]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_user_transformed_content[group_pm_message-spoiler_no_title]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_enabled[stream_message-True-True]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_enabled[stream_message-False-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_enabled[pm_message-True-True]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_enabled[pm_message-False-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_enabled[group_pm_message-True-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_enabled[group_pm_message-False-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_hides_PM_content_based_on_user_setting[pm_template-True-New direct message from Foo Foo]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_hides_PM_content_based_on_user_setting[pm_template-False-private content here.]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_hides_PM_content_based_on_user_setting[group_pm_template-True-New direct message from Foo Foo]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_notify_users_hides_PM_content_based_on_user_setting[group_pm_template-False-private content here.]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_message_event[Only subject of 1 message is updated]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_message_event[Subject of 2 messages is updated]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_message_event[Message content is updated; both not me-messages]",
                "time": 0.389,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_message_event[Message content is updated; now a me-message]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_message_event[Message content is updated; was a me-message, not now]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_message_event[Both message content and subject is updated]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_message_event[Some new type of update which we don't handle yet]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_message_event[message_id not present in index, topic view closed]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_message_event[message_id not present in index, topic view is enabled]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_message_event[Message content is updated and topic view is enabled]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__update_rendered_view[msgbox_updated_in_topic_narrow]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__update_rendered_view[msgbox_removed_due_to_topic_narrow_mismatch]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__update_rendered_view[msgbox_updated_in_all_messages_narrow]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__update_rendered_view_change_narrow[same_topic_narrow]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__update_rendered_view_change_narrow[previous_topic_narrow_empty_so_change_narrow]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__update_rendered_view_change_narrow[same_all_messages_narrow]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_reaction_event_not_in_index[add]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_reaction_event_not_in_index[remove]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_reaction_event_for_msg_in_index[add-2]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_reaction_event_for_msg_in_index[remove-1]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status_no_index[update_message_flags_operation0]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status_no_index[update_message_flags_operation1]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status_no_index[update_message_flags_operation2]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status_invalid_operation[update_message_flags_operation0]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status_invalid_operation[update_message_flags_operation1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status_invalid_operation[update_message_flags_operation2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before0-flags_after0-event_message_ids0-indexed_ids0]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before0-flags_after0-event_message_ids1-indexed_ids1]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before0-flags_after0-event_message_ids2-indexed_ids2]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before0-flags_after0-event_message_ids3-indexed_ids3]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before0-flags_after0-event_message_ids4-indexed_ids4]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before0-flags_after0-event_message_ids5-indexed_ids5]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before1-flags_after1-event_message_ids0-indexed_ids0]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before1-flags_after1-event_message_ids1-indexed_ids1]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before1-flags_after1-event_message_ids2-indexed_ids2]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before1-flags_after1-event_message_ids3-indexed_ids3]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before1-flags_after1-event_message_ids4-indexed_ids4]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before1-flags_after1-event_message_ids5-indexed_ids5]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before2-flags_after2-event_message_ids0-indexed_ids0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before2-flags_after2-event_message_ids1-indexed_ids1]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before2-flags_after2-event_message_ids2-indexed_ids2]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before2-flags_after2-event_message_ids3-indexed_ids3]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before2-flags_after2-event_message_ids4-indexed_ids4]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before2-flags_after2-event_message_ids5-indexed_ids5]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before3-flags_after3-event_message_ids0-indexed_ids0]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before3-flags_after3-event_message_ids1-indexed_ids1]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before3-flags_after3-event_message_ids2-indexed_ids2]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before3-flags_after3-event_message_ids3-indexed_ids3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before3-flags_after3-event_message_ids4-indexed_ids4]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-add-1-flags_before3-flags_after3-event_message_ids5-indexed_ids5]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before4-flags_after4-event_message_ids0-indexed_ids0]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before4-flags_after4-event_message_ids1-indexed_ids1]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before4-flags_after4-event_message_ids2-indexed_ids2]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before4-flags_after4-event_message_ids3-indexed_ids3]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before4-flags_after4-event_message_ids4-indexed_ids4]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before4-flags_after4-event_message_ids5-indexed_ids5]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before5-flags_after5-event_message_ids0-indexed_ids0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before5-flags_after5-event_message_ids1-indexed_ids1]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before5-flags_after5-event_message_ids2-indexed_ids2]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before5-flags_after5-event_message_ids3-indexed_ids3]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before5-flags_after5-event_message_ids4-indexed_ids4]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before5-flags_after5-event_message_ids5-indexed_ids5]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before6-flags_after6-event_message_ids0-indexed_ids0]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before6-flags_after6-event_message_ids1-indexed_ids1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before6-flags_after6-event_message_ids2-indexed_ids2]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before6-flags_after6-event_message_ids3-indexed_ids3]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before6-flags_after6-event_message_ids4-indexed_ids4]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before6-flags_after6-event_message_ids5-indexed_ids5]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before7-flags_after7-event_message_ids0-indexed_ids0]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before7-flags_after7-event_message_ids1-indexed_ids1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before7-flags_after7-event_message_ids2-indexed_ids2]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before7-flags_after7-event_message_ids3-indexed_ids3]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before7-flags_after7-event_message_ids4-indexed_ids4]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before7-flags_after7-event_message_ids5-indexed_ids5]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before8-flags_after8-event_message_ids0-indexed_ids0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before8-flags_after8-event_message_ids1-indexed_ids1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before8-flags_after8-event_message_ids2-indexed_ids2]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before8-flags_after8-event_message_ids3-indexed_ids3]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before8-flags_after8-event_message_ids4-indexed_ids4]",
                "time": 0.56,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation0-remove--1-flags_before8-flags_after8-event_message_ids5-indexed_ids5]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before0-flags_after0-event_message_ids0-indexed_ids0]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before0-flags_after0-event_message_ids1-indexed_ids1]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before0-flags_after0-event_message_ids2-indexed_ids2]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before0-flags_after0-event_message_ids3-indexed_ids3]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before0-flags_after0-event_message_ids4-indexed_ids4]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before0-flags_after0-event_message_ids5-indexed_ids5]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before1-flags_after1-event_message_ids0-indexed_ids0]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before1-flags_after1-event_message_ids1-indexed_ids1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before1-flags_after1-event_message_ids2-indexed_ids2]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before1-flags_after1-event_message_ids3-indexed_ids3]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before1-flags_after1-event_message_ids4-indexed_ids4]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before1-flags_after1-event_message_ids5-indexed_ids5]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before2-flags_after2-event_message_ids0-indexed_ids0]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before2-flags_after2-event_message_ids1-indexed_ids1]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before2-flags_after2-event_message_ids2-indexed_ids2]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before2-flags_after2-event_message_ids3-indexed_ids3]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before2-flags_after2-event_message_ids4-indexed_ids4]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before2-flags_after2-event_message_ids5-indexed_ids5]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before3-flags_after3-event_message_ids0-indexed_ids0]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before3-flags_after3-event_message_ids1-indexed_ids1]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before3-flags_after3-event_message_ids2-indexed_ids2]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before3-flags_after3-event_message_ids3-indexed_ids3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before3-flags_after3-event_message_ids4-indexed_ids4]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-add-1-flags_before3-flags_after3-event_message_ids5-indexed_ids5]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before4-flags_after4-event_message_ids0-indexed_ids0]",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before4-flags_after4-event_message_ids1-indexed_ids1]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before4-flags_after4-event_message_ids2-indexed_ids2]",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before4-flags_after4-event_message_ids3-indexed_ids3]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before4-flags_after4-event_message_ids4-indexed_ids4]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before4-flags_after4-event_message_ids5-indexed_ids5]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before5-flags_after5-event_message_ids0-indexed_ids0]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before5-flags_after5-event_message_ids1-indexed_ids1]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before5-flags_after5-event_message_ids2-indexed_ids2]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before5-flags_after5-event_message_ids3-indexed_ids3]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before5-flags_after5-event_message_ids4-indexed_ids4]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before5-flags_after5-event_message_ids5-indexed_ids5]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before6-flags_after6-event_message_ids0-indexed_ids0]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before6-flags_after6-event_message_ids1-indexed_ids1]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before6-flags_after6-event_message_ids2-indexed_ids2]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before6-flags_after6-event_message_ids3-indexed_ids3]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before6-flags_after6-event_message_ids4-indexed_ids4]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before6-flags_after6-event_message_ids5-indexed_ids5]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before7-flags_after7-event_message_ids0-indexed_ids0]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before7-flags_after7-event_message_ids1-indexed_ids1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before7-flags_after7-event_message_ids2-indexed_ids2]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before7-flags_after7-event_message_ids3-indexed_ids3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before7-flags_after7-event_message_ids4-indexed_ids4]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before7-flags_after7-event_message_ids5-indexed_ids5]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before8-flags_after8-event_message_ids0-indexed_ids0]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before8-flags_after8-event_message_ids1-indexed_ids1]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before8-flags_after8-event_message_ids2-indexed_ids2]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before8-flags_after8-event_message_ids3-indexed_ids3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before8-flags_after8-event_message_ids4-indexed_ids4]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation1-remove--1-flags_before8-flags_after8-event_message_ids5-indexed_ids5]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before0-flags_after0-event_message_ids0-indexed_ids0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before0-flags_after0-event_message_ids1-indexed_ids1]",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before0-flags_after0-event_message_ids2-indexed_ids2]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before0-flags_after0-event_message_ids3-indexed_ids3]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before0-flags_after0-event_message_ids4-indexed_ids4]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before0-flags_after0-event_message_ids5-indexed_ids5]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before1-flags_after1-event_message_ids0-indexed_ids0]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before1-flags_after1-event_message_ids1-indexed_ids1]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before1-flags_after1-event_message_ids2-indexed_ids2]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before1-flags_after1-event_message_ids3-indexed_ids3]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before1-flags_after1-event_message_ids4-indexed_ids4]",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before1-flags_after1-event_message_ids5-indexed_ids5]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before2-flags_after2-event_message_ids0-indexed_ids0]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before2-flags_after2-event_message_ids1-indexed_ids1]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before2-flags_after2-event_message_ids2-indexed_ids2]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before2-flags_after2-event_message_ids3-indexed_ids3]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before2-flags_after2-event_message_ids4-indexed_ids4]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before2-flags_after2-event_message_ids5-indexed_ids5]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before3-flags_after3-event_message_ids0-indexed_ids0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before3-flags_after3-event_message_ids1-indexed_ids1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before3-flags_after3-event_message_ids2-indexed_ids2]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before3-flags_after3-event_message_ids3-indexed_ids3]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before3-flags_after3-event_message_ids4-indexed_ids4]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-add-1-flags_before3-flags_after3-event_message_ids5-indexed_ids5]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before4-flags_after4-event_message_ids0-indexed_ids0]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before4-flags_after4-event_message_ids1-indexed_ids1]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before4-flags_after4-event_message_ids2-indexed_ids2]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before4-flags_after4-event_message_ids3-indexed_ids3]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before4-flags_after4-event_message_ids4-indexed_ids4]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before4-flags_after4-event_message_ids5-indexed_ids5]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before5-flags_after5-event_message_ids0-indexed_ids0]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before5-flags_after5-event_message_ids1-indexed_ids1]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before5-flags_after5-event_message_ids2-indexed_ids2]",
                "time": 0.403,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before5-flags_after5-event_message_ids3-indexed_ids3]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before5-flags_after5-event_message_ids4-indexed_ids4]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before5-flags_after5-event_message_ids5-indexed_ids5]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before6-flags_after6-event_message_ids0-indexed_ids0]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before6-flags_after6-event_message_ids1-indexed_ids1]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before6-flags_after6-event_message_ids2-indexed_ids2]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before6-flags_after6-event_message_ids3-indexed_ids3]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before6-flags_after6-event_message_ids4-indexed_ids4]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before6-flags_after6-event_message_ids5-indexed_ids5]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before7-flags_after7-event_message_ids0-indexed_ids0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before7-flags_after7-event_message_ids1-indexed_ids1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before7-flags_after7-event_message_ids2-indexed_ids2]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before7-flags_after7-event_message_ids3-indexed_ids3]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before7-flags_after7-event_message_ids4-indexed_ids4]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before7-flags_after7-event_message_ids5-indexed_ids5]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before8-flags_after8-event_message_ids0-indexed_ids0]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before8-flags_after8-event_message_ids1-indexed_ids1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before8-flags_after8-event_message_ids2-indexed_ids2]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before8-flags_after8-event_message_ids3-indexed_ids3]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before8-flags_after8-event_message_ids4-indexed_ids4]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_star_status[update_message_flags_operation2-remove--1-flags_before8-flags_after8-event_message_ids5-indexed_ids5]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before0-flags_after0-event_message_ids0-indexed_ids0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before0-flags_after0-event_message_ids1-indexed_ids1]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before0-flags_after0-event_message_ids2-indexed_ids2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before0-flags_after0-event_message_ids3-indexed_ids3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before0-flags_after0-event_message_ids4-indexed_ids4]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before0-flags_after0-event_message_ids5-indexed_ids5]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before1-flags_after1-event_message_ids0-indexed_ids0]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before1-flags_after1-event_message_ids1-indexed_ids1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before1-flags_after1-event_message_ids2-indexed_ids2]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before1-flags_after1-event_message_ids3-indexed_ids3]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before1-flags_after1-event_message_ids4-indexed_ids4]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before1-flags_after1-event_message_ids5-indexed_ids5]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before2-flags_after2-event_message_ids0-indexed_ids0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before2-flags_after2-event_message_ids1-indexed_ids1]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before2-flags_after2-event_message_ids2-indexed_ids2]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before2-flags_after2-event_message_ids3-indexed_ids3]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before2-flags_after2-event_message_ids4-indexed_ids4]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before2-flags_after2-event_message_ids5-indexed_ids5]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before3-flags_after3-event_message_ids0-indexed_ids0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before3-flags_after3-event_message_ids1-indexed_ids1]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before3-flags_after3-event_message_ids2-indexed_ids2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before3-flags_after3-event_message_ids3-indexed_ids3]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before3-flags_after3-event_message_ids4-indexed_ids4]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-add-flags_before3-flags_after3-event_message_ids5-indexed_ids5]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before4-flags_after4-event_message_ids0-indexed_ids0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before4-flags_after4-event_message_ids1-indexed_ids1]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before4-flags_after4-event_message_ids2-indexed_ids2]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before4-flags_after4-event_message_ids3-indexed_ids3]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before4-flags_after4-event_message_ids4-indexed_ids4]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before4-flags_after4-event_message_ids5-indexed_ids5]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before5-flags_after5-event_message_ids0-indexed_ids0]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before5-flags_after5-event_message_ids1-indexed_ids1]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before5-flags_after5-event_message_ids2-indexed_ids2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before5-flags_after5-event_message_ids3-indexed_ids3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before5-flags_after5-event_message_ids4-indexed_ids4]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before5-flags_after5-event_message_ids5-indexed_ids5]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before6-flags_after6-event_message_ids0-indexed_ids0]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before6-flags_after6-event_message_ids1-indexed_ids1]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before6-flags_after6-event_message_ids2-indexed_ids2]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before6-flags_after6-event_message_ids3-indexed_ids3]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before6-flags_after6-event_message_ids4-indexed_ids4]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before6-flags_after6-event_message_ids5-indexed_ids5]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before7-flags_after7-event_message_ids0-indexed_ids0]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before7-flags_after7-event_message_ids1-indexed_ids1]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before7-flags_after7-event_message_ids2-indexed_ids2]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before7-flags_after7-event_message_ids3-indexed_ids3]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before7-flags_after7-event_message_ids4-indexed_ids4]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before7-flags_after7-event_message_ids5-indexed_ids5]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before8-flags_after8-event_message_ids0-indexed_ids0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before8-flags_after8-event_message_ids1-indexed_ids1]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before8-flags_after8-event_message_ids2-indexed_ids2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before8-flags_after8-event_message_ids3-indexed_ids3]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before8-flags_after8-event_message_ids4-indexed_ids4]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation0-remove-flags_before8-flags_after8-event_message_ids5-indexed_ids5]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before0-flags_after0-event_message_ids0-indexed_ids0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before0-flags_after0-event_message_ids1-indexed_ids1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before0-flags_after0-event_message_ids2-indexed_ids2]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before0-flags_after0-event_message_ids3-indexed_ids3]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before0-flags_after0-event_message_ids4-indexed_ids4]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before0-flags_after0-event_message_ids5-indexed_ids5]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before1-flags_after1-event_message_ids0-indexed_ids0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before1-flags_after1-event_message_ids1-indexed_ids1]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before1-flags_after1-event_message_ids2-indexed_ids2]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before1-flags_after1-event_message_ids3-indexed_ids3]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before1-flags_after1-event_message_ids4-indexed_ids4]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before1-flags_after1-event_message_ids5-indexed_ids5]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before2-flags_after2-event_message_ids0-indexed_ids0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before2-flags_after2-event_message_ids1-indexed_ids1]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before2-flags_after2-event_message_ids2-indexed_ids2]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before2-flags_after2-event_message_ids3-indexed_ids3]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before2-flags_after2-event_message_ids4-indexed_ids4]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before2-flags_after2-event_message_ids5-indexed_ids5]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before3-flags_after3-event_message_ids0-indexed_ids0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before3-flags_after3-event_message_ids1-indexed_ids1]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before3-flags_after3-event_message_ids2-indexed_ids2]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before3-flags_after3-event_message_ids3-indexed_ids3]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before3-flags_after3-event_message_ids4-indexed_ids4]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-add-flags_before3-flags_after3-event_message_ids5-indexed_ids5]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before4-flags_after4-event_message_ids0-indexed_ids0]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before4-flags_after4-event_message_ids1-indexed_ids1]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before4-flags_after4-event_message_ids2-indexed_ids2]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before4-flags_after4-event_message_ids3-indexed_ids3]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before4-flags_after4-event_message_ids4-indexed_ids4]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before4-flags_after4-event_message_ids5-indexed_ids5]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before5-flags_after5-event_message_ids0-indexed_ids0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before5-flags_after5-event_message_ids1-indexed_ids1]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before5-flags_after5-event_message_ids2-indexed_ids2]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before5-flags_after5-event_message_ids3-indexed_ids3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before5-flags_after5-event_message_ids4-indexed_ids4]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before5-flags_after5-event_message_ids5-indexed_ids5]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before6-flags_after6-event_message_ids0-indexed_ids0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before6-flags_after6-event_message_ids1-indexed_ids1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before6-flags_after6-event_message_ids2-indexed_ids2]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before6-flags_after6-event_message_ids3-indexed_ids3]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before6-flags_after6-event_message_ids4-indexed_ids4]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before6-flags_after6-event_message_ids5-indexed_ids5]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before7-flags_after7-event_message_ids0-indexed_ids0]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before7-flags_after7-event_message_ids1-indexed_ids1]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before7-flags_after7-event_message_ids2-indexed_ids2]",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before7-flags_after7-event_message_ids3-indexed_ids3]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before7-flags_after7-event_message_ids4-indexed_ids4]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before7-flags_after7-event_message_ids5-indexed_ids5]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before8-flags_after8-event_message_ids0-indexed_ids0]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before8-flags_after8-event_message_ids1-indexed_ids1]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before8-flags_after8-event_message_ids2-indexed_ids2]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before8-flags_after8-event_message_ids3-indexed_ids3]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before8-flags_after8-event_message_ids4-indexed_ids4]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation1-remove-flags_before8-flags_after8-event_message_ids5-indexed_ids5]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before0-flags_after0-event_message_ids0-indexed_ids0]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before0-flags_after0-event_message_ids1-indexed_ids1]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before0-flags_after0-event_message_ids2-indexed_ids2]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before0-flags_after0-event_message_ids3-indexed_ids3]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before0-flags_after0-event_message_ids4-indexed_ids4]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before0-flags_after0-event_message_ids5-indexed_ids5]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before1-flags_after1-event_message_ids0-indexed_ids0]",
                "time": 0.466,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before1-flags_after1-event_message_ids1-indexed_ids1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before1-flags_after1-event_message_ids2-indexed_ids2]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before1-flags_after1-event_message_ids3-indexed_ids3]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before1-flags_after1-event_message_ids4-indexed_ids4]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before1-flags_after1-event_message_ids5-indexed_ids5]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before2-flags_after2-event_message_ids0-indexed_ids0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before2-flags_after2-event_message_ids1-indexed_ids1]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before2-flags_after2-event_message_ids2-indexed_ids2]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before2-flags_after2-event_message_ids3-indexed_ids3]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before2-flags_after2-event_message_ids4-indexed_ids4]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before2-flags_after2-event_message_ids5-indexed_ids5]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before3-flags_after3-event_message_ids0-indexed_ids0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before3-flags_after3-event_message_ids1-indexed_ids1]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before3-flags_after3-event_message_ids2-indexed_ids2]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before3-flags_after3-event_message_ids3-indexed_ids3]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before3-flags_after3-event_message_ids4-indexed_ids4]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-add-flags_before3-flags_after3-event_message_ids5-indexed_ids5]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before4-flags_after4-event_message_ids0-indexed_ids0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before4-flags_after4-event_message_ids1-indexed_ids1]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before4-flags_after4-event_message_ids2-indexed_ids2]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before4-flags_after4-event_message_ids3-indexed_ids3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before4-flags_after4-event_message_ids4-indexed_ids4]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before4-flags_after4-event_message_ids5-indexed_ids5]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before5-flags_after5-event_message_ids0-indexed_ids0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before5-flags_after5-event_message_ids1-indexed_ids1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before5-flags_after5-event_message_ids2-indexed_ids2]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before5-flags_after5-event_message_ids3-indexed_ids3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before5-flags_after5-event_message_ids4-indexed_ids4]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before5-flags_after5-event_message_ids5-indexed_ids5]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before6-flags_after6-event_message_ids0-indexed_ids0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before6-flags_after6-event_message_ids1-indexed_ids1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before6-flags_after6-event_message_ids2-indexed_ids2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before6-flags_after6-event_message_ids3-indexed_ids3]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before6-flags_after6-event_message_ids4-indexed_ids4]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before6-flags_after6-event_message_ids5-indexed_ids5]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before7-flags_after7-event_message_ids0-indexed_ids0]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before7-flags_after7-event_message_ids1-indexed_ids1]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before7-flags_after7-event_message_ids2-indexed_ids2]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before7-flags_after7-event_message_ids3-indexed_ids3]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before7-flags_after7-event_message_ids4-indexed_ids4]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before7-flags_after7-event_message_ids5-indexed_ids5]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before8-flags_after8-event_message_ids0-indexed_ids0]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before8-flags_after8-event_message_ids1-indexed_ids1]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before8-flags_after8-event_message_ids2-indexed_ids2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before8-flags_after8-event_message_ids3-indexed_ids3]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before8-flags_after8-event_message_ids4-indexed_ids4]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_read_status[update_message_flags_operation2-remove-flags_before8-flags_after8-event_message_ids5-indexed_ids5]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_stream_pinned_status[pinning]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_stream_pinned_status[unpinning]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_stream_pinned_status[first_pinned]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_stream_pinned_status[last_unpinned]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_stream_visual_notifications[visual_notification_enable_205]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_stream_visual_notifications[visual_notification_disable_205]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_stream_visual_notifications[first_notification_enable_205]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_toggle_stream_visual_notifications[last_notification_disable_205]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_typing_event[not_in_pm_narrow]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_typing_event[not_in_pm_narrow_with_sender]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_typing_event[in_pm_narrow_with_sender_typing:start]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_typing_event[in_pm_narrow_with_sender_typing:start_while_animation_in_progress]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_typing_event[in_pm_narrow_with_sender_typing:stop]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_typing_event[in_pm_narrow_with_other_myself_typing:start]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_typing_event[in_pm_narrow_with_other_myself_typing:stop]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_typing_event[in_pm_narrow_with_oneself:start]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_typing_event[in_pm_narrow_with_oneself:stop]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_mute_streams[remove_18_in_home_view:already_unmuted:ZFLNone]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_mute_streams[remove_19_in_home_view:muted:ZFLNone]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_mute_streams[add_19_in_home_view:already_muted:ZFLNone]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_mute_streams[add_30_in_home_view:unmuted:ZFLNone]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_mute_streams[remove_30_is_muted:already_unmutedZFL139]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_mute_streams[remove_19_is_muted:muted:ZFL139]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_mute_streams[add_15_is_muted:already_muted:ZFL139]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_mute_streams[add_30_is_muted:unmuted:ZFL139]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_pin_streams[pin_stream]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_pin_streams[unpin_stream]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_visual_notifications[remove_visual_notified_stream_15:present]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_visual_notifications[add_visual_notified_stream_19:not_present]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_visual_notifications[remove_visual_notified_stream_15:not_present]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_visual_notifications[add_visual_notified_stream_19:present]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers[user_subscribed_to_stream:ZFLNone]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers[user_subscribed_to_stream:ZFL34]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers[user_subscribed_to_stream:ZFL34_should_be_35]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers[user_subscribed_to_stream:ZFL35]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers[user_unsubscribed_from_stream:ZFLNone]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers[user_unsubscribed_from_stream:ZFL34]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers[user_unsubscribed_from_stream:ZFL34_should_be_35]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers[user_unsubscribed_from_stream:ZFL35]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers_to_unsubscribed_streams[peer_subscribed_to_stream_that_user_is_unsubscribed_to]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers_to_unsubscribed_streams[peer_subscribed_to_stream_that_user_is_unsubscribed_to:ZFL35+]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers_to_unsubscribed_streams[peer_unsubscribed_from_stream_that_user_is_unsubscribed_to]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers_to_unsubscribed_streams[peer_unsubscribed_from_stream_that_user_is_unsubscribed_to:ZFL35+]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers_multiple_users_one_stream[users_subscribed_to_stream:ZFL34_should_be_35]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers_multiple_users_one_stream[users_subscribed_to_stream:ZFL35]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers_multiple_users_one_stream[users_unsubscribed_from_stream:ZFL34_should_be_35]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers_multiple_users_one_stream[users_unsubscribed_from_stream:ZFL35]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers_one_user_multiple_streams[user_subscribed_to_streams:ZFL34_should_be_35]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers_one_user_multiple_streams[user_subscribed_to_streams:ZFL35]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers_one_user_multiple_streams[user_unsubscribed_from_streams:ZFL34_should_be_35]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_subscription_event_subscribers_one_user_multiple_streams[user_unsubscribed_from_streams:ZFL35]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_realm_user_event[full_name]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_realm_user_event[timezone]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_realm_user_event[billing_admin_role]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_realm_user_event[role]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_realm_user_event[avatar]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_realm_user_event[display_email]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_realm_user_event[delivery_email]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_user_settings_event[True]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_user_settings_event[False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_pm_content_in_desktop_notifications[True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_pm_content_in_desktop_notifications[False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_twenty_four_hour_format[True]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_update_twenty_four_hour_format[False]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_muted_stream[muted_stream]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_muted_stream[unmuted_stream]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_muted_stream[unmuted_stream_nostreamsmuted]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_visual_notifications_enabled[notifications_enabled]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_visual_notifications_enabled[notifications_disabled]",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_visual_notifications_enabled[notifications_disabled_no_streams_to_notify]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_muted_topic[zulip_feature_level:None-topic0-False]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_muted_topic[zulip_feature_level:None-topic1-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_muted_topic[zulip_feature_level:None-topic2-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_muted_topic[zulip_feature_level:None-topic3-False]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_muted_topic[zulip_feature_level:1-topic0-False]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_muted_topic[zulip_feature_level:1-topic1-True]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_muted_topic[zulip_feature_level:1-topic2-True]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_muted_topic[zulip_feature_level:1-topic3-False]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_present_after_no_state]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_present_after_previous_topic]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_present_before_previous_topic]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_still_present_in_topic]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[no_unreads_with_previous_topic_state]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[no_unreads_with_no_previous_topic_state]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_present_before_previous_topic_skipping_muted_stream]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_present_after_previous_topic_skipping_muted_stream]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_present_only_in_muted_stream]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_present_starting_in_muted_stream]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_present_skipping_first_muted_stream_unread]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_present_only_in_muted_topic]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_present_starting_in_muted_topic]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_present_only_in_muted_topic_in_muted_stream]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_present_after_previous_topic_skipping_muted_topic]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_topic[unread_present_after_previous_topic_muted]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_pm",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_pm_again",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_get_next_unread_pm_no_unread",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_user_subscribed_to_stream[subscribed_stream]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_is_user_subscribed_to_stream[unsubscribed_stream]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_fetch_message_history_success[unedited_message-response0]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_fetch_message_history_success[edited_message-response0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_fetch_message_history_error[response0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_user_name_from_id_valid[1001-Human Myself]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_user_name_from_id_invalid[-1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_generate_all_emoji_data",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_emoji_event[realm_emoji_with_same_name_as_unicode_emoji_added]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_emoji_event[realm_emoji_with_same_name_as_unicode_emoji_removed]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_emoji_event[realm_emoji_with_name_as_zulip_added]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_emoji_event[realm_emoji_with_name_as_zulip_removed]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_emoji_event[realm_emoji_added]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test__handle_update_emoji_event[realm_emoji_removed]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_poll_for_events__no_disconnect",
                "time": 0.905,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_poll_for_events__reconnect_ok[reconnect_on_1st_attempt]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_poll_for_events__reconnect_ok[reconnect_on_2nd_attempt]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.model.test_model.TestModel",
                "name": "test_poll_for_events__reconnect_ok[reconnect_on_3rd_attempt]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify[WSL-True]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify[MacOS-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify[Linux-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify[unsupported-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-X-x]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-X-spaced_text]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-X-single]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-X-double]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-spaced_title-x]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-spaced_title-spaced_text]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-spaced_title-single]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-spaced_title-double]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-single-x]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-single-spaced_text]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-single-single]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-single-double]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-double-x]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-double-spaced_text]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-double-single]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[Linux-4-double-double]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-X-x]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-X-spaced_text]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-X-single]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-X-double]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-spaced_title-x]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-spaced_title-spaced_text]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-spaced_title-single]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-spaced_title-double]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-single-x]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-single-spaced_text]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-single-single]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-single-double]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-double-x]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-double-spaced_text]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-double-single]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[MacOS-10-double-double]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-X-x]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-X-spaced_text]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-X-single]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-X-double]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-spaced_title-x]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-spaced_title-spaced_text]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-spaced_title-single]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-spaced_title-double]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-single-x]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-single-spaced_text]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-single-single]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-single-double]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-double-x]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-double-spaced_text]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-double-single]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_notify_quotes[WSL-2-double-double]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "WSL notify disabled",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_successful_GUI_return_code[Linux-0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_successful_GUI_return_code[MacOS-0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_successful_GUI_return_code[WSL-1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_normalized_file_path[Linux-/path/to/file]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_normalized_file_path[MacOS-/path/to/file]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.platform_code.test_platform_code",
                "name": "test_normalized_file_path[WSL-\\\\path\\\\to\\\\file]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.server_url.test_server_url",
                "name": "test_encode_stream[10-zulip terminal-10-zulip-terminal]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.server_url.test_server_url",
                "name": "test_encode_stream[12-<strong>xss</strong>-12-.3Cstrong.3Exss.3C.2Fstrong.3E]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.server_url.test_server_url",
                "name": "test_encode_stream[17-#test-here #T1 #T2 #T3-17-.23test-here-.23T1-.23T2-.23T3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.server_url.test_server_url",
                "name": "test_encode_stream[27-:party_parrot:-27-.3Aparty_parrot.3A]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.server_url.test_server_url",
                "name": "test_encode_stream[44-(ZT) % zulip ?/; &-44-.28ZT.29-.25-zulip-.3F.2F.3B-.26]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.server_url.test_server_url",
                "name": "test_encode_stream[273-abc + de = abcde-273-abc-.2B-de-.3D-abcde]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.server_url.test_server_url",
                "name": "test_encode_stream[374-/ in a stream name ?-374-.2F-in-a-stream-name-.3F]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.server_url.test_server_url",
                "name": "test_near_message_url[https://chat.zulip.org-msg0-https://chat.zulip.org/#narrow/stream/23-zulip-terminal/topic/.23test-here.20.23T1.20.23T2.20.23T3/near/17252]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.server_url.test_server_url",
                "name": "test_near_message_url[https://foo-bar.co.in-msg1-https://foo-bar.co.in/#narrow/stream/425-.2F-in-a-stream-name-.3F/topic/abc.20.2B.20de.20.3D.20abcde/near/5412]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.server_url.test_server_url",
                "name": "test_near_message_url[https://foo.bar.com-msg2-https://foo.bar.com/#narrow/pm-with/12,144,249-pm/near/24284]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_init",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_left_column_view",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_middle_column_view",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_right_column_view",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_set_footer_text_same_test",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_set_footer_text_default",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_set_footer_text_specific_text",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_set_footer_text_with_duration",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_set_typeahead_footer[no_matches]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_set_typeahead_footer[no_highlight]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_set_typeahead_footer[no_highlight_truncated]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_set_typeahead_footer[first_suggestion_highlighted]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_set_typeahead_footer[first_suggestion_highlighted_truncated]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_set_typeahead_footer[last_suggestion_highlighted]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_footer_view",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_main_window",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_show_panel_methods[left_panel-True-True]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_show_panel_methods[left_panel-True-False]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_show_panel_methods[left_panel-False-True]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_show_panel_methods[left_panel-False-False]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_show_panel_methods[right_panel-True-True]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_show_panel_methods[right_panel-True-False]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_show_panel_methods[right_panel-False-True]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_show_panel_methods[right_panel-False-False]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:u]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:k]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:d]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:j]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:l0]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:h]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:r]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:l1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:p0]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:K]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:p1]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:J]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:e]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_normal_mode_navigation[nav-key:G]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_ALL_MENTIONS[#]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_STREAM_MESSAGE[autohide-c]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_STREAM_MESSAGE[no_autohide-c]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_autohide_users[autohide-w]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_autohide_users[no_autohide-w]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_autohide_streams[autohide-q]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_autohide_streams[no_autohide-q]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_OPEN_DRAFT[autohide-d-stream_draft_composition]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_OPEN_DRAFT[autohide-d-private_draft_composition]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_OPEN_DRAFT[autohide-d-no_draft_composition]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_OPEN_DRAFT[no_autohide-d-stream_draft_composition]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_OPEN_DRAFT[no_autohide-d-private_draft_composition]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_OPEN_DRAFT[no_autohide-d-no_draft_composition]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui.TestView",
                "name": "test_keypress_edit_mode[w]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestModListWalker",
                "name": "test_extend[5-0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestModListWalker",
                "name": "test_extend[0-0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestModListWalker",
                "name": "test__set_focus",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestModListWalker",
                "name": "test_set_focus",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_init",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_main_view[None-1]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_main_view[0-0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_empty_log[ids_in_narrow0-messages_fetched0]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_empty_log[ids_in_narrow0-messages_fetched1]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_empty_log[ids_in_narrow0-messages_fetched2]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_empty_log[ids_in_narrow1-messages_fetched0]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_empty_log[ids_in_narrow1-messages_fetched1]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_empty_log[ids_in_narrow1-messages_fetched2]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_mocked_log[99-other_ids_in_narrow0-messages_fetched0]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_mocked_log[99-other_ids_in_narrow0-messages_fetched1]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_mocked_log[99-other_ids_in_narrow0-messages_fetched2]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_mocked_log[99-other_ids_in_narrow1-messages_fetched0]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_mocked_log[99-other_ids_in_narrow1-messages_fetched1]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_mocked_log[99-other_ids_in_narrow1-messages_fetched2]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_mocked_log[99-other_ids_in_narrow2-messages_fetched0]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_mocked_log[99-other_ids_in_narrow2-messages_fetched1]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_old_messages_mocked_log[99-other_ids_in_narrow2-messages_fetched2]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_new_messages_empty_log[ids_in_narrow0]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_load_new_messages_mocked_log[ids_in_narrow0]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_mouse_event[mouse_scroll_up]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_mouse_event[mouse_scroll_down]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_keypress_GO_DOWN[down]",
                "time": 0.667,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_keypress_GO_DOWN[j]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_keypress_GO_DOWN_exception[down-True]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_keypress_GO_DOWN_exception[down-False]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_keypress_GO_DOWN_exception[j-True]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_keypress_GO_DOWN_exception[j-False]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_keypress_GO_UP[up]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_keypress_GO_UP[k]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_keypress_GO_UP_exception[up-True]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_keypress_GO_UP_exception[up-False]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_keypress_GO_UP_exception[k-True]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_keypress_GO_UP_exception[k-False]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_read_message",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_message_calls_search_and_header_bar",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_read_message_no_msgw",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_read_message_in_explore_mode",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_read_message_search_narrow",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_read_message_last_unread_message_focused[stream_message]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_read_message_last_unread_message_focused[pm_message]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMessageView",
                "name": "test_read_message_last_unread_message_focused[group_pm_message]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsViewDivider",
                "name": "test_init",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_init",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_update_streams[f-expected_log0-to_pin0]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_update_streams[bar-expected_log1-to_pin1]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_update_streams[foo-expected_log2-to_pin2]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_update_streams[FOO-expected_log3-to_pin3]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_update_streams[test-expected_log4-to_pin4]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_update_streams[here-expected_log5-to_pin5]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_update_streams[test here-expected_log6-to_pin6]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_update_streams[f-expected_log7-to_pin7]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_update_streams[FOO-expected_log8-to_pin8]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_update_streams[bar-expected_log9-to_pin9]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_update_streams[baar-search error-to_pin10]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_mouse_event[mouse_scroll_up]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_mouse_event[mouse_scroll_down]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_keypress_SEARCH_STREAMS[q]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestStreamsView",
                "name": "test_keypress_GO_BACK[esc]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_init",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_update_topics[f-expected_log0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_update_topics[a-expected_log1]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_update_topics[bar-expected_log2]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_update_topics[foo-expected_log3]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_update_topics[FOO-expected_log4]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_update_topics[(no-expected_log5]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_update_topics[topic-expected_log6]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_update_topics[cc-search error]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_update_topics_list[reorder_topic3]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_update_topics_list[topic1_discussion_continues]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_update_topics_list[new_topic4]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_update_topics_list[first_topic_1]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_keypress_SEARCH_TOPICS[q]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_keypress_GO_BACK[esc]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_mouse_event[mouse_scroll_up]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTopicsView",
                "name": "test_mouse_event[mouse_scroll_down]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestUsersView",
                "name": "test_mouse_event[mouse_scroll_up]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestUsersView",
                "name": "test_mouse_event[mouse_scroll_down]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestUsersView",
                "name": "test_mouse_event_left_click[ignore_mouse_click]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestUsersView",
                "name": "test_mouse_event_left_click[handle_mouse_click]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestUsersView",
                "name": "test_mouse_event_invalid[unsupported_mouse_release_action]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestUsersView",
                "name": "test_mouse_event_invalid[unsupported_right_click_mouse_press_action]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestUsersView",
                "name": "test_mouse_event_invalid[invalid_event_button_combination]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMiddleColumnView",
                "name": "test_init",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMiddleColumnView",
                "name": "test_keypress_focus_header[/]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMiddleColumnView",
                "name": "test_keypress_SEARCH_MESSAGES[/]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMiddleColumnView",
                "name": "test_keypress_REPLY_MESSAGE[r]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMiddleColumnView",
                "name": "test_keypress_REPLY_MESSAGE[enter]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMiddleColumnView",
                "name": "test_keypress_STREAM_MESSAGE[c]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMiddleColumnView",
                "name": "test_keypress_REPLY_AUTHOR[R]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMiddleColumnView",
                "name": "test_keypress_NEXT_UNREAD_TOPIC_stream[n]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMiddleColumnView",
                "name": "test_keypress_NEXT_UNREAD_TOPIC_no_stream[n]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMiddleColumnView",
                "name": "test_keypress_NEXT_UNREAD_PM_stream[p]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMiddleColumnView",
                "name": "test_keypress_NEXT_UNREAD_PM_no_pm[p]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestMiddleColumnView",
                "name": "test_keypress_PRIVATE_MESSAGE[x]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestRightColumnView",
                "name": "test_init",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestRightColumnView",
                "name": "test_update_user_list_editor_mode",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestRightColumnView",
                "name": "test_update_user_list[user match]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestRightColumnView",
                "name": "test_update_user_list[no user match]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestRightColumnView",
                "name": "test_update_user_presence",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestRightColumnView",
                "name": "test_users_view[None-1-False-active]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestRightColumnView",
                "name": "test_users_view[users1-1-True-active]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestRightColumnView",
                "name": "test_users_view[None-0-False-inactive]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestRightColumnView",
                "name": "test_keypress_SEARCH_PEOPLE[w]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestRightColumnView",
                "name": "test_keypress_GO_BACK[esc]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_menu_view",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned0]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned1]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned2]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned3]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned4]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned5]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned6]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned7]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned8]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned9]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned10]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned11]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned12]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned13]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned14]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned15]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned16]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned17]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned18]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned19]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned20]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned21]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned22]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned23]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned24]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned25]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned26]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned27]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned28]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned29]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned30]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_streams_view[pinned31]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestLeftColumnView",
                "name": "test_topics_view",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_ui_tools.TestTabView",
                "name": "test_tab_render[3-10-expected_output0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_utils",
                "name": "test_is_muted[msg0-narrow0-muted_streams0-False-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_utils",
                "name": "test_is_muted[msg1-narrow1-muted_streams1-False-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_utils",
                "name": "test_is_muted[msg2-narrow2-muted_streams2-False-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_utils",
                "name": "test_is_muted[msg3-narrow3-muted_streams3-True-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_utils",
                "name": "test_is_muted[msg4-narrow4-muted_streams4-False-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_utils",
                "name": "test_create_msg_box_list[narrow0-None-None-False-False-2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_utils",
                "name": "test_create_msg_box_list[narrow1-messages1-None-False-False-1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_utils",
                "name": "test_create_msg_box_list[narrow2-messages2-None-True-False-1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_utils",
                "name": "test_create_msg_box_list[narrow3-messages3-None-True-False-0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui.test_utils",
                "name": "test_create_msg_box_list[narrow4-messages4-None-False-True-0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_init",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_not_calling_typing_method_without_recipients",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>T-0-True-#**Stream 1>Topic 1**]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>T-1-True-#**Stream 1>This is a topic**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>T-2-True-#**Stream 1>Hello there!**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>T-3-True-#**Stream 1>He-llo there!**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>T-4-True-#**Stream 1>Hello t/here!**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>T-5-True-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>T--1-True-#**Stream 1>Hello t/here!**]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>T--2-True-#**Stream 1>He-llo there!**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>T--3-True-#**Stream 1>Hello there!**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>T--4-True-#**Stream 1>This is a topic**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>T--5-True-#**Stream 1>Topic 1**]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>T--6-True-None]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>To-0-True-#**Stream 1>Topic 1**]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>H-0-True-#**Stream 1>Hello there!**]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>Hello -0-True-#**Stream 1>Hello there!**]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>-0-True-#**Stream 1>Topic 1**]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>-1-True-#**Stream 1>This is a topic**]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>-2-True-#**Stream 1>Hello there!**]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>-3-True-#**Stream 1>He-llo there!**]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>-4-True-#**Stream 1>Hello t/here!**]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>-5-True-#**Stream 1>Hello from out-er_space!**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>-6-True-None]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>--1-True-#**Stream 1>Hello from out-er_space!**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>--2-True-#**Stream 1>Hello t/here!**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>--3-True-#**Stream 1>He-llo there!**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>--4-True-#**Stream 1>Hello there!**]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>--5-True-#**Stream 1>This is a topic**]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>--6-True-#**Stream 1>Topic 1**]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1>--7-True-None]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1**>T-0-True-#**Stream 1>Topic 1**]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#Stream 1>T-0-True-#**Stream 1>Topic 1**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#Stream 1>T-1-True-#**Stream 1>This is a topic**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#Stream 1>T-2-True-#**Stream 1>Hello there!**]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**invalid stream>-0-False-None]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**invalid stream**>-0-False-None]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#invalid stream>-0-False-None]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#**Stream 1*>-0-True-None]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[#*Stream 1>-0-True-None]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[(#**Stream 1>-0-True-(#**Stream 1>Topic 1**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[&#**Stream 1>-0-True-&#**Stream 1>Topic 1**]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[@#**Stream 1>-0-True-@#**Stream 1>Topic 1**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[@_#**Stream 1>-0-True-@_#**Stream 1>Topic 1**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[:#**Stream 1>-0-True-:#**Stream 1>Topic 1**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_stream_and_topic[(#**Stream 1**>-0-True-(#**Stream 1>Topic 1**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_not_calling_typing_method_to_oneself[pm_only_with_oneself]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_not_calling_typing_method_to_oneself[group_pm]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_not_calling_send_private_message_without_recipients[ctrl d]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_not_calling_send_private_message_without_recipients[meta enter]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__compose_attributes_reset_for_private_compose[esc]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__compose_attributes_reset_for_stream_compose[esc]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[ctrl d-untidy_with_improper_formatting]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[ctrl d-untidy_with_extra_text]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[ctrl d-untidy_first_recipient_out_of_two]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[ctrl d-untidy_second_recipient_out_of_two]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[ctrl d-two_untidy_recipients]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[ctrl d-three_untidy_recipients]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[ctrl d-untidy_middle_recipient_out_of_three]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta enter-untidy_with_improper_formatting]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta enter-untidy_with_extra_text]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta enter-untidy_first_recipient_out_of_two]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta enter-untidy_second_recipient_out_of_two]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta enter-two_untidy_recipients]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta enter-three_untidy_recipients]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta enter-untidy_middle_recipient_out_of_three]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta s-untidy_with_improper_formatting]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta s-untidy_with_extra_text]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta s-untidy_first_recipient_out_of_two]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta s-untidy_second_recipient_out_of_two]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta s-two_untidy_recipients]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta s-three_untidy_recipients]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[meta s-untidy_middle_recipient_out_of_three]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[tab-untidy_with_improper_formatting]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[tab-untidy_with_extra_text]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[tab-untidy_first_recipient_out_of_two]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[tab-untidy_second_recipient_out_of_two]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[tab-two_untidy_recipients]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[tab-three_untidy_recipients]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_tidying_recipients_on_keypresses[tab-untidy_middle_recipient_out_of_three]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_footer_notification_on_invalid_recipients[ctrl d-name_email_mismatch]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_footer_notification_on_invalid_recipients[ctrl d-no_name_specified]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_footer_notification_on_invalid_recipients[ctrl d-no_email_specified]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_footer_notification_on_invalid_recipients[meta enter-name_email_mismatch]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_footer_notification_on_invalid_recipients[meta enter-no_name_specified]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_footer_notification_on_invalid_recipients[meta enter-no_email_specified]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_footer_notification_on_invalid_recipients[meta s-name_email_mismatch]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_footer_notification_on_invalid_recipients[meta s-no_name_specified]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_footer_notification_on_invalid_recipients[meta s-no_email_specified]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_footer_notification_on_invalid_recipients[tab-name_email_mismatch]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_footer_notification_on_invalid_recipients[tab-no_name_specified]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_footer_notification_on_invalid_recipients[tab-no_email_specified]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_update_recipients[single_recipient]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_update_recipients[multiple_recipients]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_no_prefix[Plain Text-0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_no_prefix[Plain Text-1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[@-0-footer_text0]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[@*-0-footer_text1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[@**-0-footer_text2]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[@Human-0-footer_text3]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[@**Human-0-footer_text4]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[@_Human-0-footer_text5]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[@_*Human-None-footer_text6]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[@_**Human-0-footer_text7]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[@Human-None-footer_text8]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[@NoMatch-None-footer_text9]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[#Stream-0-footer_text10]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[#*Stream-None-footer_text11]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[#**Stream-0-footer_text12]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[#Stream-None-footer_text13]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[#NoMatch-None-footer_text14]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[:smi-0-footer_text15]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[:smi-None-footer_text16]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_set_footer[:NoMatch-None-footer_text17]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Human-0-@**Human Myself**]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Human-1-@**Human 1**0]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Human-2-@**Human 2**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Human-3-@**Human Duplicate|13**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Human-4-@**Human Duplicate|14**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Human--1-@**Human Duplicate|14**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Human--2-@**Human Duplicate|13**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Human--3-@**Human 2**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Human--4-@**Human 1**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Human--5-@**Human Myself**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Human--6-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_Human-0-@_**Human Myself**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_Human-1-@_**Human 1**0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_Human-2-@_**Human 2**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_Human-3-@_**Human Duplicate|13**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_Human-4-@_**Human Duplicate|14**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@H-1-@**Human 1**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Hu-1-@**Human 1**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Hum-1-@**Human 1**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Huma-1-@**Human 1**]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Human-1-@**Human 1**1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Human 1-0-@**Human 1**]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_H-1-@_**Human 1**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_Hu-1-@_**Human 1**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_Hum-1-@_**Human 1**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_Huma-1-@_**Human 1**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_Human-1-@_**Human 1**1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_Human 1-0-@_**Human 1**0]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Group-0-@*Group 1*]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Group-1-@*Group 2*]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@G-0-@*Group 1*]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Gr-0-@*Group 1*]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Gro-0-@*Group 1*]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Grou-0-@*Group 1*]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@G-1-@*Group 2*]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Gr-1-@*Group 2*]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Gro-1-@*Group 2*]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@Grou-1-@*Group 2*]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@-0-@**Human Myself**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@-1-@**Human 1**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@-2-@**Human 2**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@-3-@**Human Duplicate|13**0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@-4-@**Human Duplicate|14**0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@-5-@*Group 1*]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@-6-@*Group 2*]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@-7-@*Group 3*]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@-8-@*Group 4*]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@-9-None]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@-10-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@**-0-@**Human Myself**]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@**-1-@**Human 1**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@**-2-@**Human 2**]",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@-3-@**Human Duplicate|13**1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@-4-@**Human Duplicate|14**1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@**-5-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@**-6-None]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@**Human 1-0-@**Human 1**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@*-0-@*Group 1*]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@*-1-@*Group 2*]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@*-2-@*Group 3*]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@*-3-@*Group 4*]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@*-4-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@*-5-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_-0-@_**Human Myself**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_-1-@_**Human 1**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_-2-@_**Human 2**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_-3-@_**Human Duplicate|13**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_-4-@_**Human Duplicate|14**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_-5-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_-6-None]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_--1-@_**Human Duplicate|14**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_Human 1-0-@_**Human 1**1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_**Human 1-0-@_**Human 1**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[(@H-0-(@**Human Myself**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[(@H-1-(@**Human 1**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[-@G-0--@*Group 1*]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[-@G-1--@*Group 2*]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[_@H-0-_@**Human Myself**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[_@G-0-_@*Group 1*]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@@H-0-@@**Human Myself**]",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[:@H-0-:@**Human Myself**]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[#@H-0-#@**Human Myself**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_@H-0-@_@**Human Myself**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[>@_H-0->@_**Human Myself**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[>@_H-1->@_**Human 1**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@_@_H-0-@_@_**Human Myself**]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@@_H-0-@@_**Human Myself**0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[:@_H-0-:@_**Human Myself**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[#@_H-0-#@_**Human Myself**]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@@_H-0-@@_**Human Myself**1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@@_*H-0-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions[@@_**H-0-@@_**Human Myself**]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions_subscribers[@-0-@**Human 2**-recipients0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions_subscribers[@-1-@**Human Myself**-recipients1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions_subscribers[@-2-@**Human 1**-recipients2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions_subscribers[@--1-@*Group 4*-recipients3]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions_subscribers[@-0-@**Human 1**-recipients4]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions_subscribers[@-1-@**Human 2**-recipients5]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions_subscribers[@-2-@**Human Myself**-recipients6]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_mentions_subscribers[@--1-@*Group 4*-recipients7]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@H-@]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@Hu-@]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@Hum-@]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@Huma-@]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@Human-@]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@**-@]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@**H-@]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@**Hu-@]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@**Hum-@]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@**Huma-@]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@**Human-@]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@_-@_]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@_H-@_]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@_Hu-@_]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@_Hum-@_]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@_Huma-@_]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_user_mentions[@_Human-@_]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#Stream-state_and_required_typeahead0-stream_categories0]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#S-state_and_required_typeahead1-stream_categories1]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#So-state_and_required_typeahead2-stream_categories2]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#Se-state_and_required_typeahead3-stream_categories3]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#St-state_and_required_typeahead4-stream_categories4]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#g-state_and_required_typeahead5-stream_categories5]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#Stream 1-state_and_required_typeahead6-stream_categories6]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#nomatch-state_and_required_typeahead7-stream_categories7]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#ene-state_and_required_typeahead8-stream_categories8]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[[#Stream-state_and_required_typeahead9-stream_categories9]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[(#Stream-state_and_required_typeahead10-stream_categories10]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[@#Stream-state_and_required_typeahead11-stream_categories11]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[@_#Stream-state_and_required_typeahead12-stream_categories12]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[:#Stream-state_and_required_typeahead13-stream_categories13]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[##Stream-state_and_required_typeahead14-stream_categories14]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[##*Stream-state_and_required_typeahead15-stream_categories15]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[##**Stream-state_and_required_typeahead16-stream_categories16]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#Stream-state_and_required_typeahead17-stream_categories17]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#Stream-state_and_required_typeahead18-stream_categories18]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#Stream-state_and_required_typeahead19-stream_categories19]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#Stream-state_and_required_typeahead20-stream_categories20]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#Stream-state_and_required_typeahead21-stream_categories21]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#Stream-state_and_required_typeahead22-stream_categories22]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#Stream-state_and_required_typeahead23-stream_categories23]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#S-state_and_required_typeahead24-stream_categories24]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_streams[#Stream-state_and_required_typeahead25-stream_categories25]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:rock_o-0-:rock_on:]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:rock_o-1-None]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:rock_o--1-:rock_on:]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:rock_o--2-None]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:smi-0-:smile:]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:smi-1-:smiley:]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:smi-2-:smirk:]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:jo-0-:joker:]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:jo-1-:joy_cat:]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:jok-0-:joker:]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:-0-:happy:]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:-1-:joker:]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:--3-:smiley:]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:--2-:smirk:]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:nomatch-0-None]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[:nomatch--1-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[(:smi-0-(:smile:]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[&:smi-1-&:smiley:]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[@:smi-0-@:smile:]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[@_:smi-0-@_:smile:]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_generic_autocomplete_emojis[#:smi-0-#:smile:]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__to_box_autocomplete[no_search_text]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__to_box_autocomplete[single_word_search_text]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__to_box_autocomplete_with_spaces[Hu-Human Myself <FOOBOO@gmail.com>]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__to_box_autocomplete_with_spaces[Human M-Human Myself <FOOBOO@gmail.com>]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__to_box_autocomplete_with_spaces[Human Myself <FOOBOO-Human Myself <FOOBOO@gmail.com>]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__to_box_autocomplete_with_multiple_recipients[name_search_text_with_space_after_separator]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__to_box_autocomplete_with_multiple_recipients[email_search_text_with_space_after_separator]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__to_box_autocomplete_with_multiple_recipients[name_search_text_without_space_after_separator]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__to_box_autocomplete_with_multiple_recipients[email_search_text_without_space_after_separator]",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__stream_box_autocomplete[no_search_text]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__stream_box_autocomplete[no_search_text_with_pinned_stream]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__stream_box_autocomplete[single_word_search_text]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__stream_box_autocomplete[single_word_search_text_with_pinned_stream]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__set_stream_write_box_style_markers[web_public_stream]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__set_stream_write_box_style_markers[private_stream]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__set_stream_write_box_style_markers[public_stream]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__set_stream_write_box_style_markers[invalid_stream_name]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__stream_box_autocomplete_with_spaces[Som-Some general stream]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__stream_box_autocomplete_with_spaces[Some gen-Some general stream]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__topic_box_autocomplete[no_search_text]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__topic_box_autocomplete[single_word_search_text]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__topic_box_autocomplete[split_in_first_word]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__topic_box_autocomplete[split_in_second_word]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__topic_box_autocomplete[first_split_in_third_word]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__topic_box_autocomplete[second_split_in_third_word]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__topic_box_autocomplete_with_spaces[Th-This is a topic]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__topic_box_autocomplete_with_spaces[This i-This is a topic]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__process_typeaheads[fewer_than_10_typeaheads]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__process_typeaheads[more_than_10_typeaheads]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__process_typeaheads[invalid_state-None]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__process_typeaheads[invalid_state-greater_than_possible_index]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test__process_typeaheads[invalid_state-less_than_possible_index]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_SEND_MESSAGE_no_topic[ctrl d-update_message-empty_topic]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_SEND_MESSAGE_no_topic[ctrl d-update_message-non_empty_topic]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_SEND_MESSAGE_no_topic[ctrl d-update_message-topic_with_whitespace]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_SEND_MESSAGE_no_topic[ctrl d-send_message-empty_topic]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_SEND_MESSAGE_no_topic[ctrl d-send_message-non_empty_topic]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_SEND_MESSAGE_no_topic[ctrl d-send_message-topic_with_whitespace]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_SEND_MESSAGE_no_topic[meta enter-update_message-empty_topic]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_SEND_MESSAGE_no_topic[meta enter-update_message-non_empty_topic]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_SEND_MESSAGE_no_topic[meta enter-update_message-topic_with_whitespace]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_SEND_MESSAGE_no_topic[meta enter-send_message-empty_topic]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_SEND_MESSAGE_no_topic[meta enter-send_message-non_empty_topic]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_SEND_MESSAGE_no_topic[meta enter-send_message-topic_with_whitespace]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_typeahead_mode_autocomplete_key[ctrl f-False-False-False]",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_typeahead_mode_autocomplete_key[ctrl r-False-False-False]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_typeahead_mode_autocomplete_key[ctrl f-True-True-False]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_typeahead_mode_autocomplete_key[ctrl r-True-True-False]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_typeahead_mode_autocomplete_key[esc-True-False-True]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_typeahead_mode_autocomplete_key[space-True-False-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_typeahead_mode_autocomplete_key[k-True-False-True]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_CYCLE_COMPOSE_FOCUS[tab-stream_name_to_topic_box]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_CYCLE_COMPOSE_FOCUS[tab-topic_to_message_box]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_CYCLE_COMPOSE_FOCUS[tab-topic_edit_only-topic_to_edit_mode_box]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_CYCLE_COMPOSE_FOCUS[tab-topic_edit_only-edit_mode_to_topic_box]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_CYCLE_COMPOSE_FOCUS[tab-message_to_stream_name_box]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_CYCLE_COMPOSE_FOCUS[tab-edit_box-stream_name_to_topic_box]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_CYCLE_COMPOSE_FOCUS[tab-edit_box-topic_to_edit_mode_box]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_CYCLE_COMPOSE_FOCUS[tab-edit_box-edit_mode_to_message_box]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_CYCLE_COMPOSE_FOCUS[tab-edit_box-message_to_stream_name_box]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_CYCLE_COMPOSE_FOCUS[tab-recipient_to_message_box]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_CYCLE_COMPOSE_FOCUS[tab-message_to_recipient_box]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_keypress_MARKDOWN_HELP[meta m]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_write_box_header_contents[private_message]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_write_box_header_contents[stream_message]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestWriteBox",
                "name": "test_write_box_header_contents[stream_edit_message]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestPanelSearchBox",
                "name": "test_init",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestPanelSearchBox",
                "name": "test_reset_search_text",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestPanelSearchBox",
                "name": "test_valid_char[no_text-disallow_urwid_backspace]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestPanelSearchBox",
                "name": "test_valid_char[no_text-disallow_unicode_backspace]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestPanelSearchBox",
                "name": "test_valid_char[no_text-disallow_unicode_em_space]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestPanelSearchBox",
                "name": "test_valid_char[no_text-allow_entry_of_x]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestPanelSearchBox",
                "name": "test_valid_char[no_text-allow_entry_of_delta]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestPanelSearchBox",
                "name": "test_valid_char[no_text-disallow_entry_of_space]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestPanelSearchBox",
                "name": "test_valid_char[text-allow_entry_of_space]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestPanelSearchBox",
                "name": "test_valid_char[text-disallow_urwid_backspace]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestPanelSearchBox",
                "name": "test_keypress_ENTER[enter-log0-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestPanelSearchBox",
                "name": "test_keypress_ENTER[enter-log1-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_boxes.TestPanelSearchBox",
                "name": "test_keypress_GO_BACK[esc]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_init",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_style_properties",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_text_properties",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_count[11-11]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_count[1-1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_count[10-10]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_count[0-]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup0-expected_suffix_markup0-label_markup0-prefix_markup0-expected_prefix_markup0]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup0-expected_suffix_markup0-label_markup0-prefix_markup1-expected_prefix_markup1]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup0-expected_suffix_markup0-label_markup1-prefix_markup0-expected_prefix_markup0]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup0-expected_suffix_markup0-label_markup1-prefix_markup1-expected_prefix_markup1]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup1-expected_suffix_markup1-label_markup0-prefix_markup0-expected_prefix_markup0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup1-expected_suffix_markup1-label_markup0-prefix_markup1-expected_prefix_markup1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup1-expected_suffix_markup1-label_markup1-prefix_markup0-expected_prefix_markup0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup1-expected_suffix_markup1-label_markup1-prefix_markup1-expected_prefix_markup1]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup2-expected_suffix_markup2-label_markup0-prefix_markup0-expected_prefix_markup0]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup2-expected_suffix_markup2-label_markup0-prefix_markup1-expected_prefix_markup1]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup2-expected_suffix_markup2-label_markup1-prefix_markup0-expected_prefix_markup0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup2-expected_suffix_markup2-label_markup1-prefix_markup1-expected_prefix_markup1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup3-expected_suffix_markup3-label_markup0-prefix_markup0-expected_prefix_markup0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup3-expected_suffix_markup3-label_markup0-prefix_markup1-expected_prefix_markup1]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup3-expected_suffix_markup3-label_markup1-prefix_markup0-expected_prefix_markup0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopButton",
                "name": "test_update_widget[suffix_markup3-expected_suffix_markup3-label_markup1-prefix_markup1-expected_prefix_markup1]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestPMButton",
                "name": "test_button_text_length",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestPMButton",
                "name": "test_button_text_title",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestStarredButton",
                "name": "test_count_style_init_argument_value",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestStreamButton",
                "name": "test_mark_muted",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestStreamButton",
                "name": "test_mark_unmuted",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestStreamButton",
                "name": "test_keypress_ENTER_TOGGLE_TOPIC[t]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestStreamButton",
                "name": "test_keypress_TOGGLE_MUTE_STREAM[m]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestUserButton",
                "name": "test_activate_called_once_on_keypress[enter]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestUserButton",
                "name": "test_keypress_USER_INFO[i]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_init_calls_top_button[stream_message-emoji_button_with_no_reaction]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_init_calls_top_button[stream_message-emoji_button_with_a_reaction]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_init_calls_top_button[pm_message-emoji_button_with_no_reaction]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_init_calls_top_button[pm_message-emoji_button_with_a_reaction]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_init_calls_top_button[group_pm_message-emoji_button_with_no_reaction]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_init_calls_top_button[group_pm_message-emoji_button_with_a_reaction]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_keypress_emoji_button[stream_message-reacted_unselected_emoji-enter]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_keypress_emoji_button[stream_message-reacted_selected_emoji-enter]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_keypress_emoji_button[stream_message-unreacted_unselected_emoji-enter]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_keypress_emoji_button[stream_message-unreacted_selected_emoji-enter]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_keypress_emoji_button[pm_message-reacted_unselected_emoji-enter]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_keypress_emoji_button[pm_message-reacted_selected_emoji-enter]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_keypress_emoji_button[pm_message-unreacted_unselected_emoji-enter]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_keypress_emoji_button[pm_message-unreacted_selected_emoji-enter]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_keypress_emoji_button[group_pm_message-reacted_unselected_emoji-enter]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_keypress_emoji_button[group_pm_message-reacted_selected_emoji-enter]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_keypress_emoji_button[group_pm_message-unreacted_unselected_emoji-enter]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestEmojiButton",
                "name": "test_keypress_emoji_button[group_pm_message-unreacted_selected_emoji-enter]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopicButton",
                "name": "test_init_calls_top_button[2-86-topic1-Django-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopicButton",
                "name": "test_init_calls_top_button[1-14-\\u2714 topic2-GSoC-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopicButton",
                "name": "test_init_calls_top_button[1000-205-topic3-PTEST-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopicButton",
                "name": "test_init_calls_mark_muted[stream_and_topic_match]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopicButton",
                "name": "test_init_calls_mark_muted[topic_mismatch]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopicButton",
                "name": "test_init_calls_mark_muted[stream_mismatch]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopicButton",
                "name": "test_mark_muted",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestTopicButton",
                "name": "test_keypress_EXIT_TOGGLE_TOPIC[t]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test_init",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test_update_widget[Test-5]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test_update_widget[Check-6]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test_handle_link[internal_narrow_link]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test_handle_link[internal_media_link]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test_handle_link[external_link]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__decode_stream_data[stream_data_current_version]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__decode_stream_data[stream_data_deprecated_version]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__decode_message_id[1-1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__decode_message_id[foo-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__parse_narrow_link[modern_stream_narrow_link]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__parse_narrow_link[deprecated_stream_narrow_link]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__parse_narrow_link[topic_narrow_link]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__parse_narrow_link[stream_near_narrow_link]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__parse_narrow_link[topic_near_narrow_link]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__parse_narrow_link[invalid_narrow_link_1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__parse_narrow_link[invalid_narrow_link_2]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__parse_narrow_link[invalid_narrow_link_3]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__parse_narrow_link[invalid_narrow_link_4]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__parse_narrow_link[invalid_narrow_link_5]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_narrow_link[valid_modern_stream_narrow_parsed_link]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_narrow_link[invalid_modern_stream_narrow_parsed_link]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_narrow_link[valid_deprecated_stream_narrow_parsed_link]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_narrow_link[invalid_deprecated_stream_narrow_parsed_link]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_narrow_link[valid_topic_narrow_parsed_link]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_narrow_link[invalid_topic_narrow_parsed_link]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_narrow_link[valid_stream_near_narrow_parsed_link]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_narrow_link[invalid_stream_near_narrow_parsed_link]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_narrow_link[valid_topic_near_narrow_parsed_link]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_narrow_link[invalid_topic_near_narrow_parsed_link]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_narrow_link[invalid_narrow_link]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_and_patch_stream_data[valid_stream_data_with_stream_id]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_and_patch_stream_data[invalid_stream_data_with_stream_id]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_and_patch_stream_data[valid_stream_data_with_stream_name]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__validate_and_patch_stream_data[invalid_stream_data_with_stream_name]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__switch_narrow_to[stream_narrow]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__switch_narrow_to[topic_narrow]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__switch_narrow_to[stream_near_narrow]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test__switch_narrow_to[topic_near_narrow]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test_handle_narrow_link[successful_narrow]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_buttons.TestMessageLinkButton",
                "name": "test_handle_narrow_link[unsuccessful_narrow]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_init[stream-set_fields0]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_init[private-set_fields1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_init_fails_with_bad_message_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_private_message_to_self",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[empty]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[p]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[user-mention]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[h1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[h2]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[h3]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[h4]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[h5]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[h6]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[group-mention]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[inline-code]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[codehilite-code]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[codehilite-code-old]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[codehilite-plain-text-codeblock]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[codehilite-plain-text-codeblock-old]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[strong]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[em]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[blockquote]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[embedded_content]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[link_two]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[link_samelinkdifferentname]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[link_duplicatelink]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[link_trailingslash]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[link_trailingslashduplicatelink]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[link_sametext]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[link_sameimage]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[link_differenttext]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[link_userupload]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[link_api]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[link_serverrelative_same]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[link_textwithoutscheme]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[link_differentscheme]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[li]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[empty_li]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[li_with_li_p_newline]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[two_li]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[two_li_with_li_p_newlines]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[li_nested]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[li_heavily_nested]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[br]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[br2]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[hr]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[hr2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[img]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[img2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[table_default]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[table_with_left_and_right_alignments]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[table_with_center_and_right_alignments]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[table_with_single_column]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[table_with_the_bare_minimum]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[time_human_readable_input]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[time_UNIX_timestamp_input]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[katex_HTML_response_math_fenced_markdown]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[katex_HTML_response_double_$_fenced_markdown]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[ul]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[ul_with_ul_li_newlines]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[ol]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[ol_with_ol_li_newlines]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[ol_starting_at_5]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[strikethrough_del]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[inline_image]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[inline_ref]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[emoji]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[preview-twitter]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[zulip_extra_emoji]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_soup2markup[custom_emoji]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view[message0-None]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view[message1-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_renders_slash_me[<p>/me is excited!</p>-True-message0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_renders_slash_me[<p>/me is excited! /me is not excited.</p>-True-message0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_renders_slash_me[<p>This is /me not.</p>-False-message0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_renders_slash_me[<p>/me is excited!</p>-False-message0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_generates_stream_header[different_stream_before-message0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_generates_stream_header[different_topic_before-message0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_generates_stream_header[PM_before-message0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_generates_PM_header[larger_pm_group-message0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_generates_PM_header[stream_before-message0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow0-0-PTEST \\u25b6 -All messages]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow1-1-You and -All messages]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow2-2-You and -All messages]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow3-0-PTEST \\u25b6 -assert_search_bar3]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow4-0-PTEST \\u25b6-assert_search_bar4]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow5-1-You and -All direct messages]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow6-2-You and -All direct messages]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow7-1-You and -Direct message conversation]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow8-2-You and -Group direct message conversation]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow9-0-PTEST \\u25b6 -Starred messages]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow10-1-You and -Starred messages]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow11-2-You and -Starred messages]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow12-1-You and -Starred messages]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow13-0-PTEST \\u25b6 -All messages]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow14-0-PTEST \\u25b6 -Mentions]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow15-1-You and -Mentions]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow16-2-You and -Mentions]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_msg_generates_search_and_header_bar[msg_narrow17-1-You and -Mentions]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[show_author_as_authors_different-this_starred-now_2018-message0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[show_author_as_authors_different-this_starred-now_2019-message0]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[show_author_as_authors_different-this_starred-now_2050-message0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[show_author_as_authors_different-last_starred-now_2018-message0]",
                "time": 0.903,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[show_author_as_authors_different-last_starred-now_2019-message0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[show_author_as_authors_different-last_starred-now_2050-message0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[show_author_as_authors_different-no_stars-now_2018-message0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[show_author_as_authors_different-no_stars-now_2019-message0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[show_author_as_authors_different-no_stars-now_2050-message0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[merge_messages_as_only_slightly_earlier_message-this_starred-now_2018-message0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[merge_messages_as_only_slightly_earlier_message-this_starred-now_2019-message0]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[merge_messages_as_only_slightly_earlier_message-this_starred-now_2050-message0]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[merge_messages_as_only_slightly_earlier_message-last_starred-now_2018-message0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[merge_messages_as_only_slightly_earlier_message-last_starred-now_2019-message0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[merge_messages_as_only_slightly_earlier_message-last_starred-now_2050-message0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[merge_messages_as_only_slightly_earlier_message-no_stars-now_2018-message0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[merge_messages_as_only_slightly_earlier_message-no_stars-now_2019-message0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[merge_messages_as_only_slightly_earlier_message-no_stars-now_2050-message0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[dont_merge_messages_as_much_earlier_message-this_starred-now_2018-message0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[dont_merge_messages_as_much_earlier_message-this_starred-now_2019-message0]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[dont_merge_messages_as_much_earlier_message-this_starred-now_2050-message0]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[dont_merge_messages_as_much_earlier_message-last_starred-now_2018-message0]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[dont_merge_messages_as_much_earlier_message-last_starred-now_2019-message0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[dont_merge_messages_as_much_earlier_message-last_starred-now_2050-message0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[dont_merge_messages_as_much_earlier_message-no_stars-now_2018-message0]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[dont_merge_messages_as_much_earlier_message-no_stars-now_2019-message0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_content_header_without_header[dont_merge_messages_as_much_earlier_message-no_stars-now_2050-message0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[stream_message-common_author]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[stream_message-common_timestamp]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[stream_message-common_early_timestamp]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[stream_message-common_unchanged_message]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[stream_message-both_starred]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[pm_message-common_author]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[pm_message-common_timestamp]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[pm_message-common_early_timestamp]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[pm_message-common_unchanged_message]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[pm_message-both_starred]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[group_pm_message-common_author]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[group_pm_message-common_timestamp]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[group_pm_message-common_early_timestamp]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[group_pm_message-common_unchanged_message]",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_compact_output[group_pm_message-both_starred]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_main_view_generates_EDITED_label",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_update_message_author_status[stream_message-author_field_present]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_update_message_author_status[stream_message-author_field_not_present]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_update_message_author_status[pm_message-author_field_present]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_update_message_author_status[pm_message-author_field_not_present]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_update_message_author_status[group_pm_message-author_field_present]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_update_message_author_status[group_pm_message-author_field_not_present]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_STREAM_MESSAGE[all_messages_narrow-c]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_STREAM_MESSAGE[stream_narrow-c]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_STREAM_MESSAGE[topic_narrow-c]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_STREAM_MESSAGE[private_conversation_narrow-c]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_STREAM_MESSAGE[starred_messages_narrow-c]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_STREAM_MESSAGE[mentions_narrow-c]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_STREAM_MESSAGE[private_messages_narrow-c]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[stream_message-msg_sent_by_other_user_with_topic-e]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[stream_message-topic_edit_only_after_time_limit-e]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[stream_message-realm_editing_not_allowed-e]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[stream_message-realm_editing_allowed_and_within_time_limit-e]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[stream_message-no_msg_body_edit_limit-e]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[stream_message-msg_sent_by_me_with_no_topic-e]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[stream_message-msg_sent_by_other_with_no_topic-e]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[stream_message-realm_editing_not_allowed_for_no_topic-e]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[stream_message-no_msg_body_edit_limit_with_no_topic-e]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[pm_message-msg_sent_by_other_user_with_topic-e]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[pm_message-topic_edit_only_after_time_limit-e]",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[pm_message-realm_editing_not_allowed-e]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[pm_message-realm_editing_allowed_and_within_time_limit-e]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[pm_message-no_msg_body_edit_limit-e]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[pm_message-msg_sent_by_me_with_no_topic-e]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[pm_message-msg_sent_by_other_with_no_topic-e]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[pm_message-realm_editing_not_allowed_for_no_topic-e]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[pm_message-no_msg_body_edit_limit_with_no_topic-e]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[group_pm_message-msg_sent_by_other_user_with_topic-e]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[group_pm_message-topic_edit_only_after_time_limit-e]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[group_pm_message-realm_editing_not_allowed-e]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[group_pm_message-realm_editing_allowed_and_within_time_limit-e]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[group_pm_message-no_msg_body_edit_limit-e]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[group_pm_message-msg_sent_by_me_with_no_topic-e]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[group_pm_message-msg_sent_by_other_with_no_topic-e]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[group_pm_message-realm_editing_not_allowed_for_no_topic-e]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_keypress_EDIT_MESSAGE[group_pm_message-no_msg_body_edit_limit_with_no_topic-e]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_transform_content[quoted level 1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_transform_content[quoted level 2]",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_transform_content[quoted level 3]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_transform_content[multi-line quoting]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_transform_content[quoting with links]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_transform_content[multi-line level 2]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_transform_content[quoted level 2-1-2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_transform_content[quoted with links level 2]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_transform_content[quoted level 3-2-3]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_transform_content[quoted level 1-3]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "rendered_bug",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_transform_content[quoted with links level 1-3-1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "rendered_bug",
                        "type": "pytest.xfail"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[stream_message-to_vary_in_each_message0- :thumbs_up: 1   :zulip: 2   :heart: 1  -expected_attributes0]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[stream_message-to_vary_in_each_message1- :thumbs_up: Iago   :zulip: You   :heart: Iago  -expected_attributes1]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[stream_message-to_vary_in_each_message2- :zulip: Iago, Shivam, You  -expected_attributes2]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[stream_message-to_vary_in_each_message3- :heart: Iago   :zulip: Shivam, You  -expected_attributes3]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[stream_message-to_vary_in_each_message4- :zulip: Shivam, You  -expected_attributes4]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[pm_message-to_vary_in_each_message0- :thumbs_up: 1   :zulip: 2   :heart: 1  -expected_attributes0]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[pm_message-to_vary_in_each_message1- :thumbs_up: Iago   :zulip: You   :heart: Iago  -expected_attributes1]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[pm_message-to_vary_in_each_message2- :zulip: Iago, Shivam, You  -expected_attributes2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[pm_message-to_vary_in_each_message3- :heart: Iago   :zulip: Shivam, You  -expected_attributes3]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[pm_message-to_vary_in_each_message4- :zulip: Shivam, You  -expected_attributes4]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[group_pm_message-to_vary_in_each_message0- :thumbs_up: 1   :zulip: 2   :heart: 1  -expected_attributes0]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[group_pm_message-to_vary_in_each_message1- :thumbs_up: Iago   :zulip: You   :heart: Iago  -expected_attributes1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[group_pm_message-to_vary_in_each_message2- :zulip: Iago, Shivam, You  -expected_attributes2]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[group_pm_message-to_vary_in_each_message3- :heart: Iago   :zulip: Shivam, You  -expected_attributes3]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_reactions_view[group_pm_message-to_vary_in_each_message4- :zulip: Shivam, You  -expected_attributes4]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_footlinks_view[one_footlink]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_footlinks_view[more_than_one_footlink]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_footlinks_view[similar_link_and_text]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_footlinks_view[different_link_and_text]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_footlinks_view[http_default_scheme]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_footlinks_limit[0-NoneType]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_footlinks_limit[1-Padding]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_footlinks_limit[3-Padding]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_mouse_event_left_click[ignore_mouse_click-left_click-key:enter]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_messages.TestMessageBox",
                "name": "test_mouse_event_left_click[handle_mouse_click-left_click-key:enter]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpConfirmationView",
                "name": "test_init",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpConfirmationView",
                "name": "test_exit_popup_yes",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpConfirmationView",
                "name": "test_exit_popup_no",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpConfirmationView",
                "name": "test_exit_popup_GO_BACK[esc]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_init",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_GO_BACK[esc]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_command_key",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:u]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:k]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:d]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:j]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:l0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:h]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:r]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:l1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:p0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:K]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:p1]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:J]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:e]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestPopUpView",
                "name": "test_keypress_navigation[nav-key:G]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestAboutView",
                "name": "test_keypress_exit_popup[meta ?]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestAboutView",
                "name": "test_keypress_exit_popup[esc]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestAboutView",
                "name": "test_keypress_exit_popup_invalid_key",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestAboutView",
                "name": "test_feature_level_content[server_version:2.1-server_feature_level:None]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestAboutView",
                "name": "test_feature_level_content[server_version:3.0-server_feature_level:25]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_email]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_empty_email]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_date_joined]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_empty_date_joined]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_timezone]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_empty_timezone]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_bot_owner]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_empty_bot_owner]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_last_active]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_empty_last_active]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_is_generic_bot]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_is_incoming_webhook_bot]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_is_outgoing_webhook_bot]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_is_embedded_bot]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_is_owner]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_is_admin]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_is_moderator]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_is_guest]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data[user_is_member]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test__fetch_user_data_USER_NOT_FOUND",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test_keypress_exit_popup[i]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test_keypress_exit_popup[esc]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestUserInfoView",
                "name": "test_keypress_exit_popup_invalid_key",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestFullRenderedMsgView",
                "name": "test_init",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestFullRenderedMsgView",
                "name": "test_keypress_exit_popup[i]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestFullRenderedMsgView",
                "name": "test_keypress_exit_popup_invalid_key",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestFullRenderedMsgView",
                "name": "test_keypress_show_msg_info[f]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestFullRenderedMsgView",
                "name": "test_keypress_show_msg_info[esc]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestFullRawMsgView",
                "name": "test_init",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestFullRawMsgView",
                "name": "test_keypress_exit_popup[i]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestFullRawMsgView",
                "name": "test_keypress_exit_popup_invalid_key",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestFullRawMsgView",
                "name": "test_keypress_show_msg_info[r]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestFullRawMsgView",
                "name": "test_keypress_show_msg_info[esc]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test_init",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test_keypress_exit_popup[i]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test_keypress_exit_popup_invalid_key",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test_keypress_show_msg_info[e]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test_keypress_show_msg_info[esc]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test__make_edit_block[with_user_id-snapshot0]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test__make_edit_block[without_user_id-snapshot0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test__get_author_prefix[posted-snapshot0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test__get_author_prefix[content_&_topic_edited-snapshot0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test__get_author_prefix[content_edited-snapshot0]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test__get_author_prefix[topic_edited-snapshot0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test__get_author_prefix[false_alarm_content_&_topic-snapshot0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test__get_author_prefix[content_edited_with_false_alarm_topic-snapshot0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditHistoryView",
                "name": "test__get_author_prefix[topic_edited_with_false_alarm_content-snapshot0]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditModeView",
                "name": "test_init[change_one]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditModeView",
                "name": "test_init[change_later]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditModeView",
                "name": "test_init[change_all]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditModeView",
                "name": "test_select_edit_mode[change_one-enter-0-change_one]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "button already selected",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditModeView",
                "name": "test_select_edit_mode[change_one-enter-1-change_later]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditModeView",
                "name": "test_select_edit_mode[change_one-enter-2-change_all]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditModeView",
                "name": "test_select_edit_mode[change_later-enter-0-change_one]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditModeView",
                "name": "test_select_edit_mode[change_later-enter-1-change_later]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "button already selected",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditModeView",
                "name": "test_select_edit_mode[change_later-enter-2-change_all]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditModeView",
                "name": "test_select_edit_mode[change_all-enter-0-change_one]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditModeView",
                "name": "test_select_edit_mode[change_all-enter-1-change_later]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEditModeView",
                "name": "test_select_edit_mode[change_all-enter-2-change_all]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "button already selected",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMarkdownHelpView",
                "name": "test_keypress_any_key",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMarkdownHelpView",
                "name": "test_keypress_exit_popup[meta m]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMarkdownHelpView",
                "name": "test_keypress_exit_popup[esc]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestHelpView",
                "name": "test_keypress_any_key",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestHelpView",
                "name": "test_keypress_exit_popup[?]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestHelpView",
                "name": "test_keypress_exit_popup[esc]",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_init[stream_message]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_init[pm_message]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_init[group_pm_message]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_pop_up_info_order[stream_message]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_pop_up_info_order[pm_message]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_pop_up_info_order[group_pm_message]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_any_key[stream_message]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_any_key[pm_message]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_any_key[group_pm_message]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[stream_message-stream_message_id-True-e]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[stream_message-stream_message_id-False-e]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[stream_message-pm_message_id-True-e]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[stream_message-pm_message_id-False-e]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[stream_message-group_pm_message_id-True-e]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[stream_message-group_pm_message_id-False-e]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[pm_message-stream_message_id-True-e]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[pm_message-stream_message_id-False-e]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[pm_message-pm_message_id-True-e]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[pm_message-pm_message_id-False-e]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[pm_message-group_pm_message_id-True-e]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[pm_message-group_pm_message_id-False-e]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[group_pm_message-stream_message_id-True-e]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[group_pm_message-stream_message_id-False-e]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[group_pm_message-pm_message_id-True-e]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[group_pm_message-pm_message_id-False-e]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[group_pm_message-group_pm_message_id-True-e]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_edit_history[group_pm_message-group_pm_message_id-False-e]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_full_rendered_message[stream_message-f]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_full_rendered_message[pm_message-f]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_full_rendered_message[group_pm_message-f]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_full_raw_message[stream_message-r]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_full_raw_message[pm_message-r]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_full_raw_message[group_pm_message-r]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_exit_popup[stream_message-i]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_exit_popup[stream_message-esc]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_exit_popup[pm_message-i]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_exit_popup[pm_message-esc]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_exit_popup[group_pm_message-i]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_exit_popup[group_pm_message-esc]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_view_in_browser[stream_message-v]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_view_in_browser[pm_message-v]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_keypress_view_in_browser[group_pm_message-v]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_height_noreactions[stream_message]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_height_noreactions[pm_message]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_height_noreactions[group_pm_message]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_height_reactions[stream_message-to_vary_in_each_message0]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_height_reactions[pm_message-to_vary_in_each_message0]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_height_reactions[group_pm_message-to_vary_in_each_message0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_create_link_buttons[stream_message-link_with_link_text]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_create_link_buttons[stream_message-link_without_link_text]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_create_link_buttons[pm_message-link_with_link_text]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_create_link_buttons[pm_message-link_without_link_text]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_create_link_buttons[group_pm_message-link_with_link_text]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestMsgInfoView",
                "name": "test_create_link_buttons[group_pm_message-link_without_link_text]",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_keypress_any_key",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_keypress_stream_members[m]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_popup_height[ZFL=None_no_date_created__no_retention_days__admins_only]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_popup_height[ZFL=None_no_date_created__no_retention_days__anyone_can_type]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_popup_height[ZFL<30_no_date_created__ZFL<17_no_retention_days]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_popup_height[ZFL<30_no_date_created__ZFL=17_custom_finite_retention_days]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_popup_height[ZFL<30_no_date_created__ZFL>17_default_indefinite_retention_days]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_popup_height[ZFL=30_with_date_created__ZFL>17_custom_finite_retention_days]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_popup_height[ZFL>30_with_date_created__ZFL>17_default_finite_retention_days]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_popup_height[ZFL>30_new_stream_with_date_created__ZFL>17_finite_retention_days]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_keypress_copy_stream_email[c]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_markup_description[<p>Simple</p>-expected_markup0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_markup_description[<p>A city in Italy <a href=\"http://genericlink.com\">ABC</a><strong>Bold</strong>-expected_markup1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_footlinks[message_links0-1: https://example.com\\n2: https://generic.com-expected_attrib0-22]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_keypress_exit_popup[i]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_keypress_exit_popup[esc]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_checkbox_toggle_mute_stream[enter]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_checkbox_toggle_mute_stream[ ]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_checkbox_toggle_pin_stream[enter]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_checkbox_toggle_pin_stream[ ]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_checkbox_toggle_visual_notification[enter]",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamInfoView",
                "name": "test_checkbox_toggle_visual_notification[ ]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamMembersView",
                "name": "test_keypress_exit_popup[m]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestStreamMembersView",
                "name": "test_keypress_exit_popup[esc]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[stream_message-e-assert_list0-emoji_units0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[stream_message-sm-assert_list1-emoji_units0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[stream_message-ang-assert_list2-emoji_units0]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[stream_message-abc-assert_list3-emoji_units0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[stream_message-q-assert_list4-emoji_units0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[pm_message-e-assert_list0-emoji_units0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[pm_message-sm-assert_list1-emoji_units0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[pm_message-ang-assert_list2-emoji_units0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[pm_message-abc-assert_list3-emoji_units0]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[pm_message-q-assert_list4-emoji_units0]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[group_pm_message-e-assert_list0-emoji_units0]",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[group_pm_message-sm-assert_list1-emoji_units0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[group_pm_message-ang-assert_list2-emoji_units0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[group_pm_message-abc-assert_list3-emoji_units0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_update_emoji_list[group_pm_message-q-assert_list4-emoji_units0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_mouse_event[stream_message-mouse press-4-up]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_mouse_event[stream_message-mouse press-5-down]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_mouse_event[pm_message-mouse press-4-up]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_mouse_event[pm_message-mouse press-5-down]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_mouse_event[group_pm_message-mouse press-4-up]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_mouse_event[group_pm_message-mouse press-5-down]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_keypress_search_emoji[stream_message-p]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_keypress_search_emoji[pm_message-p]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_keypress_search_emoji[group_pm_message-p]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_keypress_exit_called[stream_message-:]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_keypress_exit_called[stream_message-esc]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_keypress_exit_called[pm_message-:]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_keypress_exit_called[pm_message-esc]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_keypress_exit_called[group_pm_message-:]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ui_tools.test_popups.TestEmojiPickerView",
                "name": "test_keypress_exit_called[group_pm_message-esc]",
                "time": 0.159,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ] \ud83d\ude80  Start image=crawlergpt:latest\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ] \ud83d\ude80  Start image=crawlergpt:latest\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ] \ud83d\ude80  Start image=crawlergpt:latest\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov] \ud83d\ude80  Start image=crawlergpt:latest\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ] \ud83d\ude80  Start image=crawlergpt:latest\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ] \ud83d\ude80  Start image=crawlergpt:latest\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ] \ud83d\ude80  Start image=crawlergpt:latest\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ] \ud83d\ude80  Start image=crawlergpt:latest\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ] \u2b50 Run Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2705  Success - Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ] \u2b50 Run Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ] \u2b50 Run Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udc33  docker cp src=/tmp/act-cache/98a8bb6b-149f-4279-a23f-fd53bdb03df9/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2705  Success - Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ] \u2b50 Run Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2705  Success - Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ] \u2b50 Run Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udc33  docker cp src=/tmp/act-cache/98a8bb6b-149f-4279-a23f-fd53bdb03df9/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ] \u2b50 Run Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ] \u2b50 Run Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2705  Success - Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udc33  docker cp src=/tmp/act-cache/98a8bb6b-149f-4279-a23f-fd53bdb03df9/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ] \u2b50 Run Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ] \u2b50 Run Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2705  Success - Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udc33  docker cp src=/tmp/act-cache/98a8bb6b-149f-4279-a23f-fd53bdb03df9/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ] \u2b50 Run Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udc33  docker cp src=/tmp/act-cache/98a8bb6b-149f-4279-a23f-fd53bdb03df9/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2753  ::group::Installed versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::isExplicit: \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::explicit? false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Successfully set up CPython (3.7.11)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2753  ::endgroup::\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Search path '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::OS Name: Ubuntu, Version: 20.04\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | [command]/opt/hostedtoolcache/Python/3.7.11/x64/bin/pip cache dir\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::global cache directory path is /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Resolved Keys:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::[\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\",\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/cache?keys=setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822%252Csetup-python-Linux-20.04-Ubuntu-python-3.7.11-pip&version=79a244514713d0ea96d5d8aab70186082a897848df6e845ec8308965d2f82f4f\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | pip cache is not found\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2705  Success - Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2699  ::set-output:: python-version=3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2699  ::set-output:: cache-hit=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ] \u2b50 Run Main Install with linting tools\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2753  ::group::Installed versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::isExplicit: \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::explicit? false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Successfully set up CPython (3.7.11)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2753  ::endgroup::\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2753  ::group::Installed versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::isExplicit: \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::explicit? false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Search path '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Successfully set up CPython (3.7.11)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2753  ::endgroup::\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2753  ::group::Installed versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::isExplicit: \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::explicit? false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2753  ::group::Installed versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::isExplicit: \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::explicit? false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Search path '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Successfully set up CPython (3.7.11)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2753  ::endgroup::\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Search path '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Successfully set up CPython (3.7.11)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2753  ::endgroup::\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Search path '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::OS Name: Ubuntu, Version: 20.04\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | [command]/opt/hostedtoolcache/Python/3.7.11/x64/bin/pip cache dir\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::OS Name: Ubuntu, Version: 20.04\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | [command]/opt/hostedtoolcache/Python/3.7.11/x64/bin/pip cache dir\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::OS Name: Ubuntu, Version: 20.04\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | [command]/opt/hostedtoolcache/Python/3.7.11/x64/bin/pip cache dir\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::OS Name: Ubuntu, Version: 20.04\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | [command]/opt/hostedtoolcache/Python/3.7.11/x64/bin/pip cache dir\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::global cache directory path is /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Resolved Keys:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::[\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\",\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/cache?keys=setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822%252Csetup-python-Linux-20.04-Ubuntu-python-3.7.11-pip&version=79a244514713d0ea96d5d8aab70186082a897848df6e845ec8308965d2f82f4f\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::global cache directory path is /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::global cache directory path is /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Resolved Keys:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::[\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\",\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::global cache directory path is /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Resolved Keys:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::[\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\",\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Resolved Keys:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::[\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\",\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/cache?keys=setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822%252Csetup-python-Linux-20.04-Ubuntu-python-3.7.11-pip&version=79a244514713d0ea96d5d8aab70186082a897848df6e845ec8308965d2f82f4f\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/cache?keys=setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822%252Csetup-python-Linux-20.04-Ubuntu-python-3.7.11-pip&version=79a244514713d0ea96d5d8aab70186082a897848df6e845ec8308965d2f82f4f\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | pip cache is not found\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/cache?keys=setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822%252Csetup-python-Linux-20.04-Ubuntu-python-3.7.11-pip&version=79a244514713d0ea96d5d8aab70186082a897848df6e845ec8308965d2f82f4f\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | pip cache is not found\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2705  Success - Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | pip cache is not found\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | pip cache is not found\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2705  Success - Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2705  Success - Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2705  Success - Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2699  ::set-output:: python-version=3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2699  ::set-output:: cache-hit=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2699  ::set-output:: cache-hit=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2699  ::set-output:: python-version=3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2699  ::set-output:: python-version=3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2699  ::set-output:: cache-hit=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2699  ::set-output:: python-version=3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2699  ::set-output:: cache-hit=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ] \u2b50 Run Main Minimal install\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ] \u2b50 Run Main Install with linting tools\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ] \u2b50 Run Main Install with type-checking tools\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ] \u2b50 Run Main Install with linting tools\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |     Preparing wheel metadata: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |     Preparing wheel metadata: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting python-dateutil>=2.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting pytz>=2022.7.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting zulip>=0.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading zulip-0.8.2-py3-none-any.whl (273 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting urwid-readline>=0.13\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading urwid_readline-0.13.tar.gz (7.9 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |     Preparing wheel metadata: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |     Preparing wheel metadata: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |     Preparing wheel metadata: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |     Preparing wheel metadata: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |     Preparing wheel metadata: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |     Preparing wheel metadata: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |     Preparing wheel metadata: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |     Preparing wheel metadata: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting typing-extensions~=4.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading typing_extensions-4.5.0-py3-none-any.whl (27 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting python-dateutil>=2.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting pygments>=2.14.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting urwid-readline>=0.13\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading urwid_readline-0.13.tar.gz (7.9 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting pytz>=2022.7.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting python-dateutil>=2.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting pyperclip>=1.8.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading pyperclip-1.8.2.tar.gz (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting pytz>=2022.7.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting beautifulsoup4>=4.11.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading beautifulsoup4-4.12.2-py3-none-any.whl (142 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting urwid-readline>=0.13\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading urwid_readline-0.13.tar.gz (7.9 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting lxml>=4.9.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading lxml-4.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.6 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting urwid-readline>=0.13\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading urwid_readline-0.13.tar.gz (7.9 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting tzlocal>=2.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading tzlocal-5.0.1-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |     Preparing wheel metadata: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting urwid-readline>=0.13\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading urwid_readline-0.13.tar.gz (7.9 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |     Preparing wheel metadata: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting tzlocal>=2.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading tzlocal-5.0.1-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting lxml>=4.9.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading lxml-4.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.6 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting typing-extensions~=4.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading typing_extensions-4.5.0-py3-none-any.whl (27 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting pygments>=2.14.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting pyperclip>=1.8.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading pyperclip-1.8.2.tar.gz (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting beautifulsoup4>=4.11.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading beautifulsoup4-4.12.2-py3-none-any.whl (142 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting urwid~=2.1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading urwid-2.1.2.tar.gz (634 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |     Preparing wheel metadata: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |     Preparing wheel metadata: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting pygments>=2.14.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting codespell[toml]~=2.2.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading codespell-2.2.5-py3-none-any.whl (242 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |     Preparing wheel metadata: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |     Preparing wheel metadata: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting pytz>=2022.7.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting isort~=5.11.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading isort-5.11.5-py3-none-any.whl (104 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |     Preparing wheel metadata: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |     Preparing wheel metadata: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting black~=23.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading black-23.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.6 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting python-dateutil>=2.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting tzlocal>=2.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading tzlocal-5.0.1-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |     Preparing wheel metadata: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting zulip>=0.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading zulip-0.8.2-py3-none-any.whl (273 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting pygments>=2.14.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting typing-extensions~=4.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading typing_extensions-4.5.0-py3-none-any.whl (27 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting pyperclip>=1.8.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading pyperclip-1.8.2.tar.gz (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |     Preparing wheel metadata: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting tzlocal>=2.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading tzlocal-5.0.1-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting pyperclip>=1.8.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading pyperclip-1.8.2.tar.gz (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting zulip>=0.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading zulip-0.8.2-py3-none-any.whl (273 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting urwid~=2.1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading urwid-2.1.2.tar.gz (634 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting lxml>=4.9.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading lxml-4.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.6 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting urwid~=2.1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading urwid-2.1.2.tar.gz (634 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting urwid~=2.1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading urwid-2.1.2.tar.gz (634 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting python-dateutil>=2.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting beautifulsoup4>=4.11.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading beautifulsoup4-4.12.2-py3-none-any.whl (142 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting zulip>=0.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading zulip-0.8.2-py3-none-any.whl (273 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting pyperclip>=1.8.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading pyperclip-1.8.2.tar.gz (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting typing-extensions~=4.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading typing_extensions-4.5.0-py3-none-any.whl (27 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting pytz>=2022.7.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting tzlocal>=2.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading tzlocal-5.0.1-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting beautifulsoup4>=4.11.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting beautifulsoup4>=4.11.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading beautifulsoup4-4.12.2-py3-none-any.whl (142 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting ruff==0.0.267\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading beautifulsoup4-4.12.2-py3-none-any.whl (142 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading ruff-0.0.267-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.5 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting lxml>=4.9.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading lxml-4.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.6 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting urwid~=2.1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading urwid-2.1.2.tar.gz (634 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting zulip>=0.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading zulip-0.8.2-py3-none-any.whl (273 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting lxml>=4.9.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading lxml-4.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.6 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting pygments>=2.14.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting typing-extensions~=4.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading typing_extensions-4.5.0-py3-none-any.whl (27 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting types-pytz\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading types_pytz-2023.3.0.0-py3-none-any.whl (4.7 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting typos~=1.14.9\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting soupsieve>1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting isort~=5.11.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading typos-1.14.12-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.0 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting lxml-stubs\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading isort-5.11.5-py3-none-any.whl (104 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading lxml_stubs-0.4.0-py3-none-any.whl (13 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting isort~=5.11.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting six>=1.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading isort-5.11.5-py3-none-any.whl (104 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting black~=23.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading black-23.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.6 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting codespell[toml]~=2.2.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading codespell-2.2.5-py3-none-any.whl (242 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting backports.zoneinfo\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting types-tzlocal\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading backports.zoneinfo-0.2.1-cp37-cp37m-manylinux1_x86_64.whl (70 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading types_tzlocal-5.0.1.0-py3-none-any.whl (2.7 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting black~=23.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading black-23.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.6 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting matrix-client\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading matrix_client-0.4.0-py2.py3-none-any.whl (43 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting types-pygments\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading types_Pygments-2.15.0.1-py3-none-any.whl (16 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting requests[security]>=0.12.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting typos~=1.14.9\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading typos-1.14.12-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.0 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting click\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting distro\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading distro-1.8.0-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting mypy~=1.3.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading mypy-1.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.9 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting charset-normalizer<4,>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting idna<4,>=2.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting soupsieve>1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting certifi>=2017.4.17\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting pathspec>=0.9.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting mypy-extensions>=0.4.3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting packaging>=22.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting importlib-metadata\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting click>=8.0.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting types-python-dateutil\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting zipp>=0.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading types_python_dateutil-2.8.19.13-py3-none-any.whl (9.2 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting typed-ast>=1.4.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading typed_ast-1.5.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (843 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting types-requests\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading types_requests-2.31.0.1-py3-none-any.whl (14 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting ruff==0.0.267\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading ruff-0.0.267-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.5 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Using legacy 'setup.py install' for pyperclip, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Using legacy 'setup.py install' for urwid, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Building wheels for collected packages: zulip-term, urwid-readline\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Building wheel for zulip-term (PEP 517): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting soupsieve>1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting tomli>=1.1.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting platformdirs>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting typed-ast<2,>=1.4.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading typed_ast-1.5.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (843 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting importlib-metadata\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Building wheel for zulip-term (PEP 517): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Created wheel for zulip-term: filename=zulip_term-0.7.0+git-py3-none-any.whl size=162043 sha256=6f1a08ccfa54d67fa3f01efb1f4ff3b904a584daa5e296704b536f04d10ccb69\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/93/65/b7/feb3396c849809210a0f7b160f15987a77f432d947e0979423\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Building wheel for urwid-readline (PEP 517): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting mypy-extensions>=1.0.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting typos~=1.14.9\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading typos-1.14.12-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.0 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting platformdirs>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading platformdirs-3.7.0-py3-none-any.whl (16 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting tomli>=1.1.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading platformdirs-3.6.0-py3-none-any.whl (16 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading platformdirs-3.5.3-py3-none-any.whl (15 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Building wheel for urwid-readline (PEP 517): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting six>=1.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Created wheel for urwid-readline: filename=urwid_readline-0.13-py3-none-any.whl size=7550 sha256=41477c191926e86fdf570bde0837da6643c5c19032ce74f446cd1e5c3ee2fa6a\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/67/54/48/d63c65f1b0f25d47d10c1c062bc73d81b81ee2c25f76efe9c1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Successfully built zulip-term urwid-readline\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading platformdirs-3.5.2-py3-none-any.whl (15 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting ruff==0.0.267\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading ruff-0.0.267-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.5 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting codespell[toml]~=2.2.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting backports.zoneinfo\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading codespell-2.2.5-py3-none-any.whl (242 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading backports.zoneinfo-0.2.1-cp37-cp37m-manylinux1_x86_64.whl (70 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Installing collected packages: zipp, urllib3, typing-extensions, idna, charset-normalizer, certifi, requests, importlib-metadata, urwid, soupsieve, six, matrix-client, distro, click, backports.zoneinfo, zulip, urwid-readline, tzlocal, pytz, python-dateutil, pyperclip, pygments, lxml, beautifulsoup4, zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting six>=1.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting soupsieve>1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting requests[security]>=0.12.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting backports.zoneinfo\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading backports.zoneinfo-0.2.1-cp37-cp37m-manylinux1_x86_64.whl (70 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting mypy-extensions>=0.4.3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting soupsieve>1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting click\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting distro\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting requests[security]>=0.12.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading distro-1.8.0-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting matrix-client\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading matrix_client-0.4.0-py2.py3-none-any.whl (43 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting distro\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading distro-1.8.0-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting packaging>=22.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |     Running setup.py install for urwid: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting typed-ast>=1.4.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting matrix-client\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading matrix_client-0.4.0-py2.py3-none-any.whl (43 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading typed_ast-1.5.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (843 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting click>=8.0.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting mypy-extensions>=0.4.3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting packaging>=22.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting idna<4,>=2.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting tomli>=1.1.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting tomli>=1.1.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting pathspec>=0.9.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting platformdirs>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting pathspec>=0.9.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting charset-normalizer<4,>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting click>=8.0.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting charset-normalizer<4,>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting idna<4,>=2.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting typed-ast>=1.4.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading typed_ast-1.5.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (843 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting certifi>=2017.4.17\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting platformdirs>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting importlib-metadata\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting certifi>=2017.4.17\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting platformdirs>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading platformdirs-3.7.0-py3-none-any.whl (16 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading platformdirs-3.6.0-py3-none-any.whl (16 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting importlib-metadata\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading platformdirs-3.5.3-py3-none-any.whl (15 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting importlib-metadata\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting zipp>=0.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |     Running setup.py install for urwid: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading platformdirs-3.5.2-py3-none-any.whl (15 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting platformdirs>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading platformdirs-3.7.0-py3-none-any.whl (16 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading platformdirs-3.6.0-py3-none-any.whl (16 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading platformdirs-3.5.3-py3-none-any.whl (15 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting zipp>=0.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting six>=1.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading platformdirs-3.5.2-py3-none-any.whl (15 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Using legacy 'setup.py install' for pyperclip, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Using legacy 'setup.py install' for urwid, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Building wheels for collected packages: urwid-readline, zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Building wheel for urwid-readline (PEP 517): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting backports.zoneinfo\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading backports.zoneinfo-0.2.1-cp37-cp37m-manylinux1_x86_64.whl (70 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting six>=1.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting backports.zoneinfo\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading backports.zoneinfo-0.2.1-cp37-cp37m-manylinux1_x86_64.whl (70 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting requests[security]>=0.12.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting types-docutils\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading types_docutils-0.20.0.1-py3-none-any.whl (17 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting matrix-client\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Building wheel for urwid-readline (PEP 517): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Created wheel for urwid-readline: filename=urwid_readline-0.13-py3-none-any.whl size=7550 sha256=2dd62039d8ebe046cd1eb4d8728d448ad2267b62281da164cdda5456fb67ce30\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting distro\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/67/54/48/d63c65f1b0f25d47d10c1c062bc73d81b81ee2c25f76efe9c1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Building wheel for zulip-term (PEP 517): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading matrix_client-0.4.0-py2.py3-none-any.whl (43 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading distro-1.8.0-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting matrix-client\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading matrix_client-0.4.0-py2.py3-none-any.whl (43 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting types-setuptools\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading types_setuptools-68.0.0.0-py3-none-any.whl (44 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |     Running setup.py install for pyperclip: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting requests[security]>=0.12.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Collecting types-urllib3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Downloading types_urllib3-1.26.25.13-py3-none-any.whl (15 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting distro\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Using legacy 'setup.py install' for pyperclip, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Using legacy 'setup.py install' for urwid, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Building wheels for collected packages: urwid-readline, zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Building wheel for urwid-readline (PEP 517): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading distro-1.8.0-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Building wheel for zulip-term (PEP 517): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Created wheel for zulip-term: filename=zulip_term-0.7.0+git-py3-none-any.whl size=162043 sha256=ceccb59f5d003e4d9b84d65b7561263eff3da59ed161b622a5a4d76ae5ae73ba\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/93/65/b7/feb3396c849809210a0f7b160f15987a77f432d947e0979423\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Successfully built urwid-readline zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   |     Running setup.py install for pyperclip: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting charset-normalizer<4,>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Building wheel for urwid-readline (PEP 517): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Created wheel for urwid-readline: filename=urwid_readline-0.13-py3-none-any.whl size=7550 sha256=2dd62039d8ebe046cd1eb4d8728d448ad2267b62281da164cdda5456fb67ce30\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/67/54/48/d63c65f1b0f25d47d10c1c062bc73d81b81ee2c25f76efe9c1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting certifi>=2017.4.17\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Building wheel for zulip-term (PEP 517): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Installing collected packages: zipp, urllib3, typing-extensions, idna, charset-normalizer, certifi, requests, importlib-metadata, urwid, soupsieve, six, matrix-client, distro, click, backports.zoneinfo, zulip, urwid-readline, tzlocal, typed-ast, tomli, pytz, python-dateutil, pyperclip, pygments, platformdirs, pathspec, packaging, mypy-extensions, lxml, codespell, beautifulsoup4, zulip-term, typos, ruff, isort, black\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting idna<4,>=2.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting charset-normalizer<4,>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting certifi>=2017.4.17\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Building wheel for zulip-term (PEP 517): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Created wheel for zulip-term: filename=zulip_term-0.7.0+git-py3-none-any.whl size=162043 sha256=e5d20c5163e65e886036540de977efb12116c4d036a698815d3a694d4b90dfb3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/93/65/b7/feb3396c849809210a0f7b160f15987a77f432d947e0979423\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Successfully built urwid-readline zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |     Running setup.py install for urwid: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting zipp>=0.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting idna<4,>=2.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Using legacy 'setup.py install' for pyperclip, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Using legacy 'setup.py install' for urwid, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Building wheels for collected packages: urwid-readline, zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Building wheel for urwid-readline (PEP 517): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Installing collected packages: zipp, urllib3, typing-extensions, idna, charset-normalizer, certifi, requests, importlib-metadata, urwid, soupsieve, six, matrix-client, distro, click, backports.zoneinfo, zulip, urwid-readline, tzlocal, types-urllib3, types-setuptools, types-pytz, types-docutils, typed-ast, tomli, pytz, python-dateutil, pyperclip, pygments, mypy-extensions, lxml, beautifulsoup4, zulip-term, types-tzlocal, types-requests, types-python-dateutil, types-pygments, mypy, lxml-stubs\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting zipp>=0.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Using legacy 'setup.py install' for pyperclip, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Using legacy 'setup.py install' for urwid, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Building wheels for collected packages: urwid-readline, zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Building wheel for urwid-readline (PEP 517): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Building wheel for urwid-readline (PEP 517): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Created wheel for urwid-readline: filename=urwid_readline-0.13-py3-none-any.whl size=7550 sha256=7a6394540cce488f88b49d639ecea0e7145ed6c4b3b12f6af8d7ce7ea433c77b\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/67/54/48/d63c65f1b0f25d47d10c1c062bc73d81b81ee2c25f76efe9c1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Building wheel for zulip-term (PEP 517): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |     Running setup.py install for urwid: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Successfully installed backports.zoneinfo-0.2.1 beautifulsoup4-4.12.2 certifi-2023.5.7 charset-normalizer-3.1.0 click-8.1.3 distro-1.8.0 idna-3.4 importlib-metadata-6.7.0 lxml-4.9.2 matrix-client-0.4.0 pygments-2.15.1 pyperclip-1.8.2 python-dateutil-2.8.2 pytz-2023.3 requests-2.31.0 six-1.16.0 soupsieve-2.4.1 typing-extensions-4.5.0 tzlocal-5.0.1 urllib3-1.26.16 urwid-2.1.2 urwid-readline-0.13 zipp-3.15.0 zulip-0.8.2 zulip-term-0.7.0+git\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Building wheel for urwid-readline (PEP 517): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Created wheel for urwid-readline: filename=urwid_readline-0.13-py3-none-any.whl size=7550 sha256=7a6394540cce488f88b49d639ecea0e7145ed6c4b3b12f6af8d7ce7ea433c77b\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/67/54/48/d63c65f1b0f25d47d10c1c062bc73d81b81ee2c25f76efe9c1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Building wheel for zulip-term (PEP 517): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Building wheel for zulip-term (PEP 517): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Created wheel for zulip-term: filename=zulip_term-0.7.0+git-py3-none-any.whl size=162043 sha256=8521a7510ac8a6c9731b40a7eb3e41f3dc725a383fcce25e5cc4567889b18bcc\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/93/65/b7/feb3396c849809210a0f7b160f15987a77f432d947e0979423\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Successfully built urwid-readline zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |     Running setup.py install for urwid: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2705  Success - Main Minimal install\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Installing collected packages: zipp, urllib3, typing-extensions, idna, charset-normalizer, certifi, requests, importlib-metadata, urwid, soupsieve, six, matrix-client, distro, click, backports.zoneinfo, zulip, urwid-readline, tzlocal, typed-ast, tomli, pytz, python-dateutil, pyperclip, pygments, platformdirs, pathspec, packaging, mypy-extensions, lxml, codespell, beautifulsoup4, zulip-term, typos, ruff, isort, black\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Building wheel for zulip-term (PEP 517): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Created wheel for zulip-term: filename=zulip_term-0.7.0+git-py3-none-any.whl size=162043 sha256=8521a7510ac8a6c9731b40a7eb3e41f3dc725a383fcce25e5cc4567889b18bcc\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/93/65/b7/feb3396c849809210a0f7b160f15987a77f432d947e0979423\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Successfully built urwid-readline zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ] \u2b50 Run Main Run lint-hotkeys\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Installing collected packages: zipp, urllib3, typing-extensions, idna, charset-normalizer, certifi, requests, importlib-metadata, urwid, soupsieve, six, matrix-client, distro, click, backports.zoneinfo, zulip, urwid-readline, tzlocal, typed-ast, tomli, pytz, python-dateutil, pyperclip, pygments, platformdirs, pathspec, packaging, mypy-extensions, lxml, codespell, beautifulsoup4, zulip-term, typos, ruff, isort, black\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |     Running setup.py install for urwid: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |     Running setup.py install for urwid: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |     Running setup.py install for pyperclip: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |     Running setup.py install for urwid: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | No hotkeys linting errors\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | hotkeys.md file already in sync with config/keys.py\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2705  Success - Main Run lint-hotkeys\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   |     Running setup.py install for pyperclip: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ] \u2b50 Run Post actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |     Running setup.py install for pyperclip: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |     Running setup.py install for urwid: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   |     Running setup.py install for pyperclip: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::paths for caching are /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.cache/pip'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Cache Paths:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.cache/pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Archive Path: /tmp/97783c26-2146-4d1f-a145-7afb7eef0187/cache.tzst\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal --files-from manifest.txt --use-compress-program zstdmt\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |     Running setup.py install for urwid: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::File Size: 11845063\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Reserving Cache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/caches\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Saving Cache (ID: 1)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Upload cache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/caches/1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Upload concurrency: 4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Upload chunk size: 33554432\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Awaiting all uploads\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Uploading chunk of size 11845063 bytes at offset 0 with content range: bytes 0-11845062/*\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Commiting cache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Cache Size: ~11 MB (11845063 B)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/caches/1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Cache saved successfully\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   | Cache saved with the key: setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ]   \u2705  Success - Post actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |     Running setup.py install for pyperclip: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   |     Running setup.py install for pyperclip: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |     Running setup.py install for pyperclip: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Successfully installed backports.zoneinfo-0.2.1 beautifulsoup4-4.12.2 black-23.3.0 certifi-2023.5.7 charset-normalizer-3.1.0 click-8.1.3 codespell-2.2.5 distro-1.8.0 idna-3.4 importlib-metadata-6.7.0 isort-5.11.5 lxml-4.9.2 matrix-client-0.4.0 mypy-extensions-1.0.0 packaging-23.1 pathspec-0.11.1 platformdirs-3.5.1 pygments-2.15.1 pyperclip-1.8.2 python-dateutil-2.8.2 pytz-2023.3 requests-2.31.0 ruff-0.0.267 six-1.16.0 soupsieve-2.4.1 tomli-2.0.1 typed-ast-1.5.4 typing-extensions-4.5.0 typos-1.14.12 tzlocal-5.0.1 urllib3-1.26.16 urwid-2.1.2 urwid-readline-0.13 zipp-3.15.0 zulip-0.8.2 zulip-term-0.7.0+git\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   |     Running setup.py install for pyperclip: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2705  Success - Main Install with linting tools\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ] \u2b50 Run Main Check spelling\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | Successfully installed backports.zoneinfo-0.2.1 beautifulsoup4-4.12.2 black-23.3.0 certifi-2023.5.7 charset-normalizer-3.1.0 click-8.1.3 codespell-2.2.5 distro-1.8.0 idna-3.4 importlib-metadata-6.7.0 isort-5.11.5 lxml-4.9.2 matrix-client-0.4.0 mypy-extensions-1.0.0 packaging-23.1 pathspec-0.11.1 platformdirs-3.5.1 pygments-2.15.1 pyperclip-1.8.2 python-dateutil-2.8.2 pytz-2023.3 requests-2.31.0 ruff-0.0.267 six-1.16.0 soupsieve-2.4.1 tomli-2.0.1 typed-ast-1.5.4 typing-extensions-4.5.0 typos-1.14.12 tzlocal-5.0.1 urllib3-1.26.16 urwid-2.1.2 urwid-readline-0.13 zipp-3.15.0 zulip-0.8.2 zulip-term-0.7.0+git\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Successfully installed backports.zoneinfo-0.2.1 beautifulsoup4-4.12.2 certifi-2023.5.7 charset-normalizer-3.1.0 click-8.1.3 distro-1.8.0 idna-3.4 importlib-metadata-6.7.0 lxml-4.9.2 lxml-stubs-0.4.0 matrix-client-0.4.0 mypy-1.3.0 mypy-extensions-1.0.0 pygments-2.15.1 pyperclip-1.8.2 python-dateutil-2.8.2 pytz-2023.3 requests-2.31.0 six-1.16.0 soupsieve-2.4.1 tomli-2.0.1 typed-ast-1.5.4 types-docutils-0.20.0.1 types-pygments-2.15.0.1 types-python-dateutil-2.8.19.13 types-pytz-2023.3.0.0 types-requests-2.31.0.1 types-setuptools-68.0.0.0 types-tzlocal-5.0.1.0 types-urllib3-1.26.25.13 typing-extensions-4.5.0 tzlocal-5.0.1 urllib3-1.26.16 urwid-2.1.2 urwid-readline-0.13 zipp-3.15.0 zulip-0.8.2 zulip-term-0.7.0+git\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2705  Success - Main Install with linting tools\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2705  Success - Main Install with type-checking tools\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | Successfully installed backports.zoneinfo-0.2.1 beautifulsoup4-4.12.2 black-23.3.0 certifi-2023.5.7 charset-normalizer-3.1.0 click-8.1.3 codespell-2.2.5 distro-1.8.0 idna-3.4 importlib-metadata-6.7.0 isort-5.11.5 lxml-4.9.2 matrix-client-0.4.0 mypy-extensions-1.0.0 packaging-23.1 pathspec-0.11.1 platformdirs-3.5.1 pygments-2.15.1 pyperclip-1.8.2 python-dateutil-2.8.2 pytz-2023.3 requests-2.31.0 ruff-0.0.267 six-1.16.0 soupsieve-2.4.1 tomli-2.0.1 typed-ast-1.5.4 typing-extensions-4.5.0 typos-1.14.12 tzlocal-5.0.1 urllib3-1.26.16 urwid-2.1.2 urwid-readline-0.13 zipp-3.15.0 zulip-0.8.2 zulip-term-0.7.0+git\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ] \u2b50 Run Main Check code & tests meet black standards\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2705  Success - Main Install with linting tools\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ] \u2b50 Run Main Run mypy\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ] \u2b50 Run Main Run ruff\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Hotkeys linting & docs sync check      ] \ud83c\udfc1  Job succeeded\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Running mypy for `zulipterminal`.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2705  Success - Main Run ruff\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Spellchecker codespell passed with no errors.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | Spellchecker typos passed with no errors.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | All files appear to have correct spelling.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2705  Success - Main Check spelling\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ] \u2b50 Run Post actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ] \u2b50 Run Post actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | All done! \u2728 \ud83c\udf70 \u2728\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | 76 files would be left unchanged.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2705  Success - Main Check code & tests meet black standards\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::paths for caching are /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.cache/pip'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Cache Paths:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.cache/pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Archive Path: /tmp/de94e1a0-7597-45af-a0c9-9cd7694cdabd/cache.tzst\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal --files-from manifest.txt --use-compress-program zstdmt\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::paths for caching are /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::File Size: 26536932\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Reserving Cache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/caches\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.cache/pip'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Cache Paths:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \ud83d\udea7  ::warning::Failed to save: {\"error\":\"already exist\"}\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.cache/pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Archive Path: /tmp/a28c9ec1-ebd5-42de-a2e4-0135e1150d03/cache.tzst\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal --files-from manifest.txt --use-compress-program zstdmt\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ]   \u2705  Success - Post actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::File Size: 26537743\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Reserving Cache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/caches\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \ud83d\udea7  ::warning::Failed to save: {\"error\":\"already exist\"}\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ]   \u2705  Success - Post actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ] \u2b50 Run Post actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov] \u2b50 Run Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2705  Success - Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::paths for caching are /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.cache/pip'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Cache Paths:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.cache/pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Archive Path: /tmp/12dfb07f-a594-41c3-8c0a-c67b61f50a27/cache.tzst\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal --files-from manifest.txt --use-compress-program zstdmt\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::File Size: 26543631\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Reserving Cache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/caches\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \ud83d\udea7  ::warning::Failed to save: {\"error\":\"already exist\"}\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ]   \u2705  Success - Post actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov] \u2b50 Run Main Install Python version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ] \u2b50 Run Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2705  Success - Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker cp src=/tmp/act-cache/98a8bb6b-149f-4279-a23f-fd53bdb03df9/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - PEP8 & more (ruff)                     ] \ud83c\udfc1  Job succeeded\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ] \u2b50 Run Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Spellcheck                             ] \ud83c\udfc1  Job succeeded\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2705  Success - Main actions/checkout@v3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ] \u2b50 Run Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/98a8bb6b-149f-4279-a23f-fd53bdb03df9/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ] \u2b50 Run Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/98a8bb6b-149f-4279-a23f-fd53bdb03df9/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Code formatting (black)                ] \ud83c\udfc1  Job succeeded\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2753  ::group::Installed versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::isExplicit: \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::explicit? false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Successfully set up CPython (3.7.11)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2753  ::endgroup::\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Search path '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2753  ::group::Installed versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::isExplicit: \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::explicit? false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::evaluating 6 versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::matched: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Successfully set up CPython (3.7.11)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2753  ::endgroup::\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Search path '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::OS Name: Ubuntu, Version: 20.04\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | [command]/opt/hostedtoolcache/Python/3.7.11/x64/bin/pip cache dir\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::OS Name: Ubuntu, Version: 20.04\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | [command]/opt/hostedtoolcache/Python/3.7.11/x64/bin/pip cache dir\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::global cache directory path is /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Resolved Keys:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::[\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\",\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::global cache directory path is /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Resolved Keys:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::[\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\",\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/cache?keys=setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822%252Csetup-python-Linux-20.04-Ubuntu-python-3.7.11-pip&version=79a244514713d0ea96d5d8aab70186082a897848df6e845ec8308965d2f82f4f\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/cache?keys=setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822%252Csetup-python-Linux-20.04-Ubuntu-python-3.7.11-pip&version=79a244514713d0ea96d5d8aab70186082a897848df6e845ec8308965d2f82f4f\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2699  ***\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Cache Result:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::{\"archiveLocation\":\"***\",\"cacheKey\":\"setup-python-linux-20.04-ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\",\"result\":\"hit\"}\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Archive Path: /tmp/119254e8-d051-4149-a1a8-05c4fa3d4451/cache.tzst\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Use Azure SDK: true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Download concurrency: 8\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Request timeout (ms): 30000\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Cache segment download timeout mins env var: undefined\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udcac  ::debug::Segment download timeout (ms): 3600000\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2699  ***\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Cache Result:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::{\"archiveLocation\":\"***\",\"cacheKey\":\"setup-python-linux-20.04-ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\",\"result\":\"hit\"}\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Archive Path: /tmp/c6c0efb2-008f-4953-af49-8d88e2b0b500/cache.tzst\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Use Azure SDK: true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Download concurrency: 8\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Request timeout (ms): 30000\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Cache segment download timeout mins env var: undefined\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Segment download timeout (ms): 3600000\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Cache Size: ~11 MB (11845063 B)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | [command]/usr/bin/tar -xf /tmp/119254e8-d051-4149-a1a8-05c4fa3d4451/cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal --use-compress-program unzstd\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Cache Size: ~11 MB (11845063 B)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2753  ::group::Installed versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::isExplicit: \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::explicit? false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::explicit? true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | [command]/usr/bin/tar -xf /tmp/c6c0efb2-008f-4953-af49-8d88e2b0b500/cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal --use-compress-program unzstd\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Successfully set up CPython (3.7.11)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2753  ::endgroup::\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Search path '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/setup.py\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Cache restored successfully\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Cache restored from key: setup-python-linux-20.04-ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Cache restored successfully\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Cache restored from key: setup-python-linux-20.04-ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2705  Success - Main Install Python version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2705  Success - Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::OS Name: Ubuntu, Version: 20.04\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | [command]/opt/hostedtoolcache/Python/3.7.11/x64/bin/pip cache dir\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2699  ::set-output:: python-version=3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2699  ::set-output:: cache-hit=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2699  ::set-output:: python-version=3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2699  ::set-output:: cache-hit=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::global cache directory path is /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Resolved Keys:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::[\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\",\"setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/cache?keys=setup-python-Linux-20.04-Ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822%252Csetup-python-Linux-20.04-Ubuntu-python-3.7.11-pip&version=79a244514713d0ea96d5d8aab70186082a897848df6e845ec8308965d2f82f4f\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2699  ***\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Cache Result:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::{\"archiveLocation\":\"***\",\"cacheKey\":\"setup-python-linux-20.04-ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\",\"result\":\"hit\"}\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Archive Path: /tmp/e00cdd21-5dd8-44fc-9ad8-e2473dc46ffe/cache.tzst\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Use Azure SDK: true\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Download concurrency: 8\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Request timeout (ms): 30000\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Cache segment download timeout mins env var: undefined\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udcac  ::debug::Segment download timeout (ms): 3600000\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Cache Size: ~11 MB (11845063 B)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | [command]/usr/bin/tar -xf /tmp/e00cdd21-5dd8-44fc-9ad8-e2473dc46ffe/cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal --use-compress-program unzstd\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Cache restored successfully\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Cache restored from key: setup-python-linux-20.04-ubuntu-python-3.7.11-pip-1dad331f71f567bd5b8b9590f27dc23dbbc90da48866910c6106d2fba8a78822\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2705  Success - Main actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov] \u2b50 Run Main Output Python version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ] \u2b50 Run Main Minimal install\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2699  ::set-output:: python-version=3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2699  ::set-output:: cache-hit=false\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Python 3.7.11\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2705  Success - Main Output Python version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ] \u2b50 Run Main Install with linting tools\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov] \u2b50 Run Main Upgrade pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |     Preparing wheel metadata: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |     Preparing wheel metadata: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting python-dateutil>=2.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting zulip>=0.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached zulip-0.8.2-py3-none-any.whl (273 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting urwid-readline>=0.13\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached urwid_readline-0.13-py3-none-any.whl\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |     Preparing wheel metadata: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting urwid~=2.1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached urwid-2.1.2.tar.gz (634 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Installing collected packages: pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Attempting uninstall: pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     Found existing installation: pip 21.2.4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     Uninstalling pip-21.2.4:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |     Preparing wheel metadata: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting python-dateutil>=2.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting pyperclip>=1.8.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached pyperclip-1.8.2.tar.gz (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |       Successfully uninstalled pip-21.2.4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting pytz>=2022.7.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting lxml>=4.9.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached lxml-4.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.6 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting urwid~=2.1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached urwid-2.1.2.tar.gz (634 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting lxml>=4.9.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached lxml-4.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.6 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting tzlocal>=2.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached tzlocal-5.0.1-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting beautifulsoup4>=4.11.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached beautifulsoup4-4.12.2-py3-none-any.whl (142 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting typing-extensions~=4.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached typing_extensions-4.5.0-py3-none-any.whl (27 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting pyperclip>=1.8.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached pyperclip-1.8.2.tar.gz (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting tzlocal>=2.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached tzlocal-5.0.1-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting beautifulsoup4>=4.11.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached beautifulsoup4-4.12.2-py3-none-any.whl (142 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting pygments>=2.14.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting soupsieve>1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting typing-extensions~=4.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached typing_extensions-4.5.0-py3-none-any.whl (27 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting six>=1.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting urwid-readline>=0.13\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached urwid_readline-0.13-py3-none-any.whl\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting zulip>=0.8.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached zulip-0.8.2-py3-none-any.whl (273 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting backports.zoneinfo\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Successfully installed pip-23.1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached backports.zoneinfo-0.2.1-cp37-cp37m-manylinux1_x86_64.whl (70 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting matrix-client\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2705  Success - Main Upgrade pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached matrix_client-0.4.0-py2.py3-none-any.whl (43 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting pygments>=2.14.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting click\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached click-8.1.3-py3-none-any.whl (96 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting distro\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached distro-1.8.0-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting pytz>=2022.7.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting requests[security]>=0.12.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached requests-2.31.0-py3-none-any.whl (62 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting isort~=5.11.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading isort-5.11.5-py3-none-any.whl (104 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov] \u2b50 Run Main Ensure regular package installs from checkout\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting charset-normalizer<4,>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting black~=23.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading black-23.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.6 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached urllib3-2.0.3-py3-none-any.whl (123 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting certifi>=2017.4.17\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached certifi-2023.5.7-py3-none-any.whl (156 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting idna<4,>=2.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached idna-3.4-py3-none-any.whl (61 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting importlib-metadata\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting zipp>=0.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Using cached urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Using legacy 'setup.py install' for pyperclip, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Using legacy 'setup.py install' for urwid, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Building wheels for collected packages: zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Building wheel for zulip-term (PEP 517): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Building wheel for zulip-term (PEP 517): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Created wheel for zulip-term: filename=zulip_term-0.7.0+git-py3-none-any.whl size=162043 sha256=7407f8791d4d941aa391be88f17d52a722d822cf2b213fd2b4f576f732502d24\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/93/65/b7/feb3396c849809210a0f7b160f15987a77f432d947e0979423\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Successfully built zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Installing collected packages: zipp, urllib3, typing-extensions, idna, charset-normalizer, certifi, requests, importlib-metadata, urwid, soupsieve, six, matrix-client, distro, click, backports.zoneinfo, zulip, urwid-readline, tzlocal, pytz, python-dateutil, pyperclip, pygments, lxml, beautifulsoup4, zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting ruff==0.0.267\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading ruff-0.0.267-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.5 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |     Running setup.py install for urwid: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting codespell[toml]~=2.2.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading codespell-2.2.5-py3-none-any.whl (242 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting typos~=1.14.9\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading typos-1.14.12-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.0 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting soupsieve>1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |     Running setup.py install for urwid: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting typed-ast>=1.4.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading typed_ast-1.5.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (843 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting pathspec>=0.9.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting click>=8.0.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached click-8.1.3-py3-none-any.whl (96 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting mypy-extensions>=0.4.3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting tomli>=1.1.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting packaging>=22.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting platformdirs>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |     Running setup.py install for pyperclip: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting importlib-metadata\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Preparing metadata (pyproject.toml): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting platformdirs>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading platformdirs-3.7.0-py3-none-any.whl (16 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading platformdirs-3.6.0-py3-none-any.whl (16 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading platformdirs-3.5.3-py3-none-any.whl (15 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   |     Running setup.py install for pyperclip: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading platformdirs-3.5.2-py3-none-any.whl (15 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting six>=1.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting urwid~=2.1.2 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached urwid-2.1.2.tar.gz (634 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting backports.zoneinfo\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached backports.zoneinfo-0.2.1-cp37-cp37m-manylinux1_x86_64.whl (70 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting matrix-client\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached matrix_client-0.4.0-py2.py3-none-any.whl (43 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting distro\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached distro-1.8.0-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting requests[security]>=0.12.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached requests-2.31.0-py3-none-any.whl (62 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting idna<4,>=2.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached idna-3.4-py3-none-any.whl (61 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting certifi>=2017.4.17\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached certifi-2023.5.7-py3-none-any.whl (156 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached urllib3-2.0.3-py3-none-any.whl (123 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Success: no issues found in 38 source files\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Running mypy for `tests`.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | Successfully installed backports.zoneinfo-0.2.1 beautifulsoup4-4.12.2 certifi-2023.5.7 charset-normalizer-3.1.0 click-8.1.3 distro-1.8.0 idna-3.4 importlib-metadata-6.7.0 lxml-4.9.2 matrix-client-0.4.0 pygments-2.15.1 pyperclip-1.8.2 python-dateutil-2.8.2 pytz-2023.3 requests-2.31.0 six-1.16.0 soupsieve-2.4.1 typing-extensions-4.5.0 tzlocal-5.0.1 urllib3-1.26.16 urwid-2.1.2 urwid-readline-0.13 zipp-3.15.0 zulip-0.8.2 zulip-term-0.7.0+git\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting charset-normalizer<4,>=2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2705  Success - Main Minimal install\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting zipp>=0.5\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Collecting urllib3<3,>=1.21.1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Using cached urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Using legacy 'setup.py install' for pyperclip, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Using legacy 'setup.py install' for urwid, since package 'wheel' is not installed.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Building wheels for collected packages: zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Building wheel for zulip-term (PEP 517): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ] \u2b50 Run Main Run lint-docstring\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Building wheel for zulip-term (PEP 517): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Created wheel for zulip-term: filename=zulip_term-0.7.0+git-py3-none-any.whl size=162043 sha256=248e0e2133616a012956df3c7b99c2c0f2c1980a45386214f5583b42385e0520\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/93/65/b7/feb3396c849809210a0f7b160f15987a77f432d947e0979423\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Successfully built zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Installing collected packages: zipp, urllib3, typing-extensions, idna, charset-normalizer, certifi, requests, importlib-metadata, urwid, soupsieve, six, matrix-client, distro, click, backports.zoneinfo, zulip, urwid-readline, tzlocal, typed-ast, tomli, pytz, python-dateutil, pyperclip, pygments, platformdirs, pathspec, packaging, mypy-extensions, lxml, codespell, beautifulsoup4, zulip-term, typos, ruff, isort, black\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Preparing metadata (pyproject.toml): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |     Running setup.py install for urwid: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting zulip>=0.8.2 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached zulip-0.8.2-py3-none-any.whl (273 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting urwid-readline>=0.13 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached urwid_readline-0.13-py3-none-any.whl\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | developer-file-overview.md has been linted successfully.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting beautifulsoup4>=4.11.1 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached beautifulsoup4-4.12.2-py3-none-any.whl (142 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2705  Success - Main Run lint-docstring\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting lxml>=4.9.2 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached lxml-4.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (6.6 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ] \u2b50 Run Post actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting pygments>=2.14.0 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |     Running setup.py install for urwid: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting typing-extensions~=4.5.0 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached typing_extensions-4.5.0-py3-none-any.whl (27 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting python-dateutil>=2.8.2 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting pytz>=2022.7.1 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting tzlocal>=2.1 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached tzlocal-5.0.1-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting pyperclip>=1.8.1 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached pyperclip-1.8.2.tar.gz (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Success: no issues found in 25 source files\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Running mypy for `tools`.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | Success: no issues found in 11 source files\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2705  Success - Main Run mypy\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |     Running setup.py install for pyperclip: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::paths for caching are /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.cache/pip'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Cache Paths:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.cache/pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Archive Path: /tmp/1cb31bae-ed99-4b29-bf8d-c446d4ae266a/cache.tzst\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |     Running setup.py install for pyperclip: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal --files-from manifest.txt --use-compress-program zstdmt\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ] \u2b50 Run Post actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::File Size: 11843165\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Reserving Cache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/caches\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \ud83d\udea7  ::warning::Failed to save: {\"error\":\"already exist\"}\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ]   \u2705  Success - Post actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::paths for caching are /home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.cache/pip'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.cache/pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Cache Paths:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.cache/pip\"]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Archive Path: /tmp/95501387-58cc-480c-8cf5-03cb7aaec5c4/cache.tzst\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal --files-from manifest.txt --use-compress-program zstdmt\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::File Size: 24680616\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Reserving Cache\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:45749/_apis/artifactcache/caches\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \ud83d\udea7  ::warning::Failed to save: {\"error\":\"already exist\"}\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ]   \u2705  Success - Post actions/setup-python@v4\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Preparing metadata (pyproject.toml): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting soupsieve>1.2 (from beautifulsoup4>=4.11.1->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting six>=1.5 (from python-dateutil>=2.8.2->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting backports.zoneinfo (from tzlocal>=2.1->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached backports.zoneinfo-0.2.1-cp37-cp37m-manylinux1_x86_64.whl (70 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting requests[security]>=0.12.1 (from zulip>=0.8.2->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached requests-2.31.0-py3-none-any.whl (62 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting matrix-client (from zulip>=0.8.2->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached matrix_client-0.4.0-py2.py3-none-any.whl (43 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting distro (from zulip>=0.8.2->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached distro-1.8.0-py3-none-any.whl (20 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting click (from zulip>=0.8.2->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached click-8.1.3-py3-none-any.whl (96 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting charset-normalizer<4,>=2 (from requests[security]>=0.12.1->zulip>=0.8.2->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting idna<4,>=2.5 (from requests[security]>=0.12.1->zulip>=0.8.2->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached idna-3.4-py3-none-any.whl (61 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting urllib3<3,>=1.21.1 (from requests[security]>=0.12.1->zulip>=0.8.2->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached urllib3-2.0.3-py3-none-any.whl (123 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting certifi>=2017.4.17 (from requests[security]>=0.12.1->zulip>=0.8.2->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached certifi-2023.5.7-py3-none-any.whl (156 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Successfully installed backports.zoneinfo-0.2.1 beautifulsoup4-4.12.2 black-23.3.0 certifi-2023.5.7 charset-normalizer-3.1.0 click-8.1.3 codespell-2.2.5 distro-1.8.0 idna-3.4 importlib-metadata-6.7.0 isort-5.11.5 lxml-4.9.2 matrix-client-0.4.0 mypy-extensions-1.0.0 packaging-23.1 pathspec-0.11.1 platformdirs-3.5.1 pygments-2.15.1 pyperclip-1.8.2 python-dateutil-2.8.2 pytz-2023.3 requests-2.31.0 ruff-0.0.267 six-1.16.0 soupsieve-2.4.1 tomli-2.0.1 typed-ast-1.5.4 typing-extensions-4.5.0 typos-1.14.12 tzlocal-5.0.1 urllib3-1.26.16 urwid-2.1.2 urwid-readline-0.13 zipp-3.15.0 zulip-0.8.2 zulip-term-0.7.0+git\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting importlib-metadata (from click->zulip>=0.8.2->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting urllib3<3,>=1.21.1 (from requests[security]>=0.12.1->zulip>=0.8.2->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting zipp>=0.5 (from importlib-metadata->click->zulip>=0.8.2->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Using cached zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Building wheels for collected packages: zulip-term, pyperclip, urwid\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Building wheel for zulip-term (pyproject.toml): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | Usage:   \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   pip install [options] <requirement specifier> [package-index-options] ...\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   pip install [options] -r <requirements file> [package-index-options] ...\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   pip install [options] [-e] <vcs project url> ...\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   pip install [options] [-e] <local project path> ...\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   |   pip install [options] <archive url/path> ...\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   | no such option: --junitxml\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ]   \u274c  Failure - Main Install with linting tools\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Docstrings linting & docs sync check   ] \ud83c\udfc1  Job succeeded\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Building wheel for zulip-term (pyproject.toml): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Created wheel for zulip-term: filename=zulip_term-0.7.0+git-py3-none-any.whl size=162043 sha256=103d188ff9d44191a9ceeeba6b695ebbfd7b62045d6a356f558ea8518cbc5987\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/93/65/b7/feb3396c849809210a0f7b160f15987a77f432d947e0979423\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Building wheel for pyperclip (pyproject.toml): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Building wheel for pyperclip (pyproject.toml): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ] exitcode '2': failure\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Created wheel for pyperclip: filename=pyperclip-1.8.2-py3-none-any.whl size=11124 sha256=6ff74212a955b4a373aab99ae579dce80a879169e52835e469f0aa8730da3313\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/9f/18/84/8f69f8b08169c7bae2dde6bd7daf0c19fca8c8e500ee620a28\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Building wheel for urwid (pyproject.toml): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Building wheel for urwid (pyproject.toml): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Created wheel for urwid: filename=urwid-2.1.2-cp37-cp37m-linux_x86_64.whl size=263277 sha256=9894cf7d1a11138ab97c1dad3aa12391446a8eba61e0559465f967338ada2316\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/79/77/cf/cae9cf1cc3f1f777f9db531424bbd9e15aa38e4ca28dbe499e\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Successfully built zulip-term pyperclip urwid\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Installing collected packages: urwid, pytz, pyperclip, zipp, urwid-readline, urllib3, typing-extensions, soupsieve, six, pygments, lxml, idna, distro, charset-normalizer, certifi, backports.zoneinfo, tzlocal, requests, python-dateutil, importlib-metadata, beautifulsoup4, matrix-client, click, zulip, zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Type consistency (mypy)                ] \ud83c\udfc1  Job succeeded\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Successfully installed backports.zoneinfo-0.2.1 beautifulsoup4-4.12.2 certifi-2023.5.7 charset-normalizer-3.1.0 click-8.1.3 distro-1.8.0 idna-3.4 importlib-metadata-6.7.0 lxml-4.9.2 matrix-client-0.4.0 pygments-2.15.1 pyperclip-1.8.2 python-dateutil-2.8.2 pytz-2023.3 requests-2.31.0 six-1.16.0 soupsieve-2.4.1 typing-extensions-4.5.0 tzlocal-5.0.1 urllib3-1.26.16 urwid-2.1.2 urwid-readline-0.13 zipp-3.15.0 zulip-0.8.2 zulip-term-0.7.0+git\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | [notice] To update, run: pip install --upgrade pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2705  Success - Main Ensure regular package installs from checkout\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov] \u2b50 Run Main Install test dependencies\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Lint - Import order (isort)                   ] \ud83c\udfc1  Job failed\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Installing build dependencies: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Installing build dependencies: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Getting requirements to build wheel: started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Getting requirements to build wheel: finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Preparing metadata (pyproject.toml): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: urwid~=2.1.2 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip-term==0.7.0+git) (2.1.2)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: zulip>=0.8.2 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip-term==0.7.0+git) (0.8.2)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: urwid-readline>=0.13 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip-term==0.7.0+git) (0.13)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: beautifulsoup4>=4.11.1 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip-term==0.7.0+git) (4.12.2)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: lxml>=4.9.2 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip-term==0.7.0+git) (4.9.2)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: pygments>=2.14.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip-term==0.7.0+git) (2.15.1)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: typing-extensions~=4.5.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip-term==0.7.0+git) (4.5.0)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: python-dateutil>=2.8.2 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip-term==0.7.0+git) (2.8.2)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: pytz>=2022.7.1 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip-term==0.7.0+git) (2023.3)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: tzlocal>=2.1 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip-term==0.7.0+git) (5.0.1)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: pyperclip>=1.8.1 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip-term==0.7.0+git) (1.8.2)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting pytest~=7.2.0 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Downloading pytest-7.2.2-py3-none-any.whl (317 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 317.2/317.2 kB 4.5 MB/s eta 0:00:00\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting pytest-cov~=4.0.0 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Downloading pytest_cov-4.0.0-py3-none-any.whl (21 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting pytest-mock~=3.10.0 (from zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Downloading pytest_mock-3.10.0-py3-none-any.whl (9.3 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: soupsieve>1.2 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from beautifulsoup4>=4.11.1->zulip-term==0.7.0+git) (2.4.1)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting attrs>=19.2.0 (from pytest~=7.2.0->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 1.8 MB/s eta 0:00:00\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting iniconfig (from pytest~=7.2.0->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting packaging (from pytest~=7.2.0->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 1.4 MB/s eta 0:00:00\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting pluggy<2.0,>=0.12 (from pytest~=7.2.0->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest~=7.2.0->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting tomli>=1.0.0 (from pytest~=7.2.0->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: importlib-metadata>=0.12 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from pytest~=7.2.0->zulip-term==0.7.0+git) (6.7.0)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov~=4.0.0->zulip-term==0.7.0+git)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Downloading coverage-7.2.7-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (225 kB)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 225.6/225.6 kB 2.7 MB/s eta 0:00:00\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: six>=1.5 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from python-dateutil>=2.8.2->zulip-term==0.7.0+git) (1.16.0)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: backports.zoneinfo in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from tzlocal>=2.1->zulip-term==0.7.0+git) (0.2.1)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: requests[security]>=0.12.1 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip>=0.8.2->zulip-term==0.7.0+git) (2.31.0)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: matrix-client in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip>=0.8.2->zulip-term==0.7.0+git) (0.4.0)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: distro in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip>=0.8.2->zulip-term==0.7.0+git) (1.8.0)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: click in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from zulip>=0.8.2->zulip-term==0.7.0+git) (8.1.3)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: zipp>=0.5 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from importlib-metadata>=0.12->pytest~=7.2.0->zulip-term==0.7.0+git) (3.15.0)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests[security]>=0.12.1->zulip>=0.8.2->zulip-term==0.7.0+git) (3.1.0)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests[security]>=0.12.1->zulip>=0.8.2->zulip-term==0.7.0+git) (3.4)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests[security]>=0.12.1->zulip>=0.8.2->zulip-term==0.7.0+git) (1.26.16)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests[security]>=0.12.1->zulip>=0.8.2->zulip-term==0.7.0+git) (2023.5.7)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Building wheels for collected packages: zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Building wheel for zulip-term (pyproject.toml): started\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Building wheel for zulip-term (pyproject.toml): finished with status 'done'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Created wheel for zulip-term: filename=zulip_term-0.7.0+git-py3-none-any.whl size=162043 sha256=a5de6c2673d794bcb632074b8a0f45907e014d1197eb0d172a3af3e7698aa310\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/93/65/b7/feb3396c849809210a0f7b160f15987a77f432d947e0979423\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Successfully built zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Installing collected packages: tomli, packaging, iniconfig, exceptiongroup, coverage, pluggy, attrs, pytest, zulip-term, pytest-mock, pytest-cov\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |   Attempting uninstall: zulip-term\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     Found existing installation: zulip-term 0.7.0+git\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     Uninstalling zulip-term-0.7.0+git:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |       Successfully uninstalled zulip-term-0.7.0+git\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Successfully installed attrs-23.1.0 coverage-7.2.7 exceptiongroup-1.1.1 iniconfig-2.0.0 packaging-23.1 pluggy-1.2.0 pytest-7.2.2 pytest-cov-4.0.0 pytest-mock-3.10.0 tomli-2.0.1 zulip-term-0.7.0+git\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | [notice] To update, run: pip install --upgrade pip\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2705  Success - Main Install test dependencies\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov] \u2b50 Run Main Run tests with pytest\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ============================= test session starts ==============================\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | platform linux -- Python 3.7.11, pytest-7.2.2, pluggy-1.2.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal, configfile: pyproject.toml\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | plugins: cov-4.0.0, mock-3.10.0\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | collected 2567 items\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/cli/test_run.py .................................................. [  1%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ............                                                             [  2%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/config/test_color.py .                                             [  2%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/config/test_keys.py .............................................. [  4%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [  7%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [  9%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 12%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 15%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ...............................                                          [ 16%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/config/test_themes.py .................                            [ 17%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/core/test_core.py ................................................ [ 19%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ............                                                             [ 19%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/emoji_data/test_emoji_data.py ..                                   [ 19%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/helper/test_helper.py ............................................ [ 21%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ......................................                                   [ 22%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/model/test_model.py .............................................. [ 24%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 27%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 30%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 33%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 35%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 38%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 41%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 44%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 47%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 49%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 52%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | .................................................................        [ 55%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/platform_code/test_platform_code.py x............................. [ 56%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ......xxxxxxxxxxxxxxxx......                                             [ 57%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/server_url/test_server_url.py ..........                           [ 57%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/ui/test_ui.py .................................................... [ 59%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |                                                                          [ 59%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/ui/test_ui_tools.py .............................................. [ 61%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 64%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ..........................                                               [ 65%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/ui/test_utils.py ..........                                        [ 65%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/ui_tools/test_boxes.py ........................................... [ 67%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 70%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 73%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 76%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 78%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ..........................                                               [ 79%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/ui_tools/test_buttons.py ......................................... [ 81%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ..........................................................               [ 83%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/ui_tools/test_messages.py ........................................ [ 85%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 88%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 90%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | .......xx.........................                                       [ 92%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | tests/ui_tools/test_popups.py .......................................... [ 93%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ..................................s...s...s............................. [ 96%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ........................................................................ [ 99%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | .............                                                            [100%]\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/report.xml -\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Coverage XML written to file coverage.xml\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | \n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | =========================== short test summary info ============================\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify[WSL-True] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-X-x] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-X-spaced_text] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-X-single] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-X-double] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-spaced_title-x] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-spaced_title-spaced_text] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-spaced_title-single] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-spaced_title-double] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-single-x] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-single-spaced_text] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-single-single] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-single-double] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-double-x] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-double-spaced_text] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-double-single] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/platform_code/test_platform_code.py::test_notify_quotes[WSL-2-double-double] - WSL notify disabled\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/ui_tools/test_messages.py::TestMessageBox::test_transform_content[quoted level 1-3] - rendered_bug\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | XFAIL tests/ui_tools/test_messages.py::TestMessageBox::test_transform_content[quoted with links level 1-3-1] - rendered_bug\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | SKIPPED [3] tests/ui_tools/test_popups.py:768: button already selected\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | ================= 2545 passed, 3 skipped, 19 xfailed in 41.33s =================\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u2705  Success - Main Run tests with pytest\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov] \u2b50 Run Main Upload coverage to Codecov\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker cp src=/tmp/act-cache/98a8bb6b-149f-4279-a23f-fd53bdb03df9/act/codecov-codecov-action@v3/ dst=/var/run/act/actions/codecov-codecov-action@v3/\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v3/] user=0 workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v3/dist/index.js] user= workdir=\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Error: Cannot find module 'node:http'\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | Require stack:\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   | - /run/act/actions/codecov-codecov-action@v3/dist/index.js\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:889:15)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     at Function.Module._load (internal/modules/cjs/loader.js:745:27)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     at Module.require (internal/modules/cjs/loader.js:961:19)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     at require (internal/modules/cjs/helpers.js:92:18)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     at /run/act/actions/codecov-codecov-action@v3/webpack:/codecov-action/external node-commonjs \"node:http\":1:1\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     at /run/act/actions/codecov-codecov-action@v3/dist/index.js:24630:3\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     at Object.<anonymous> (/run/act/actions/codecov-codecov-action@v3/dist/index.js:24633:12)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     at Module._compile (internal/modules/cjs/loader.js:1072:14)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     at Object.Module._extensions..js (internal/modules/cjs/loader.js:1101:10)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   |     at Module.load (internal/modules/cjs/loader.js:937:32)\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov]   \u274c  Failure - Main Upload coverage to Codecov\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov] exitcode '1': failure\n[f4fe62bf-6e5c-4963-82bc-abacf76d6444/Install & test - CPython 3.7 (ubuntu), codecov] \ud83c\udfc1  Job failed\n",
        "stderr": "time=\"2023-07-01T14:12:00+02:00\" level=error msg=\"POST /_apis/artifactcache/caches: already exist\" module=artifactcache\ntime=\"2023-07-01T14:12:00+02:00\" level=error msg=\"POST /_apis/artifactcache/caches: already exist\" module=artifactcache\ntime=\"2023-07-01T14:12:01+02:00\" level=error msg=\"POST /_apis/artifactcache/caches: already exist\" module=artifactcache\ntime=\"2023-07-01T14:12:22+02:00\" level=error msg=\"POST /_apis/artifactcache/caches: already exist\" module=artifactcache\ntime=\"2023-07-01T14:12:23+02:00\" level=error msg=\"POST /_apis/artifactcache/caches: already exist\" module=artifactcache\nError: Job 'Lint - Import order (isort)' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/zulip-zulip-terminal/.github/workflows/lint-and-test-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "f4fe62bf-6e5c-4963-82bc-abacf76d6444",
        "build_tool": "pytest",
        "elapsed_time": 219.17319011688232
    }
}