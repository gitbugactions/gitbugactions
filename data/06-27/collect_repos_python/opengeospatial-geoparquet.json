{
    "repository": "opengeospatial/geoparquet",
    "stars": 549,
    "language": "python",
    "size": 211,
    "clone_url": "https://github.com/opengeospatial/geoparquet.git",
    "timestamp": "2023-07-01T16:40:43.824263Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ] \ud83d\ude80  Start image=crawlergpt:latest\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata] \ud83d\ude80  Start image=crawlergpt:latest\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/opengeospatial-geoparquet] user=0 workdir=\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/opengeospatial-geoparquet] user=0 workdir=\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ] \u2b50 Run Main actions/checkout@v2\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \u2705  Success - Main actions/checkout@v2\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ] \u2b50 Run Main Set up Python 3.8\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udc33  docker cp src=/tmp/act-cache/f0d2e84e-a042-471e-9b19-43fd4ddeeaa3/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata] \u2b50 Run Pre Install and configure Poetry\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2705  Success - Pre Install and configure Poetry\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata] \u2b50 Run Main actions/checkout@v2\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2705  Success - Main actions/checkout@v2\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata] \u2b50 Run Main Set up Python 3.8\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker cp src=/tmp/act-cache/f0d2e84e-a042-471e-9b19-43fd4ddeeaa3/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::isExplicit: \n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::explicit? false\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::explicit? true\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::explicit? true\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::explicit? true\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::explicit? true\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::explicit? true\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::explicit? true\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::matched: 3.8.11\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Successfully setup CPython (3.8.11)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \u2705  Success - Main Set up Python 3.8\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::isExplicit: \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::explicit? false\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::explicit? true\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::explicit? true\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::explicit? true\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::explicit? true\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::explicit? true\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::explicit? true\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::evaluating 6 versions\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::matched: 3.8.11\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Successfully setup CPython (3.8.11)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2705  Success - Main Set up Python 3.8\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2699  ::set-output:: python-version=3.8.11\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \u2699  ::set-output:: python-version=3.8.11\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata] \u2b50 Run Main Install and configure Poetry\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ] \u2b50 Run Main Install validator\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker cp src=/tmp/act-cache/f0d2e84e-a042-471e-9b19-43fd4ddeeaa3/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata] \u2b50 Run Main Install and configure Poetry\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Processing /tmp/558156d8-17ed-11ee-8a50-bb14de238602/opengeospatial-geoparquet/validator/python\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting jsonschema>=4.4\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting pyarrow>=7.0\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading pyarrow-12.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (39.0 MB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting fsspec>=2022.3\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading fsspec-2023.6.0-py3-none-any.whl (163 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting requests>=2.27\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting aiohttp>=3.8\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading aiohttp-3.8.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.0 MB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting click>=8.1\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting colorama>=0.4\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting frozenlist>=1.1.1\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading frozenlist-1.3.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (161 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting yarl<2.0,>=1.0\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading yarl-1.9.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (266 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting attrs>=17.3.0\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting charset-normalizer<4.0,>=2.0\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting multidict<7.0,>=4.5\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading multidict-6.0.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (121 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting aiosignal>=1.1.2\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading aiosignal-1.3.1-py3-none-any.whl (7.6 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting async-timeout<5.0,>=4.0.0a3\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading async_timeout-4.0.2-py3-none-any.whl (5.8 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting pkgutil-resolve-name>=1.3.10\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading pkgutil_resolve_name-1.3.10-py3-none-any.whl (4.7 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting importlib-resources>=1.4.0\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting zipp>=3.1.0\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting numpy>=1.16.6\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting idna<4,>=2.5\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting certifi>=2017.4.17\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Collecting urllib3<3,>=1.21.1\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Skipping wheel build for geoparquet-validator, due to binaries being disabled for it.\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Installing collected packages: zipp, multidict, idna, frozenlist, yarl, urllib3, pyrsistent, pkgutil-resolve-name, numpy, importlib-resources, charset-normalizer, certifi, attrs, async-timeout, aiosignal, requests, pyarrow, jsonschema, fsspec, colorama, click, aiohttp, geoparquet-validator\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |     Running setup.py install for geoparquet-validator: started\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |     Running setup.py install for geoparquet-validator: finished with status 'done'\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Successfully installed aiohttp-3.8.4 aiosignal-1.3.1 async-timeout-4.0.2 attrs-23.1.0 certifi-2023.5.7 charset-normalizer-3.1.0 click-8.1.3 colorama-0.4.6 frozenlist-1.3.3 fsspec-2023.6.0 geoparquet-validator-0.0.1 idna-3.4 importlib-resources-5.12.0 jsonschema-4.17.3 multidict-6.0.4 numpy-1.24.4 pkgutil-resolve-name-1.3.10 pyarrow-12.0.1 pyrsistent-0.19.3 requests-2.31.0 urllib3-2.0.3 yarl-1.9.2 zipp-3.15.0\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \u2705  Success - Main Install validator\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ] \u2b50 Run Main Run validator\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Retrieving Poetry metadata\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | # Welcome to Poetry!\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | This will download and install the latest version of Poetry,\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | a dependency and package manager for Python.\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | /home/runneradmin/.local/bin\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | You can uninstall at any time by executing this script with the --uninstall option,\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | and these changes will be reverted.\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Installing Poetry (1.5.1)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Installing Poetry (1.5.1): Creating environment\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Installing Poetry (1.5.1): Installing Poetry\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Installing Poetry (1.5.1): Creating script\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Installing Poetry (1.5.1): Done\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Poetry (1.5.1) is installed now. Great!\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | environment variable.\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | You can test that everything is set up by executing:\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | `poetry --version`\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \u001b[33mDone \u2705\u001b[0m\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2705  Success - Main Install and configure Poetry\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2705  Success - Main Install and configure Poetry\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata] \u2b50 Run Main Install scripts dependencies\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | examples/example.parquet\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | Traceback (most recent call last):\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   File \"/opt/hostedtoolcache/Python/3.8.11/x64/bin/geoparquet_validator\", line 33, in <module>\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |     sys.exit(load_entry_point('geoparquet-validator==0.0.1', 'console_scripts', 'geoparquet_validator')())\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   File \"/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/click/core.py\", line 1130, in __call__\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |     return self.main(*args, **kwargs)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   File \"/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/click/core.py\", line 1055, in main\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |     rv = self.invoke(ctx)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   File \"/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/click/core.py\", line 1404, in invoke\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |     return ctx.invoke(self.callback, **ctx.params)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   File \"/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/click/core.py\", line 760, in invoke\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |     return __callback(*args, **kwargs)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   File \"/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/geoparquet_validator/__init__.py\", line 56, in main\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |     schema = json.loads(schema_source.read_text())\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   File \"/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/pathlib.py\", line 1236, in read_text\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |     with self.open(mode='r', encoding=encoding, errors=errors) as f:\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   File \"/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/pathlib.py\", line 1222, in open\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |     return io.open(self, mode, buffering, encoding, errors, newline,\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |   File \"/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/pathlib.py\", line 1078, in _opener\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   |     return self._accessor.open(self, flags, mode)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   | FileNotFoundError: [Errno 2] No such file or directory: '/opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/geoparquet_validator/schema.json'\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ]   \u274c  Failure - Main Run validator\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Creating virtualenv geoparquet-scripts-QKrmQ6rc-py3.8 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ] exitcode '1': failure\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Installing dependencies from lock file\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Package operations: 35 installs, 1 update, 0 removals\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing click (8.1.3)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing six (1.16.0)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing attrs (22.1.0)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing certifi (2022.12.7)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing click-plugins (1.1.1)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing cligj (0.7.2)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing munch (2.5.0)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing numpy (1.23.5)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing pyparsing (3.0.9)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing python-dateutil (2.8.2)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing pytz (2022.6)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Updating setuptools (67.8.0 -> 65.6.3)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing zipp (3.11.0)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/validate-examples ] \ud83c\udfc1  Job failed\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing exceptiongroup (1.0.4)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing fiona (1.8.22)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing iniconfig (1.1.1)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing mypy-extensions (0.4.3)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing packaging (21.3)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing pyproj (3.4.0)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing pkgutil-resolve-name (1.3.10)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing pandas (1.5.2)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing pathspec (0.10.2)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing shapely (1.8.5.post1)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing importlib-resources (5.10.1)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing pyrsistent (0.19.2)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing platformdirs (2.6.0)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing tomli (2.0.1)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing pluggy (1.0.0)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing typing-extensions (4.4.0)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing black (22.10.0)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing geopandas (0.10.2)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing isort (5.10.1)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing jsonschema (4.17.3)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing pyarrow (7.0.0)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing pygeos (0.12.0)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   \u2022 Installing pytest (7.2.0)\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2705  Success - Main Install scripts dependencies\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata] \u2b50 Run Main Run scripts\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | ============================= test session starts ==============================\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | platform linux -- Python 3.8.11, pytest-7.2.0, pluggy-1.0.0 -- /home/runneradmin/.cache/pypoetry/virtualenvs/geoparquet-scripts-QKrmQ6rc-py3.8/bin/python\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | cachedir: .pytest_cache\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/opengeospatial-geoparquet/scripts\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | collecting ... collected 36 items\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_valid_schema[minimal] PASSED                   [  2%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_valid_schema[custom_key] PASSED                [  5%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_valid_schema[custom_key_column] PASSED         [  8%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_valid_schema[geometry_columns_multiple] PASSED [ 11%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_valid_schema[geometry_column_name] PASSED      [ 13%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_valid_schema[geometry_type_list] PASSED        [ 16%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_valid_schema[crs_null] PASSED                  [ 19%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_valid_schema[bbox_4_element] PASSED            [ 22%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_valid_schema[bbox_6_element] PASSED            [ 25%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_valid_schema[orientation] PASSED               [ 27%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_valid_schema[edges_planar] PASSED              [ 30%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_valid_schema[edges_spherical] PASSED           [ 33%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_valid_schema[epoch] PASSED                     [ 36%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[missing_version] PASSED         [ 38%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[bad_version] PASSED             [ 41%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[missing_primary_column] PASSED  [ 44%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[missing_columns] PASSED         [ 47%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[missing_columns_entry] PASSED   [ 50%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[missing_geometry_encoding] PASSED [ 52%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[missing_geometry_type] PASSED   [ 55%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[geometry_columns_invalid_object] PASSED [ 58%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[geometry_column_name_primary_empty] PASSED [ 61%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[geometry_column_name_empty] PASSED [ 63%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[encoding] PASSED                [ 66%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[geometry_type_string] PASSED    [ 69%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[geometry_type_nonexistent] PASSED [ 72%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[geometry_type_uniqueness] PASSED [ 75%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[geometry_type_z_missing_space] PASSED [ 77%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[crs_string] PASSED              [ 80%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[bbox_3_element] PASSED          [ 83%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[bbox_5_element] PASSED          [ 86%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[bbox_7_element] PASSED          [ 88%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[bbox_invalid_type] PASSED       [ 91%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[orientation] PASSED             [ 94%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[edges] PASSED                   [ 97%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | test_json_schema.py::test_invalid_schema[epoch_string] PASSED            [100%]\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | \n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/opengeospatial-geoparquet/scripts/report.xml -\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | ============================== 36 passed in 1.69s ==============================\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | /home/runneradmin/.cache/pypoetry/virtualenvs/geoparquet-scripts-QKrmQ6rc-py3.8/lib/python3.8/site-packages/geopandas/_compat.py:111: UserWarning: The Shapely GEOS version (3.10.3-CAPI-1.16.1) is incompatible with the GEOS version PyGEOS was compiled with (3.10.1-CAPI-1.16.0). Conversions between both will be slow.\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   warnings.warn(\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | Traceback (most recent call last):\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   File \"update_example_schemas.py\", line 55, in <module>\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |     main()\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   File \"update_example_schemas.py\", line 49, in main\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |     examples_dir = find_root_dir() / 'examples'\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |   File \"update_example_schemas.py\", line 17, in find_root_dir\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   |     raise ValueError(\"Could not find geoparquet folder\")\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   | ValueError: Could not find geoparquet folder\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u274c  Failure - Main Run scripts\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata] exitcode '1': failure\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata] \u2b50 Run Post Install and configure Poetry\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker cp src=/tmp/act-cache/f0d2e84e-a042-471e-9b19-43fd4ddeeaa3/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata]   \u2705  Success - Post Install and configure Poetry\n[040f6394-edaf-46d0-9950-0a7c327c0a70/test-json-metadata] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'test-json-metadata' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/opengeospatial-geoparquet/.github/workflows/scripts-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "040f6394-edaf-46d0-9950-0a7c327c0a70",
        "build_tool": "pytest",
        "elapsed_time": 214.50288009643555
    }
}