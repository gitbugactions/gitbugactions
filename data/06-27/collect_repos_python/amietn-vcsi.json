{
    "repository": "amietn/vcsi",
    "stars": 385,
    "language": "python",
    "size": 198,
    "clone_url": "https://github.com/amietn/vcsi.git",
    "timestamp": "2023-07-01T10:21:29.330285Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_input",
                "name": "test_grid_default",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_grid_equality",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_grid_inequality",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_grid_columns_integer",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_grid_columns_positive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_grid_rows_integer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_grid_rows_positive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_grid_format",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_hex_color_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_manual_timestamps",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_timestamp_position_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_interval_type",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_comma_separated_string_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_metadata_position_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_cleanup",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_save_image",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_compute_timestamp_position",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_max_line_length",
                "time": 0.265,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_draw_metadata",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_grid",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_input",
                "name": "test_color",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mediainfo",
                "name": "test_compute_display_resolution",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mediainfo",
                "name": "test_filename",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mediainfo",
                "name": "test_duration",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mediainfo",
                "name": "test_pretty_duration",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mediainfo",
                "name": "test_size_bytes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mediainfo",
                "name": "test_size",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mediainfo",
                "name": "test_template_attributes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mediainfo",
                "name": "test_grid_desired_size",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mediainfo",
                "name": "test_desired_size",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mediainfo",
                "name": "test_timestamps",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mediainfo",
                "name": "test_pretty_duration_centis_limit",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mediainfo",
                "name": "test_pretty_duration_millis_limit",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mediainfo",
                "name": "test_pretty_to_seconds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build] \ud83d\ude80  Start image=crawlergpt:latest\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/amietn-vcsi] user=0 workdir=\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build] \u2b50 Run Pre snok/install-poetry@v1\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2705  Success - Pre snok/install-poetry@v1\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build] \ud83e\uddea  Matrix: map[python-version:3.8]\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build] \u2b50 Run Main actions/checkout@v3\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2705  Success - Main actions/checkout@v3\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build] \u2b50 Run Main Set up Python 3.8\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/4d0bb611-ec8c-4e5b-b29d-965964cf9cea/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2753  ::group::Installed versions\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::isExplicit: \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::explicit? false\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::explicit? true\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::explicit? true\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::explicit? true\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::explicit? true\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::explicit? true\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::explicit? true\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::matched: 3.8.11\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Successfully set up CPython (3.8.11)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2753  ::endgroup::\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2705  Success - Main Set up Python 3.8\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::set-output:: python-version=3.8.11\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build] \u2b50 Run Main snok/install-poetry@v1\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/4d0bb611-ec8c-4e5b-b29d-965964cf9cea/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build] \u2b50 Run Main Install and configure Poetry\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Retrieving Poetry metadata\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | # Welcome to Poetry!\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | This will download and install the latest version of Poetry,\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | a dependency and package manager for Python.\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | /home/runneradmin/.local/bin\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | You can uninstall at any time by executing this script with the --uninstall option,\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | and these changes will be reverted.\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Installing Poetry (1.5.1)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Installing Poetry (1.5.1): Creating environment\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Installing Poetry (1.5.1): Installing Poetry\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Installing Poetry (1.5.1): Creating script\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Installing Poetry (1.5.1): Done\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Poetry (1.5.1) is installed now. Great!\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | environment variable.\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | You can test that everything is set up by executing:\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | `poetry --version`\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \u001b[33mDone \u2705\u001b[0m\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2705  Success - Main Install and configure Poetry\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2705  Success - Main snok/install-poetry@v1\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build] \u2b50 Run Main Install dependencies\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Skipping virtualenv creation, as specified in config file.\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Installing dependencies from lock file\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Package operations: 14 installs, 0 updates, 0 removals\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing exceptiongroup (1.1.1)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing iniconfig (2.0.0)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing packaging (23.1)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing pluggy (1.0.0)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing tomli (2.0.1)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing coverage (7.2.5)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing markupsafe (2.1.2)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing pytest (7.3.1)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing jinja2 (3.1.2)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing numpy (1.24.3)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing pillow (9.5.0)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing pytest-cov (4.0.0)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing parsedatetime (2.6)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   |   \u2022 Installing texttable (1.6.7)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Installing the current project: vcsi (7.0.15)\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2705  Success - Main Install dependencies\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build] \u2b50 Run Main Run pytest\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | ============================= test session starts ==============================\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | platform linux -- Python 3.8.11, pytest-7.3.1, pluggy-1.0.0\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/amietn-vcsi\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | plugins: cov-4.0.0\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | collected 34 items\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | tests/test_input.py .....................                                [ 61%]\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | tests/test_mediainfo.py .............                                    [100%]\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/amietn-vcsi/report.xml -\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | ---------- coverage: platform linux, python 3.8.11-final-0 -----------\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | Name           Stmts   Miss  Cover\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | ----------------------------------\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | vcsi/vcsi.py     930    534    43%\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | ----------------------------------\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | TOTAL            930    534    43%\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | \n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   | ============================== 34 passed in 2.54s ==============================\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2705  Success - Main Run pytest\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build] \u2b50 Run Post snok/install-poetry@v1\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/4d0bb611-ec8c-4e5b-b29d-965964cf9cea/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2705  Success - Post snok/install-poetry@v1\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build] \u2b50 Run Post Set up Python 3.8\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build]   \u2705  Success - Post Set up Python 3.8\n[7fbafbf8-9804-49cb-8eed-3fd336b7f7e2/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/amietn-vcsi/.github/workflows/testing-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "7fbafbf8-9804-49cb-8eed-3fd336b7f7e2",
        "build_tool": "pytest",
        "elapsed_time": 279.68899726867676
    }
}